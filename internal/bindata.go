// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/response.tmpl
// template/http/update.tmpl
// template/render/groups.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xd1\x6f\xdb\xb6\x13\x7e\xf7\x5f\x71\x3f\xc1\xf8\x41\x0a\x1c\xaa\x7b\x0d\xd0\x87\xa2\xc9\x5a\x63\x6d\xd3\xd5\x59\xfb\x50\x14\x08\x6d\x9e\x24\x26\x34\xa9\x1c\xa9\xa4\xae\xa7\xff\x7d\x20\x25\x2b\x96\x2c\x67\x5d\x57\x60\x06\x8a\x2a\xc4\xf1\xee\xbe\xef\xee\x3e\xde\x76\x9b\x9e\x40\x6e\xdc\xa6\xc4\x33\x40\xed\x72\xc3\xa4\x49\x51\x3b\xff\x6f\x95\xe6\xa8\xd9\x2b\xe2\x65\x01\x27\x69\x5d\x4f\x26\xdb\x2d\x08\xcc\xa4\x46\x88\x0a\xe7\xca\x74\x45\xc8\x1d\x46\x50\xd7\x13\x00\x80\xed\xf6\x14\x1e\xa4\x2b\x00\xbf\x3a\xd4\x02\xa6\x10\xbd\xe7\xab\x5b\x9e\x63\xd4\x5c\x88\xe0\xb4\x35\x6d\xcc\xc1\xe1\xba\x54\xdc\x79\x7f\xc8\x05\x52\x04\xec\xd1\x19\x78\x1f\xed\x5f\x72\x5d\x1a\x72\x10\xe5\xd2\x15\xd5\x92\xad\xcc\x3a\xcd\xcd\x69\xa9\xf8\x26\x27\x53\x69\x91\xde\x73\x25\x05\x77\x86\xd2\xfb\x5f\x9e\x45\x10\x80\x5d\x15\xd2\x82\xb4\xa0\x11\x05\x0a\xc8\x0c\x81\x75\x55\x29\x05\x2c\xe6\x1f\x81\x2a\x85\x2d\xae\x36\xde\xb4\xbc\xcd\xe1\xec\x39\x2c\xb9\x45\x98\xb2\x97\x46\x67\x32\x67\x2d\x84\xbd\xbc\x88\xeb\x1c\x61\xaa\xbd\xed\x94\xbd\x33\x02\x2d\xec\xe1\x4a\x53\x78\xcf\x37\xca\x70\x01\x26\x03\xde\x79\xae\x6b\xe6\x3f\x35\x7b\xc7\xd7\xde\x1d\x34\xf4\x01\xe1\x5d\x85\xd6\xb1\xce\x81\x2f\x07\xf4\x4c\x5f\x06\xcb\x0f\x8d\x21\x58\x47\xd5\xca\xc1\xb6\xbb\xd0\xe4\xe5\x11\x5f\x9e\x5f\x9e\xc1\x6b\x7e\x2f\x75\x0e\x5c\x29\x28\x8d\xd4\x0e\xc9\x42\x81\x84\x60\x11\xd7\x16\xb4\x71\x40\x32\x2f\x1c\x83\xb7\x7c\xb3\x44\x70\x9e\xa7\x15\xd7\xb0\x44\x10\x46\x23\x48\x0d\x5c\x1b\x57\x20\xc1\x03\xdf\x00\x63\xac\x21\xaa\x1f\x6f\xc7\x43\x16\x78\xd0\xec\x57\x89\x4a\xd8\x5e\x89\xf7\x8c\xa7\x19\x5b\x84\xbc\x83\x99\x87\x7f\xd2\x9c\x5e\x79\xb4\x75\x0d\xd7\x37\xd6\xe8\xb3\x68\xbb\x05\xa9\x05\x7e\x85\xd8\x96\x4a\x3a\x88\x1d\xcf\xdf\x18\x73\x5b\x95\x8f\x2e\xae\x78\x0e\x91\x37\x8f\x12\x88\x66\x51\x02\xcf\xa0\xae\xa3\x91\xa8\x6d\x3f\xb6\xcd\x21\x8d\xbe\xe2\xb9\xf5\x7e\x5e\x68\x6d\x5c\x38\xb1\xec\x42\xdd\x42\xf4\xd8\xca\x3b\x6b\x0c\xb9\xf8\x7e\x8c\xba\x5e\xbc\x1e\x52\xe0\x8f\x87\x80\x1f\x99\xc1\x96\x99\x0b\x91\xe3\x71\x62\x70\x40\x8c\x67\x20\xf3\xc7\x7f\x68\x79\x57\x79\x6e\x3c\x53\xa8\xac\xff\xfc\xfc\xa5\x4b\xa6\xb9\xeb\xe9\x63\xf3\xf3\x7f\x42\x23\xfe\x24\x1a\xf1\xa7\xd2\xb8\xc7\x4e\x3b\x92\x23\x22\xa1\x4a\xa4\x34\x68\x0f\xa1\x2d\x8d\xb6\xd8\x89\xd0\x54\x43\xbd\x77\x31\x4d\xa1\x99\x9a\x76\xcc\x2c\x70\xd0\xf8\x70\x7c\x1a\xb9\x16\x60\x9d\x21\xb4\x20\x9d\x1f\x01\x57\x20\x08\xee\xb8\x97\x83\xc7\xe1\xcc\x2a\xbd\x82\xb8\xe8\xcf\xe7\x6b\xae\x85\x42\x4a\xda\x90\xf1\x03\xf8\x1c\xd9\x87\x36\xc7\x4f\x24\x1d\xd2\x0c\x08\x4e\xda\xf3\x30\xc8\xc9\x60\x84\x95\x6f\x97\x82\x29\x93\xb3\x4f\xd2\x15\xf1\x37\x5e\xfa\x4a\x49\x9d\xc7\xd1\x1a\x5d\x61\x44\x34\x83\xa8\x09\x11\x25\x49\xef\x6e\x9a\xc2\x2b\x74\x21\xe7\xd2\x58\x17\x12\x67\x3d\x8b\x7b\x4e\x20\x9e\x90\x95\xc9\x64\x58\xf4\x71\xe2\x05\xae\x8c\xc0\xd3\x56\xb5\x4e\x97\x46\x6c\x1a\x5d\x3f\xb8\x2f\xb3\x20\xbd\xf6\x63\xd7\x37\xbe\x48\x7b\x3d\x72\xb4\xb8\xbb\xde\x19\x44\x09\x37\x76\x23\x37\x84\xbf\xe0\xf7\xd8\xd5\xac\x0f\x7d\xd9\x10\xbb\x52\x12\xb5\xeb\x97\x9d\xb5\x15\x4b\x7e\x5c\xdc\x64\x06\x82\x8d\x2a\xdc\xff\x9e\x83\x96\x6a\x50\xe5\x2e\x29\xb6\x40\x37\x76\x2d\x3e\x19\x77\x97\x1c\xb8\x39\xd0\x9d\x7f\x2b\x47\x1d\x94\xa1\x26\x3d\x0d\xa5\x2d\xf6\xbe\x64\x8d\xda\x35\xb0\x1b\xff\x6f\xab\x46\x38\x16\xe8\xf6\x30\x0f\xe3\x1e\x62\xde\xc5\x6b\xf5\xf0\xbb\xe3\xbc\x10\x81\xdb\xf1\x30\x8c\xb1\x27\x22\xf5\xc5\x69\xf7\xfb\x2e\xf2\x71\x06\x48\x14\x96\x0a\xe6\x1b\x34\x26\xbf\x56\x38\xfc\xea\xe2\xc1\x00\xcb\x2c\x58\x1e\xe5\x59\xb1\x0b\x22\x43\x71\x84\xfe\x3f\xb0\xcd\x1b\xbf\xd7\xcb\x7f\xc2\x2d\x2e\xf9\xd2\x0b\xed\x0c\xbc\x74\x34\xf6\x48\x94\x1c\x62\x23\xd4\x02\x89\xcd\xfd\x72\xa0\xb9\x5a\x20\xdd\x23\x35\x17\x1e\x66\x40\x33\x9f\xc4\xd8\x2d\x57\x91\x9e\x1c\x67\x21\x4d\xe1\x03\x86\xcd\x07\xb5\xa3\x4d\x7f\x0a\xef\x9e\x98\xc2\xdf\x2b\xa4\x4d\x9c\xb0\x4f\x7e\x4f\x89\x7b\xa8\x94\x79\x40\xf2\x36\xf3\xf3\x18\xdb\x6b\xf3\xf3\x61\x9f\x24\x87\xf2\xd3\xac\xa2\xbe\xd7\xaf\xcc\x1b\x9f\x53\x5f\x7c\x0e\xd0\xa5\x29\x5c\xf0\x1c\x09\x1a\x00\x61\x48\x5c\xc1\x1d\x70\x6a\x96\x34\x49\x28\xc0\xe8\xdd\xde\x66\x4a\xa4\xd0\x5a\xec\xc0\xd5\x9d\x7f\xf2\x2e\xb4\x0b\xb0\x86\xb1\x8e\xf4\x54\xdb\x2a\xcf\xe1\x8e\x5d\x6a\xb5\xe9\x77\xca\x77\x6a\x33\x05\xf2\xd3\xd0\x22\xa7\x85\x7f\x94\xa4\xce\xfd\x52\x7d\x20\x98\x37\x5d\x63\xda\x02\x49\x66\x19\x7b\xcb\xc9\x16\x5c\xc5\xff\xdf\x1d\x5c\x96\xe1\x61\x3f\x6c\xc5\xb9\x5e\xa9\x4a\xe0\xc5\xba\x74\x9b\x2b\x9e\x9f\x81\xa3\x0a\x67\x07\x66\xaf\xc8\x54\xa5\x3d\x83\xcf\x5f\x6c\x78\xc4\x8e\x6b\x47\xa8\xd4\x54\x0f\xd7\x89\xc5\xaa\xc0\x35\x6f\x15\xba\xf1\x36\xaa\x5a\xbb\x9f\x5f\x30\x6e\x8c\xd4\x10\x37\x01\x17\x4a\xae\x10\x58\x02\xd7\xd1\x2c\xba\x1e\xdd\x6d\x60\x5f\x4d\xfe\xce\xf7\xc8\xa4\x3d\x29\x1a\x63\xfe\xea\x3e\x4f\xf5\x0c\xf0\x07\x75\xc0\x22\x49\xae\xe4\xb7\xe6\x61\x0d\x25\x6f\x07\x7f\xae\x5d\x1c\x75\x83\xd2\x8e\x58\x34\x83\xe3\xd3\xf3\x9f\x09\x86\x62\x73\x9d\x99\x78\x9c\xdd\x36\x28\x8a\x1f\xc6\xd5\xcf\xa8\xc5\x70\xf9\x5b\x9b\xf2\x4d\x32\xe9\x67\xf5\xb8\x89\x76\x5f\x7f\x05\x00\x00\xff\xff\xf7\xa6\xb3\x9d\x22\x0f\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 3874, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x6f\xf3\x36\x0c\xbd\xe7\x57\x70\x42\x0e\x76\x90\xc8\xa7\x5d\x3a\xf4\xb4\x74\x6d\x2e\xdd\xb0\x16\xeb\x59\xb1\x68\x5b\xa8\x2c\x79\x34\xdd\xb4\xf3\xf2\xdf\x07\xda\x86\x9b\x34\x29\x76\xf9\x04\x18\xb1\x94\xc7\x47\xbe\x47\x5a\x7d\x9f\xad\xa0\x8c\xfc\xd1\xe0\x0d\x60\xe0\x32\x6a\x17\x33\x0c\x2c\x4f\x9e\x95\x18\xf4\x3d\x99\xa6\x82\x55\x76\x3c\x2e\x16\x7d\x0f\x16\x0b\x17\x10\x54\xc5\xdc\x64\x16\x3d\x32\x2a\x38\x1e\x17\x00\x00\x7d\xbf\x81\x83\xe3\x0a\xf0\x9d\x31\x58\x58\x82\xfa\xc3\xe4\xaf\xa6\x44\x35\x06\x28\xd8\x4c\xd0\x11\x0e\x8c\x75\xe3\x0d\x0b\x1f\x1a\x8b\xa4\x40\x7f\x92\x81\x70\x4c\x3b\x57\x37\x91\x18\x54\xe9\xb8\xea\xf6\x3a\x8f\x75\x56\xc6\x4d\x5e\xb9\x4c\x9e\xb7\x9f\x15\x0c\x52\x9e\x2b\xd7\x82\x6b\x21\x20\x5a\xb4\x50\x44\x82\x96\xbb\xc6\x59\x78\xda\xfd\x05\xd4\x79\x9c\x94\x4c\x19\x96\xcd\x6b\x09\x37\xb7\xb0\x37\x2d\xc2\x52\xff\x1a\x43\xe1\x4a\x3d\x15\x7d\x52\x09\x99\x50\x22\x2c\x83\x60\x97\xfa\x31\x5a\x6c\xe1\x44\x49\x96\xc1\x76\xb0\x02\x08\xeb\xf8\x86\x2d\x98\x99\xfd\x78\xd4\xf2\x1a\xf4\xa3\xa9\x85\x12\x0a\x8a\x35\x70\x85\x60\x0d\x1b\x49\xac\x67\x9e\xa2\x0b\x39\x24\x15\x9c\x05\x3c\x98\x60\x3d\x52\x3a\xa5\x48\x0e\x20\x56\xea\x3f\xb1\x6d\x62\x68\xf1\x85\x1c\x23\xad\x81\x60\x35\x9d\xff\xdd\x61\xcb\x29\xf4\x33\xad\x2c\x2f\xa5\x57\xda\xc7\x52\xbf\x38\xae\x92\x7f\x4c\xa3\x9f\x98\x5c\x28\x13\x55\x23\x57\xd1\xaa\x35\xa8\x31\x85\x4a\xd3\xb3\x58\xe9\xeb\x69\xa7\x7c\x83\x94\x0d\x03\xe0\xec\x46\xe4\x6c\x3a\xf2\x4a\xec\x39\x6d\xef\xd0\xb6\x02\x90\x68\x4c\x9d\x7b\x87\x81\xcf\xcd\xd0\x63\xc2\xdf\x03\xee\xb6\x49\xdf\x0b\x7e\x19\xf4\x6e\xab\x1f\x4c\x7b\x1f\x9f\x3f\x1a\x01\x8d\x11\xbb\xad\x9e\xf6\x89\xb3\xa9\x4c\x87\x6f\x65\xe7\xec\x3c\x29\xa9\xbe\x7b\xc7\x3c\x21\xe9\x23\xe3\x3b\x27\x69\xfa\xcb\x90\xff\xa7\x5b\x08\xce\x7f\x71\x44\x56\x7b\x70\x9c\x57\x82\xd1\x89\x7c\x04\x5f\x5d\x93\x95\xcb\x6c\xac\xa4\xf4\xc7\xc8\xbf\xc5\x2e\xd8\x3b\xa2\x48\x37\x17\x40\x59\x75\x3b\xcc\x53\xcb\xe4\x9a\xbb\xc0\x03\x32\x41\xa2\xf4\x2a\xda\xeb\x5d\x28\x62\x52\xb7\xe5\x1a\xa4\x21\xbb\xc0\x89\x9a\xe5\x4e\x1e\xa9\x35\x38\x9b\x8e\x80\x4f\xbe\xeb\x84\x84\xc1\x22\xcd\x85\x26\x87\x35\xd0\x1a\xd4\x89\xe7\xff\xc2\x2b\xee\xcd\x5e\x06\x31\x44\x86\x42\x60\xea\x92\xcc\x62\x61\x3a\xcf\xd7\x45\xfa\xa9\x0e\x85\xf2\x03\xc3\x2d\xe0\x42\x09\xd7\xd3\x0c\xf3\x6e\xf7\xea\xc7\x4a\xdc\x05\x46\x0a\xc6\x3f\x21\xbd\x21\x8d\x41\xa3\xda\xe0\xfc\x65\xe4\xf1\xe2\x84\x90\x3b\x0a\x8b\xef\x41\x53\x73\xbe\x31\x6f\xbc\xfa\xec\xff\xab\x3a\xaf\x65\x6e\xd0\x30\xa2\x81\x93\xc3\xe7\xff\x5f\xef\xbd\xf9\xed\xbf\x00\x00\x00\xff\xff\x6e\x33\x49\x6d\xa6\x05\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1446, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x5e\x85\x60\x21\x1b\x36\xb5\x39\x14\x28\x8c\xe4\xd2\x34\xd8\x16\xd8\x06\x41\x76\xbb\x3d\x33\xd2\x98\x22\x22\x93\x02\x49\x39\xbb\x55\xf5\xef\x05\x29\x5a\x91\x1c\x39\x45\x0e\x82\x48\xcd\xcc\x9b\xe1\xcc\xe3\xb3\xdb\x36\x5b\x41\x68\xf7\xa3\xa6\x2d\x48\x39\xa1\x99\xd4\x19\x29\xe7\x9f\x3c\x13\xa4\xd8\x27\xc3\xeb\x12\xab\xac\xeb\x16\x8b\xb6\x45\x41\x3b\xa9\x08\x49\xe9\x5c\x9d\x95\x5c\x15\x15\x99\x04\x5d\xb7\x00\x80\xb6\xdd\xe0\x59\xba\x12\xf4\xdd\x91\x2a\x70\x81\xe4\x9e\xe7\x4f\x5c\x50\xd2\x47\x24\xd8\x44\xd7\xde\x1d\x8e\xf6\x75\xc5\x9d\x07\x24\x5e\x78\x28\xf6\x02\x06\x8f\x11\x77\x72\x5f\x6b\xe3\x90\x22\x94\xfc\xb5\x94\x16\xd2\x42\x11\x15\x54\x60\xa7\x0d\xac\x6b\x6a\x59\xe0\xcb\x1f\xdf\x60\x9a\x8a\xfa\x8a\x8f\x99\x12\x21\x5d\xd9\x3c\xb2\x5c\xef\x33\xa1\x37\x79\x29\x33\xff\x1c\x7e\x4e\xce\xb9\xd4\x15\xff\x21\x8c\x6e\x54\x91\x1d\x78\x25\x0b\xee\xb4\xc9\x0e\x97\x1f\xfb\x80\xe5\x22\xbc\xb2\x0c\xb1\x05\x28\xb9\x85\xd5\x7b\x42\xae\xd5\x81\x94\x24\x95\x13\xf6\xe4\x4a\x5d\x58\x34\x96\x0a\x68\x05\xa5\x0b\xda\xc4\x08\xcb\x02\x84\x6f\xfd\x00\x62\x9d\x69\x72\x87\xb6\x1b\xe0\x7f\x95\x6e\xcf\xed\x13\x9c\xf6\xc0\x3b\x29\x1a\x43\x78\x2e\x65\x5e\xc2\xe8\xc6\x91\xf5\x16\x43\x42\x5a\x47\x66\x84\xf8\xd0\x1b\x1b\xa9\xdc\x2f\x3d\xd8\xae\x51\x39\x52\x63\xa3\x69\xe9\x2b\x4e\xcd\xb0\x7b\xd4\xba\x42\x0b\x43\xae\x31\x0a\xc6\x7e\x30\xf8\xe9\x1a\x1f\x11\x4b\x69\x5b\x5c\xd4\x4f\x02\xdb\x6b\x3c\x72\x4b\xb8\x60\x37\xa1\x1c\x16\xe7\x3b\x1a\x9a\xe1\x4a\x10\x2e\x94\xf7\xbd\x60\x77\xba\x20\x8b\xd1\x28\x72\xad\xac\x43\x3a\xec\x8f\xe8\x8a\xdd\xf1\xbd\xc7\xb9\x31\xe4\x09\x11\x4f\x70\x8d\x4b\x5c\x5d\x41\x6a\xc7\xcf\x87\x3c\x10\x2f\xce\x5b\xff\xaa\x0b\xee\xe8\xbc\xfd\x37\xaa\xe8\x2d\xfb\x67\x69\xdd\xa9\x35\x1e\x92\xc2\x21\x15\xbb\x2d\x04\xd9\x09\xb7\x67\x91\xfc\x86\xfa\xcd\xbf\xa8\xb9\xcd\x79\x85\x93\x98\xc8\xfa\x53\xa8\xe9\x71\x87\xd6\x5c\x5d\xf9\xc6\x60\x83\xcb\xc1\x3b\x52\x33\xf2\x67\x12\xf7\xfb\xc0\x55\xff\xb6\xf0\x37\x12\xb9\x69\x0a\xe8\x9a\x0c\x77\x52\x2b\xeb\x69\x7a\x1c\x76\xd7\xb1\x49\x3c\x1b\x90\x03\xc7\x66\xb1\x8f\x14\x9e\x54\x1f\xf9\xbd\x98\x7c\xcc\x2b\x49\xca\xf9\xd5\x8a\x94\x63\x37\x61\x3b\xf1\xa8\xb4\x88\xab\xd5\x3f\xbc\x66\x9f\xb5\x10\x64\x26\x1e\xc3\xd5\xc4\x6a\x58\xb2\x6f\xfd\xea\x65\xa2\xdd\x4b\xe2\x70\x0b\xee\xe8\x79\xae\xf6\x34\x1f\x57\xb2\x46\x35\x4e\xbb\xc6\x61\x2e\xc7\x12\xab\xd9\x36\x4c\xcf\x1f\x6f\xd5\x87\x39\xd7\xf6\x15\x65\xfa\xc6\x6c\xc3\x72\xfd\xca\x5a\x69\xb1\x3d\x2e\xd9\xdf\xd2\x95\xa9\x2f\xf2\x8b\x33\x52\x89\x34\x39\x2a\xf2\x1a\xc9\x5c\xb2\x64\xb9\x7c\x8d\x38\x9c\x6a\x8b\xc3\xd4\xda\xcd\xb5\x30\xcb\xf0\x10\x05\x27\xa2\xda\x41\x81\x2c\x5c\x49\x10\xa4\x3c\x9d\xa8\x38\x0e\x3e\xb0\x2a\x58\xe4\x81\x14\xf2\x52\xf6\xea\x65\xd8\x74\x30\x69\x39\xdf\xce\x25\xfe\xd4\x8d\x72\xa9\xf1\xa1\x2c\xd0\xdf\xac\x31\xd2\xb2\x69\x13\xe5\x0e\xc6\x32\xaf\x6f\x33\xc2\x72\xea\x1c\xe6\xc3\xee\xb5\x75\x69\x92\x25\x6b\x94\x2c\xfa\x9d\xe9\xc4\x1b\x09\xbc\x0c\xcd\xc3\x7f\x22\x8f\xde\xca\xa2\x0b\x19\x82\xe3\xfb\xf1\x7b\x21\x3b\x73\x00\xee\xf2\x72\x9c\x23\x3a\xbf\x3f\x4b\x2f\x87\xf3\x59\x7a\xdb\x38\x4d\xf4\x7e\x7f\x1a\xaf\xaa\x6f\x35\x2b\xa0\x07\xa7\x37\xb0\xdf\xa3\xc4\x67\xea\x98\xd7\xe4\xb9\xca\x70\x32\xca\x6c\x14\xda\xf5\xdd\x38\x03\xf6\x0a\xea\x7f\x35\xff\xf4\x2f\xd0\xcb\x4f\xb8\x75\x46\xd6\xb7\xca\xdd\x1a\xa3\x4d\x4a\xc6\x80\xfc\x6a\x19\x0c\x4a\x8c\xea\x8e\xaa\xd3\x7f\xb7\xec\xab\x91\xfb\x7b\x43\x3b\xf9\xdd\x47\xb1\x3e\x7e\xb9\x46\x12\xc4\x26\xe9\x8b\xec\x16\x43\xce\xff\x02\x00\x00\xff\xff\xb7\x2d\x9b\xd2\x1c\x0a\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 2588, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x95\x51\x6f\xdb\x36\x10\xc7\xdf\xf3\x29\x6e\xc2\xb0\x52\x81\x4d\xad\xd8\x5b\x82\x3e\xb4\x4b\x3b\x08\x08\xb2\x2c\x59\xf7\x4e\x9b\x27\x99\x2b\x45\x2a\x47\x2a\x99\xab\xea\xbb\x0f\xa4\x14\x5b\x56\xdc\xd4\xf0\xb2\x06\x08\x02\x29\x77\xe4\xdd\xef\xff\xbf\x53\xdb\x66\xa7\x50\x5a\xbf\xae\xf1\x0c\xd0\xf8\xd2\x72\x65\x33\x34\x3e\xfc\x2e\xb3\x12\x0d\xff\x73\x5d\x23\x9c\x66\x5d\x77\x72\xd2\xb6\x20\xb1\x50\x06\x21\x59\xa1\xae\x91\xb2\x95\xf7\x75\x26\x71\x69\x25\xce\x09\xef\x1a\x74\x7e\xbe\xb0\x72\x9d\x40\xd7\x9d\x00\x00\xa8\x02\x90\x08\xce\xde\xc0\xdf\xce\x1a\x7e\x85\x0f\x17\x31\x9a\x18\xf1\x77\x56\xae\x53\xde\x3f\xb3\x9f\x64\x7a\x1e\x43\x7f\x78\x03\x46\x69\x68\x63\x7a\xf8\xd1\xfc\x3d\x91\x25\x96\x60\xf8\x03\xf1\x36\x65\xca\x78\x60\x32\x83\xcf\xa2\x1e\x02\x90\x28\x4d\x37\x69\x84\x46\x22\xf1\x77\x42\xde\xf4\x85\xb1\x87\x19\xd0\x0c\x12\x65\xee\x85\x56\x32\xe6\x83\xf3\xa4\x4c\x99\x8c\xd3\x7c\x43\x26\x3e\x76\xa1\x61\x34\x12\x9e\xe9\x3d\x1e\x25\xfc\xb4\xfb\xf9\xd0\x7e\x96\xc1\x5f\x43\x04\xf8\x15\x82\x14\x5e\xf0\x09\x98\x15\x1f\x0e\xb1\xc4\x6f\x3d\x35\x4b\xcf\xbe\xca\xa2\xcf\x9a\x81\xfd\x14\x32\x91\x88\xb3\xd3\x6d\x76\xde\x77\x36\xdc\xa8\xac\x89\x5c\xd2\xf3\x10\xbe\x3d\x63\x0f\xd3\xe1\x88\x40\x75\xe8\x23\x56\xfa\x0c\xdd\x11\xe1\xdc\x78\x24\x23\xf4\x2d\xd2\x3d\x52\x1f\xdc\xa3\x36\x4a\x4f\x33\x36\x70\x7b\xc0\xdb\x7a\x72\x53\x58\x96\xdc\x6f\x4a\x87\x42\x28\x8d\xf2\x08\x81\x43\xd4\xb1\x72\x2a\x39\x2f\xc8\x56\xf3\x86\xf4\xc6\xc2\x59\x06\xf9\x05\x28\x07\x1f\x6f\x2e\xa1\x16\x24\x2a\xf4\x48\xbd\x8a\x6d\x3b\x0f\x9a\xfc\xc8\xf3\x0b\x9e\xbb\xdc\xf8\xc7\xa4\x28\x96\x9c\x3d\x6a\xec\x3c\x2d\xad\xb9\xe7\x6f\xbd\x55\x6c\xb9\x52\xfc\xe3\xcd\xe5\x75\x38\x8a\x45\x47\xca\x64\xd4\xd7\xe0\x8c\x27\xda\xef\xd1\xad\x44\x1f\x45\x53\x12\x42\xd9\xd0\x90\xde\x56\x38\xa0\xbb\x8d\x0e\x67\xe1\x92\x19\xec\xbf\xfa\x20\x99\xf7\x0c\x92\x84\xaa\x71\x1e\x16\x08\xc2\x80\x32\x1e\x4b\x24\x28\x09\x85\x47\x82\xcf\x48\x36\x39\x40\xfe\x20\x8a\x76\xb8\x0b\x2e\x30\xdb\x5b\xeb\x26\xc5\xc8\x38\x64\xdf\x96\x94\x50\x5b\x21\xb3\x08\x6c\xbe\x12\x46\xea\x30\xf0\x93\xfd\xf4\x04\xb6\x7b\x50\x7e\xb9\x1a\xbd\x58\x0a\x87\x61\x43\xf2\xdc\x5d\x59\xff\xc1\x36\x46\x46\x56\x67\x3b\x1d\x56\xae\x1c\xe4\x56\xf5\x7b\xe3\xb7\x48\x27\x2a\x46\xb7\x57\xae\xec\xc9\xe7\xc6\xb3\xa4\x6d\x7b\x1b\x5d\x89\x2a\xc0\x48\x66\x80\xfc\xf1\x5d\xbf\x16\x3e\x28\xd4\xb2\xeb\x0e\x93\x6b\x53\x64\x2f\x56\xe5\xca\x6d\x98\xc4\x42\x34\xda\x9f\x3d\x67\xad\x02\xfd\x72\x15\xbc\x15\x6b\x88\x45\x7d\x81\x4f\xb8\x10\x0b\xe8\xba\xde\x6d\x72\x91\xfc\x7f\xf5\x1f\xb8\x55\xba\x63\x27\xbd\x16\xa5\x32\x71\xd3\x6c\xbc\x50\x8b\x12\x83\x7a\xaf\x1f\x9d\x11\x6d\x48\xc1\x84\xfc\x8f\x06\x69\xcd\x52\xfe\x1b\x7a\x96\x84\xc0\x24\x3d\x07\x19\x7c\x93\x24\x23\x97\x84\xff\xf4\x43\x3f\x99\x79\x79\xe8\x7c\xf7\x7b\xb0\xd7\xa0\x16\xe4\x82\x04\x77\xe1\xf2\xed\x60\xc3\xab\x70\xcd\xab\xc9\x7c\xc7\xa2\x66\x20\x8f\x9d\xe6\xd8\xfd\x0b\xcc\xf3\x30\x57\x1e\x2b\x77\x8d\x74\x3d\x30\xfd\xe5\xe7\x6f\x41\x1d\x67\xec\x87\x3b\x8e\xf8\x0e\x90\xc7\xd7\x4d\x61\xef\x14\xfb\x1f\xa0\xef\x60\x7a\x31\xf8\xe8\x36\x1f\x9e\x3b\x7e\xa9\x2a\xe5\xd9\xf8\xa2\x94\xff\x5e\x14\x0e\x3d\x63\x51\xf3\x39\xbc\x4e\xe1\x14\x76\x23\xde\x6a\xcd\x88\xff\x6a\x8d\xc7\x7f\x3c\x1b\xda\xf9\x1a\xd4\xc3\x57\xc7\x17\xa8\x75\x43\x42\x3f\x59\x21\xcf\x7c\xe0\x0f\xdc\x04\xfb\xe7\xff\xdf\x00\x00\x00\xff\xff\x69\xed\x2c\x6f\xe1\x0a\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 2785, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\xf1\x8d\x30\x06\x39\x50\xa8\x77\x03\x79\x18\x06\xa3\x0b\xd6\xb5\x5b\x53\xa0\x0f\xc3\x80\x32\xe6\x49\xe2\x42\x1f\x95\x23\x95\x2c\x55\xf4\xbf\x0f\x94\x9d\xc4\xb2\xb3\x95\x80\x00\x99\xbe\xef\x87\xee\x3e\x72\x18\xaa\x73\x34\x21\x3d\x76\xb4\x02\x71\x6a\x82\x76\xa1\x22\x4e\xf9\xd9\x54\x0d\xb1\x7e\x27\xa6\x6b\x71\x5e\x8d\xe3\xd9\xd9\x30\xc0\x52\xed\x98\xa0\xda\x94\xba\xca\xbb\x98\x14\xc6\xf1\x0c\x00\x86\xe1\x02\x0f\x2e\xb5\xa0\x7f\x12\xb1\xc5\x02\xea\x77\xb3\xb9\x35\x0d\xa9\x5d\xb9\xc2\xc5\xbe\x74\x57\x8e\x44\xdb\xce\x9b\x94\xd9\xc8\x58\x12\x05\xfd\x4a\x86\xcc\x91\x45\xf7\x3f\x17\xdd\x6d\x83\xd5\x25\x6e\x4c\x24\x2c\xf4\xcf\x81\x6b\xd7\xe8\xbd\xc2\x01\x4c\x0c\x37\x84\x05\xe7\xda\x85\xfe\x10\x2c\x45\x1c\xc8\x56\x15\x3e\x91\xb1\xa8\x29\x6d\x5a\x8a\x48\x2d\xbd\xb0\x8f\xa3\xce\xaf\xac\x3f\x98\x6d\xa6\x84\xb3\xc4\xc9\xd5\x8e\x2c\x6e\x1e\x61\xd0\xb8\x7b\x62\xf4\xe2\x2f\x3a\x23\x66\x4b\x89\x04\xb5\x84\x6d\x66\x39\x54\xb0\x26\x99\xc9\xa7\x61\x0b\xa1\xd4\x0b\x47\xb8\x84\x14\x26\xbd\x8d\x77\xc4\x49\xbf\x20\xea\x9e\x37\x28\x5a\x9c\xcf\xd4\x7f\x31\x6c\x3d\xc9\x12\xef\x5d\x4c\xc5\x03\x72\x0b\xf5\x27\x8a\x5d\xe0\x48\x5f\xc4\x25\x92\x12\x82\xf3\xfd\xfe\x5d\x4f\x31\x2d\x31\xbc\xb0\xe6\xe5\x73\x17\x5a\xed\x43\xa3\xbf\xb8\xd4\x16\xdf\x4c\xa7\xaf\x93\x38\x6e\x0a\xb5\xa5\xd4\x06\xab\x4a\xa8\x2c\xa0\x96\xcb\x19\xf2\x6e\x87\xdc\x5b\x9d\x19\xd3\x7f\xf4\x24\x8f\xc5\xbc\xfe\x75\xfa\xb6\xa1\xf8\x39\xbc\x0f\xc6\xe6\x29\xa8\x59\x46\x0e\x57\x55\x61\x6d\x1a\x12\xf8\x5c\x3a\xc1\x90\x5a\x93\x60\x84\x20\x74\xd7\x3b\x21\x8b\xc0\xc8\x0c\x08\x1d\x89\x49\x2e\xb0\x3e\x21\xba\x1b\x06\xe8\x35\xa7\xc9\xd6\xb1\x52\xf6\xb5\x4f\xd2\xe1\xf6\xbd\x11\x90\x4c\x4f\x90\x13\xc0\x61\x30\x7d\x47\x52\x4d\x69\xef\x4c\xe3\x78\xf2\xa0\xf2\x97\x5d\x3c\x87\xf3\x79\xd9\x72\xa2\x5c\x5d\x22\xb6\x24\xae\xae\xf5\x6f\x46\x62\x6b\x7c\xf1\xe3\xf3\xc6\xc7\x2e\xc3\xe3\x70\xf2\x0d\x57\xbc\xf1\xbd\xa5\xf5\xb6\x4b\x8f\x9f\x4d\xb3\x42\x92\x9e\xca\x93\xb2\x77\x12\xfa\x2e\xae\xf0\xe7\x5f\x71\x9a\xe2\x29\xd1\x6c\x16\x0b\xd6\x3f\x31\x87\x34\x99\x8e\x7a\xed\x6f\xaf\x37\x2d\x6d\x8d\xce\x13\xdf\x71\xcd\xce\xe4\xf1\x52\xc3\x80\xbf\x83\x63\x14\x3b\xb9\x6b\xef\x36\x04\xbd\xc4\x57\x55\xaa\xaf\x18\x47\xf5\x9f\xfa\xe4\x23\x7d\x97\xfb\x39\x53\x4f\xb8\xa5\x1b\x73\xf3\xff\x84\x6c\xdf\xe4\x1b\xe7\x5d\x1a\x4b\x50\x9c\x47\xd3\xd5\xd3\x5c\x7e\xb8\x04\x3b\x8f\xd3\x96\x79\xbd\xce\x29\x28\x54\x24\x71\xc6\xbb\x6f\x53\xbb\x76\xd1\x50\x25\xf2\x99\xd9\x15\x90\xc8\xd1\x29\xc9\x4b\x88\x2d\x89\xbe\xe2\x44\xc2\xc6\x5f\x93\xdc\x93\xec\x00\x0f\x25\xa4\xcc\xaa\x6f\xa1\xf2\xad\x30\xb7\x3e\x3f\xba\xfa\x8a\xeb\x50\xbc\xd5\xa6\x27\x74\xbe\x17\xe3\xf3\x15\xb5\x53\x27\xbb\x37\x7a\xc5\xa9\x50\x66\x1b\x7a\x4e\xaa\x84\x27\x2e\x28\x2e\x8f\x4c\xef\x0d\x7f\xfc\x75\xef\xcf\xbe\xfe\x7d\x7c\xf9\xbe\xbc\xfd\x1b\x00\x00\xff\xff\xa6\x6e\x88\xc2\x29\x06\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1577, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4f\x6f\xe3\xb6\x13\xbd\xe7\x53\xcc\x8f\x30\x7e\x90\x02\x9b\x3e\xf5\x12\x60\x0f\xed\xc6\xcd\x1a\x6d\x93\x76\x1d\x34\x87\xa2\xc0\xd2\xe2\x48\x62\x43\x91\xf2\x90\x4a\xd6\xeb\xfa\xbb\x17\x23\x29\x8a\x6d\x65\x37\x68\x11\x02\x46\x2c\xf1\xcd\x9b\x79\xf3\x2f\xde\xed\xe6\xe7\x50\xf8\xb8\xad\xf1\x02\xd0\xc5\xc2\x4b\xe3\xe7\xe8\x22\x7f\xb2\x79\x81\x4e\x5e\x91\xaa\x4b\x38\x9f\xef\xf7\x67\x67\xbb\x1d\x68\xcc\x8d\x43\x10\x65\x8c\xf5\x9c\x50\x69\x01\xfb\xfd\x19\x00\xc0\x6e\x37\x83\x47\x13\x4b\xc0\xcf\x11\x9d\x86\x09\x88\x5f\x55\x76\xaf\x0a\x14\x1d\x5c\xc0\xac\x87\x76\x70\x88\x58\xd5\x56\x45\x66\x43\xa5\x91\x04\xc8\x67\x32\x60\x8e\xfe\xc9\x54\xb5\xa7\x08\xa2\x30\xb1\x6c\xd6\x32\xf3\xd5\xbc\xf0\xb3\xac\x34\x73\xfe\x3c\x7c\x27\xa0\x15\x72\x5b\x9a\x00\x26\x80\x43\xd4\xa8\x21\xf7\x04\x21\x36\xb5\xd1\xb0\x5a\xfe\x0e\xd4\x58\xec\x75\xf4\x1e\x26\xf5\x7d\x01\x17\xef\x60\xad\x02\xc2\x44\xbe\xf7\x2e\x37\x85\xec\x83\x3e\x88\x84\x94\x2b\x10\x26\x8e\xb1\x13\x79\xed\x35\x06\x38\x50\x32\x9f\xc3\x47\x54\x1a\x72\x8c\x59\x89\x01\x62\x89\x03\xfb\x7e\x2f\xf9\xab\x93\xd7\xaa\x62\x4a\x30\x1a\x5d\x34\xb9\x41\x0d\xeb\x2d\x28\x28\xcc\x03\x3a\x68\xc8\xce\x6a\x45\xaa\xc2\x88\x04\x39\xf9\x8a\x59\x0e\x3d\x68\x15\x55\x1b\xa7\x72\x1a\x08\x9d\x46\x0a\x60\x22\x44\xdf\xfa\xcb\xac\x41\x17\xe5\x60\x91\x37\x2e\x83\xa4\x84\xf3\x23\xef\x1f\x94\xd3\x16\x29\x6d\xe3\x4d\x1e\x81\xab\x22\x3f\x62\xa8\xbd\x0b\x78\x47\x26\x22\x4d\x81\xe0\xbc\x7f\xbf\x69\x30\xc4\x14\x76\x03\x2b\x1f\xcb\x59\x28\xa5\xf5\x85\xbc\x33\xb1\x4c\xbe\xa8\x5a\xae\x22\x19\x57\x24\xa2\xc2\x58\x7a\x2d\xa6\x20\xd8\x81\x48\xd3\x23\x4b\x6e\x90\xc3\x92\xdb\x1a\x69\xde\xf6\x91\xd1\x33\xd6\x3c\x6b\xc8\x0a\xce\xf3\xec\xa9\x48\x07\x09\x78\x4f\xc8\x76\x2c\x76\xd3\x20\x6d\x59\x79\x9b\xf1\x21\xdf\x83\xcc\x23\xd3\x4d\x17\x6f\x9f\xa0\x23\x9c\xfc\x8d\x89\x92\x54\xde\x95\x48\x98\x1c\xdc\xfd\x0d\xd6\x3f\x22\x31\x66\x79\xc9\x17\x26\xe7\xbb\xe5\xa5\xfc\xa0\xc2\x95\xbf\xdd\xd6\x6c\xdf\x19\x2c\x2f\x65\xff\x9c\x18\x9d\x72\xe3\xda\xc0\x4f\x46\x0f\x4d\x9c\xa6\x67\xa3\x4c\x74\xa3\xa2\x0b\x0c\xb7\xfe\x67\xaf\x34\xeb\x16\x47\x03\x75\x92\x80\x85\x2a\x90\xc0\x32\xb4\x35\x83\x58\xaa\x08\x8a\x10\x08\x37\x8d\x21\xd4\xe0\x1d\x30\x03\xf8\x1a\x49\x45\xe3\x9d\x1c\x11\x6d\x76\x3b\x90\x0b\x17\x5b\xe9\xa7\x9e\x38\xae\x83\xb1\x7b\x3a\x38\x05\x24\xe2\x3c\x6e\xe4\x8d\xb3\xdb\x84\x78\x56\x22\x7e\x8e\xc9\x49\x89\x4d\xde\x22\xff\xf7\x0e\x9c\xb1\x27\x8d\xc3\x27\x3c\x1a\xae\xd8\xf8\x22\xe3\xd6\xe6\x02\x2d\xc3\xb5\x8f\x3f\xfa\xc6\xe9\x04\x89\xd2\x8b\x11\x92\x4f\x15\xda\xb9\x0d\x91\x4c\xbd\x70\x71\x41\xe4\xa9\x85\xbf\x88\xb6\x72\xe9\x72\x9f\x54\xa1\x98\x02\x77\xeb\xd2\xc5\x44\x0c\xb5\xeb\x7b\x41\x4c\xc1\xe8\xb4\x03\x3c\xf3\xbd\x4c\xd8\x8d\x9f\x1c\x02\x7d\x9c\x02\x4d\x39\xa8\x31\xfc\x58\xd7\xca\xb8\xa2\xb1\x8a\xde\x50\x5a\x07\x78\x73\x6d\x3f\x28\xdd\xcf\xff\xb7\xd4\x69\xcc\x55\x63\xe3\xcb\x4a\x9e\x62\x13\xc8\x7f\xba\x59\x35\xae\x80\xa3\x31\xbb\xc7\xb5\x5a\xf3\x5e\x6c\x77\x9e\x5e\x8b\xb7\x95\xb1\x74\x11\xc9\x29\xbb\x42\x7a\x40\xea\x8c\x3a\x3d\xce\xd8\xb1\xe5\x78\xee\x08\x63\x43\xee\xec\xeb\x20\x3d\xcc\x46\x28\x91\x4c\x9e\xcb\x5f\x14\x85\x52\xd9\xe4\xff\x4f\x2f\x6e\x6a\x1e\xc5\x30\x6e\xfa\xa5\xcb\x6c\xa3\x71\x51\xd5\x71\x7b\xab\x8a\x0b\x88\xd4\xe0\x74\x04\xbb\x22\xdf\xd4\xe1\x02\xfe\xf8\x33\xb4\x7b\x76\x4c\x04\x87\x3b\x65\xe2\xe4\xf7\xce\xf9\xd8\x2e\x80\x20\x17\xf6\x7e\x95\x95\x58\x29\xc9\x3b\xb9\xe3\x3a\xfa\x47\x7c\x7a\x38\xef\x7f\x79\xe3\x20\xe9\xdc\xad\xac\xc9\x10\x64\x0a\x9f\xc4\x54\x7c\xe2\x3a\x7c\xd5\x7f\xbb\xf9\x5e\xe3\x1e\x17\xff\x1b\x84\x4e\xbf\xc8\xb7\x3f\xce\xd2\x7e\x0a\xf8\xef\x16\xd1\xd0\x9c\x01\xc9\x28\x6b\xbe\xb4\xd9\x82\xb6\x55\xdf\xa2\x07\xff\x5b\xff\xbd\xda\x6d\xfd\x2a\x7b\x39\x8d\xbd\x53\xd4\xaf\x0b\x38\x76\xdd\x07\x7b\xf3\x53\x1f\x9b\x7e\xbe\x3e\xfd\x35\x36\x7c\xfb\x27\x00\x00\xff\xff\xda\x73\x3c\x24\x3a\x0a\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 2618, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x51\x6f\xdb\x36\x10\x7e\xef\xaf\xb8\x09\xc1\x20\x15\x32\xfd\x6e\xa0\x0f\x5b\xeb\x76\xc6\xba\xb6\x6b\x32\xf4\x61\x18\x50\x46\x3c\x49\x5c\xe8\xa3\x7c\xa4\x9a\xba\xae\xfe\xfb\x40\x49\x76\xec\x58\xf2\xd2\x25\x01\x56\x02\x41\x62\xeb\xbb\x3b\xf2\xbb\xbb\x8f\xa7\x6c\x36\xd3\xa7\x50\x58\xbf\xae\x70\x06\x48\xbe\xb0\x42\xdb\x29\x92\x0f\x3f\xd9\xb4\x40\x12\xaf\x58\x56\x25\x3c\x9d\x36\xcd\x93\x27\x9b\x0d\x28\xcc\x35\x21\x44\xa5\xf7\xd5\x94\xd1\x48\xaf\x2d\xb9\x08\x9a\xe6\x09\x00\xc0\x66\x33\x81\x6b\xed\x4b\xc0\xcf\x1e\x49\xc1\x19\x44\xef\x64\x76\x25\x0b\x8c\x3a\x9b\x08\x26\x3d\xb4\x83\x83\xc7\x65\x65\xa4\x0f\x2e\x51\x2a\xe4\x08\xc4\x8d\x33\x08\x3e\x42\xe4\xfe\xe3\x59\x75\x55\xc0\xec\x19\x5c\x4a\x87\x70\x26\x9e\x5b\xca\x75\x21\xfa\x08\x7b\x66\x2c\xa9\x40\x38\xa3\x80\x3d\x13\x6f\xac\x42\x07\x87\x61\x7b\x04\xb6\x08\x12\x73\x55\x1c\x42\xc2\x9a\x4e\xdb\x98\x28\xde\xc8\x25\xc2\x57\xa8\xa4\xcb\xa4\x81\xa6\x81\x1c\x7d\x56\xa2\x03\x5f\xe2\x6e\x5b\x4d\x23\xf6\xd0\x4d\x03\xd2\x7b\x99\x95\xa8\xc0\xdb\x21\x20\x6d\x81\xb7\x63\x6a\x85\xe4\x75\xae\x51\xc1\xe5\x1a\x24\x14\xfa\x13\x12\xd4\x6c\x26\x95\x64\xb9\x44\x8f\x0c\x39\xdb\x65\xeb\x54\x49\x2f\x5b\x36\x24\x29\x60\x24\x85\xec\x40\xfb\x6d\xcc\xcc\x68\x24\x2f\x0e\x42\xe4\x35\x65\x10\x97\x70\xb0\x89\x5f\x24\x29\x83\x9c\x8c\x9c\x38\xbe\x86\x90\x3d\xf1\x1e\x5d\x65\xc9\xe1\x07\xd6\x1e\x39\x05\x86\xa7\xfd\xf7\xab\x1a\x9d\x4f\x60\x73\x10\x2a\x2c\x13\x28\x2e\x85\xb1\x85\xf8\xa0\x7d\x19\x7f\x91\x95\x38\xf7\xac\xa9\x88\xa3\x25\xfa\xd2\xaa\x28\x85\x68\x38\x6c\x94\x24\x47\xfe\x42\x89\xed\x17\x8d\xa9\x90\xa7\x6d\x39\x6a\x35\x09\xbc\x4c\x6a\x36\x51\x48\xfe\x64\x5b\x39\xb7\x08\x7e\xce\x18\x6c\x03\x3f\xab\x1a\x79\x1d\xc8\x6a\x33\xba\x4b\xd3\x6e\x27\x57\x78\x29\x2f\x8f\x93\xa9\xdd\x3e\x7b\x37\xb0\xa3\x68\xab\xee\xf0\x7d\x1a\x0e\x18\x17\xbf\x87\xd8\x71\x22\x3e\x94\xc8\x18\x1f\xf8\x33\xf6\x1a\x39\x60\x16\x2f\x62\xad\x92\xa4\xc3\x8e\xa4\x66\x98\x22\x9d\x07\xf0\x1f\xa4\x57\xf5\x51\x91\xed\xe3\xba\x6e\x0d\xe5\x7f\x61\x5f\x5b\xa9\x82\xd5\xc5\xba\x42\x88\x18\xa5\x8a\xc6\x4c\x7b\x2a\xe7\xb2\x40\x06\x13\xec\x5a\x1f\xe0\x4b\xe9\x41\x32\x02\xe3\xaa\xd6\x8c\x0a\x2c\x41\xf0\x04\xb6\x42\x6e\xd5\x42\x8c\x3a\x5c\x6d\x36\x20\xe6\xe4\xdb\xd3\x9e\xda\x74\x2f\x0b\x43\x8f\x31\x05\x64\x0e\xb4\xaf\xc4\x5b\x32\xeb\x98\x83\x4c\x78\xfc\xec\xe3\x81\x62\x0a\x4b\xe7\xad\xc5\x0f\xcf\x80\xb4\x19\x28\xe0\xed\x72\xd7\x3a\xd4\xc8\x38\x20\x0b\x7d\x18\xf2\xbc\x70\x6f\xac\x7f\x69\x6b\x52\x31\x32\x27\xb3\x51\x8b\xb0\x96\xae\x95\x34\xe7\x59\x57\x73\xf2\x73\x66\xcb\xad\xd9\x49\x2b\x23\x16\x94\xdb\x78\xe9\x8a\x14\x42\x47\x2d\xc8\xc7\x51\x57\x43\x8b\x17\xdb\x12\x8b\x52\xd0\x2a\xe9\x00\x37\x7e\x4f\x3b\xee\x34\x44\xec\x0e\x70\x9d\x02\xa7\xed\xee\xa8\x70\xe2\x82\xf5\xf2\x1d\x63\xae\x3f\x07\x57\xbd\xd3\x24\x85\x08\xc9\xcf\x60\xa8\x5d\x87\xc9\x39\xd7\x54\xd4\x46\xf2\x23\xf2\xd3\x01\x1f\x8d\xa0\x9f\xa5\xea\x45\xef\xc1\x28\x52\x98\xcb\xda\xf8\xd3\x74\x6c\x0f\x16\x61\xf8\xd5\xe9\x96\xa6\xa2\x97\xad\xd0\xb9\x47\xda\xd5\x5e\x16\xea\x32\x3a\x22\xe2\x16\x50\x3c\x20\x3d\x0b\xf2\xc8\x24\xcd\x39\xf2\x27\xe4\xce\xb8\xe3\x89\xb4\x19\xf7\x30\x2e\x36\x8c\xbe\x66\x1a\x7c\x3c\x6c\xa4\x76\x42\xe0\x4a\x64\x9d\xe7\xe2\x37\xc9\xae\x94\x26\xfe\x71\xfb\xc5\xdb\xaa\x9d\x5e\xc6\x3b\x7a\x41\x99\xa9\x15\xce\x97\x95\x5f\x5f\xc8\x62\x06\x9e\x6b\x4c\x47\xe1\xaf\xd8\xd6\x95\x9b\xc1\x9f\x7f\x75\xc5\x30\xee\x18\xf6\xd5\x77\x9b\xb7\x9f\x88\xac\xef\x06\x2a\x31\x37\x57\xe7\x59\x89\x4b\x29\xde\xa3\x54\x9d\xe3\x83\xd1\x69\x6c\x85\xd4\xfe\x6d\x35\x41\xdc\xed\xe1\xdc\xe8\x0c\x41\x24\xf0\x31\x4a\xa3\x8f\x21\xa9\xff\xba\x29\x34\x0e\xef\x1c\x6b\xa4\xe8\xee\x10\x85\xd4\xc9\x20\xcd\x30\xcf\x4d\x0a\x78\x3f\x1d\xdf\x75\x90\x43\xd6\xd2\xe8\x2f\x2d\xe5\xd0\xf6\xd3\x71\x8f\x1c\x74\x03\x8a\xbd\x13\x2f\x5e\x84\x39\xa6\xce\xfc\x4b\x8d\x26\xdc\x47\xdf\xd0\x29\xf7\xeb\x92\x6f\xee\x85\xfe\xb6\x38\x91\xaf\x7e\x47\xa8\xee\xc7\xc0\xf0\x9e\xfb\xd3\xbe\xfd\xb5\x3f\x9c\x1a\x1e\x59\xda\xba\xfb\x4f\xa3\x8a\xd1\xce\x3f\xcc\xa8\x12\x3c\xdd\x65\x54\x09\x93\xca\x1d\x26\x94\xd1\xe7\xc3\x13\x6c\x25\x0b\x4d\x6d\xe4\x68\x77\xb8\xc1\x29\x16\xbe\x2f\x81\xa3\x11\x6d\x7b\xad\x9d\xff\x3f\x6b\xdb\xd1\x15\xf9\xa8\xb2\xe6\x1e\x5d\xd7\xbe\x43\x69\xfa\x0a\x95\xa9\xb9\x7b\xed\x1e\xd2\x28\xb9\xb4\x35\xf9\x28\x05\x83\x14\xa3\x4b\xee\x29\x41\xc7\x2f\x16\x07\xff\x36\xd8\x7b\x7e\xf3\x69\xf7\xd7\x3f\x01\x00\x00\xff\xff\x65\xd7\x13\x0c\x4f\x11\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 4431, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpResponseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x31\x6f\xdb\x3c\x14\xdc\xfd\x2b\x0e\x81\x86\xef\x33\x10\x6a\x0f\x90\xa1\x08\xd2\x6c\x41\x51\xa7\x5d\x8a\x02\xa5\xa5\x13\x4d\x58\x21\x15\x92\x4e\x9b\x2a\xfa\xef\x05\x49\x49\x55\x1c\x07\x6d\x07\x1b\x12\xf5\x78\xef\xee\x1e\x8f\x7d\x5f\xae\xa1\x6c\x78\xea\x78\x01\x9a\xa0\xac\xd0\xb6\xa4\x09\xf1\x57\x95\x8a\x46\xdc\x38\xd9\xed\xb0\x2e\x87\x61\xb5\xea\x7b\xd4\x6c\xb4\x21\xce\x76\x6c\x3b\xba\x72\x17\x42\x57\x3a\xfa\xce\x1a\xcf\xb2\x72\x94\x81\x67\x18\x86\x15\x00\xf4\x3d\x8a\x6e\xaf\x70\x71\x89\xad\xf4\x44\x21\xae\xac\x69\xb4\x12\x1f\x64\xb5\x97\x8a\xcb\x3a\xe5\xec\xa1\xf3\xb1\xd4\x3a\x14\xe2\x9d\x31\x36\xc8\xa0\xad\xf1\xe2\xba\xdd\x6f\xaa\x1d\xef\xa5\xb8\x4a\xf8\x37\xb9\xf4\xbf\x42\xdc\xca\x7b\xe2\x19\x7b\x6e\xe5\x16\xcf\x68\xb5\x0f\x78\x86\x0f\x4e\x1b\xb5\x69\x75\xc5\xff\xa7\x16\x65\x89\x8f\x23\x4b\xd8\x06\x32\xf6\x7c\x8b\x93\x88\x7c\x32\xf6\x30\x20\x6b\x82\xe3\xc3\x81\x3e\x88\x84\x16\xfd\xc2\xb2\x2a\x13\x9b\x3b\xf8\xe0\x0e\x55\x40\x9f\x8a\xb3\xc2\x73\x38\x69\x14\x51\x34\x51\x63\x21\xde\x6b\xb6\xb5\x9f\xe8\x2d\xeb\x8a\x20\x93\x65\x45\x23\x36\x09\xe7\x4e\x2a\x0c\x43\xdf\xe3\xbb\x0e\xbb\xf4\xd9\x67\x8c\xa5\x49\x19\xef\xe4\x0e\x6d\x6a\xfe\x18\xf7\x15\xcd\x44\x39\xd2\x8f\x9d\x2e\x21\xf2\x1b\x4d\xbd\x7c\x38\xe2\x05\xdd\xc0\x90\xb5\xdf\xd0\x69\xd9\xea\x9f\xa9\x6f\xc4\x3b\x1a\xd5\x3c\xca\xdc\x62\x12\x91\xf8\x45\x3f\x33\x54\xe4\xa1\xdb\x56\x6e\x5b\x7e\x96\xed\x21\x12\x5a\x2f\x39\x14\x8d\xb8\x8b\x26\xcf\x1b\x8c\x0d\x09\x8c\xc6\xeb\xa0\x1f\xe3\x97\x6f\x93\x84\xfc\xf8\x16\xff\xe8\xe9\x89\xa5\x71\x1c\xcc\x56\x5e\xd7\x8a\x1e\xe7\xf1\x90\xff\x9d\x6e\xfe\x41\x37\x4f\xeb\x4e\x32\x28\x3e\x19\xfd\x90\x44\x7f\xf9\x3a\x13\x5e\x4f\x71\x19\x4f\x20\x93\x03\xf3\x39\x9c\xe7\xcf\x17\x43\x8e\xca\xc5\xbf\x39\x30\xac\x7e\x97\xac\xe2\x0d\xb0\x8c\xf5\x32\xcf\x31\xc8\x29\xf8\xe9\x9a\xc8\x76\x8c\xb6\x99\x6c\xdb\xad\xad\xe9\x8f\xab\xc6\xbc\xe5\x4c\x40\x4e\x69\x68\xac\x03\x1f\xe9\x9e\x60\x6c\xcd\xc5\x6b\xfc\x9f\xf2\xc5\x1a\xc9\x46\x58\x03\x1d\xc4\x2b\xdc\x57\xc9\x3b\xe6\x37\x7a\x39\xad\xbe\x58\xf9\x15\x00\x00\xff\xff\xac\x0c\x80\x96\xee\x04\x00\x00")

func templateHttpResponseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpResponseTmpl,
		"template/http/response.tmpl",
	)
}

func templateHttpResponseTmpl() (*asset, error) {
	bytes, err := templateHttpResponseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/response.tmpl", size: 1262, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x5f\x6f\xe3\xb8\x11\x7f\xf7\xa7\x98\x0a\x46\x21\xa7\x36\x75\x7d\xe8\x4b\x80\x45\x71\xbd\xe4\x76\x8d\xde\x6e\xae\xeb\xdc\xed\xc3\xe1\x80\xa5\xc5\x91\xc4\x84\x26\x15\x92\x72\xd6\x97\xfa\xbb\x17\x43\xca\x7f\x24\xcb\x49\xb6\xed\x9d\x00\x23\xb6\x32\x9c\x3f\xbf\x99\xf9\xcd\xf0\xe9\x29\xbb\x80\xd2\xf8\x4d\x8d\x97\x80\xda\x97\x86\x49\x93\xa1\xf6\xf4\xc9\xb3\x12\x35\x7b\x6b\x79\x5d\xc1\x45\xb6\xdd\x8e\x46\x4f\x4f\x20\xb0\x90\x1a\x21\xa9\xbc\xaf\xb3\xa6\x16\xdc\x63\x02\xdb\xed\x08\x00\xe0\xe9\x69\x06\x8f\xd2\x57\x80\x5f\x3c\x6a\x01\x63\x48\x7e\xe4\xf9\x3d\x2f\x31\x89\x07\x12\x98\xb5\xa2\x51\x1c\x3c\xae\x6a\xc5\x3d\xe9\x43\x2e\xd0\x26\xc0\x0e\xca\x80\x74\xb4\xbf\xe4\xaa\x36\xd6\x43\x0a\xc1\xe3\xdb\x4a\x3a\x90\x0e\x34\xa2\x40\x01\x85\xb1\xe0\x7c\x53\x4b\x01\x8b\xf9\xcf\x60\x1b\x85\xd1\xe1\x9d\xa5\xa4\x94\xbe\x6a\x96\x2c\x37\xab\xac\x34\xb3\xbc\x92\x19\x7d\xd6\x7f\x4b\xce\x89\xd4\x8a\x6f\x4a\x6b\x1a\x2d\xb2\x35\x57\x52\x70\x6f\x6c\xb6\xfe\xeb\x37\xf1\xc0\x64\xb4\x73\x71\x5c\xdf\x97\x70\xf9\x06\x96\xdc\x21\x8c\xd9\x77\x46\x17\xb2\x64\x6d\xd4\x47\xa1\x58\xae\x4b\x84\xb1\x26\xd9\x31\xfb\x60\x04\x3a\x38\x72\x30\xcb\xe0\x47\xbe\x51\x86\x0b\x30\x05\xf0\xbd\xe6\xed\x96\xd1\x57\xcd\x3e\xf0\x15\xa9\x83\x88\x38\x58\x7c\x68\xd0\x79\xb6\x57\x40\x19\x84\x8e\xe8\x4f\x41\xf2\x63\x14\x04\xe7\x6d\x93\x7b\x78\xda\x1f\x88\x7e\x11\x96\x37\x57\x37\x97\xf0\x8e\xaf\xa5\x2e\x81\x2b\x05\xb5\x91\xda\xa3\x75\x50\xa1\x45\x70\x88\x2b\x07\xda\x78\xb0\xb2\xac\x3c\x83\xf7\x7c\xb3\x44\xf0\x94\x81\x9c\x6b\x58\x22\x08\xa3\x11\xa4\x06\xae\x8d\xaf\xd0\xc2\x23\xdf\x00\x63\xac\x9b\x82\x2e\x0e\x45\xc0\x41\xb3\xef\x25\x2a\xe1\x3a\x55\x71\x24\x2c\x8b\x60\x78\x5c\xb0\xf9\x6a\xd5\x78\xbe\x54\x38\x28\xba\xcb\x45\xc1\x16\x21\xcc\xa0\x95\xd0\xba\x88\x6f\x6f\x09\x9c\xed\xf6\xf3\x9d\x33\xfa\x32\x21\xc5\x5a\xe0\x17\x48\x5d\xad\xa4\x87\xd4\xf3\xf2\x07\x63\xee\x9b\xfa\xa0\xe1\x96\x97\x90\x90\x78\x32\x81\x64\x9a\x4c\xe0\x1b\xd8\x6e\x93\x33\x86\xdb\xa2\x6f\xeb\x44\x1a\x7d\xcb\x4b\x47\xba\xbe\xd5\xda\xf8\xf0\xc6\xb1\x6b\x75\x0f\xc9\xa1\x5f\x76\xd2\x18\xfc\xa1\xa2\x4f\xf6\x05\xff\x79\x00\x8b\xd9\x71\x33\x1c\xc5\x4c\x6f\xfb\x90\x1c\x60\xc6\x16\xe6\x6b\x51\xe2\x59\x94\xc7\xd8\x83\x2d\x22\x3f\x46\xf6\x93\x96\x0f\x0d\x21\x47\x38\xa2\x72\xf4\xf5\x97\x5f\xf7\x7e\xc6\xb3\x04\x2e\x9b\x5f\xed\x40\x86\x57\xa0\x8c\x5f\x87\xf2\x59\x84\xf1\xff\x83\x70\x97\x69\xe8\xd9\x8e\x8e\x3b\x33\x76\x52\xdb\x7a\x0e\x38\x94\x72\x8d\xfa\x7c\x8f\x72\x2d\xc0\xf1\x35\x3a\xf0\x15\x42\x5e\x51\x2e\x1c\x78\x13\x7e\x0a\xee\x39\x91\xc5\xa1\x75\x8b\x46\xe7\x90\x56\xdd\xee\x7d\xc7\xb5\x50\x68\x27\xad\xf1\xf4\x11\x88\x3f\xd9\x47\x74\xb5\xd1\x0e\x3f\x59\xe9\xd1\x4e\xc1\xc2\x45\xfb\x3e\xb4\xf9\xa4\xd7\xe0\x8a\xf2\x5f\x31\x65\x4a\xf6\x49\xfa\x2a\xfd\x8d\xd7\x04\xbd\xd4\x65\x9a\xac\xd0\x57\x46\x24\x53\x48\xa2\x89\x64\x32\x19\xf5\x51\x3f\xa6\x67\x55\xa3\xcd\x02\xeb\x4b\x31\x2b\xac\x59\xcd\x1a\xab\x12\xa2\x34\xaa\xab\xce\xd1\x2c\x83\xb7\xe8\x43\xb8\xb5\x71\x3e\xc4\xcc\x3a\x12\x6b\x6e\x41\x3c\xc3\x57\xa3\x57\xba\x22\x30\x37\x02\x67\x2d\x1d\xce\x96\x46\x6c\x92\x53\x7f\xe8\x3c\x71\x09\xa2\x70\x3f\xef\x6b\x88\x5c\x3f\xaa\x97\xde\x34\x3a\xd8\xd8\xd5\x51\xcf\x4a\x38\xb1\x6b\xbf\x7e\xf8\x0b\xbe\xc6\x7d\xba\xbb\xa1\x2f\x63\x4e\x72\x25\x51\xfb\x6e\xe5\xb0\x88\xc1\x8d\xc6\xf9\x55\xda\x76\xa1\xa6\xde\x7a\xc7\xdd\x5b\xd3\x36\x58\x3c\x71\x68\xb8\x54\x8a\xc9\xa1\x3d\xa5\xd8\x57\x73\x3f\x9d\xbf\x1f\xf7\xca\x02\x04\x1b\x24\xe0\x3f\xbd\x01\x2d\x55\xaf\x2a\x3b\x68\xb0\x05\xfa\xa1\xa3\xe9\xc5\xb0\xca\x49\x9c\x5a\xde\x08\x03\x33\x78\xac\xb8\x07\xbe\x34\x8d\x07\xa7\x64\x8e\x50\xc4\xa0\x3c\xbd\xaf\x28\x09\x79\xe3\xbc\x59\xc1\x8a\x5b\x57\x71\xa5\xd0\xba\xbf\x9f\x0e\xa6\xdd\x33\x88\xc4\x19\x8a\xfd\x5f\x99\x77\x0f\x5a\x9f\x7e\x9f\x07\xad\x4f\xce\xe7\x72\x12\xc1\x8d\xfa\xdf\x37\x91\x23\x17\xe8\x8f\x90\xed\xdb\x9d\x9c\xb3\x17\x4a\xeb\x6b\xec\x7c\xa7\x90\x5b\xb2\x34\xe9\xfd\xe3\x5b\x11\x52\x3b\x6c\x9f\x31\x76\xce\x85\xc1\xe9\x07\x27\x09\x3b\x93\x15\xea\x47\x6f\x6c\xd8\x51\x4e\xe9\x97\x1e\x9c\x02\x5a\x1b\xf6\x38\x46\xad\x9b\x5a\xda\xe4\x3c\x7e\xf1\x69\x8f\x15\x65\x11\x24\xcf\xa6\xc8\x3d\x4a\x9f\x57\x24\xc3\x52\xda\xc9\xfa\x8c\xbc\x7b\x72\xda\x17\x2f\x88\x01\x3e\x18\xff\x3d\xed\x99\xd7\xd6\x1a\x7b\x79\x16\x63\xc5\xe6\xba\x30\x69\x72\x44\x18\xff\x86\x7b\x5c\xf2\x25\x95\x0c\xb5\x6a\x41\x5a\x92\x29\x10\xc9\xcf\xb5\xdf\x89\xce\xaf\x76\xf4\x92\x4c\x41\x8a\x49\x14\x08\xd6\x52\xb4\x76\x32\x8c\x39\x3d\x16\xb5\x40\xbb\x77\x30\x7d\x9c\x82\x9d\xc2\x8b\x1e\x0c\x2b\xec\x04\xbc\x90\xba\x6c\x14\xb7\x2f\xc6\x1c\xdd\x4c\x44\x53\x2b\x99\x13\x33\xa3\xf6\x76\x13\x16\xfe\x41\x37\x7e\x87\xf0\xff\xc1\x45\x3b\x94\x76\x00\x1c\xbc\x19\x86\x22\xfa\x18\x36\x16\x29\x20\x81\xbf\xd0\xf6\x9d\x1b\xbd\x66\x73\x6f\x78\x8a\x6c\xef\x59\xaf\x01\x87\x7d\x11\x58\xf0\x46\xf9\x57\xc0\x84\xf4\x87\x56\x0f\x5a\xe5\xff\x28\x7c\xe6\x74\x59\xd0\x5c\x2d\xd0\xae\x31\x66\xb4\x05\x4a\x4b\x75\x7a\xfa\xb4\x87\x2d\xfa\xc6\xea\xd1\x79\xa1\x2c\x83\x8f\x18\xee\x46\x01\xd9\x6e\xeb\x3e\x3c\x33\x4e\xff\xd5\xa0\xdd\xa4\x13\xf6\x89\x6e\x32\x69\x07\x10\x65\x1e\x91\x28\x8a\xcd\xaf\x9e\x4d\xc8\xc9\x1e\x11\xef\xb7\xc4\xea\xb7\xe6\x07\xf2\x89\xb6\x88\xdc\xe2\xf1\x3d\xb8\xe7\xfc\x35\x2f\xd1\x42\x0c\x20\x8c\x83\x30\x9d\xb8\x8d\xd7\x38\x69\x51\x80\xd1\xbb\x9b\x9d\xa9\xd1\x06\xae\x64\x27\xaa\x1e\x68\x8f\xbd\xd6\x3e\x84\x75\x7a\x17\x18\x24\xc9\x96\xd9\xde\xc0\x03\xbb\xd1\x6a\xd3\x25\xb6\x57\x2e\x59\x36\x80\x9f\x85\xea\x9a\x55\xb4\x98\x4a\x5d\xd2\x4d\xfd\x64\xf3\xb9\xdb\xf3\xa8\xab\xd0\xca\xa2\x60\xef\xe3\xdc\x4d\xff\xbc\x7b\x71\x53\x87\x6d\xfd\x94\x15\xe7\x3a\x57\x8d\xc0\xeb\x55\xed\x37\xb7\xbc\xbc\x04\x6f\x1b\x9c\x9e\x88\xbd\xb5\xa6\xa9\xdd\x25\xfc\xf2\xab\x0b\x8b\xec\xb9\x29\xd9\x66\x6a\xac\xfb\x77\x84\x45\x5e\xe1\x8a\xb7\xab\x56\xd4\xf6\xec\x70\xa3\x3e\xb9\x33\x52\x43\x1a\x0d\x2e\xc2\x9e\xc1\x26\xf0\x39\x99\x26\x9f\x9f\xbd\x16\xbe\x38\x38\x87\xb9\xf4\x19\x85\x03\xd3\x8d\x9e\x6d\x17\xa7\xed\x14\xf0\xeb\xc6\xd6\x9e\x42\x1c\x5a\xc9\x95\xfc\x2d\x6e\xc8\x21\xe5\x2f\x70\xc6\xf9\xee\x79\x99\x4a\xfe\x3b\x0a\x79\x91\x30\x9e\x9f\x95\xd1\x28\xbe\x34\x2a\x5f\x4b\xd3\x6d\x0c\x37\xff\x6c\x5d\xbe\x9b\x8c\xba\x5e\x1d\xae\x97\xfb\x6f\xff\x09\x00\x00\xff\xff\x0f\x78\xb1\x46\x77\x13\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 4983, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateRenderGroupsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xd7\x52\x48\xcf\x2f\xa9\x2c\x48\xb5\x52\x48\xcd\x2b\x49\xcf\xd7\xcb\xcc\xd7\x4f\xcd\x2b\x01\xe1\x64\xfd\xf4\xd4\x3c\x3d\xf7\xa2\xc4\x82\x0c\x05\x2d\xfd\xda\x5a\x2e\x2e\x7d\x7d\x05\xe7\xa2\xd4\xc4\x92\x54\x85\x44\x85\xe2\x92\xa2\xd2\xe4\x12\x40\x00\x00\x00\xff\xff\x40\x62\xe4\xc0\x41\x00\x00\x00")

func templateRenderGroupsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateRenderGroupsTmpl,
		"template/render/groups.tmpl",
	)
}

func templateRenderGroupsTmpl() (*asset, error) {
	bytes, err := templateRenderGroupsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/render/groups.tmpl", size: 65, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/response.tmpl":  templateHttpResponseTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
	"template/render/groups.tmpl":  templateRenderGroupsTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"response.tmpl":  &bintree{templateHttpResponseTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
		"render": &bintree{nil, map[string]*bintree{
			"groups.tmpl": &bintree{templateRenderGroupsTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
