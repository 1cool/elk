// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/import.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/request.tmpl
// template/http/response.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x5d\x4f\xdc\x38\x14\x7d\xe7\x57\xdc\xb5\xa6\x52\x82\x18\xe7\xbd\x12\x0f\x55\x61\x29\x52\xcb\x76\x3b\xec\xf2\xd2\x17\x13\xdf\x24\x5e\xcc\x75\xb0\x6f\x98\xce\x86\xf9\xef\x2b\x27\x99\x8f\x64\xa6\x2c\x8d\x84\x14\xc2\xf5\xb9\xe7\xf8\x1c\x5f\xd3\xb6\xd9\x29\x94\x8e\x57\x35\xbe\x07\x24\x2e\x9d\x34\x2e\x43\xe2\xf8\x93\x67\x25\x92\xbc\xf2\xaa\xae\xe0\x34\x5b\xaf\x4f\x4e\xda\x16\x34\x16\x86\x10\x44\xc5\x5c\x67\xb9\x47\xc5\x28\x60\xbd\x3e\x01\x00\x68\xdb\x39\x2c\x0d\x57\x80\x3f\x18\x49\xc3\x0c\xc4\x57\x95\x3f\xa8\x12\x45\xbf\x40\xc0\x7c\x28\xed\xcb\x81\xf1\xb1\xb6\x8a\x23\x1e\x2a\x8d\x5e\x80\xdc\x81\x41\xc4\xd8\xfd\xb6\x5f\x6b\x6b\xf4\x59\x47\xc1\x3c\xd6\xce\xb3\x80\x59\xac\xdc\x94\xce\xea\x87\x12\xde\x9f\xc3\xbd\x0a\x08\x33\xf9\xd1\x51\x61\x4a\x39\x70\xd9\x83\xf4\x8a\x4a\x84\x19\xc5\xda\x99\xbc\x71\x1a\x03\xec\x11\xcc\x32\xf8\xd8\x29\x84\x5e\x68\x00\x05\x84\xcb\x6d\x87\xf5\x5a\xc6\x57\x92\x37\xea\x31\xc2\x82\x22\x0d\x81\x9d\xc7\x00\x86\xc1\x10\x70\x85\xa0\x15\xab\x48\x44\x6e\x71\x8b\x86\x72\x48\x2a\x18\x2d\xfe\xa4\x48\x5b\xf4\xe9\xd0\x32\x59\x42\xd4\x27\xbf\x61\xa8\x1d\x05\xbc\xf3\x86\xd1\x9f\x81\x87\xd3\xe1\xfb\x53\x83\x81\x53\x68\xb7\xb0\xf1\xb1\x51\x4a\x25\xad\x2b\xe5\x9d\xe1\x2a\xf9\x57\xd5\x72\xc1\xde\x50\x99\x88\x47\xe4\xca\x69\x71\x06\xa2\x6f\x21\xd2\x74\xb4\x36\xcb\xe0\x0a\xb9\xe3\x5c\xbb\xc0\x1d\x71\x39\xaa\x78\x56\x1e\xf4\x98\x76\x0f\x35\xb0\x39\x19\x55\xc7\x38\x1c\x37\x4d\x63\xee\x34\xce\x15\xe9\xf9\xb3\xb2\x46\x2b\xc6\xb9\xef\x21\x44\xb4\x63\xbe\xf1\x72\x8f\xda\x42\x3d\xe3\x76\x3f\xc7\xb4\xee\x7b\xd1\xb9\x35\x48\x3c\xb6\x44\x0e\xbb\x99\x4e\x98\x6d\xac\x2f\x3a\xeb\x49\xfe\x6e\xd0\xea\x30\x8a\xe7\xe6\x31\x05\xe8\x0e\xb4\x88\x3b\xd9\xe4\xdc\xd5\x46\xbb\x7f\x3b\x07\x32\x76\xe2\xc0\x96\x94\x5c\x20\x1f\x5b\x96\x9c\x1e\x87\x4b\x0f\x60\xd6\x53\xd2\xf1\x40\x4c\x29\xee\xb4\xe0\xa0\xe5\x52\x97\xf8\x3f\x52\xf0\x97\xa4\x44\x23\x4d\x11\x57\xfd\x45\xe6\xa9\x41\x38\x02\xbd\x93\xdd\xe3\x7f\x69\x58\xb1\x71\xb4\x40\xde\xd3\x3c\xed\x7b\xa8\x79\xd3\x0f\x6d\xf8\xa5\x3e\x1f\x74\xb7\xb7\xc7\xdb\x48\x29\x5f\xe9\xb4\x9b\x32\xfb\xcf\x9b\x36\x1f\xcf\x00\xbd\xef\x46\x8d\x8c\x01\x4d\x7c\x1c\x36\x8c\x3f\x38\x49\xd3\xb7\x9e\x06\xf4\xde\xf9\x79\x15\xcf\xbf\xa1\x52\x80\x36\x39\x83\xb8\xc0\x42\x35\x96\x05\x24\xb5\x37\xc4\x20\x72\xd7\x58\x0d\xe4\x78\x98\x46\x20\x20\xd9\x04\xfd\x05\x1e\xf0\x5e\xdd\xa7\xe9\xd1\xa3\xf3\x0d\xad\x53\x3a\xce\x77\xbf\x1a\x9f\x9c\xa7\x57\x4e\xce\x9f\x0d\xfa\x55\x92\xca\xbb\x0a\x3d\x26\x7b\x7f\x7b\x01\xeb\x96\xe8\x63\xcd\xf5\x45\x82\xc3\xb2\xeb\x8b\xa9\xb7\x47\x36\xa0\xbf\x1d\x62\x3e\x6f\xdd\xe7\xc8\x69\x46\x20\x26\xb7\xc8\x84\xfc\xa5\x2a\xd1\x43\x2f\xa0\x0b\x36\x57\x8a\x41\x79\x84\x38\x31\x8c\x47\x0d\x8e\x36\x5b\xe2\x6a\xf4\x5d\x1c\xe4\x01\xd4\x53\xdb\x82\xbc\x24\xee\x64\x4d\x7b\xfd\x24\x07\x83\xbd\xe7\xf0\x24\xff\x20\xbb\x7a\xdd\xdd\x83\x8e\x6f\x77\xfb\x60\xa9\xb8\x8c\x55\x41\x40\x62\x4d\x60\x10\xe4\x78\x5e\xb8\x86\xb4\xe8\xdf\x83\xa1\xb2\xb1\xca\x8b\xc3\x58\x8b\xcf\xae\xdc\x2e\xec\xb3\x53\x80\x88\xf7\xc0\x35\x71\xf2\x5d\xbc\x0b\xdf\xc5\x19\xa0\x7c\x17\x52\x31\xf8\xd6\xb9\x7a\x60\x61\x7a\x04\xfb\x95\x50\x7a\x54\xfa\x78\x24\x05\xa8\x82\xd1\x43\x53\xc7\x41\x2f\x46\xa8\x07\x71\xb5\xf2\x9a\x0a\x97\x88\x51\xde\x3a\xa4\x38\xa6\x3c\x92\x46\x8f\xf1\x12\xdb\x28\x12\xdb\xf8\x0d\xc1\xed\xd4\xfd\x3c\x93\x23\x7f\x55\x58\xfd\x13\x1c\xc9\x2f\xca\x87\x4a\xd9\x5b\xf7\xe9\xf6\xf6\xeb\xf8\xca\x4d\x6e\x70\xd9\xb6\x90\xf8\xe1\xeb\xdf\x06\x97\x31\xb6\x51\xe8\x07\x22\xd7\x8f\x9f\x20\x2f\xed\xc3\x22\xaf\xf0\x51\x0d\x57\xce\x95\x77\x4d\x1d\xe0\x05\x42\x77\xfd\x2e\xac\xc9\x31\x4d\x65\x5c\x3e\x10\x4d\x30\x3d\x83\xe5\x8e\xd1\xf4\xff\x9e\xed\xdb\x7f\x01\x00\x00\xff\xff\x9f\x01\xa6\xa5\xa6\x09\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 2470, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x08\x22\x03\xe4\xa2\x96\xef\x05\x76\x5a\x8a\x36\xc0\xd0\x0d\xeb\x80\x5e\x7a\x51\x2d\xda\x16\xaa\x48\x9e\x4c\xaf\xed\xbc\xfc\xfb\xc0\xd8\x71\xe3\xb6\x13\x10\x40\x8c\x1f\x1f\xc9\xf7\xa8\x61\x28\xce\xa0\x8e\xfc\xd2\xd2\x05\x50\xe0\x3a\x6a\x17\x0b\x0a\x2c\xbf\xb2\xa8\x29\xe8\xab\x64\xda\x06\xce\x8a\xfd\x7e\xb5\x1a\x06\xb0\x54\xb9\x40\x80\x0d\x73\x5b\x58\xf2\xc4\x84\xb0\xdf\xaf\x00\x00\x86\x21\x87\x27\xc7\x0d\xd0\x33\x53\xb0\xb0\x06\xfc\x6e\xca\x47\x53\x13\x8e\x09\x08\xf9\x04\x1d\xe1\xc0\xb4\x6b\xbd\x61\xe1\x23\x63\x29\x21\xe8\x57\x32\x10\x8e\xd7\xe8\x14\xeb\x5b\x4a\xc5\xa1\x05\xb7\x6b\x63\x62\x84\xb5\x20\x8f\xd0\x75\xfb\x58\xc3\xc5\x67\x78\x30\x1d\xc1\x5a\x7f\x89\xa1\x72\xb5\x9e\x7a\x39\xa1\x4c\x26\xd4\x04\xeb\x20\xd8\xb5\xbe\x89\x96\x3a\x38\x69\xb0\x28\x60\x73\x98\x10\x12\xed\xe2\x6f\xea\xc0\xcc\xec\xfb\xbd\x96\x6b\xd0\x37\x66\x27\x94\x50\xa5\xb8\x03\x6e\x08\xac\x61\x23\x85\xf5\xcc\x53\xf5\xa1\x04\xd5\xc0\x22\xe1\xda\x04\xeb\x29\x65\x53\x09\xf5\x04\x32\x8f\xfe\x41\x5d\x1b\x43\x47\x77\xc9\x31\xa5\x73\x48\x70\x36\xfd\xff\xab\xa7\x8e\x33\x18\x66\x5a\x39\x5e\x5a\x6f\xb4\x8f\xb5\xbe\x73\xdc\xa8\x3f\xa6\xd5\xb7\x9c\x5c\xa8\x15\xee\x88\x9b\x68\xf1\x1c\x70\x2c\x81\x59\xb6\xc8\x15\xbb\xfe\x23\xaa\xcd\x65\x9c\xbc\x4f\x1e\x45\x9e\xfc\xa8\xed\xf1\x50\x4a\x20\x75\x4b\xef\x28\xf0\x52\x09\x3d\x56\xfb\x16\x68\xbb\x51\xc3\x00\xae\x92\x8f\xdb\x8d\xbe\x36\xdd\x55\xfc\xf9\xd2\x0a\x68\xcc\xd8\x6e\xf4\x14\x2b\x67\x33\x71\xdc\x77\x12\x39\x3b\xbb\x9f\xe9\xcb\x67\x2a\x55\x12\x13\x99\x9e\x59\x65\xd9\xea\xed\x14\x8b\x58\xce\xc7\x53\x51\x4a\x31\xe5\x8d\xe8\xee\x42\x8d\x60\x5d\xc9\xef\x52\xf1\x52\x50\x1d\x82\xf2\xae\x63\xc0\x10\x39\xaf\x62\x1f\x2c\x66\xef\xb1\x5f\x63\x3d\x23\x55\x9b\x5c\xe0\x0a\x50\x2c\xd8\x06\x56\xf7\xf8\xa9\xbb\xc7\x73\x70\x36\xc3\x69\x58\x51\x28\xfb\x80\x67\x43\x95\xe9\x3d\xe3\x44\x02\x58\xc6\xde\x5b\x08\x91\x61\x7c\x62\x80\xb3\xc0\x7f\xe1\x91\x1e\xcc\xc3\x92\xe5\x9d\x41\x5e\x6f\x43\x15\x15\x9e\x38\x33\x25\xca\xae\x8e\xa4\xb2\x1a\xc7\x66\x71\x36\x64\x72\x71\x6c\x7c\x59\xe5\x49\x1f\xb6\xf2\xfa\xf0\x54\xd5\x61\x2d\x6f\xd9\x70\xdf\xdd\xc4\x83\x3b\x81\x5f\xf1\x6f\x1f\xf1\x7c\xfb\x17\x00\x00\xff\xff\x6a\x62\x14\xec\x73\x04\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1139, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x5e\x05\x63\x21\x19\x0e\x95\x6d\x6f\x41\x7c\x69\x9a\x6e\x0f\xdb\x20\x48\x5b\xf4\xb0\xd8\x03\x57\x1a\x4b\x84\x65\x52\x20\xa9\x64\x1b\x45\xff\x5e\x90\xa2\x65\xc9\x91\xb3\xc8\x21\xb0\xa8\x79\xf3\x66\xf8\x66\xfc\xe2\xb6\x4d\x57\x28\x94\xfd\xaf\xa6\x2b\x90\xb4\x85\x62\x42\xa5\x24\xad\xfb\xcb\xd2\x82\x24\xfb\xa4\x79\x5d\x62\x95\x76\xdd\x62\xd1\xb6\xc8\x69\x2b\x24\x21\x2a\xad\xad\xd3\x92\xcb\xbc\x22\x1d\xa1\xeb\x16\x00\xd0\xb6\x17\x78\x12\xb6\x04\x7d\xb7\x24\x73\x2c\x11\xdd\xf3\x6c\xc7\x0b\x8a\xfa\x8c\x08\x17\x01\xda\xc3\x61\x69\x5f\x57\xdc\x3a\x42\xe2\xb9\xa3\x62\x47\x32\x38\x8e\xe3\x69\x8c\xad\x6a\xd2\xa9\xef\x41\xec\x6b\xa5\x6d\x84\xa5\x43\x7a\x68\x9a\x22\x34\x86\x92\x1b\x18\xb5\x27\x64\x4a\x3e\x92\x14\x24\x33\xc2\x9e\x6c\xa9\x72\x83\xc6\x50\x0e\x25\x21\x55\x4e\x17\x21\xc3\x30\x4f\xe1\x04\x19\x48\x8c\xd5\x4d\x66\xd1\x1e\xe9\x7f\x15\x76\xcf\xcd\x0e\x56\x39\xe2\xad\x28\x1a\x4d\x78\x2a\x45\x56\x42\xab\xc6\x92\x71\x11\x4d\x85\x30\x96\xf4\x88\xf1\xa1\x0f\x36\x42\xda\x5f\x7e\xee\xd9\xb6\x8d\xcc\x10\x6b\x13\x62\x89\x6b\x39\xd6\xc3\xe9\x9b\x52\x15\x5a\x68\xb2\x8d\x96\xd0\xe6\x83\xc6\x4f\x1b\x5c\x22\xf4\xd2\xb6\x58\xd6\xbb\x02\x57\x1b\x7c\xe3\x86\xb0\x64\x37\xbe\x1f\x16\x64\x1f\xa9\xa7\xb9\x2c\x08\x4b\xe9\xb0\x4b\x76\xa7\x72\x32\x18\xcd\x22\x53\xd2\x58\xc4\xc3\xf9\xc0\x2e\xd9\x1d\xdf\x3b\x9e\x1b\x4d\x4e\xfb\x70\x85\x0d\x3e\xe2\xfa\x1a\x42\x59\x7e\x3e\xe5\x81\x78\x7e\x3e\xfa\x4f\x9d\x73\x4b\xe7\xe3\xbf\x51\x45\x6f\xc5\x3f\x0b\x63\x4f\xa3\xe1\x92\xe4\x2f\x29\xd9\x6d\x5e\x90\x99\xac\xdc\x2c\x93\x3b\x50\x7f\x78\x41\xcd\x4d\xc6\x2b\x9c\xe4\x84\x65\x3c\xa5\x9a\x5e\x77\x90\xe6\xfa\xda\x09\x83\x0b\x7c\x1c\xd0\xc9\x62\x78\x4c\xd3\x69\xde\x1f\xc3\xb2\xba\x4f\x03\xb7\xd6\xc8\x74\x93\x43\xd5\xa4\xb9\x15\x4a\x1a\xb7\xa7\x87\x61\x77\x1d\x9b\xe4\xb3\x81\xd9\x2f\xd9\x2c\xf7\x61\x87\x27\xdd\x87\x05\x5f\x4c\x5e\x66\x95\x20\x69\xdd\xd3\x8a\xa4\x65\x37\xfe\x38\x41\x54\xaa\x08\x4f\xab\x67\x5e\xb3\xcf\xaa\x28\x48\x0f\x88\xee\x48\xe7\x77\xfb\x8e\x9e\xe6\x3a\x8a\xb3\x31\xff\x1a\xd5\x98\x2c\xc1\x6a\xf6\x16\xd3\xf6\xc3\x97\xe2\xc3\x1c\xb4\x7d\x35\xf1\xfe\x5e\x57\xc8\xd6\xaf\x42\x95\x2a\xae\xfc\x27\xfb\x57\xd8\x32\x76\x7d\xfc\x65\xb5\x90\x45\x1c\x1d\x1c\x6e\x8d\x68\xae\x4c\x94\x24\x53\xba\x6e\x4e\x87\x34\xc5\x43\x30\x83\x90\x67\x06\x77\x30\xb0\x25\xa1\x20\xe9\x26\x4d\xf9\x61\x26\x7e\xe0\x3e\x22\x1e\x49\x22\x2b\x45\xef\x2c\x9a\x4d\xd5\x8d\xcb\x79\xa9\x12\xfc\xa9\x1a\x69\x63\xed\x52\x99\xdf\x4c\xbd\xc6\xc8\x66\xa6\x02\x89\x2d\xb4\x61\xce\x7a\x66\xbe\xf3\xa7\x60\xaf\x3d\xbb\x57\xc6\xc6\x51\x1a\xad\x51\xb2\x80\x3b\xa3\xc4\x1b\x05\x9c\x43\xcc\xd3\x7f\x22\xc7\xde\x8a\xbc\xf3\x15\x3c\xf0\xfd\xfc\xbd\xc7\x9c\xb9\x00\xb7\x59\x39\xae\x11\xc0\xef\xaf\xd2\x3b\xd5\x7c\x95\x3e\x36\x2e\x13\xd0\xef\x2f\xe3\x0c\xef\x2d\xb1\x3c\xbb\x07\xbd\xc1\xfd\x1e\x93\x3c\xd3\xc7\xbc\x5d\xce\x75\x86\x93\x51\xa6\xa3\xd4\xae\x57\xe3\x0c\xd9\x2b\xaa\x1f\xda\xf1\xe9\x8f\x86\xe3\x7f\x57\x63\xb5\xa8\x6f\xa5\xbd\xd5\x5a\xe9\x98\xb4\x06\xb9\xa7\xc4\x07\x64\x31\xea\x3b\x38\x4a\xff\xde\xb0\xbf\xb5\xd8\xdf\x6b\xda\x8a\xef\x2e\x8b\xf5\xf9\xc9\x1a\x91\x37\x92\xa8\x6f\x72\x5c\xe9\x99\xd7\xbf\x0b\xaa\x72\xe3\xf0\x06\x7b\x5e\x7f\xe9\xb9\xbe\xf6\x1f\x09\xbe\x7c\x75\xee\xe2\x41\xa3\xba\x62\x0b\x9f\xb0\xd9\x40\x8a\x0a\x2f\x2f\xa8\x48\x7a\x8e\xc4\xbd\xbb\x9c\x37\x3e\x29\xaa\xc5\x6b\x79\xb4\x1b\xeb\x9e\xef\x28\x1e\xd5\x5a\xe3\xf2\x28\xe9\x56\x69\xec\xd6\x78\x74\xc0\x7e\x17\x7c\xf1\x93\x1a\xd8\x80\xd7\x35\xc9\x3c\xd6\x6b\x8c\x2c\xd1\x65\x26\xc9\x5c\xe1\xf0\x1b\x25\xa8\x32\x4c\xe2\xff\x00\x00\x00\xff\xff\x75\x5e\xbe\x72\x64\x0a\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 2660, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x6f\x6f\xdb\xb6\x13\x7e\xdf\x4f\x71\x3f\xc1\xf8\x55\x0a\x6c\xba\xc5\xde\xa5\xc8\x80\x76\x4d\x07\x03\x41\x9b\x25\xeb\xde\x14\x05\xca\x88\x27\x99\x8b\x44\x29\x47\x2a\x99\xab\xea\xbb\x0f\x47\xc9\xb6\x2c\xcb\x4d\x9a\x06\x13\x10\x38\x16\x8f\xf7\xe7\x39\x3e\xcf\xd1\x75\x0d\x0a\x13\x6d\x10\x82\x25\x66\x25\xd2\x7c\xe9\x5c\x39\x57\x18\x17\x0a\x67\xd2\xa8\xd9\xad\xcc\xb4\x92\x0e\x67\x84\x37\x15\x5a\x17\xc0\xac\x69\x9e\x01\x00\xd4\xf5\xfc\x08\xd2\xc2\xad\x4a\x3c\x06\x34\x2e\x2d\x84\x2e\xe6\x68\x1c\xff\xc5\xf3\x14\x8d\xf8\x73\x55\x22\x1c\xcd\xbb\x0d\x3a\x01\x24\x82\xe3\x13\x40\x69\x57\x7f\xdb\xc2\x88\x8f\x26\x97\x64\x97\x32\x7b\x47\x45\x7e\x81\x52\x21\x85\x24\xde\x14\x6a\x35\x85\xff\xab\xe8\x95\xdf\xf0\xbf\x13\x30\x3a\x83\xda\x3b\xe1\x27\x13\xa7\x44\x05\x85\x01\xf2\x07\xf8\x6c\xb5\x49\x81\x5d\x06\x53\xf8\x2a\xcb\xce\x00\x89\xa2\x68\xb3\xed\x8d\x54\x17\x6d\x11\xe1\xdd\x14\x02\x6d\x7c\x6d\x7e\x17\x58\x47\xda\xa4\xc1\xd6\x98\xd0\x55\x64\xfc\xd7\x75\xb9\x5c\x80\x41\x54\xf6\xaf\x16\x13\x5d\x18\x98\x6c\xe0\xe0\x67\x3e\x87\x6e\x0d\xc1\x2d\x11\x94\x74\x52\x6c\x56\x91\xc8\x72\xf5\xb9\xbc\xc6\x30\x97\xe5\xa7\x36\xe8\xe7\xf6\x63\x1b\xba\xae\x67\x40\xd2\xa4\x08\x93\x84\xed\x27\xe2\x9d\xc6\x4c\x59\xe8\x45\x5a\xdb\x4d\xe2\x25\xc6\xd7\x5c\x96\x26\x54\x6c\x2d\x8d\x82\xd0\x14\x0e\x26\x89\xf8\x50\x72\x92\x32\x8b\x20\x34\xec\x4d\xbc\x97\x39\xc2\x44\x2c\xde\xfa\xff\xa2\x31\x8f\x3a\x19\x3a\x1d\x18\x75\xad\x54\xa2\xae\xd9\xe5\xa5\xa3\x2a\x76\x3e\x43\x68\x1a\x38\x19\x36\xab\xff\x30\x02\x9f\x82\x76\x9f\x4f\xa5\x69\x82\xcf\x70\x02\x5f\x72\x6d\x2d\x77\x90\xd6\x31\x13\xf6\x77\x0c\x03\xdb\x2f\x7b\x5e\xf7\xf3\x47\xb3\x97\x71\x57\x56\x41\xec\xab\x6b\x50\x41\x96\xbf\x2d\xec\xa9\xa9\xf2\xb1\x12\xc7\xb1\x98\x8d\x58\xfa\xca\x32\x8b\xc3\x05\x9f\x4d\x66\x71\xcc\xfb\xf7\x41\xdc\x3b\xf1\xf7\x14\xd8\xf3\xd8\x31\x8c\xdd\x8a\x73\x19\x5f\xcb\x94\xe3\x77\x61\x36\xb5\x43\xd3\x84\x75\x3d\x49\xc4\x1b\x69\x75\xec\x69\x1a\x96\xa4\x8d\x83\xe0\x48\x89\x60\x90\x12\x9f\x93\x43\x5c\xdc\x03\xe2\x40\x8b\x91\xa8\x23\x65\x34\xba\x77\xa4\xa0\xae\x03\xfe\x2c\xef\x74\xa1\x69\x9a\xba\x3e\xd4\xe8\xc1\xeb\x03\xaf\x3a\x7e\x61\xcb\xaf\x53\x95\xe2\x28\xbd\xd6\xe1\x71\x43\xa5\xef\xb2\x01\x1f\xc9\x06\xbc\x87\x0d\xa8\x52\x84\x81\xe5\x23\xb8\x30\xf2\x4a\x27\x90\xa1\x61\xa1\xb4\x11\xfc\x0a\x2f\x06\xa9\x66\x62\x61\x92\x22\x0c\x6e\xb7\x8a\x97\x48\x9d\xa1\x6a\x65\xb6\xd5\xa5\x76\xb7\x10\x62\xb7\xb3\xbb\x72\xeb\x6d\x76\xd6\x7b\x0a\x0b\x7d\x95\xe5\x0c\x99\x66\xdb\x16\x3f\x3b\x30\xa6\xb4\x9a\x25\x54\xe4\xb3\x8a\xb2\x60\x5d\xd4\x7c\x0e\x8b\xb7\xa0\x2d\x7c\xbc\x38\x83\x52\x92\xcc\xd1\x21\x89\x67\xbd\x8e\x7a\xfd\x5b\xd8\x85\x71\x3b\x48\xa8\xe9\x9a\x3c\xd6\x51\x5c\x98\x5b\xf1\xda\x15\x3a\x8c\x97\x5a\x7c\xbc\x38\x3b\x67\x57\x21\xf1\xdc\x50\x41\x6f\xa8\x74\x94\x1b\xe5\xc5\x60\x4e\xa5\xe8\x1c\xb7\x55\x2b\xe0\xb4\xa1\xa2\x6c\x9b\x61\x37\xb7\x2e\xfd\x2c\x08\x39\xc8\x14\xc6\x43\x1f\x1e\x70\xfb\xa8\x07\x5a\x41\x5e\x59\x07\x57\x08\xd2\x80\x36\x0e\x53\x24\x48\x09\xa5\x43\x82\xaf\x48\x45\xf0\xc0\xae\x0c\x84\x4c\xfb\x61\x33\x9a\xe1\x8f\x37\xd2\xe3\x33\x5b\x4a\xa3\x32\x9e\xc2\xb0\x7b\x61\xd8\xc3\xd6\xde\x69\x17\x2f\x7b\x2f\xfa\x8c\x6e\x5b\x38\x69\x01\x3a\x44\x6a\xbc\x69\x2d\x03\x53\xb8\x59\x52\x54\x46\x05\x63\xc4\x8e\xa5\x45\xbe\xda\x88\x85\x7d\x5f\xb8\x77\x6c\xe7\x21\x3f\x1e\xe5\x73\x6e\xd3\xee\xf4\xe8\xf2\xd4\xb8\x6d\x87\x46\xad\x3b\x6a\xe5\x36\x1d\x36\xb4\xae\xd7\xc5\x88\xb3\x22\xe5\x12\xa6\x0c\xa7\x80\x9e\xec\x8d\xfb\xdc\x24\x79\x37\xe5\x6c\xa2\x7d\x41\xe0\x2e\x0e\xeb\x67\xad\xa9\x32\x49\x0f\x80\xe0\xb2\x33\x7d\x42\x14\x5a\x83\x27\x85\x61\x97\x03\x0f\x03\xa2\x24\x7d\x2b\xe3\xd5\x28\x06\xf3\x39\x9c\xb7\xcb\x1e\x8e\x47\xc8\xac\xc2\x44\x56\x99\x3b\x1e\x97\x07\x3f\xac\xdf\xb6\x26\x2c\xed\x3f\x8f\xc4\xc2\x38\x24\x23\xb3\x4b\xa4\x5b\xa4\xd6\xd3\xdd\x94\x69\x14\x0d\xa8\x0d\xc3\xbb\xee\xfd\x6c\x2d\x65\xaa\x8d\x1f\x06\x3f\xf1\x63\xa0\xe4\x8b\xc9\xf1\x09\xbc\x5c\x33\xdd\xeb\x09\xb1\x9a\x88\x3f\x2a\xa4\x55\x18\x89\xdf\xd1\x85\x01\x1b\x06\xd1\x2b\x50\xac\x03\x41\xd0\x63\x3d\xaf\xb4\x9a\x3d\x90\x6c\xf5\x50\x79\x6e\x87\x5b\xab\xce\xa5\x24\x3f\x74\x6f\x38\xf8\x56\x97\xe1\x39\x87\x79\x3e\x90\x67\x9f\xd4\x14\xd4\x8f\x89\xb1\xaf\xf9\x09\xe4\xb8\x53\x47\x87\xb9\x3d\x47\x3a\xef\x90\xfc\xe5\xc5\x7d\x50\xf6\x77\x8c\x43\xda\xb7\xf8\x0f\xa0\xed\x87\x1b\x42\xbc\x93\xec\x0f\x43\xbd\x03\xce\x93\x41\x8e\x76\x73\x47\xb8\x11\x67\x3a\xd7\x2e\xec\x07\x8a\xc4\x87\x24\xb1\xe8\xc2\xd0\x77\x7a\x06\x2f\x23\x38\x82\x5d\x8b\xd7\x59\x16\x92\xf8\xad\x30\x0e\xff\x71\x61\x57\xc4\x21\x28\x07\x17\x88\x04\x5d\xbc\x64\x20\xbd\x60\xf8\x8b\xe0\x37\xb8\xc6\x2b\x79\x05\xdf\xa0\xcc\x2a\x92\x59\xd3\xb4\x77\x0b\x75\xf5\x9d\x1f\xc2\x0f\x51\x87\x71\x4d\xf8\x37\x00\x00\xff\xff\x8b\xe3\x95\x03\x30\x10\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 4144, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpImportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\x41\x4b\xc4\x30\x10\x05\xe0\x7b\x7f\xc5\x23\xec\x41\x17\xec\x9c\xbc\x2c\x78\xf6\xe6\x7f\x88\xed\x33\x89\xb4\x49\x48\x66\x85\x25\xf4\xbf\x4b\x2c\x62\x0f\x6e\xe0\x1d\x5e\xf8\x92\x99\xd6\xe4\x0c\x97\xf4\x96\x79\x01\xa3\xba\x34\x86\x24\x8c\xda\x33\x89\x63\x1c\x5f\x8b\xcd\x1e\x67\xd9\xb6\x61\x68\x0d\x33\x3f\x42\x24\x8c\xe7\x92\x59\xc4\xab\x66\x09\x6b\x4e\x45\x0d\xb6\x6d\x00\x80\xbd\xe2\xe1\xa7\xf4\xd3\x1a\x8a\x8d\x8e\x38\x45\x5c\x5e\x70\x1a\xdf\xd2\xcc\xfa\xcb\x0f\x4a\xb9\xe6\xc5\x2a\x61\xf6\x3f\xa4\x2f\x56\x4d\x7f\x77\xc0\xad\x81\x71\x3e\xde\x18\x17\xd4\x5f\xdf\xc7\x29\xad\xe2\xd2\xd3\xe4\x83\xf4\x7c\x3d\x9b\x7f\xc9\x6a\x6b\x25\x97\xc9\x4b\x61\x9c\x59\xee\xa9\xb0\x94\xab\xd0\xd6\xdb\x67\x4d\x71\x47\x8f\xc3\xdf\xf4\xef\x00\x00\x00\xff\xff\x5a\x80\x68\x90\x3d\x01\x00\x00")

func templateHttpImportTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpImportTmpl,
		"template/http/import.tmpl",
	)
}

func templateHttpImportTmpl() (*asset, error) {
	bytes, err := templateHttpImportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/import.tmpl", size: 317, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\x4f\x4f\xe3\x48\x10\xc5\xef\x7c\x8a\xa7\x56\x0e\x4e\x94\xb4\xef\x48\x7b\x58\xad\x10\x20\xb1\x88\x85\x68\x39\x77\xe2\x8a\xdd\x13\xbb\xda\xa9\x2e\x93\xc9\x98\x7c\xf7\x51\x9b\x90\x3f\x30\x2d\x59\x72\x5a\xaf\x5e\xfd\x52\xf5\xdc\xf7\xf9\x04\x65\xd0\x5d\x4b\xd7\x20\xd6\x32\x58\x1f\x72\x62\x4d\xcf\x32\x2f\x89\xed\xad\xb8\xb6\xc2\x24\xdf\xef\xaf\xae\xfa\x1e\x05\xad\x3c\x13\x4c\xa5\xda\xe6\xb5\x8f\x6a\xb0\xdf\x5f\x01\x40\xdf\xcf\xb0\xf5\x5a\x81\x7e\x2a\x71\x81\x11\xcc\x93\x5b\xae\x5d\x49\xe6\x43\x6e\x30\x3b\x48\x3f\xe4\x50\x6a\xda\xda\x69\x72\x23\x57\x90\x18\xd8\x93\x19\x92\xc7\xe9\xd7\xb9\xb6\x6e\x49\xf2\x01\xc0\x37\x6d\x10\x35\x18\x25\xe5\xa7\x74\xd4\xae\x4b\x5c\xff\x85\x85\x8b\x84\x91\xfd\x27\xf0\xca\x97\xf6\xc0\x72\x66\x29\x8e\x4b\xc2\x88\x93\x76\x64\x1f\x43\x41\x11\x67\x80\x79\x8e\x67\x72\x05\x56\xa4\xcb\x8a\x22\xb4\xa2\xa3\xfb\x7e\x6f\xd3\x2b\xdb\x47\xd7\x24\x4b\xf8\x82\x58\xfd\xca\x53\x81\xc5\x0e\x0e\xa5\x7f\x23\x46\x27\xf5\xac\x75\xe2\x1a\x52\x12\xac\x24\x34\xc9\xe5\xbc\x43\xe1\xd4\x0d\x9c\x8e\x0b\x08\x69\x27\x1c\xe1\x15\x1a\x86\x7e\xcb\xda\x13\xab\x3d\x56\xac\x3a\x5e\x22\xab\x30\xb9\xe8\x7e\xe7\xb8\xa8\x49\xc6\x78\xf0\x51\xb3\x2d\xd2\x68\xec\x33\xc5\x36\x70\xa4\x57\xf1\x4a\x32\x85\x60\x72\xb8\xdf\x74\x14\x75\x8c\xfe\xe8\x9a\x4e\x9d\xa6\x50\xd9\x3a\x94\xf6\xd5\x6b\x95\xfd\x72\xad\x7d\x51\xf1\x5c\x66\xa6\x21\xad\x42\x61\xa6\x30\xa9\x81\x19\x8f\x2f\x2a\x37\x1f\x95\x07\xd4\x0b\x30\xfb\x5f\x47\xb2\xcb\x2e\xf5\xa7\x9c\x14\x25\xc5\x79\x78\x08\xae\x48\x5b\x30\x17\x69\x3a\x3f\x79\x8e\x1b\x57\x92\xa0\x4e\xd2\xa1\x0c\x5a\x39\x85\x13\x82\xd0\xa6\xf3\x42\x05\x02\x23\x39\x20\xb4\x24\x4e\x7d\x60\xfb\xcd\x68\xd3\xf7\xb0\x37\xac\x03\xd6\xd7\x4e\x89\xeb\x2c\x73\x9f\xe7\xcd\x09\x48\x86\x27\xc8\xb7\x82\x3f\xc7\xb2\x75\xa5\xe7\x81\xc1\xa4\x7f\x36\xfb\x0c\xe7\x71\xd8\xf6\x9e\x57\x21\x33\x67\xc3\x7a\xc7\x9a\x16\x6e\x81\x77\xb4\x75\x27\xae\x4e\xa1\x12\xe2\x82\x84\xd2\xe4\xd3\x3a\xee\x59\x33\xe3\x9a\xd0\xb1\x9a\x29\x6a\xe2\x8c\xe2\xf8\xcb\x32\xc8\xc5\xdd\x8f\x18\xd8\xfe\xeb\x24\x56\xae\x9e\x87\xbb\xf9\xfc\xe9\x32\x0b\xd9\x23\x6d\xfb\x1e\x99\x1c\x6e\xff\xf7\xb4\x4d\x98\xd9\x88\xed\xdf\xcc\x41\x07\xf2\x68\x6f\xea\xf5\xcb\xb2\xa2\xc6\xd9\xb4\xf6\x5b\x09\x5d\x1b\xf1\x8e\x38\xa4\xe2\xa5\xf6\x4b\x1a\x8f\x6d\x2a\x3e\x6c\x3b\x26\x9e\x29\xb6\x27\xa2\xaf\xdf\xf2\xf1\xed\x77\x00\x00\x00\xff\xff\xe7\xb1\x2e\xe8\x78\x04\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1144, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x51\x6f\xe3\x36\x0c\x7e\xef\xaf\x20\x84\x0c\x90\x8b\x44\x79\x3f\x60\x0f\xc3\xb5\x68\x03\xdc\xba\xdb\x35\x58\x5f\xee\x45\x8d\x68\x5b\xab\x22\x39\x14\xbd\x5c\xe6\xcb\x7f\x1f\x68\xbb\x6e\xd2\x74\x01\x02\x58\x16\xbf\x8f\xe4\xc7\x8f\xee\xba\xe5\x35\x54\x89\x0f\x0d\x7e\x02\x8c\x5c\x25\xe3\xd3\x12\x23\xcb\x7f\xb3\xac\x30\x9a\x3b\xb2\x4d\x0d\xd7\xcb\xe3\xf1\xea\xaa\xeb\xc0\x61\xe9\x23\x82\xaa\x99\x9b\x25\xa1\x75\x0a\x8e\xc7\x2b\x00\x80\xae\x5b\xc0\xde\x73\x0d\xf8\x83\x31\x3a\x98\x81\xfa\x6a\x37\x2f\xb6\x42\x35\x84\x2b\x58\x8c\xa1\x43\x38\x30\x6e\x9b\x60\x59\xd8\xd0\x3a\x24\x05\xe6\x8d\x0c\x84\xe3\xed\x74\x1a\x1b\x1a\xa4\x65\x5f\x80\xdf\x36\x89\x58\xc1\x4c\x22\x5f\x43\x67\xcd\x4b\x05\x9f\x7e\x85\x67\x9b\x11\x66\xe6\x73\x8a\xa5\xaf\xcc\x58\xcb\x09\x25\xd9\x58\x21\xcc\xa2\xc4\xce\xcc\x43\x72\x98\xe1\xa4\xc0\xe5\x12\xbe\xa1\x75\x50\x22\x6f\x6a\xcc\xc0\x35\x4e\xec\xc7\xa3\x91\xc7\x68\x1e\xec\x56\x28\xc1\x3b\x8c\xec\x4b\x8f\x0e\x9e\x0f\x60\xa1\xf2\xff\x60\x84\x96\xc2\xa2\xb1\x64\xb7\xc8\x48\x50\x52\xda\x0a\xcb\x69\x06\x67\xd9\xf6\x75\xda\xe8\x80\x30\x3a\xa4\x0c\x9e\x81\x53\x9f\x6f\x13\x3c\x46\x36\x13\xa2\x6c\xe3\x06\x74\x0d\xd7\x67\xd9\xef\x6d\x74\x01\xa9\xe8\xeb\xd5\x7b\x10\x69\xcc\x37\xcc\x4d\x8a\x19\x9f\xc8\x33\xd2\x1c\x08\xae\xc7\xf7\xbb\x16\x33\x17\xd0\x4d\xac\xf2\x0b\xa2\x42\x6d\x42\xaa\xcc\x93\xe7\x5a\xff\x6b\x1b\xf3\xc8\xe4\x63\xa5\xd5\x16\xb9\x4e\x4e\xcd\x41\x49\x02\x55\x14\x67\x48\x99\xfb\xff\x4c\xc7\x2d\xa4\xe7\x45\x4b\x41\x89\xce\x8b\xd7\x21\x9d\x08\xf0\x99\x50\x70\xd2\xec\xae\x45\x3a\x48\xe7\xbd\xe2\x93\xde\x53\x9b\x67\xd0\xdd\x50\xef\x28\xd0\x59\x9c\xf9\x53\x88\x74\x61\x9e\x6a\x24\xd4\x27\x77\x3f\x21\xa4\x3d\x92\xc4\xac\x6e\xe4\xc2\x97\x72\xb7\xba\x31\xf7\x36\xdf\xa5\xf5\xa1\x11\xfc\x00\x58\xdd\x98\xf1\xac\xbd\x2b\xc4\x8f\x21\xcb\xc9\xbb\xc9\x9b\x45\x71\x75\xa1\xc4\xb0\x01\xae\xc2\xbc\x4e\x5f\x92\x75\xd2\xb7\x3a\xdb\x93\x77\x02\xdc\xda\x0a\x09\x82\x84\xf6\x30\xe0\xda\x32\x58\x42\x20\xdc\xb5\x9e\xd0\x41\x8a\x20\x0c\x90\x1a\x24\xcb\x3e\x45\x73\x41\xb4\xeb\x3a\x30\xb7\x91\xfb\xd6\xdf\x67\x92\xba\x4e\xb6\xe9\xf5\x87\x73\x40\x22\xd1\x71\x67\xfe\x88\xe1\xa0\x49\x76\x85\xf1\x07\xeb\x0f\x3a\xbb\x48\xf9\xf1\xcc\x91\x28\xd1\xa2\x16\x47\xfa\x58\x29\x70\x7e\xc3\x17\x50\x75\x2b\x51\x59\x81\x0e\x3e\x33\xa8\x98\x78\x51\xa6\x36\x3a\x35\x3c\x67\x1f\xab\x36\x58\x52\xc5\x25\xf4\x4b\xaa\x26\xa0\x6e\xc8\x47\x2e\x41\x89\x5b\x57\x91\xf5\x77\xf5\x4b\xfe\xae\xe6\xe0\x5d\xa1\xc6\x21\xca\xe0\x8b\x0f\x78\x6e\xb0\xb4\x6d\x60\x35\x92\x80\xda\xa4\x36\x38\x88\x89\x07\xb1\x15\xe8\x37\xdb\xbc\xe0\xb3\x7d\x7e\xc7\x72\xe1\xe6\x60\x56\xb1\x4c\x5a\x9d\x19\xae\x47\xca\x17\x62\x58\x6e\x94\x35\x7a\xad\x56\x4d\x4e\x1b\x9d\x3b\x54\x7e\x9e\x06\x6d\x3e\xfc\x9d\x53\x34\xbf\x5b\xca\xb5\x0d\xeb\x74\xbf\x5e\x7f\x3d\xdf\x6e\xfd\x80\xfb\xae\x03\x4d\xe3\xdb\xbf\x3c\xee\xc5\x78\xd2\xc1\x6f\x31\x26\xee\x5d\x93\xcd\x6d\x78\x79\xdc\xd4\xb8\xb5\x46\x16\xf9\x8e\x52\xdb\x64\xf8\x09\xb9\xdf\xf3\xc7\xe0\x37\x58\x14\x46\xc0\x63\x3d\x1a\x8b\x39\xec\xdf\xea\x79\xff\x6d\x9e\x9e\xfe\x0b\x00\x00\xff\xff\x6b\x72\x9a\x12\x48\x06\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 1608, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xc1\x6e\xe3\x36\x10\xbd\xe7\x2b\x06\x84\x0b\x48\x81\x4d\xdf\x17\xe8\xa1\xd8\xa4\xbb\x01\xd2\x74\xbb\x49\x9b\xcb\x5e\x18\x71\x24\xb1\xa1\x49\x79\x38\xaa\xd7\x55\xf4\xef\x05\x25\xd9\xb1\x62\xa9\x05\x16\x6d\x09\x18\x90\xe4\xc7\x37\xc3\x99\xf7\x46\x6a\x9a\xf5\x25\x14\x9e\xf7\x15\xbe\x03\x74\x5c\x78\x69\xfc\x1a\x1d\xc7\x5f\xb6\x2e\xd0\xc9\x0f\xa4\xaa\x12\x2e\xd7\x6d\x7b\x71\xd1\x34\xa0\x31\x37\x0e\x41\x94\xcc\xd5\x9a\xd0\x2a\x36\xde\x05\x01\x6d\x7b\x01\x00\xd0\x34\x2b\xd8\x19\x2e\x01\xbf\x32\x3a\x0d\x0b\x10\x9f\x54\xf6\xac\x0a\x14\xfd\x1e\x01\xab\x01\xda\xc3\x81\x71\x53\x59\xc5\x91\x12\x95\x46\x12\x20\x5f\xc9\x20\x72\xbc\xde\x9d\x62\x6d\x85\xb4\xee\xb2\x30\x9b\xca\x13\x0b\x58\x44\xe4\x01\xba\xa8\x9e\x0b\x78\xf7\x3d\x3c\xa9\x80\xb0\x90\xef\xbd\xcb\x4d\x21\x87\x5c\x4e\x28\x49\xb9\x02\x61\xe1\x22\x76\x21\xef\xbc\xc6\x00\xe3\x04\x07\x04\x76\x08\x27\xaf\x75\x31\x86\xc4\xb5\x5e\x77\x31\x51\xde\xa9\x0d\xc2\x0b\x54\x2a\x64\xca\x42\xdb\x42\x8e\x9c\x95\x18\x80\x4b\x3c\xa6\xd5\xb6\xf2\x04\xdd\xb6\xa0\x98\x55\x56\xa2\x06\xf6\x53\x40\x77\x00\xbe\x8d\x69\x34\x3a\x36\xb9\x41\x0d\x4f\x7b\x50\x50\x98\x3f\xd0\x41\x4d\x76\x55\x29\x52\x1b\x64\x24\xc8\xc9\x6f\x3a\x52\xad\x58\x75\xd5\x50\x4e\x03\xa1\xd3\x48\x01\x0c\x1f\x62\x66\xd6\xa0\x63\x39\x0a\x91\xd7\x2e\x83\xa4\x84\x51\x12\x1f\x95\xd3\x16\x29\x9d\x39\x71\xb2\x83\xd8\x15\xf9\x19\x43\xe5\x5d\xc0\x47\x32\x8c\xb4\x04\x82\xcb\xe1\xf9\xb6\xc6\xc0\x29\x34\xa3\x50\x71\xd9\x58\xe2\x52\x5a\x5f\xc8\x47\xc3\x65\xf2\xa7\xaa\xe4\x3d\x93\x71\x45\x22\x36\xc8\xa5\xd7\x62\x09\x62\x3a\xac\x48\xd3\x33\xbe\x28\xc6\x19\xc9\xe8\x55\xac\xcb\xaa\x26\x2b\x62\xf3\x57\x07\xe5\xbc\x29\xf0\x7b\xc2\xb8\x37\xd6\x67\x5b\x23\xed\x63\xb1\xba\x8e\x1e\xdb\x74\xcc\xe4\x19\x9f\xd4\xd3\x79\x33\x4d\x38\xad\xde\x2b\xec\x2c\xda\xb6\x3f\xfc\xd0\x86\x51\xc5\xe5\x2f\x31\x76\x92\xca\xc7\x12\x09\x93\x11\x9f\xf5\x3b\xa4\x88\xb9\xb9\x4a\x8c\x4e\xd3\x1e\x3b\xd3\x9a\xe9\x12\x99\x3c\x82\x7f\x75\x66\x5b\x9f\x89\xec\x14\xd7\xfb\x3a\xca\xff\xc1\xdf\x7a\xa5\xe3\xae\x87\x7d\x85\x20\x08\x95\x16\x73\x5b\x87\x52\x5e\xab\x02\x09\x6c\xdc\xd7\x71\x00\x97\x8a\x41\x11\x02\xe1\xb6\x36\x84\x1a\xbc\x83\xc8\x04\xbe\x42\xea\xe6\x8a\x9c\x25\xdc\x36\x0d\xc8\x6b\xc7\xdd\x69\xff\x2e\xe9\x93\x01\xf2\x76\xe1\x12\x90\x28\x96\x7d\x2b\x7f\x76\x76\x9f\x50\x1c\x13\x8c\x5f\x39\x49\xd3\x73\x39\x0c\x8c\xb3\x29\x4d\x2b\x0d\x89\x3c\xad\xca\xe8\x19\xe3\x0a\x01\xda\x64\x3c\x4b\x21\xae\x23\x3a\x08\x48\xac\x09\x0c\xc2\x79\x5e\xe5\xbe\x76\x5a\xf4\xd7\xc1\xb8\xa2\xb6\x8a\xc4\x79\x23\x8f\x14\xb7\xbe\x38\x12\x24\x15\x19\xc7\x39\x88\xe8\xa4\x1b\xc7\xc9\x17\xf1\x5d\xf8\x22\x96\x60\x74\x1a\x75\x2f\x6f\xae\x3a\x91\x4c\x78\xe7\xc8\x77\x85\xb9\xaa\x2d\x8b\x81\x0c\x44\xe6\x6b\xab\xc1\x79\xee\x9b\x25\xde\x8a\x7b\x9a\x6b\xd2\x61\x71\x59\x79\xe3\x72\x9f\x0c\xb6\x8e\x7a\x3a\x73\x54\x3f\xac\x30\xba\xff\x70\x10\xd1\x9b\x60\xc8\x3f\xfa\x7f\x09\x28\x4f\x38\x6e\xae\xe2\xe8\xa8\x33\xfe\xd1\xa0\x8d\x12\x98\x39\x23\xaa\xb0\xff\x3d\x78\x27\x7f\x52\x14\x4a\x65\x1f\xfc\xc7\x87\x87\x4f\xe3\xe1\x95\xdc\xe1\xae\x69\x20\xa1\xe1\xe9\x6f\x06\x77\x47\xf1\x27\x87\x88\x3f\x38\xe7\xb9\x7f\x1d\xca\x6b\xfb\x7c\x9f\x95\xb8\x51\xf2\x33\x2a\xfd\x81\x7c\x5d\x05\x78\x81\xd0\x0d\xb3\x7b\x6b\x32\x4c\x53\x19\x69\x86\xec\x13\x4c\x97\xb0\x9b\xb6\x27\xda\xf0\x8d\xb6\x8c\x1a\xf8\x77\x6c\xd9\xa9\xe9\x3f\xb0\xe5\xec\xff\xd3\x66\xaa\x54\x61\x5c\x97\x82\x38\x9e\xf2\x9b\x85\xf5\x02\x95\xad\xa9\x7f\x4b\x4f\x29\x4c\x6d\x7c\xed\x58\x2c\xc1\xa2\x4b\x30\xa4\xff\xb7\x80\xe4\xad\x09\xfc\xcf\xd2\x09\x31\xb7\x79\xf1\x9c\x8f\xbf\xd1\xc7\xcd\xf8\xfb\x6a\xb8\x3b\x5e\xfd\x15\x00\x00\xff\xff\x3f\x04\x5d\xdd\x1f\x0a\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 2591, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRequestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x4f\x6f\xd4\x30\x10\xc5\xef\xfd\x14\x4f\x56\x0e\xbb\x2b\xea\x70\x5e\x89\x03\xa2\xfc\xa9\x04\xb4\xa2\xe5\x84\x90\xea\x4d\x26\x89\x69\x62\xbb\xf6\x84\x76\x15\xf2\xdd\x91\x93\xdd\x4d\xd8\x16\xa9\x88\x43\xa4\x78\x34\xf3\x3c\xbf\x37\xe3\xae\x43\x4e\x85\x36\x04\x51\x31\xbb\xd4\xd3\x5d\x4b\x81\x05\x4e\xfb\xfe\x04\x00\xba\x2e\x5d\xa1\xb4\xbc\x75\xb4\x06\x19\x2e\xad\xd4\x36\x25\xc3\xf1\xcb\xd2\x92\x8c\x7c\xef\x95\xab\xb0\x4a\x0f\x15\xa7\xb8\xd7\x5c\x81\x1e\x98\x4c\x8e\x04\xe2\x52\x65\xb7\xaa\x24\x31\x5e\x32\x89\x8f\xe9\x60\x6a\x5c\xad\x38\xf6\x40\x2a\x27\x2f\x20\x71\x10\x43\xd4\x98\x4e\xf3\xdc\xda\x91\x4f\x87\xb6\x75\xe3\xac\x67\x81\x24\x66\xee\x53\xbd\x32\x25\x21\x31\x58\xbf\x42\x22\x3f\xdb\x9c\x02\xfe\x7e\xf1\x24\x76\xf0\x60\x0f\x60\x20\x5e\x67\xac\xad\x11\x10\x99\x27\xc5\x24\xfe\x5f\xa8\x75\xf9\x5c\x28\xba\xb6\x23\x9d\x98\x4f\xe6\xe3\x79\x4a\xf8\xf9\x43\xba\xde\x3a\x9a\x66\x94\xa6\xb8\x54\xdb\xda\xaa\x1c\xb6\x80\x8a\x08\x1b\x15\x08\x89\x7c\x63\x4d\xa1\x4b\xb9\x9b\x18\xfa\x5e\x76\x5d\x74\x4f\x35\xf1\x80\xe1\x70\x95\x59\x47\x72\x24\x89\xc1\x5d\x3b\x72\x90\x8e\x4d\x60\x5e\xf3\xb8\xe4\x17\x9c\x0a\x99\xaa\xd1\xf7\x5f\xc6\x52\x04\xf6\x6d\xc6\xe8\x66\xa6\xa6\x2b\x5c\x5f\x9c\x5d\xac\xf1\x41\xfd\xd4\xa6\x84\xaa\x6b\x38\xab\x0d\x93\x0f\xa8\xc8\x13\x02\x51\x13\x60\x2c\xc3\xeb\xb2\x62\x89\x4f\x6a\xbb\x21\x70\xa5\x03\x32\x65\xb0\x21\xe4\xd6\x10\xb4\x81\x32\x96\x2b\xf2\xb8\x57\x5b\x48\x29\x27\x27\xf6\xde\xef\x96\xa5\x18\x97\xe5\x9d\xa6\x3a\xff\x63\x5b\xf6\x79\xba\x80\xf5\x58\x18\x3a\x86\xda\x0f\x74\x89\x45\xec\x28\x29\xe4\x79\xd3\xb4\xac\x36\x35\x2d\x8f\x85\x76\x5b\x93\x14\xf2\x6a\xe0\x1e\xae\x8b\x4e\xae\xc6\xe8\x30\xac\xbe\xc7\xcd\x8f\x60\xcd\x5a\x74\x1d\xb4\xc9\xe9\x01\x8b\xe0\x6a\xcd\x58\xb0\x2a\x3f\x5a\x7b\xdb\xba\x49\xe2\x5a\x95\x10\x31\x5d\x2c\x21\x5e\x88\x25\x5e\xa2\xef\xc5\xcd\xa3\xfe\x67\xaf\x69\x1e\x3a\x7d\xda\x0e\x1a\xed\x78\x9b\x97\xf4\x84\x1b\x48\xe8\x08\x20\x76\x5a\xc4\xf0\x57\xa3\xef\xda\xc8\x10\x89\xa8\x0e\xf1\xf7\xdb\xf7\xc3\x66\x8f\xb5\x11\x53\x9e\x9f\xfd\x0b\x2e\x3d\x13\xf7\x08\x75\xfe\xa8\x7e\x07\x00\x00\xff\xff\xf1\x8b\x38\x6b\xf3\x04\x00\x00")

func templateHttpRequestTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRequestTmpl,
		"template/http/request.tmpl",
	)
}

func templateHttpRequestTmpl() (*asset, error) {
	bytes, err := templateHttpRequestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/request.tmpl", size: 1267, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpResponseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x5d\x6f\xdb\x36\x14\x7d\xcf\xaf\xb8\x23\x8c\x41\x0c\x64\xaa\x8f\x83\x07\xbf\x34\x68\xd6\x02\x9d\x51\x34\x6e\xf7\x50\x14\x08\x23\x5d\xc9\x5c\x64\x52\x25\x29\xbb\x99\xa0\xff\x3e\x90\xfa\x8e\x65\x67\x7b\x88\x81\x00\xf1\xe5\xe1\xb9\x5f\xe7\x5e\xba\xaa\x20\xc1\x54\x48\x04\xb2\xb3\xb6\x88\x34\x9a\x42\x49\x83\x04\x96\x75\x7d\x05\x00\x50\x55\xd1\x35\x64\xca\x3e\x15\xb8\x02\x94\x36\x53\x4c\xa8\x08\xa5\x75\x7f\x71\x94\xa1\x64\x7f\x68\x5e\xec\xe0\x3a\xea\x6f\x2c\xe1\x28\xec\x0e\xf0\xa7\x45\x99\xc0\x02\xc8\x27\x1e\x3f\xf2\x0c\x49\xe3\x65\x20\x6f\xe0\x60\x71\x5f\xe4\xdc\xba\x20\x90\x27\xa8\x09\x30\xe8\xc9\xc0\x71\x0c\xdf\xc6\xd8\xbc\x40\x1d\xf9\xb8\xc5\xbe\x50\xda\x12\x58\x38\xa4\x87\x46\x11\xbc\xe5\x46\xc4\xf0\x7e\xbb\xfd\x04\xef\xb4\x56\x1a\x3e\xb7\xd9\x79\x80\xcb\xc8\xd9\x3b\x23\x18\xab\xcb\xd8\x42\xd5\x47\x76\xa3\x12\x04\x00\x21\x6d\x67\x81\xfb\xbf\x8d\x92\x2b\x12\xab\x04\xc9\x3d\x8c\x3f\x51\x04\x2e\x12\xd0\x03\x1d\xb7\xa5\x01\x07\xed\x19\xef\x1a\x9b\xb1\x5a\xc8\x6c\xc2\xd8\xa0\x27\x9c\x51\x04\xa5\x41\xbd\xcc\xf1\x80\x79\x47\xb7\x47\x63\x78\x36\x30\xfa\xc4\x8c\x8b\x11\x75\xca\x63\xac\xea\x8e\x11\xfd\x49\xa8\xf6\xc2\x95\xcc\x3e\x91\x7b\xc7\xc8\x8b\x22\x17\x31\xb7\x42\xc9\x96\xd8\xe3\x3c\x5f\x5b\xb9\xb4\x94\x31\x04\x93\xda\x50\xf8\x93\x6b\xb3\xe3\xf9\x56\xb9\x72\x76\xe6\xbf\xb4\xb0\xa8\x83\xa3\xcf\x9c\x4d\xad\x14\x02\x21\x6d\xd8\xd0\xd3\x51\x55\x13\x6f\x83\xd5\x1a\x90\x9b\x27\x17\x2b\x6b\xc9\x03\xa4\x3d\x4a\xa4\x1e\xf5\xcb\x1a\xa4\xc8\x47\xb7\xdd\x47\xa3\x2d\xb5\x84\x37\x9e\xa8\x3f\x19\x14\x75\x64\xef\xbd\x8c\x02\xca\xee\xd0\x06\xe4\x46\x49\x8b\xd2\x2e\xb7\x4f\x05\x92\x10\xc8\xa8\x06\x91\xf3\xff\x3b\xc4\x3b\xae\x0d\xda\x75\x69\xd3\xe5\x6f\x84\xbe\xc8\xf4\x11\x65\x66\x77\x24\x74\x9d\x8c\x95\x3c\xb0\x0f\x56\xf1\x20\x47\x19\x24\x94\x8e\xaf\xfb\x5a\xb4\x1c\xc8\x9c\xa0\x86\xd3\x36\x8d\x16\x14\x24\x74\xdc\x84\xaa\x02\xcd\x65\x86\x10\xe4\xc2\x58\x20\x6f\x79\xf2\x19\x7f\x94\x68\x2c\x01\x72\xab\xf4\x83\x48\x12\x94\x04\xc8\x07\xd7\x79\xc9\xf3\x3b\xd4\x07\xd4\x5e\x0e\x04\xc8\x46\xd9\x5b\x55\xca\x84\x00\xf9\x22\x79\x69\x77\x4a\x8b\x7f\x30\x21\x14\x46\x93\xe7\x1b\x5d\x55\x7e\xd8\xe6\x9b\x18\xc2\xde\x64\x63\x71\x9d\xed\xea\x28\xa1\x91\x6e\xa6\xe7\xdd\x4c\xad\x1a\x57\xcd\x30\xb4\xfe\xc3\x13\x64\x73\x3c\xc1\x6e\xf1\xa7\x0d\x4e\xef\xd2\xd3\xcb\xcd\x58\xac\x5c\xf8\xd3\xc3\x9a\x5d\x54\x32\x7d\x26\xa7\x61\xfd\xf4\xab\xad\x69\xcb\x42\x86\xb0\x38\x38\x15\x77\x03\xff\x55\xe0\xd1\x34\x0b\xa8\xe3\xf0\x2b\x26\x98\xf8\xaf\x2a\x58\x48\xa8\xeb\xd3\x6d\x33\x20\x7a\x1f\xa9\xe3\x5f\x1c\xd8\xad\xc0\x3c\x31\x63\xe6\xe7\x94\x29\xbb\xf3\x7c\x1e\xe9\xe8\xab\xca\x8d\xd0\x22\x65\x1b\x91\xe7\xfc\x21\xc7\xaf\x3c\x2f\x11\xea\xfa\xba\x4f\xa9\xb9\xe7\x86\xe2\x3c\x73\xbb\xc9\x2d\xcf\x3e\x2a\xf5\x58\x16\x83\xa7\x2d\xcf\x80\xb8\xe9\x21\xce\x5d\xbb\x73\xda\x86\x90\xde\xc7\xfd\x6c\x7a\xa3\x8d\x7e\x26\x73\x6c\x33\x7f\x97\x64\x78\x31\x71\x3c\x93\x38\xb2\x2f\x52\xfc\x98\xc9\x18\x99\x6b\xd4\x86\xef\xb1\x31\x88\x14\xa4\xb2\x93\x0b\x66\xfa\xe8\xfc\x97\xaa\xe0\xeb\x54\xa5\x9e\xd5\x8e\x81\x6f\xdf\xaf\xbb\x2f\x3d\x82\x5e\x5d\x8d\xd9\x16\xc5\x63\xe6\x8a\xf8\xc0\x0d\xc2\x82\xdd\x28\x99\x8a\x8c\xb5\x0f\xf1\xc9\x16\xd8\xe0\xb1\x23\x0c\x10\x3c\xb9\xbb\x5f\xd7\xcc\xfd\x7b\x60\x1b\x95\x20\x6b\x8b\x46\xa1\x77\x3e\xbf\x00\x7e\xed\x8e\x5f\x49\xdc\x2b\x40\x36\x67\x3f\x5d\x03\xaf\x2c\xb6\x55\x57\xb7\xff\x25\xaa\x00\x1b\x4f\x6c\x8e\x72\x66\x97\xbd\xa8\x8d\xfa\xea\x6c\x33\x4d\x80\xbd\x5a\x2e\x34\x74\x50\xd6\xb4\x65\x22\x05\xf7\xa8\xa1\xa1\xb0\x5e\xc3\x9b\x99\x6d\xd5\xb6\x5c\x8a\xfc\x82\x70\xfd\x6b\xbf\xe7\x8f\x18\xf4\x8e\xc2\x8e\x98\x4e\x90\xa9\xd2\x20\x42\xf0\x1d\x69\xba\x83\xcf\x63\xf2\x84\xdf\xc4\x77\x58\x4f\x55\x4b\x2f\x05\xd0\x44\xf9\xfc\xc7\xc2\xa8\xb2\xc3\xc8\xff\x1b\x00\x00\xff\xff\x36\x83\x5b\xc1\x13\x0b\x00\x00")

func templateHttpResponseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpResponseTmpl,
		"template/http/response.tmpl",
	)
}

func templateHttpResponseTmpl() (*asset, error) {
	bytes, err := templateHttpResponseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/response.tmpl", size: 2835, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x4d\x6f\xdb\x38\x10\xbd\xe7\x57\xcc\x12\x5e\x40\x0a\x6c\xfa\x5e\xa0\x58\x14\x4d\x36\x35\xd0\xaf\x6d\xd2\xed\xa5\x17\x5a\x1c\x49\xdc\xd0\xa4\x42\x8e\xe2\x7a\x55\xff\xf7\xc5\x48\x8a\x6a\xd9\x72\xd0\xde\x57\x80\x01\x4b\x1a\xce\xbc\x79\xf3\xf8\xc4\xa6\x59\x5e\x42\xe1\x69\x57\xe1\x0b\x40\x47\x85\x97\xc6\x2f\xd1\x11\xff\xb2\x65\x81\x4e\xde\x04\x55\x95\x70\xb9\xdc\xef\x2f\x2e\x9a\x06\x34\xe6\xc6\x21\x88\x92\xa8\x5a\xd6\x95\x56\x84\x02\xf6\xfb\x0b\x00\x80\xa6\x59\xc0\xd6\x50\x09\xf8\x8d\xd0\x69\x98\x81\xf8\xa8\xb2\x7b\x55\xa0\xe8\x16\x08\x58\xf4\xa1\x5d\x38\x10\x6e\x2a\xab\x88\xf3\xa1\xd2\x18\x04\xc8\x1f\xc9\x80\x73\xfc\xb8\x3b\x8c\xb5\x15\x86\x65\x0b\xc1\x6c\x2a\x1f\x48\xc0\x8c\x23\x9f\x42\x67\xd5\x7d\x01\x2f\x5e\xc2\x5a\x45\x84\x99\x7c\xed\x5d\x6e\x0a\xd9\x63\x39\x48\x19\x94\x2b\x10\x66\x8e\x63\x67\xf2\xbd\xd7\x18\xe1\x00\xe0\x72\x09\x9f\xdb\x0e\xa1\x6b\x34\x82\x82\xc2\x3c\xa2\x1b\x6a\xec\xf7\x92\xff\x3a\xf9\x5e\x6d\x38\x31\x28\xa7\x21\xaa\x47\x8c\x40\x25\x42\x56\x72\x81\x08\xe4\xdb\x5b\xad\x48\x31\x24\x39\x54\xc8\x6b\x97\x41\x52\xc2\x28\xc9\x1b\xe5\xb4\xc5\x90\xf6\xc5\x93\x2d\x70\xa7\xf2\x13\xc6\xca\xbb\x88\x5f\x82\x21\x0c\x73\x08\x70\xd9\x3f\x7f\xa8\x31\x52\x0a\xcd\x90\x96\x2f\xcb\x4d\x95\xd2\xfa\x42\x7e\x31\x54\x26\xff\xaa\x4a\xde\x52\x30\xae\x48\xc4\x06\xa9\xf4\x5a\xcc\x41\x74\x25\x44\x9a\x8e\xd6\xf2\x20\xcf\xd0\xad\x17\x79\xf0\x9b\x45\x1d\xac\x60\xe2\x0e\xe7\xd9\x53\x76\x83\xd4\x76\x5b\xf9\x48\x6d\xcb\x72\x14\xf1\xa8\x02\xe8\x71\xc3\x1d\x88\xbe\x8f\x8b\x9f\x44\xa2\x31\xf3\x1a\x17\xca\xe9\xc5\xa3\xb2\x86\x33\x2c\x42\x97\x62\x40\x76\x0c\xed\x56\x3d\xe2\x30\x89\x31\xac\x75\x47\x57\x66\x0d\x3a\x1a\x0f\x55\x76\xf8\x3e\x38\x5c\x5d\x25\x4d\x03\x26\xe7\x97\xab\x2b\xf9\x46\xc5\x1b\x7f\xb7\xab\x38\xa8\x5b\xb1\xba\x92\xfd\x7d\x62\x74\xca\x12\xb6\x91\xef\x8c\x1e\xe4\x7c\xcc\xf4\x93\x08\xf3\x56\x84\x4e\xfe\x69\xd0\xea\x78\x42\x6c\x1f\x6c\x72\x70\x9e\x60\x96\xcb\xd5\x66\x53\x93\x5a\x5b\x9c\x0c\xe5\xcb\xe4\xa0\xdb\x4e\x72\x1e\x7c\x9d\x51\x9b\x9a\x55\xfa\xdb\x4b\x70\xc6\x1e\x09\x66\xc4\x86\xbc\x45\x9a\x5a\x9a\x5c\x4e\xa7\x4c\xa1\xb5\x12\xf2\xda\xc3\x02\xb6\xa5\x22\x50\x6b\x5f\x13\x44\x6b\x32\x84\xbc\x6b\x8a\xf8\x79\xc9\x43\xc8\xea\x48\x7e\x03\x1b\x15\x62\xa9\xac\xc5\x10\xff\xe8\x3c\x66\x0a\xcd\x24\x13\xcc\xe6\x71\xe7\xe7\x1f\xf7\x24\x63\x4f\xf2\xb5\xe6\x6d\x39\x45\xdc\x40\x1a\xfe\x12\x69\xbd\x2c\x50\x7e\x76\xe6\xa1\x3e\x3f\x93\x8e\xdc\x2e\xff\xbb\x9a\x14\x19\xef\x6e\x91\x0e\x98\x3d\xae\x9b\x9e\xab\xd7\x4a\xeb\x57\xea\xbc\xb6\xa8\x02\x57\x4a\x8f\x5e\xbc\xd2\xed\x68\xa7\xeb\x4b\x29\xcf\x41\x58\x1c\x3a\xf4\xe1\xf5\x53\x53\xe1\xfd\x48\x3e\x20\x18\x37\xe1\x8c\x7c\xe1\x1c\x30\x84\xd6\xc8\x25\x6f\xdd\x24\xb0\x95\x13\x7e\xa3\x24\x4d\x4f\x7c\xe2\x04\xc5\xb4\x6f\x60\x08\x3e\x2c\x4a\xf6\x58\xe3\x0a\x01\xda\x64\x74\xb2\x54\x5c\x73\x54\x14\x90\x58\x13\x09\x84\xf3\xb4\xc8\x7d\xed\xb4\xe8\xfe\x47\xe3\x8a\xda\xaa\x20\x4e\xa9\x11\x6f\x7d\x31\x2c\x4c\xaa\x60\x1c\xe5\x20\xd8\x7d\x57\x8e\x92\xaf\xe2\xf7\xf8\x55\xcc\xc1\xe8\x54\xf4\x86\xc1\x2e\x93\x4e\xe4\xb9\xc2\x5c\xd5\x96\x44\x9f\x04\x44\xe6\x6b\xab\xdb\xed\xdf\x7d\x8e\x40\x0c\x26\xf5\x1d\xee\x71\xad\xd6\xe3\x2c\x53\x0e\xf8\x09\xad\x57\x9a\x3f\xf5\x61\x37\x26\xfb\xe1\x19\x03\xfc\xab\xc6\xb0\x4b\x52\xf9\xa5\xc4\x80\xc9\xc1\xbb\xef\x60\xfd\x16\x59\x54\x72\x75\x95\xa0\x1c\x5c\xf0\x48\xc3\xa7\xd3\xea\x0f\x0a\xbc\x0f\xef\xfc\x5b\xc6\x34\x73\x20\xb2\x80\x87\x07\x8a\x23\xf0\xd7\xaa\xc0\x00\x5d\x03\xed\x06\x6e\xfd\x44\x05\x04\x36\x7e\x13\x50\x83\x77\x4f\xe4\xf8\x0a\x43\xab\x6e\x79\x92\xea\xa1\x69\x40\x5e\x3b\x6a\xdb\x3a\xae\x75\x46\xd6\xbd\x16\x5f\xc2\x83\xfc\xe0\xec\xee\x7f\x29\xf6\x52\x0c\xa8\xf4\x84\x10\x41\x80\xca\x09\x43\x3f\x0d\xf1\xbc\x30\xad\x5c\xb9\xdc\x27\x62\xa4\xac\x36\x11\x1b\x6f\x40\xa7\x31\x20\x9f\x57\x9e\xb0\x8b\x41\x68\xbd\x44\xc5\x1c\x9e\x53\xdf\x68\x92\x2a\xee\xfe\x89\xde\xc9\x77\xdd\xc7\xe7\xce\xbf\xb9\xbb\xfb\x38\x3e\x5d\x25\xef\x71\xdb\x34\x90\x84\xfe\xe9\xdf\x06\xb7\x2c\xd0\x64\xe6\xe4\x2b\xe7\x7c\xe7\x9b\x51\x5e\xdb\xfb\xfe\x74\x70\x13\x7c\x5d\x45\xf8\x0e\xb1\x3d\x63\xdd\xf2\x67\x2f\x4d\x25\x2f\xec\x21\x26\x98\xce\x61\xfb\x03\xcb\xf1\x31\x77\xf8\xf7\x5f\x00\x00\x00\xff\xff\xea\xe9\x9a\x38\x95\x0b\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 2965, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/import.tmpl":    templateHttpImportTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/request.tmpl":   templateHttpRequestTmpl,
	"template/http/response.tmpl":  templateHttpResponseTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"import.tmpl":    &bintree{templateHttpImportTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"request.tmpl":   &bintree{templateHttpRequestTmpl, map[string]*bintree{}},
			"response.tmpl":  &bintree{templateHttpResponseTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
