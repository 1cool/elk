// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/response.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x09\x1f\xa4\xc0\xa6\xb6\xd7\x00\x7b\x58\x6c\xd2\x8d\x81\xcd\x47\x63\x77\x73\x28\x0a\x2c\x6d\x8e\x24\x36\x34\xa9\x90\x23\x3b\xae\xeb\xff\x5e\x50\x92\x3f\x24\x3b\x46\xda\x6e\x80\x20\x0a\x31\x9c\xe1\x7b\xf3\xe6\x91\xeb\x75\x72\x01\x99\xa5\x55\x81\x97\x80\x86\x32\xcb\x95\x4d\xd0\x50\xf8\x9d\x25\x19\x1a\xfe\xc5\x89\x22\x87\x8b\x64\xb3\xe9\xf5\xd6\x6b\x90\x98\x2a\x83\xc0\x72\xa2\x22\x99\x39\x14\x84\x0c\x36\x9b\x1e\x00\xc0\x7a\x3d\x84\xa5\xa2\x1c\xf0\x95\xd0\x48\xe8\x03\x7b\x10\xb3\x67\x91\x21\xab\x37\x30\x18\x36\xa1\x75\x38\x10\xce\x0b\x2d\x28\xe4\x43\x21\xd1\x31\xe0\xfb\x64\x10\x72\x34\xff\xa9\x79\x61\x1d\x01\xcb\x14\xe5\xe5\x94\xcf\xec\x3c\xc9\xec\xb0\xd0\x62\x95\x39\x5b\x1a\x99\x2c\x84\x56\x52\x90\x75\xc9\xe2\xe7\x0f\x0c\x2a\x60\x93\x5c\x79\x50\x1e\x0c\xa2\x44\x09\xa9\x75\xe0\xa9\x2c\x94\x84\xf1\xe8\x1b\xb8\x52\x63\x83\xab\xa9\xd7\x2f\x9e\x33\xb8\xfc\x08\x53\xe1\x11\xfa\xfc\xb3\x35\xa9\xca\x78\x03\xe1\xe0\x5c\x4e\x98\x0c\xa1\x6f\x42\x6c\x9f\xdf\x59\x89\x1e\x0e\x70\x25\x09\x3c\x88\x95\xb6\x42\x82\x4d\x41\xec\x32\x6f\x36\x3c\x7c\x1a\x7e\x27\xe6\x21\x1d\xd4\xf4\x81\xc3\x97\x12\x3d\xf1\x5d\x82\xd0\x0e\x68\x85\x7e\xae\x22\x1f\xeb\x40\xf0\xe4\xca\x19\xc1\x7a\xb7\xa1\x3e\x57\x40\x7c\x7f\x75\x7f\x09\x37\x62\xa1\x4c\x06\x42\x6b\x28\xac\x32\x84\xce\x43\x8e\x0e\xc1\x23\xce\x3d\x18\x4b\xe0\x54\x96\x13\x87\x5b\xb1\x9a\x22\x50\xe0\x69\x26\x0c\x4c\x11\xa4\x35\x08\xca\x80\x30\x96\x72\x74\xb0\x14\x2b\xe0\x9c\xd7\x44\xb5\xeb\x6d\x79\x48\x2b\x1e\x0c\xff\x45\xa1\x96\xbe\xd5\xe2\x83\xe0\x7e\xca\xc7\xd5\xb9\xab\xb0\x00\xff\xa2\x5e\x9d\x04\xb4\x9b\x0d\x7c\xff\xd3\x5b\x73\xc9\xd6\x6b\x50\x46\xe2\x2b\x44\xbe\xd0\x8a\x20\x22\x91\x7d\xb5\xf6\xb9\x2c\xf6\x29\x26\x22\x03\x16\xc2\x59\x0c\x6c\xc0\x62\xf8\x00\x9b\x0d\x3b\x51\xb5\xd1\x63\x23\x0e\x65\xcd\x44\x64\x3e\xe4\xf9\x64\x8c\xa5\x6a\xc5\xf3\x6b\xfd\x0c\x6c\x2f\xe5\x6d\x34\x56\x67\x09\x7a\x64\x3b\x2d\x7e\xef\x52\x10\x96\xbb\x80\xf7\xcc\x60\xc3\xcc\xb5\xcc\xf0\x6d\x62\xb0\x43\x4c\x60\x20\x0d\xcb\xbf\x19\xf5\x52\x06\x6e\x02\x53\xa8\x7d\xf8\xfc\xfd\x8f\xdd\x61\xea\xbd\x81\x3e\x3e\xba\xfa\x37\x34\xe2\x0f\xa2\x11\x7f\x28\x8d\x07\xec\x34\x23\xd9\x0c\x53\x2d\xfe\x66\x5a\x3c\x08\x30\xb8\x7c\x7b\xa8\x84\x91\xe0\xc9\x3a\xf4\xa0\x28\x28\x99\x72\x04\x29\x48\x84\xa9\xde\xcf\x58\x5a\x9a\x19\x44\x79\x7b\xcc\x6e\x84\x91\x1a\x5d\xdc\x94\x8c\x96\x10\x5c\x8b\x3f\xa2\x2f\xac\xf1\xf8\xe4\x14\xa1\x1b\x80\x83\x8b\x66\xbd\x9a\xc7\xb8\x33\x89\x3a\x74\x3d\xe7\xda\x66\xfc\x49\x51\x1e\xfd\x25\x8a\x40\xb8\x32\x59\xc4\xe6\x48\xb9\x95\x6c\x00\xac\x2e\xc1\xe2\xb8\xb5\x37\x49\xe0\x0b\x52\x75\xe6\xc2\x7a\xaa\x0e\xce\x5b\x11\x0b\xe1\x40\x9e\x71\x87\x5e\xaf\xdb\xbb\x43\x93\xd5\x05\xba\xa4\xf2\x6e\x89\x33\x2b\x71\xd8\x98\xcf\x70\x6a\xe5\xaa\xb6\xe7\xa3\xfd\x2a\xad\x1c\xd4\x7f\xdb\xb5\x3f\x78\xdf\x41\xab\x3b\x46\xbe\xaf\xb1\x95\x40\xa7\x4a\xb5\x63\x3b\x39\x5d\xf8\x63\xb1\xc0\x5d\xcf\xda\xd0\xa7\x35\xb1\x33\xad\xd0\x50\xbb\xed\xbc\xe9\x58\xfc\xdf\x3d\x4a\xa5\x20\xf9\x49\xa3\xfa\xe9\x23\x18\xa5\x3b\x5d\xde\x1d\x8a\x8f\x91\x4e\x6d\x8b\x2e\x4e\xa7\x8b\x8f\xd2\x1c\xd9\xc7\xff\x75\x95\x1d\x94\xae\xb5\x9c\x87\xd2\x34\xfb\xd0\x79\x4e\xc6\xd5\xb0\xeb\xfc\xb7\x65\x3d\xff\x63\xa4\x03\xcc\xdd\xba\xc7\x98\xb7\xf5\x1a\x5b\x7b\x77\x9d\x4f\xb2\xe2\xf6\x74\x19\xce\xf9\x99\x4a\x6d\x8f\xd9\xfe\xbc\x8b\x7c\x1c\x00\x3a\x57\xbd\x0d\x78\x10\x68\xe4\xc2\xeb\x80\xf0\x95\xa2\xce\x00\xab\xb4\x8a\x7c\x93\x67\xcd\xaf\x9d\xb3\x2e\x62\x18\xfe\x80\xaf\xaf\xea\x03\x2d\xff\x0d\xcf\x38\x15\xd3\xe0\x97\x03\x08\xd6\x51\xc7\xa3\x73\xf1\x31\x36\x87\x46\xa2\xe3\xa3\x70\xc7\x1b\xa1\xc7\xe8\x16\xe8\xea\x0d\xcb\x01\xb8\x41\x38\xc4\xa9\x5d\x54\x3a\xd3\x7b\x9b\x85\x24\x81\x47\xac\x1e\x30\x68\xc8\xad\xda\x53\xf8\x72\x66\x0a\x7f\x2d\xd1\xad\xa2\x98\x3f\x85\xe7\x46\xd4\x42\xa5\xed\x12\x5d\x88\x19\x5d\x45\xd8\x6c\x1b\x5d\x75\x75\x12\x1f\xdb\x4f\xfd\xa2\x0c\x5a\x9f\xd8\xaf\xe1\x4c\x6d\xf3\x39\x42\x97\x24\x70\x2d\x32\x74\x50\x03\xa8\x86\x84\x72\x41\x20\x5c\xfd\xd6\x52\x0e\x25\x58\xb3\x7d\x7e\xd9\x02\x5d\x25\x2d\x7e\x94\xea\x25\xdc\x5c\xd7\x86\x2a\x58\xdd\x5a\x6f\x68\xaa\x91\xca\x47\x78\xe1\xf7\x46\xaf\xda\x4a\x79\xa7\x37\xbb\x8a\xfc\xa4\x92\xc8\x30\x0f\x97\x92\x32\x59\x78\x1b\x1f\x19\xa6\xe6\x23\x93\xda\x88\x9d\x14\x50\x23\x0f\x94\x8d\x92\x46\x86\xb6\x91\xa3\xab\x6d\xcf\xd8\x00\xce\xb5\xa3\x05\x4d\xf8\x55\x78\x2e\xf0\x5b\xe1\x7c\x2e\xf4\xc4\xde\x4c\x26\x0f\xed\xdb\x31\xba\xc3\xe5\xc9\xcb\xa9\x0e\x8a\x30\x1e\xc0\x32\xee\xb5\x75\xb7\x7f\x01\xec\xbe\xfe\x09\x00\x00\xff\xff\x7d\x5b\x32\x06\x9a\x0c\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 3226, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x6f\xf3\x36\x0c\xbd\xe7\x57\x70\x42\x0e\x76\x90\xc8\xa7\x5d\x3a\xf4\xb4\x74\x6d\x2e\xdd\xb0\x16\xeb\x59\xb1\x68\x5b\xa8\x2c\x79\x34\xdd\xb4\xf3\xf2\xdf\x07\xda\x86\x9b\x34\x29\x76\xf9\x04\x18\xb1\x94\xc7\x47\xbe\x47\x5a\x7d\x9f\xad\xa0\x8c\xfc\xd1\xe0\x0d\x60\xe0\x32\x6a\x17\x33\x0c\x2c\x4f\x9e\x95\x18\xf4\x3d\x99\xa6\x82\x55\x76\x3c\x2e\x16\x7d\x0f\x16\x0b\x17\x10\x54\xc5\xdc\x64\x16\x3d\x32\x2a\x38\x1e\x17\x00\x00\x7d\xbf\x81\x83\xe3\x0a\xf0\x9d\x31\x58\x58\x82\xfa\xc3\xe4\xaf\xa6\x44\x35\x06\x28\xd8\x4c\xd0\x11\x0e\x8c\x75\xe3\x0d\x0b\x1f\x1a\x8b\xa4\x40\x7f\x92\x81\x70\x4c\x3b\x57\x37\x91\x18\x54\xe9\xb8\xea\xf6\x3a\x8f\x75\x56\xc6\x4d\x5e\xb9\x4c\x9e\xb7\x9f\x15\x0c\x52\x9e\x2b\xd7\x82\x6b\x21\x20\x5a\xb4\x50\x44\x82\x96\xbb\xc6\x59\x78\xda\xfd\x05\xd4\x79\x9c\x94\x4c\x19\x96\xcd\x6b\x09\x37\xb7\xb0\x37\x2d\xc2\x52\xff\x1a\x43\xe1\x4a\x3d\x15\x7d\x52\x09\x99\x50\x22\x2c\x83\x60\x97\xfa\x31\x5a\x6c\xe1\x44\x49\x96\xc1\x76\xb0\x02\x08\xeb\xf8\x86\x2d\x98\x99\xfd\x78\xd4\xf2\x1a\xf4\xa3\xa9\x85\x12\x0a\x8a\x35\x70\x85\x60\x0d\x1b\x49\xac\x67\x9e\xa2\x0b\x39\x24\x15\x9c\x05\x3c\x98\x60\x3d\x52\x3a\xa5\x48\x0e\x20\x56\xea\x3f\xb1\x6d\x62\x68\xf1\x85\x1c\x23\xad\x81\x60\x35\x9d\xff\xdd\x61\xcb\x29\xf4\x33\xad\x2c\x2f\xa5\x57\xda\xc7\x52\xbf\x38\xae\x92\x7f\x4c\xa3\x9f\x98\x5c\x28\x13\x55\x23\x57\xd1\xaa\x35\xa8\x31\x85\x4a\xd3\xb3\x58\xe9\xeb\x69\xa7\x7c\x83\x94\x0d\x03\xe0\xec\x46\xe4\x6c\x3a\xf2\x4a\xec\x39\x6d\xef\xd0\xb6\x02\x90\x68\x4c\x9d\x7b\x87\x81\xcf\xcd\xd0\x63\xc2\xdf\x03\xee\xb6\x49\xdf\x0b\x7e\x19\xf4\x6e\xab\x1f\x4c\x7b\x1f\x9f\x3f\x1a\x01\x8d\x11\xbb\xad\x9e\xf6\x89\xb3\xa9\x4c\x87\x6f\x65\xe7\xec\x3c\x29\xa9\xbe\x7b\xc7\x3c\x21\xe9\x23\xe3\x3b\x27\x69\xfa\xcb\x90\xff\xa7\x5b\x08\xce\x7f\x71\x44\x56\x7b\x70\x9c\x57\x82\xd1\x89\x7c\x04\x5f\x5d\x93\x95\xcb\x6c\xac\xa4\xf4\xc7\xc8\xbf\xc5\x2e\xd8\x3b\xa2\x48\x37\x17\x40\x59\x75\x3b\xcc\x53\xcb\xe4\x9a\xbb\xc0\x03\x32\x41\xa2\xf4\x2a\xda\xeb\x5d\x28\x62\x52\xb7\xe5\x1a\xa4\x21\xbb\xc0\x89\x9a\xe5\x4e\x1e\xa9\x35\x38\x9b\x8e\x80\x4f\xbe\xeb\x84\x84\xc1\x22\xcd\x85\x26\x87\x35\xd0\x1a\xd4\x89\xe7\xff\xc2\x2b\xee\xcd\x5e\x06\x31\x44\x86\x42\x60\xea\x92\xcc\x62\x61\x3a\xcf\xd7\x45\xfa\xa9\x0e\x85\xf2\x03\xc3\x2d\xe0\x42\x09\xd7\xd3\x0c\xf3\x6e\xf7\xea\xc7\x4a\xdc\x05\x46\x0a\xc6\x3f\x21\xbd\x21\x8d\x41\xa3\xda\xe0\xfc\x65\xe4\xf1\xe2\x84\x90\x3b\x0a\x8b\xef\x41\x53\x73\xbe\x31\x6f\xbc\xfa\xec\xff\xab\x3a\xaf\x65\x6e\xd0\x30\xa2\x81\x93\xc3\xe7\xff\x5f\xef\xbd\xf9\xed\xbf\x00\x00\x00\xff\xff\x6e\x33\x49\x6d\xa6\x05\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1446, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x41\x6f\xe3\x36\x13\xbd\xfb\x57\xbc\x4f\x08\x16\xb2\xe1\x50\x9b\xaf\xe8\xc5\x48\x2e\x4d\x83\x6d\x81\x6d\x10\x64\xb7\xdb\x33\x23\x8d\x29\x22\x32\x29\x90\x94\xb3\x5b\x55\xff\xbd\x20\x45\xcb\x92\x23\xa7\xc8\x41\x10\xa9\x99\x79\x33\x9c\x79\x7c\x76\xdb\x66\x2b\x08\xed\x7e\xd4\xb4\x01\x29\x27\x34\x93\x3a\x23\xe5\xfc\x93\x67\x82\x14\xfb\x64\x78\x5d\x62\x95\x75\xdd\x62\xd1\xb6\x28\x68\x2b\x15\x21\x29\x9d\xab\xb3\x92\xab\xa2\x22\x93\xa0\xeb\x16\x00\xd0\xb6\x97\x78\x91\xae\x04\x7d\x77\xa4\x0a\x5c\x20\x79\xe0\xf9\x33\x17\x94\xf4\x11\x09\x2e\xa3\x6b\xef\x0e\x47\xbb\xba\xe2\xce\x03\x12\x2f\x3c\x14\x3b\x82\xc1\x63\xc4\x9d\xdc\xd5\xda\x38\xa4\x08\x25\x7f\x2d\xa5\x85\xb4\x50\x44\x05\x15\xd8\x6a\x03\xeb\x9a\x5a\x16\xf8\xf2\xfb\x37\x98\xa6\xa2\xbe\xe2\x43\xa6\x44\x48\x57\x36\x4f\x2c\xd7\xbb\x4c\xe8\xcb\xbc\x94\x99\x7f\xf6\x3f\x27\xe7\x5c\xea\x8a\xff\x10\x46\x37\xaa\xc8\xf6\xbc\x92\x05\x77\xda\x64\xfb\xab\x8f\x7d\xc0\x72\x11\x5e\x59\x86\xd8\x02\x94\xdc\xc2\xea\x1d\x21\xd7\x6a\x4f\x4a\x92\xca\x09\x3b\x72\xa5\x2e\x2c\x1a\x4b\x05\xb4\x82\xd2\x05\x5d\xc6\x08\xcb\x02\x84\x6f\xfd\x00\x62\x9d\x69\x72\x87\xb6\x1b\xe0\x7f\x91\x6e\xc7\xed\x33\x9c\xf6\xc0\x5b\x29\x1a\x43\x78\x29\x65\x5e\xc2\xe8\xc6\x91\xf5\x16\x43\x42\x5a\x47\x66\x84\xf8\xd8\x1b\x1b\xa9\xdc\x4f\xff\xef\xd1\xb6\x8d\xca\x91\x1a\x1b\x6d\x4b\x5f\x72\x6a\x86\xdd\x93\xd6\x15\x5a\x18\x72\x8d\x51\x30\xf6\x83\xc1\xff\x6e\xf0\x11\xb1\x96\xb6\xc5\x45\xfd\x2c\xb0\xb9\xc1\x13\xb7\x84\x0b\x76\x1b\xea\x61\x71\xc0\xa3\xa9\x19\xae\x04\xe1\x42\x79\xdf\x0b\x76\xaf\x0b\xb2\x18\xcd\x22\xd7\xca\x3a\xa4\xc3\xfe\x80\xae\xd8\x3d\xdf\x79\x9c\x5b\x43\x9e\x11\xf1\x08\x37\xb8\xc2\xf5\x35\xa4\x76\xfc\x7c\xc8\x23\xf1\xe2\xbc\xf5\xcf\xba\xe0\x8e\xce\xdb\x7f\xa5\x8a\xde\xb2\x7f\x96\xd6\x9d\x5a\xe3\x21\x29\x1c\x52\xb1\xbb\x42\x90\x9d\x90\x7b\x16\xc9\x6f\xa8\xdf\xfc\x83\x9a\xdb\x9c\x57\x38\x89\x89\xb4\x3f\x85\x9a\x1e\x77\x68\xcd\xf5\xb5\x6f\x0c\x2e\x71\x35\x78\x47\x6e\x46\x02\x4d\xe2\x7e\x1b\xc8\xea\xdf\x16\xfe\x4a\x22\x37\x4d\x01\x5d\x93\xe1\x4e\x6a\x65\x3d\x4f\x0f\xc3\xee\x3a\x36\x89\x67\x03\x72\x20\xd9\x2c\xf6\x81\xc3\x93\xea\x23\xc1\x17\x93\x8f\x79\x25\x49\x39\xbf\x5a\x91\x72\xec\x36\x6c\x27\x1e\x95\x16\x71\xb5\xfa\x9b\xd7\xec\xb3\x16\x82\xcc\xc4\x63\xb8\x9b\x58\x0d\x4b\xf6\xad\x5f\x1d\x27\xda\x1d\x13\x87\x5b\x70\x4f\x2f\x73\xb5\xa7\xf9\xb8\x92\x35\xaa\x71\xda\x35\xf6\x73\x39\x96\x58\xcd\xb6\x61\x7a\xfe\x78\xab\x3e\xcc\xb9\xb6\xaf\x28\xd3\x37\x66\x13\x96\xeb\x57\xd6\x4a\x8b\xcd\x61\xc9\xfe\x92\xae\x4c\x7d\x91\x5f\x9c\x91\x4a\xa4\xc9\x41\x92\xd7\x48\xe6\x92\x25\xcb\xe5\x6b\xc4\xe1\x54\x1b\xec\xa7\xd6\x6e\xae\x85\x59\x86\xc7\xa8\x38\x11\xd5\x0e\x12\x64\xe1\x4a\x82\x20\xe5\xe9\x44\xc5\x61\xf0\x81\x55\xc1\x22\xf7\xa4\x90\x97\xb2\x97\x2f\xc3\xa6\x83\x49\xcb\xf9\x76\x2e\xf1\x87\x6e\x94\x4b\x8d\x0f\x65\x81\xfe\x66\x8d\x91\x96\x4d\x9b\x28\xb7\x30\x96\x79\x7d\x9b\x11\x96\x53\xe7\x30\x1f\xf6\xa0\xad\x4b\x93\x2c\x59\xa3\x64\xd1\xef\x4c\x27\xde\x48\xe0\x65\x68\x1e\xfe\x13\x79\xf4\x56\x16\x5d\xc8\x10\x1c\xdf\x8f\xdf\x0b\xd9\x99\x03\x70\x97\x97\xe3\x1c\xd1\xf9\xfd\x59\x7a\x39\x9c\xcf\xd2\xdb\xc6\x69\xa2\xf7\xfb\xd3\x78\x55\x7d\xab\x59\x01\x3d\x38\xbd\x81\xfd\x1e\x25\x3e\x53\xc7\xbc\x26\xcf\x55\x86\x93\x51\x66\xa3\xd0\xae\xef\xc6\x19\xb0\x57\x50\xff\xa9\xf9\xa7\xff\x81\x8e\x3f\xe1\xd6\x19\x59\xdf\x29\x77\x67\x8c\x36\x29\x19\x03\xf2\xab\x65\x30\x28\x31\xaa\x3b\xaa\x4e\xff\xdd\xb2\xaf\x46\xee\x1e\x0c\x6d\xe5\x77\x1f\xc5\xfa\xf8\xe5\x1a\x49\x10\x9b\xa4\x2f\xb2\x5b\x1c\x73\xfe\x1b\x00\x00\xff\xff\x4f\xa3\x81\x4a\x1e\x0a\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 2590, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x95\x51\x6f\xdb\x36\x10\xc7\xdf\xf3\x29\x6e\xc2\xb0\x52\x81\x4d\xad\xd8\x5b\x82\x3e\xb4\x4b\x3b\x08\x08\xb2\x2c\x59\xf7\x4e\x9b\x27\x99\x2b\x45\x2a\x47\x2a\x99\xab\xea\xbb\x0f\xa4\x14\x5b\x56\xdc\xd4\xf0\xb2\x06\x08\x02\x29\x77\xe4\xdd\xef\xff\xbf\x53\xdb\x66\xa7\x50\x5a\xbf\xae\xf1\x0c\xd0\xf8\xd2\x72\x65\x33\x34\x3e\xfc\x2e\xb3\x12\x0d\xff\x73\x5d\x23\x9c\x66\x5d\x77\x72\xd2\xb6\x20\xb1\x50\x06\x21\x59\xa1\xae\x91\xb2\x95\xf7\x75\x26\x71\x69\x25\xce\x09\xef\x1a\x74\x7e\xbe\xb0\x72\x9d\x40\xd7\x9d\x00\x00\xa8\x02\x90\x08\xce\xde\xc0\xdf\xce\x1a\x7e\x85\x0f\x17\x31\x9a\x18\xf1\x77\x56\xae\x53\xde\x3f\xb3\x9f\x64\x7a\x1e\x43\x7f\x78\x03\x46\x69\x68\x63\x7a\xf8\xd1\xfc\x3d\x91\x25\x96\x60\xf8\x03\xf1\x36\x65\xca\x78\x60\x32\x83\xcf\xa2\x1e\x02\x90\x28\x4d\x37\x69\x84\x46\x22\xf1\x77\x42\xde\xf4\x85\xb1\x87\x19\xd0\x0c\x12\x65\xee\x85\x56\x32\xe6\x83\xf3\xa4\x4c\x99\x8c\xd3\x7c\x43\x26\x3e\x76\xa1\x61\x34\x12\x9e\xe9\x3d\x1e\x25\xfc\xb4\xfb\xf9\xd0\x7e\x96\xc1\x5f\x43\x04\xf8\x15\x82\x14\x5e\xf0\x09\x98\x15\x1f\x0e\xb1\xc4\x6f\x3d\x35\x4b\xcf\xbe\xca\xa2\xcf\x9a\x81\xfd\x14\x32\x91\x88\xb3\xd3\x6d\x76\xde\x77\x36\xdc\xa8\xac\x89\x5c\xd2\xf3\x10\xbe\x3d\x63\x0f\xd3\xe1\x88\x40\x75\xe8\x23\x56\xfa\x0c\xdd\x11\xe1\xdc\x78\x24\x23\xf4\x2d\xd2\x3d\x52\x1f\xdc\xa3\x36\x4a\x4f\x33\x36\x70\x7b\xc0\xdb\x7a\x72\x53\x58\x96\xdc\x6f\x4a\x87\x42\x28\x8d\xf2\x08\x81\x43\xd4\xb1\x72\x2a\x39\x2f\xc8\x56\xf3\x86\xf4\xc6\xc2\x59\x06\xf9\x05\x28\x07\x1f\x6f\x2e\xa1\x16\x24\x2a\xf4\x48\xbd\x8a\x6d\x3b\x0f\x9a\xfc\xc8\xf3\x0b\x9e\xbb\xdc\xf8\xc7\xa4\x28\x96\x9c\x3d\x6a\xec\x3c\x2d\xad\xb9\xe7\x6f\xbd\x55\x6c\xb9\x52\xfc\xe3\xcd\xe5\x75\x38\x8a\x45\x47\xca\x64\xd4\xd7\xe0\x8c\x27\xda\xef\xd1\xad\x44\x1f\x45\x53\x12\x42\xd9\xd0\x90\xde\x56\x38\xa0\xbb\x8d\x0e\x67\xe1\x92\x19\xec\xbf\xfa\x20\x99\xf7\x0c\x92\x84\xaa\x71\x1e\x16\x08\xc2\x80\x32\x1e\x4b\x24\x28\x09\x85\x47\x82\xcf\x48\x36\x39\x40\xfe\x20\x8a\x76\xb8\x0b\x2e\x30\xdb\x5b\xeb\x26\xc5\xc8\x38\x64\xdf\x96\x94\x50\x5b\x21\xb3\x08\x6c\xbe\x12\x46\xea\x30\xf0\x93\xfd\xf4\x04\xb6\x7b\x50\x7e\xb9\x1a\xbd\x58\x0a\x87\x61\x43\xf2\xdc\x5d\x59\xff\xc1\x36\x46\x46\x56\x67\x3b\x1d\x56\xae\x1c\xe4\x56\xf5\x7b\xe3\xb7\x48\x27\x2a\x46\xb7\x57\xae\xec\xc9\xe7\xc6\xb3\xa4\x6d\x7b\x1b\x5d\x89\x2a\xc0\x48\x66\x80\xfc\xf1\x5d\xbf\x16\x3e\x28\xd4\xb2\xeb\x0e\x93\x6b\x53\x64\x2f\x56\xe5\xca\x6d\x98\xc4\x42\x34\xda\x9f\x3d\x67\xad\x02\xfd\x72\x15\xbc\x15\x6b\x88\x45\x7d\x81\x4f\xb8\x10\x0b\xe8\xba\xde\x6d\x72\x91\xfc\x7f\xf5\x1f\xb8\x55\xba\x63\x27\xbd\x16\xa5\x32\x71\xd3\x6c\xbc\x50\x8b\x12\x83\x7a\xaf\x1f\x9d\x11\x6d\x48\xc1\x84\xfc\x8f\x06\x69\xcd\x52\xfe\x1b\x7a\x96\x84\xc0\x24\x3d\x07\x19\x7c\x93\x24\x23\x97\x84\xff\xf4\x43\x3f\x99\x79\x79\xe8\x7c\xf7\x7b\xb0\xd7\xa0\x16\xe4\x82\x04\x77\xe1\xf2\xed\x60\xc3\xab\x70\xcd\xab\xc9\x7c\xc7\xa2\x66\x20\x8f\x9d\xe6\xd8\xfd\x0b\xcc\xf3\x30\x57\x1e\x2b\x77\x8d\x74\x3d\x30\xfd\xe5\xe7\x6f\x41\x1d\x67\xec\x87\x3b\x8e\xf8\x0e\x90\xc7\xd7\x4d\x61\xef\x14\xfb\x1f\xa0\xef\x60\x7a\x31\xf8\xe8\x36\x1f\x9e\x3b\x7e\xa9\x2a\xe5\xd9\xf8\xa2\x94\xff\x5e\x14\x0e\x3d\x63\x51\xf3\x39\xbc\x4e\xe1\x14\x76\x23\xde\x6a\xcd\x88\xff\x6a\x8d\xc7\x7f\x3c\x1b\xda\xf9\x1a\xd4\xc3\x57\xc7\x17\xa8\x75\x43\x42\x3f\x59\x21\xcf\x7c\xe0\x0f\xdc\x04\xfb\xe7\xff\xdf\x00\x00\x00\xff\xff\x69\xed\x2c\x6f\xe1\x0a\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 2785, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x53\x51\x6f\xe2\x3c\x10\x7c\xef\xaf\x18\x59\x3c\x04\x04\xce\x7b\xa5\xef\xe9\x53\xf5\xb5\x52\xbf\xaa\xd7\x43\xea\xf3\x82\x97\xc4\xd7\xb0\x0e\x9b\x4d\x39\x2e\xe5\xbf\x9f\x4c\x29\x85\xd6\x92\x25\xc7\x9a\x9d\xd9\xec\x8c\x87\xa1\x9c\xa0\x4a\xb6\x6b\xf9\x1a\x2c\x56\x25\x1f\x53\xc9\x62\x79\x2f\xcb\x8a\xc5\xff\xa7\xd4\xd6\x98\x94\xfb\xfd\xd5\xd5\x30\x20\xf0\x2a\x0a\xc3\xd5\x66\x6d\xd9\xc4\xce\x1c\xf6\xfb\x2b\x00\x18\x86\x19\xb6\xd1\x6a\xf0\x6f\x63\x09\x18\xc1\x3d\xd2\xf2\x85\x2a\x76\xef\x70\x87\xd9\x11\xfa\x0e\x87\xf1\xba\x6d\xc8\x32\x1b\x53\x60\x75\xf0\x9f\x64\xc8\x1c\x59\xf4\xf8\x39\x6a\x5f\x2a\x5c\xff\x83\x05\x75\x8c\x91\xff\x37\xc9\x2a\x56\xfe\xa8\x70\x56\xa6\x24\x15\x63\x24\x19\x3b\xf2\x0f\x29\x70\x87\x33\xd9\xb2\xc4\x13\x53\xc0\x8a\x6d\x59\x73\x07\xab\xf9\xc4\xbe\xdf\xfb\x7c\x14\xff\x40\xeb\x4c\x89\x18\x58\x2c\xae\x22\x07\x2c\x76\x20\x54\xf1\x95\x05\xbd\x36\xb3\x96\x94\xd6\x6c\xac\x58\x69\x5a\x67\x96\x73\x85\x40\x46\x87\x3e\x49\x02\x94\xad\x57\xe9\x10\x0d\x96\x0e\x7a\xcb\x26\xb2\x98\x3f\x55\xac\x7a\x59\xa2\xa8\x31\xb9\x50\xbf\x25\x09\x0d\xeb\x18\xf7\xb1\xb3\x62\x8b\x3c\x42\xff\xc4\x5d\x9b\xa4\xe3\x67\x8d\xc6\x3a\x85\x62\x72\xbc\xdf\xf4\xdc\xd9\x18\xc3\x89\x35\xaf\x26\x4f\xa1\xf6\x4d\xaa\xfc\x73\xb4\xba\xf8\x43\xad\xff\x69\x1a\xa5\x2a\xdc\x9a\xad\x4e\xc1\x4d\xe1\xb2\x80\x1b\x8f\x2f\x2a\x37\xef\x95\xc7\x56\x2f\x1a\xf3\x3f\x7a\xd6\x5d\x71\x89\xff\x74\x3f\x54\xdc\xcd\xd3\x7d\xa2\x90\x5d\x70\x17\x19\x39\x5f\x65\x89\x1b\xaa\x58\xd1\x64\xe8\xa1\x0c\x56\x93\x81\x94\xa1\xbc\xe9\xa3\x72\x40\x12\x64\x06\xa4\x96\x95\x2c\x26\xf1\xdf\x88\x36\xc3\x00\x7f\x23\x76\x68\xeb\xab\x52\xee\xeb\x98\xa4\xf3\xeb\x57\x52\xb0\x1e\x76\xd2\x6f\x05\xe7\xc1\x6c\x5a\xd6\xf2\x90\xf6\x96\xaa\x28\x87\x1e\x5c\xfe\xb3\xd9\x47\x38\x4f\xc3\xf6\x77\xb2\x4a\x85\x3b\x1b\xd6\x1b\x5e\x78\x41\x0b\xbc\xa1\x6d\x7a\xa5\x26\x87\x4a\x59\x02\x2b\xe7\xc9\x67\x3b\xee\xc4\x0a\x47\xeb\xd4\x8b\xb9\x29\x1a\x96\x82\xbb\xf1\x17\x33\x98\xba\xdd\xaf\x2e\x89\xff\x9f\xb4\xab\xa9\x99\xa7\xdb\xf9\xfc\xf1\x32\x0b\xc5\x03\x6f\x2f\x6c\xca\xae\x7e\x40\x32\xe7\x14\xdb\x4f\xd6\xaf\xaf\xec\x74\xfa\x1b\x00\x00\xff\xff\x5b\x47\x55\x19\x12\x04\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1042, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\x09\x1f\xa4\xc0\xa6\x4e\xbd\x04\xd8\x4b\x37\xe9\xc6\x40\x9b\x6e\x37\x46\x73\xa6\xcd\x91\xc4\x86\x26\xe5\xe1\x28\x5e\xd7\xf5\x7f\x2f\x46\x52\x1c\xcb\x4e\xdb\x4b\x08\x08\x16\xcd\x37\x6f\xe6\xcd\x07\xb5\xdf\x17\xd7\x50\x45\xde\x35\x78\x03\x18\xb8\x8a\xda\xc5\x02\x03\xcb\xb3\x2a\x2a\x0c\xfa\x0b\x99\xa6\x86\xeb\xe2\x70\xb8\xba\xda\xef\xc1\x62\xe9\x02\x82\xaa\x99\x9b\x82\xd0\x58\x05\x87\xc3\x15\x00\xc0\x7e\x3f\x83\xad\xe3\x1a\xf0\x3b\x63\xb0\x30\x01\xf5\xd5\xac\x9e\x4d\x85\xaa\x87\x2b\x98\x0d\xd0\x1e\x0e\x8c\xeb\xc6\x1b\x16\x36\x34\x16\x49\x81\x7e\x23\x03\xe1\x18\x76\x6e\xdd\x44\x62\x50\x95\xe3\xba\x5d\xea\x55\x5c\x17\x55\x9c\xad\x6a\x57\xc8\xf3\xf2\xa3\x82\x4e\xc8\xa2\x76\x09\x5c\x82\x80\x68\xd1\x42\x19\x09\x12\xb7\x8d\xb3\xf0\x38\xff\x03\xa8\xf5\x38\xe8\x18\x3c\x4c\x9a\xe7\x0a\x6e\x3e\xc1\xd2\x24\x84\x89\xfe\x1c\x43\xe9\x2a\x3d\x04\x7d\x12\x09\x99\x50\x21\x4c\x82\x60\x27\xfa\x21\x5a\x4c\x70\xa2\xa4\x28\xe0\x1b\x1a\x0b\x25\xf2\xaa\xc6\x04\x5c\xe3\x91\xfd\x70\xd0\xf2\x1a\xf4\x83\x59\x0b\x25\x38\x8b\x81\x5d\xe9\xd0\xc2\x72\x07\x06\x2a\xf7\x82\x01\x5a\xf2\xb3\xc6\x90\x59\x23\x23\x41\x49\x71\x2d\x2c\xa7\x1e\xac\x61\xd3\xc5\x69\x82\x05\xc2\x60\x91\x12\x38\x06\x8e\x9d\xbf\x95\x77\x18\x58\x1f\x2d\xca\x36\xac\x20\xab\xe1\x7a\xe4\xfd\xde\x04\xeb\x91\xf2\x2e\xde\x6c\x0b\x52\x15\xfd\x0d\x53\x13\x43\xc2\x27\x72\x8c\x34\x05\x82\xeb\xe1\xff\x4d\x8b\x89\x73\xd8\x1f\x59\x65\x79\xc9\x42\xad\x7d\xac\xf4\x93\xe3\x3a\xfb\xcb\x34\xfa\x91\xc9\x85\x2a\x53\x6b\xe4\x3a\x5a\x35\x05\x25\x0e\x54\x9e\x8f\x2c\xa5\x41\x4e\x4b\xee\x1b\xa4\xa2\xeb\x23\x67\x67\xa2\x79\xd6\x92\x57\x92\xe7\xd9\x6b\x91\x4e\x12\xf0\x99\x50\xec\x44\xec\xa6\x45\xda\x89\xf2\x2e\xe3\xc7\x7c\x1f\x65\x8e\x4c\x37\x7d\xbc\x43\x82\x46\x38\xfd\xbb\x10\x65\xb9\x7e\xaa\x91\x30\x3b\x39\xfb\x1b\x7c\xdc\x22\x09\x66\x7e\x2b\x07\xae\x94\xb3\xf9\xad\xbe\x37\xe9\x4b\x5c\xec\x1a\xb1\xef\x0d\xe6\xb7\x7a\xd8\x67\xce\xe6\xd2\xb8\x3e\xc9\xce\xd9\x63\x13\xe7\xf9\xd5\x45\x26\xfa\x51\xb1\x15\xa6\x45\xfc\x25\x1a\x2b\xba\xd5\x68\xa0\xce\x12\x70\x67\x2a\x24\xf0\x02\xed\xcc\x80\x6b\xc3\x60\x08\x81\x70\xd3\x3a\x42\x0b\x31\x80\x30\x40\x6c\x90\x0c\xbb\x18\xf4\x05\xd1\x66\xbf\x07\x7d\x17\xb8\x93\x7e\xee\x49\xe2\x3a\x19\xbb\xd7\x85\x53\x40\x22\xc9\xe3\x46\xff\x16\xfc\x2e\x23\x99\x15\xc6\xef\x9c\x9d\x95\xd8\x95\x1d\xf2\x87\x4f\x10\x9c\x3f\x6b\x1c\x59\x69\xeb\xa4\x62\x97\x07\x2b\x69\x6d\x29\xd0\x3c\x3d\x44\xfe\x39\xb6\xc1\x66\x48\x94\xdf\x5c\x20\x65\xad\x53\x37\xb7\x89\xc9\x35\x77\x81\xef\x88\x22\x75\xf0\x77\xd1\x5e\xcf\x43\x19\xb3\x75\xaa\xa6\x20\xdd\x3a\x0f\x9c\xa9\x63\xed\x86\x5e\x50\x53\x70\x36\xef\x01\x6f\x7c\xef\x13\xf6\xe3\xa7\x8f\x81\x6e\xa7\x40\x53\x09\xea\x12\x3e\xd6\xf5\xe8\x42\xd5\x7a\x43\x1f\x28\xad\x07\x7c\xb8\xb6\x9f\x8c\x1d\xe6\xff\xbf\xd4\x59\x2c\x4d\xeb\xf9\x7d\x25\xaf\xb1\x29\x94\x9f\x7e\x56\x5d\xa8\x60\x34\x66\xcf\xb8\x34\x4b\xb9\x17\xbb\x3b\xcf\x2e\xd5\xc7\xca\x98\x07\x46\x0a\xc6\x3f\x22\xbd\x20\xf5\x46\xbd\x9e\xe0\xfc\xa5\xe5\xe5\xdc\x11\x72\x4b\xe1\xea\xdf\x41\x43\x73\xa9\xf7\x55\xf5\x61\xa0\xfd\x7f\x59\xe3\x60\xd0\xa4\xdd\x9f\x29\x06\xfd\xab\xa1\x54\x1b\xbf\x88\xf7\x8b\xc5\xd7\xf1\x4d\x9d\x3d\xe0\x76\x74\x9d\xc9\x9d\xfb\x0a\xc9\x30\x9f\xc2\xf6\x8d\xf4\xfc\xab\x7a\x7c\xfb\x27\x00\x00\xff\xff\x60\xc0\x0a\x6b\x02\x08\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 2050, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xc1\x6e\xe3\x36\x10\xbd\xe7\x2b\xa6\x42\x0e\x52\x60\xd3\xf7\x00\x7b\xe9\x26\xdb\x35\xb0\x4d\xd3\x8d\x8b\x9c\x19\x73\x24\xb1\xa1\x87\xf2\x70\xb4\x8e\xeb\xd5\xbf\x17\x94\x64\xc7\x8e\x65\xa3\x28\x12\x02\x41\xe2\xf0\xcd\x9b\xe1\x9b\xc7\xa1\x37\x9b\xc9\x15\x14\x5e\xd6\x15\x5e\x03\x92\x14\x5e\x59\x3f\x41\x92\xf8\x33\x9f\x14\x48\xea\x37\xd6\x55\x09\x57\x93\xa6\xb9\xb8\xd8\x6c\xc0\x60\x6e\x09\x21\x29\x45\xaa\x09\xa3\xd3\x62\x3d\x85\x04\x9a\xe6\x02\x00\x60\xb3\x19\xc3\xca\x4a\x09\xf8\x22\x48\x06\x2e\x21\xb9\xd7\xf3\x67\x5d\x60\xd2\xc5\x24\x30\xee\xa1\x1d\x1c\x04\x17\x95\xd3\x12\x29\x51\x1b\xe4\x04\xd4\x2b\x19\x44\x8e\x98\xb9\xff\x78\x59\x3d\x17\x70\xfd\x09\x9e\x74\x40\xb8\x54\x9f\x3d\xe5\xb6\x50\x7d\x86\xbd\x30\xd6\x54\x20\x5c\x52\xc4\x5e\xaa\x3b\x6f\x30\xc0\x61\xda\x1e\x81\x2d\x82\xd4\xad\x29\x0e\x21\x71\x4d\x26\x6d\x4e\x54\x77\x7a\x81\xf0\x13\x2a\x1d\xe6\xda\x41\xd3\x40\x8e\x32\x2f\x31\x80\x94\xb8\x2b\xab\x69\xd4\x1e\xba\x69\x40\x8b\xe8\x79\x89\x06\xc4\x0f\x01\x69\x0b\x7c\x9b\xd3\x1a\x24\xb1\xb9\x45\x03\x4f\x6b\xd0\x50\xd8\x1f\x48\x50\xb3\x1b\x57\x9a\xf5\x02\x05\x19\x72\xf6\x8b\x96\xd4\x68\xd1\xad\x1a\x9a\x0c\x30\x92\x41\x0e\x60\x65\x9b\x73\xee\x2c\x92\xa8\x83\x14\x79\x4d\x73\x48\x4b\x38\x28\xe2\xab\x26\xe3\x90\xb3\x13\x27\x4e\x57\x10\xbb\xa7\xbe\x63\xa8\x3c\x05\x7c\x64\x2b\xc8\x23\x60\xb8\xea\xff\xbf\xac\x31\x48\x06\x9b\x83\x54\x71\xb9\x28\x71\xa9\x9c\x2f\xd4\xa3\x95\x32\xfd\x47\x57\xea\x41\xd8\x52\x91\x26\x0b\x94\xd2\x9b\x64\x04\xc9\x70\xda\x24\xcb\x8e\xf8\xa2\xc5\xf6\x4d\xe3\x2a\xe4\x49\x6b\x47\x6b\xc6\x51\x97\x71\xcd\x2e\x89\xcd\x1f\x6f\x9d\xf3\x46\xe0\xcf\x8c\x31\x36\xea\xb3\xac\x91\xd7\x51\xac\xb6\xa3\xbb\x36\xed\x2a\x79\xc6\x27\xfd\x74\xdc\x4c\x1b\xf6\xd5\x7b\x85\x1d\x65\x5b\x76\x87\xef\xdb\x70\xa0\xb8\xfa\x33\xe6\x4e\x33\xf5\x58\x22\x63\x7a\xc0\xe7\xfc\x0a\x39\x62\xa6\x37\xa9\x35\x59\xd6\x61\x4f\xb4\x66\x58\x22\x9b\x47\xf0\x5f\x64\x97\xf5\x91\xc9\xf6\x71\xdd\x6d\x8d\xf6\x9f\xf9\x6f\x5e\x9b\x18\x35\x5b\x57\x08\x09\xa3\x36\xc9\xa9\xd0\x5e\xca\x5b\x5d\x20\x83\x8b\x71\x2d\x07\x48\xa9\x05\x34\x23\x30\x2e\x6b\xcb\x68\xc0\x13\x44\x26\xf0\x15\x72\x3b\x2d\xd4\x49\xc2\xe5\x66\x03\xea\x96\xa4\x3d\xed\xb9\xa2\xfb\xb1\x30\xb4\x8d\x23\x40\xe6\x28\xfb\x52\xfd\x41\x6e\x9d\x72\x1c\x13\x82\x2f\x92\x0e\x98\x29\x2e\x9b\xb7\x11\xbf\x7c\x02\xb2\x6e\xc0\xc0\xdb\x15\x56\x36\x7a\xe4\x34\x60\x1e\xef\x61\xec\xf3\x34\xdc\x79\xf9\xe2\x6b\x32\x29\x32\x67\xd7\x27\x23\xe2\x5a\x84\x76\xa4\x05\x61\x5b\xdd\x92\xdc\x32\x7b\x6e\xc3\xce\x46\x39\x35\xa5\xdc\xa7\x8b\x50\x8c\x20\xde\xa8\x29\x49\x9a\x74\x1e\x9a\xde\x6c\x2d\x96\x8c\xc0\x9a\xac\x03\xbc\xf2\x9e\x27\xee\x66\x88\xda\x1d\x60\x35\x02\x1e\xb5\xd5\x51\x11\xd4\x8c\xed\xe2\x9e\x31\xb7\x2f\x91\xaa\x27\xcd\x46\x90\x20\xc9\x35\x0c\x5d\xd7\x61\x71\x1e\x2c\x15\xb5\xd3\xfc\x81\xfa\x74\xc0\x0f\x13\xe8\x57\x6d\xfa\xa1\xf7\x6e\x12\x19\xcc\x75\xed\xe4\xbc\x1c\xdb\x83\x25\x18\x7f\x75\x73\xcb\x52\xd1\x8f\xad\x78\x73\x8f\x66\x57\xfb\x58\x98\xa7\xe4\x48\x88\x37\x40\xf5\x8e\xf2\x4c\x49\x90\x49\xbb\x07\xe4\x1f\xc8\x5d\x70\xa7\x13\x59\x77\x9a\xe1\xf4\xb0\x61\x94\x9a\x69\x70\x7b\x38\xa8\xbf\x21\xc9\x19\x61\xba\x5a\xd1\x1c\x2b\x73\xa0\x01\xaa\x3d\x8e\xe9\x4d\x7c\xbd\xea\xb9\x7c\xb1\xe8\xe2\x14\x3a\xa1\x07\xea\xb0\xfe\x3b\x78\x52\xbf\x6b\x0e\xa5\x76\x33\xff\x75\x36\xbb\x3f\x7c\x3f\xd3\x3b\x5c\xbd\x2d\xaf\x69\xbe\x63\xb4\x56\x87\x4b\x31\x1b\xc1\x6a\x78\xc2\xa3\x0b\xff\x73\xb2\x3b\x1b\xe4\x7d\x26\x7b\x64\xfa\x88\xc9\x7e\x72\x7f\xf8\xe5\xaf\x74\x61\xa9\x2d\x21\xd9\x9d\x72\xf0\xf5\x87\xff\x60\x8c\x9f\x50\xb9\x9a\xbb\x2f\x7a\x43\x0e\xd1\x0b\x5f\x93\x24\x23\x70\x48\x29\x86\xec\xdd\x0d\xf0\xcd\x06\x79\x35\x40\x38\xe3\x80\xe3\x67\xf0\xe0\x4b\xee\xde\xfe\xeb\xa7\xdd\x5f\xff\x06\x00\x00\xff\xff\x51\x9e\x8a\x17\xfd\x0b\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 3069, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpResponseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x51\x6f\xa4\x36\x10\x7e\xbf\x5f\x31\x42\x9b\x2a\x89\x12\x50\x5e\x23\xe5\xe1\xd4\xbb\x9e\x4e\x3a\x9d\xaa\x24\xed\xcb\x2a\x52\x1d\x18\x58\x2b\xac\x21\xd8\x9b\xa4\x25\xfc\xf7\xca\x36\xb0\x36\x18\x76\xd9\x25\xea\x43\x1f\x22\x85\xc5\x1e\x3c\xdf\xf7\xcd\x78\x66\xca\x12\x22\x8c\x29\x43\xf0\x56\x42\xe4\x41\x81\x3c\xcf\x18\x47\x0f\x2e\xab\xea\x13\x00\x40\x59\x06\xe7\x90\x64\xe2\xef\x1c\xaf\x01\x99\x48\x32\x9f\x66\x01\x32\x21\xff\xc2\x20\x41\xe6\x7f\x2b\x48\xbe\x82\xf3\xa0\xde\xa1\x77\x5d\xc2\x2b\x15\x2b\xc0\x37\x81\x2c\x82\x05\x78\xbf\x93\xf0\x89\x24\xe8\xe9\x2f\x6d\x3f\xb0\xdd\x02\x02\xd7\x79\x4a\x84\x3c\x0c\x92\x08\x0b\x0f\x7c\xb0\x8c\x82\xb4\x55\x55\x9f\xcc\x9f\x0a\xc2\x12\x84\x05\x83\xeb\x1b\x58\xf8\x3f\xb3\x08\x39\x8c\x9b\x4e\x73\x2c\x82\x8e\xbb\xcd\x39\x19\x78\x9f\x43\x41\x33\xe6\x81\x17\x16\x48\x04\x7a\x33\x59\x2b\x90\x44\x73\xd9\xda\xe4\xd1\x8c\x27\x4b\x29\x17\x1e\x74\xd8\xab\x91\x36\x30\x37\xb5\xe2\xb4\x3d\x41\x32\xf2\xdd\x5d\x98\xe5\xb8\x95\x4d\x10\xc0\x6d\x6d\x0a\xb2\x18\x88\xf4\xe6\x91\x70\x84\x85\xff\x6b\xc6\x62\x9a\xf8\xb5\x82\xa0\xaa\xfc\xb2\x94\x5c\x93\xb5\x7c\x00\xf5\xa0\xac\xf9\xda\x27\xf9\x63\x81\xcf\x1b\xe4\xc2\x57\xb6\xe5\xe7\xc0\xdc\xd3\xdf\xf2\x0e\x39\xe1\x21\x49\xa1\xaa\xda\x63\x94\x25\xd0\x18\xf0\xb9\xbb\xb6\x45\x6c\xf9\xd0\xe2\xc3\x45\xb1\x09\x05\x94\x16\x88\xe3\x6c\x04\x31\xc5\x34\xe2\x1e\x2c\xba\xe0\x6b\x4d\x63\x94\x20\xbf\xcf\x7e\x64\x24\x82\x85\x7f\x2f\x7d\xe8\xf9\xd9\xe1\x7f\xe7\x27\x95\xcd\x5e\x5c\xb5\x74\xcb\xc7\x3a\xbc\xe4\xaf\x0b\xe9\xa8\x0c\xac\x11\x0c\xd4\xe2\x78\xc3\x42\xf8\x89\xaf\x93\x31\x3e\x55\xab\x6e\x31\x44\xfa\x82\x45\xcd\x26\x8d\xeb\x2f\x5b\x08\x9f\xef\x2b\x88\xb3\xda\x06\xcb\x44\x6b\xe7\xbc\x35\x73\x80\x0c\x2c\xa4\x16\x28\x52\x05\xc9\x14\x76\xe4\x46\xc3\x2b\x8b\xb5\x42\x5a\x5b\x93\xa7\x1a\x8b\x29\x47\xbb\x80\x14\x59\x0f\xc2\xb3\x33\xcb\x7e\x9c\x15\x40\xe5\x37\xb4\xaa\xfa\x80\x5b\xab\x6d\x09\x2a\x67\x3b\xe7\x9d\xaa\xb6\x80\xa3\x10\x32\x99\xbf\xd5\xc9\xc7\x97\xb9\x27\x44\xce\xb3\xc2\x83\xd3\xbc\xa0\x4c\xc4\xe0\x9d\xf0\x25\x7d\xf0\xbf\x6a\x7d\x6e\x4f\x78\x06\xde\x0f\x7c\xc1\xd4\x83\x2b\xd7\x41\x3a\xda\xb5\x70\x5d\xd2\x07\xb8\x01\x1d\x98\x7d\x27\x8f\x89\x51\x37\x58\x93\xe3\xf5\x10\x34\x3b\xb1\xbb\x27\x16\xd5\xa0\xff\x83\x07\xda\x0b\x97\x86\xdb\x41\x2b\xcd\x7d\x33\xb8\xc0\xfb\x56\x64\x9b\x5c\x51\xae\xa1\xd2\xcf\xc3\xeb\x87\xa4\x63\x89\xc6\xb9\x7d\x27\x81\x63\x6a\xd7\x2b\x41\x09\xd4\xbf\x53\x9a\xfa\x4d\x42\x00\x55\x75\xed\x7e\xf1\x0e\x69\xf6\xaa\x42\xec\xea\x62\x32\x5f\x9f\x86\x9f\x0a\x14\x9b\x82\x41\x61\xe7\xef\x94\xa3\xeb\x3a\x18\x77\x6c\xce\x10\x36\xb3\x8a\x57\xc7\xf1\x48\xf0\x0e\x38\x5f\x3b\xf7\xcb\xe4\x54\xe8\xcc\x62\x4e\xd8\x8f\x17\xf6\xa8\xa8\xa7\x08\xda\x00\x71\x8b\x5e\x5f\x0c\x6e\xe2\xf6\xc9\xd0\xb3\xe9\x75\x80\xae\x91\x22\x62\xff\xca\x31\xd0\xa5\xf1\x84\xf2\x51\xe5\xd6\xb6\x72\x9c\x50\xf6\xf6\xea\x71\x83\xad\xcf\x8c\x65\x82\xc8\xb7\xdc\xff\x9a\x3e\xdd\x85\x2b\x5c\x13\xff\x16\x49\xa4\xd7\x4c\x2b\x87\xdb\x8b\xe3\x08\xb7\x2e\x61\x21\x48\xa2\x1b\x9b\xef\x5f\x6a\xb2\xee\x49\xa2\x63\x42\xf5\x57\x72\x01\xd7\x2b\xcc\xf3\x2b\x46\xb9\x73\x07\x65\x11\xbe\xd5\xfb\x94\x59\x23\xca\xe4\xd7\x6e\xd4\x05\x63\x96\x4b\x06\xad\x75\x61\x85\x18\xf1\x3b\x2c\x28\x49\xe9\x3f\xea\x8b\xda\x52\x07\x41\x38\xb5\x43\x00\xde\xe5\x65\x4c\x59\x72\x97\xd2\x10\xcf\x9a\xc8\x6e\x3d\x6b\xf4\xd9\x94\x80\xea\x70\x34\x4d\xc9\x63\x8a\x7f\x92\x74\x83\xfd\x3a\xee\xfb\x17\x0d\x5a\xbb\x49\xd5\x7c\xca\x24\x32\x4e\x05\x7d\x91\xef\xfe\x6a\x7c\xd3\xff\xba\x1d\x6b\x03\x2a\xd6\x70\x6a\x08\xbb\x45\x5c\x4b\x48\xfc\x11\x74\xc4\x93\xc8\x18\x27\x24\x3e\x8c\x8e\x78\x80\x8c\x78\x07\x15\xb1\x8b\x88\xf8\x10\x1a\x26\x77\x9e\x4d\x61\xe4\x8c\xb4\x84\x8a\xd5\xe6\xd1\x0f\xb3\x75\xb0\x26\x9c\x23\xa6\xe1\x2a\xc0\xf4\x49\xe5\xbf\xba\x58\xb3\x43\xce\x95\x32\x2d\x75\xa9\xf7\x7f\x30\xfa\xac\x60\x98\xa9\x07\x6c\x32\x94\xb6\xae\xb0\x6c\x73\x93\xbf\x4d\x40\x8e\x0b\x40\xdf\xb5\xb5\x2b\x1f\xd3\x11\x42\xab\x6f\x13\x9c\xfb\x96\x4a\xdf\xa2\x74\x7a\x96\x6c\xeb\x8b\xa3\x92\xe5\x9c\x99\xc9\x0c\x30\x47\x8a\xba\xb6\x87\x0e\xfa\x12\x6f\xfb\xd0\xde\xf2\x8b\xae\xb8\xa7\xa4\x9c\xf9\xe2\xbb\x3b\x2c\xea\x05\xfb\xa8\x5b\xdd\xc5\x17\x43\x72\x69\x1e\x2f\x0f\x88\xe2\x71\x25\x0c\x06\x33\xb6\xc1\xdc\x99\x2a\x35\x8d\x77\x27\x68\x6d\x7a\x47\x4a\x21\x03\x0f\x55\xc9\xca\x5c\x70\xdd\x34\x95\x9d\xd6\xf9\xe3\xa2\x7d\x42\xc4\x1f\x11\xf5\x0e\x2a\xa1\xdf\x3b\xba\xca\xea\xe3\x4a\xea\x3e\x18\xbd\x25\x5d\x70\xfa\x0b\x9c\x6d\xa1\x7f\x62\xd4\xe1\xad\x9e\xfb\x84\xdb\xfd\xa2\xe9\xfb\x56\xd0\x9d\x06\xeb\x40\xe1\xa8\x39\xcf\xf2\xe1\x7f\xa5\x1f\x63\x4a\x35\x90\x30\x1d\x37\xae\x31\xc4\x52\x03\xac\x01\x3c\x8d\x99\xd6\xfe\xb6\x1d\xb8\xef\x8f\xcc\x21\x3d\xa5\x95\xda\x9c\x06\xda\xc6\x7a\x57\x9f\x68\xab\x7b\x49\x4f\x22\x63\x68\xb6\x53\xe8\x36\x86\xee\x31\x49\xd3\xb2\x9f\x92\xa8\xb3\x1e\xae\xfa\x3b\xf6\x6b\xeb\x0f\x88\x96\xa5\x8b\xf2\xed\x40\x6f\x60\x6c\xf9\x71\xf1\x03\xd3\x94\xb2\xe7\x81\xc6\x66\x7a\x43\x3d\xf7\x7f\x31\xea\x18\xc9\xcd\xb0\x4f\x7e\x86\x9d\x2a\x9e\x45\xbf\x73\x70\x76\xd8\xcc\xa4\x2c\xc1\x11\x2f\x56\x99\x64\x9e\x68\x74\x96\x32\x52\x46\xfd\x1b\x00\x00\xff\xff\x87\x7f\x72\x0f\xb1\x1d\x00\x00")

func templateHttpResponseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpResponseTmpl,
		"template/http/response.tmpl",
	)
}

func templateHttpResponseTmpl() (*asset, error) {
	bytes, err := templateHttpResponseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/response.tmpl", size: 7601, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\xb8\x09\x7e\x90\x32\x9b\xea\x1e\xf6\x12\xa0\x18\xba\x26\x6d\x0c\xb4\x49\xd7\xb8\xed\xc3\x30\xa0\xb4\x78\x92\xb8\xd0\xa4\x42\x52\x76\xbd\xcc\xdf\x7d\x38\xd1\xff\x24\xcb\x69\x8a\xad\x13\x60\xc4\x56\x8e\xf7\xe7\x77\x77\x3f\xde\x3d\x3c\xa4\x67\x50\x18\xbf\xaa\xf0\x1c\x50\xfb\xc2\x30\x69\x52\xd4\x9e\x3e\x59\x5a\xa0\x66\xaf\x2d\xaf\x4a\x38\x4b\xd7\xeb\xc1\xe0\xe1\x01\x04\xe6\x52\x23\x44\xa5\xf7\x55\x5a\x57\x82\x7b\x8c\x60\xbd\x1e\x00\x00\x3c\x3c\x8c\x61\x29\x7d\x09\xf8\xc5\xa3\x16\x30\x84\xe8\x1d\xcf\xee\x78\x81\x51\x38\x10\xc1\x78\x23\x1a\xc4\xc1\xe3\xbc\x52\xdc\x93\x3e\xe4\x02\x6d\x04\x6c\xaf\x0c\x48\xc7\xe6\x97\x9c\x57\xc6\x7a\x88\xa1\xf1\x78\x5a\x4a\x07\xd2\x81\x46\x14\x28\x20\x37\x16\x9c\xaf\x2b\x29\xe0\x76\xf2\x11\x6c\xad\x30\x38\xbc\xb5\x14\x15\xd2\x97\xf5\x8c\x65\x66\x9e\x16\x66\x9c\x95\x32\xa5\xcf\xe2\xe7\xe8\x94\x48\xa5\xf8\xaa\xb0\xa6\xd6\x22\x5d\x70\x25\x05\xf7\xc6\xa6\x8b\x9f\x9e\x85\x03\xc9\x60\xeb\xe2\xb0\xba\x2b\xe0\xfc\x39\xcc\xb8\x43\x18\xb2\x97\x46\xe7\xb2\x60\x9b\xa8\x0f\x42\xb1\x5c\x17\x08\x43\x4d\xb2\x43\x76\x6d\x04\x3a\x38\x70\x30\x4d\xe1\x1d\x5f\x29\xc3\x05\x98\x1c\xf8\x4e\xf3\x7a\xcd\xe8\xab\x66\xd7\x7c\x4e\xea\x20\x20\x0e\x16\xef\x6b\x74\x9e\xed\x14\x50\x06\xa1\x25\xfa\xa1\x91\x7c\x1f\x04\xc1\x79\x5b\x67\x1e\x1e\x76\x07\x82\x5f\x84\xe5\xcd\xc5\xcd\x39\x5c\xf1\x85\xd4\x05\x70\xa5\xa0\x32\x52\x7b\xb4\x0e\x4a\xb4\x08\x0e\x71\xee\x40\x1b\x0f\x56\x16\xa5\x67\xf0\x96\xaf\x66\x08\x9e\x32\x90\x71\x0d\x33\x04\x61\x34\x82\xd4\xc0\xb5\xf1\x25\x5a\x58\xf2\x15\x30\xc6\xda\x29\x68\xe3\x90\x37\x38\x68\xf6\x4a\xa2\x12\xae\x55\x15\x07\xc2\x32\x6f\x0c\x0f\x73\x36\x99\xcf\x6b\xcf\x67\x0a\x7b\x45\xb7\xb9\xc8\xd9\x6d\x13\x66\xa3\x95\xd0\x3a\x0b\x6f\xa7\x04\xce\x7a\xfd\xf9\x4f\x67\xf4\x79\x44\x8a\xb5\xc0\x2f\x10\xbb\x4a\x49\x0f\xb1\xe7\xc5\x1b\x63\xee\xea\x6a\xaf\x61\xca\x0b\x88\x48\x3c\x4a\x20\x1a\x45\x09\x3c\x83\xf5\x3a\x3a\x61\x78\x53\xf4\x9b\x3a\x91\x46\x4f\x79\xe1\x48\xd7\x0b\xad\x8d\x6f\xde\x38\x76\xa9\xee\x20\xda\xf7\xcb\x56\x1a\x1b\x7f\xa8\xe8\xa3\x5d\xc1\x7f\xee\xc1\x62\x7c\xd8\x0c\x07\x31\xd3\xdb\x2e\x24\x7b\x98\x71\x03\xf3\xa5\x28\xf0\x24\xca\x43\xec\xc0\x16\x90\x1f\x22\xfb\xa0\xe5\x7d\x4d\xc8\x11\x8e\xa8\x1c\x7d\xfd\xfd\x8f\x9d\x9f\xe1\x2c\x81\xcb\x26\x17\x5b\x90\xe1\x09\x28\xe3\xb7\xa1\x7c\x12\x61\xfc\x6f\x10\x6e\x33\x0d\x3d\xeb\xc1\x61\x67\x86\x4e\xda\xb4\x9e\x03\x0e\x85\x5c\xa0\x3e\xdd\xa3\x5c\x0b\x70\x7c\x81\x0e\x7c\x89\x90\x95\x94\x0b\x07\xde\x34\x3f\x05\xf7\x9c\xc8\x62\xdf\xba\x79\xad\x33\x88\xcb\x76\xf7\x5e\x71\x2d\x14\xda\x64\x63\x3c\x5e\x02\xf1\x27\x7b\x8f\xae\x32\xda\xe1\x27\x2b\x3d\xda\x11\x58\x38\xdb\xbc\x6f\xda\x3c\xe9\x34\xb8\xa2\xfc\x97\x4c\x99\x82\x7d\x92\xbe\x8c\xff\xe2\x15\x41\x2f\x75\x11\x47\x73\xf4\xa5\x11\xd1\x08\xa2\x60\x22\x4a\x92\x41\x17\xf5\x43\x7a\x56\x15\xda\xb4\x61\x7d\x29\xc6\xb9\x35\xf3\x71\x6d\x55\x44\x94\x46\x75\xd5\x3a\x9a\xa6\xf0\x1a\x7d\x13\x6e\x65\x9c\x6f\x62\x66\x2d\x89\x05\xb7\x20\x1e\xe1\xab\xc1\x13\x5d\x11\x98\x19\x81\xe3\x0d\x1d\x8e\x67\x46\xac\xa2\x63\x7f\xe8\x3c\x71\x09\xa2\x70\x1f\x77\x35\x44\xae\x1f\xd4\x4b\xe7\x36\xda\xdb\xd8\xd6\x51\xc7\x4a\x73\x62\xdb\x7e\xdd\xf0\x6f\xf9\x02\x77\xe9\x6e\x87\x3e\x0b\x39\xc9\x94\x44\xed\xdb\x95\xc3\x02\x06\x37\x1a\x27\x17\xf1\xa6\x0b\x35\xf5\xd6\x15\x77\xaf\xcd\xa6\xc1\xc2\x89\x7d\xc3\xc5\x52\x24\xfb\xf6\x94\x62\x57\xcd\xdd\x74\x7e\x3f\xee\x95\x39\x08\xd6\x4b\xc0\x3f\x3c\x07\x2d\x55\xa7\x2a\x5b\x68\xb0\x5b\xf4\x7d\x47\xe3\xb3\x7e\x95\x49\xb8\xb5\xbc\x11\x06\xc6\xb0\x2c\xb9\x07\x3e\x33\xb5\x07\xa7\x64\x86\x90\x87\xa0\x3c\xbd\x2f\x29\x09\x59\xed\xbc\x99\xc3\x9c\x5b\x57\x72\xa5\xd0\xba\x5f\x8e\x2f\xa6\xed\xd3\x8b\xc4\x09\x8a\xfd\xb7\xcc\xbb\x03\xad\x4b\xbf\x8f\x83\xd6\x25\xe7\x53\x39\x09\xe0\x06\xfd\x6f\xeb\xc0\x91\xb7\xe8\x0f\x90\xed\xda\x4d\x4e\xd9\x6b\x4a\xeb\x5b\xec\xbc\x54\xc8\x2d\x59\x4a\x3a\xff\x78\x21\x9a\xd4\xf6\xdb\x67\x8c\x9d\x72\xa1\xf7\xf6\x83\xa3\x84\x9d\xc8\x0a\xf5\xa3\x37\xb6\x99\x51\x8e\xe9\x97\x1e\x1c\x01\x5a\xdb\xcc\x71\x8c\x5a\x37\xb6\x34\xc9\x79\xfc\xe2\xe3\x0e\x2b\xca\xbc\x91\x3c\x99\x22\xb7\x94\x3e\x2b\x49\x86\xc5\x34\x93\x75\x19\x79\xfb\x64\x34\x2f\x9e\x11\x03\x5c\x1b\xff\x8a\xe6\xcc\x4b\x6b\x8d\x3d\x3f\x89\xb1\x62\x13\x9d\x9b\x38\x3a\x20\x8c\xbf\xe1\x0e\x67\x7c\x46\x25\x43\xad\x9a\x93\x96\x68\x04\x44\xf2\x13\xed\xb7\xa2\x93\x8b\x2d\xbd\x44\x23\x90\x22\x09\x02\x8d\xb5\x18\xad\x4d\xfa\x31\xa7\xc7\xa2\x16\x68\x77\x0e\xc6\xcb\x11\xd8\x11\x7c\xd5\x83\x7e\x85\xad\x80\x6f\xa5\x2e\x6a\xc5\xed\x57\x63\x0e\x6e\x46\xa2\xae\x94\xcc\x88\x99\x51\x7b\xbb\x6a\x06\xfe\x5e\x37\xbe\x43\xf8\xbf\x72\xb1\xb9\x94\xb6\x00\xec\xbd\xe9\x87\x22\xf8\xd8\x4c\x2c\x52\x40\x04\x3f\xd2\xf4\x9d\x19\xbd\x60\x13\x6f\x78\x8c\x6c\xe7\x59\xa7\x01\xfb\x7d\x11\x98\xf3\x5a\xf9\x27\xc0\x84\xf4\x87\x46\x0f\x1a\xe5\xff\x2f\x7c\x26\xb4\x2c\x68\xae\x6e\xd1\x2e\x30\x64\x74\x03\x94\x96\xea\xf8\xf4\x71\x0f\x5b\xf4\xb5\xd5\x83\xd3\x42\x69\x0a\xef\xb1\xd9\x8d\x1a\x64\xdb\xad\x7b\xff\xc8\x75\xfa\x5b\x8d\x76\x15\x27\xec\x13\x6d\x32\x71\x0b\x10\x65\x96\x48\x14\xc5\x26\x17\x8f\x26\xe4\x68\x8e\x08\xfb\x2d\xb1\xfa\xd4\xbc\x21\x9f\x68\x8a\xc8\x2c\x1e\xee\xc1\x1d\xe7\x2f\x79\x81\x16\x42\x00\xcd\x75\xd0\xdc\x4e\xdc\x86\x35\x4e\x5a\x14\x60\xf4\x76\xb3\x33\x15\xda\x86\x2b\xd9\x91\xaa\x7b\x9a\x63\x2f\xb5\x6f\xc2\x3a\xde\x05\x7a\x49\x72\xc3\x6c\xcf\xe1\x9e\xdd\x68\xb5\x6a\x13\xdb\x13\x87\x2c\xdb\x80\x9f\x36\xd5\x35\x2e\x69\x30\x95\xba\xa0\x4d\xfd\x68\xf2\x79\x9c\xa4\x42\xc1\xe0\xd7\x38\xea\xa9\xfd\x81\xdc\xad\x68\x79\x60\x6f\xc3\xdd\x3e\x35\x57\xd3\xe9\xbb\xf6\x84\x1c\x5f\xe3\xb2\x77\xca\x0c\x42\x31\x26\x23\x58\x26\x83\x76\xdd\xed\xf7\x81\xdd\xb7\x7f\x02\x00\x00\xff\xff\x5e\xac\xe9\x9d\x28\x11\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 4392, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/response.tmpl":  templateHttpResponseTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"response.tmpl":  &bintree{templateHttpResponseTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
