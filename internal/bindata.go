// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x6f\x6f\xdb\xb6\x13\x7e\xef\x4f\x71\x3f\xc2\xf8\x41\x0e\x6c\xaa\x7b\x1b\xa0\x2f\x8a\x26\x6b\x8d\xb5\x4d\x57\x67\xeb\x8b\xa2\x40\x68\xf3\x24\x31\xa1\x49\xe5\x48\x25\x75\x3d\x7d\xf7\x81\x12\xfd\x47\xb2\x9d\x75\xd9\x80\x15\x28\xa2\x30\xc7\xbb\x7b\x9e\xbb\xe7\x8e\xeb\x75\x7a\x06\xb9\xf5\xab\x12\xcf\x01\x8d\xcf\x2d\x57\x36\x45\xe3\xc3\xff\x45\x9a\xa3\xe1\x6f\x48\x94\x05\x9c\xa5\x75\x3d\x18\xac\xd7\x20\x31\x53\x06\x81\x15\xde\x97\xe9\x82\x50\x78\x64\x50\xd7\x03\x00\x80\xf5\x7a\x02\x8f\xca\x17\x80\xdf\x3c\x1a\x09\x43\x60\x1f\xc5\xe2\x4e\xe4\xc8\xda\x0b\x0c\x26\xd1\xb4\x35\x07\x8f\xcb\x52\x0b\x1f\xfc\xa1\x90\x48\x0c\xf8\xce\x19\x04\x1f\xf1\x37\xb5\x2c\x2d\x79\x60\xb9\xf2\x45\x35\xe7\x0b\xbb\x4c\x73\x3b\x29\xb5\x58\xe5\x64\x2b\x23\xd3\x07\xa1\x95\x14\xde\x52\xfa\xf0\xd3\x0b\x06\x0d\xb0\xeb\x42\x39\x50\x0e\x0c\xa2\x44\x09\x99\x25\x70\xbe\x2a\x95\x84\xd9\xf4\x77\xa0\x4a\x63\xc4\x15\xe3\x0d\xcb\xbb\x1c\xce\x5f\xc2\x5c\x38\x84\x21\x7f\x6d\x4d\xa6\x72\x1e\x21\xec\xe5\x45\xc2\xe4\x08\x43\x13\x6c\x87\xfc\x83\x95\xe8\x60\x0f\x57\x9a\xc2\x47\xb1\xd2\x56\x48\xb0\x19\x88\xad\xe7\xba\xe6\xe1\xd3\xf0\x0f\x62\x19\xdc\x41\x4b\x1f\x10\xde\x57\xe8\x3c\xdf\x3a\x08\xe5\x80\x8e\xe9\xeb\xc6\xf2\x53\x6b\x08\xce\x53\xb5\xf0\xb0\xde\x5e\x68\xf3\x0a\x88\xaf\x2e\xae\xce\xe1\xad\x78\x50\x26\x07\xa1\x35\x94\x56\x19\x8f\xe4\xa0\x40\x42\x70\x88\x4b\x07\xc6\x7a\x20\x95\x17\x9e\xc3\x7b\xb1\x9a\x23\xf8\xc0\xd3\x42\x18\x98\x23\x48\x6b\x10\x94\x01\x61\xac\x2f\x90\xe0\x51\xac\x80\x73\xde\x12\xd5\x8d\xb7\xe1\x21\x6b\x78\x30\xfc\x67\x85\x5a\xba\x4e\x89\xf7\x8c\x87\x19\x9f\x35\x79\x37\x66\x01\xfe\x59\x7b\x7a\xbd\x2a\x31\xfc\x29\xa4\x5c\xd7\x70\x73\xeb\xac\x39\x67\xeb\x35\x28\x23\xf1\x1b\x24\xae\xd4\xca\x43\xe2\x45\xfe\xce\xda\xbb\xaa\xdc\x79\xba\x16\x39\xb0\x60\xce\x46\xc0\xc6\x6c\x04\x2f\xa0\xae\xd9\x91\xe0\xb1\x2d\x63\x8f\x28\x6b\xae\x45\xee\x82\x9f\x57\xc6\x58\xdf\x9c\x38\x7e\xa9\xef\x80\xed\x3a\x7a\x63\x8d\x4d\x2e\xa1\x2d\xd9\xb6\x25\x6f\xfa\x4c\x84\xe3\x3e\xee\x1d\x41\x18\x09\xba\x94\x39\x9e\xe6\x07\x7b\xfc\x04\x06\xb2\x70\xfc\x9b\x51\xf7\x55\xe8\x82\x40\x18\x6a\x17\x3e\xbf\x7c\xdd\x26\xd3\xde\x6d\x58\x9c\x5e\x3c\x83\x4d\xfc\x97\xd8\xc4\x43\x36\xab\x52\x3e\x97\xcd\x3d\x92\xa2\x40\xa3\xb4\x5a\x29\x44\xed\x38\x10\x60\xf0\xf1\xb4\xc4\x84\x91\xe0\xbc\x25\x74\xa0\x7c\xe8\x6b\x5f\x20\x48\xe1\x45\xd0\xf8\x4e\x71\x59\x65\x16\x90\x14\x5d\xd1\xbd\x15\x46\x6a\xa4\x51\x0c\x99\x3c\x42\x98\x61\xfc\x13\xba\xd2\x1a\x87\x9f\x49\x79\xa4\x31\x10\x9c\xc5\xf3\x46\x9d\xa3\x9e\x2e\x75\x28\x7e\xc1\xb5\xcd\xf9\x67\xe5\x8b\xe4\xbb\x28\x63\x7d\x12\xb6\x44\x5f\x58\xc9\xc6\xc0\xda\x10\x6c\x34\xea\xdc\x4d\x53\x78\x83\xbe\xc9\xb9\xb4\xce\x37\x89\xf3\x8e\xc5\x83\x20\x90\x4f\xcc\x8a\x41\xbf\x74\xfb\x13\x57\x97\x48\x69\x33\xc8\x25\x2e\xac\xc4\x89\x30\x72\xb2\x29\xd4\x24\x8e\xa5\xc9\xdc\xca\x15\x3b\xe8\xda\x34\x85\x99\x78\xc0\x2d\x9f\xdd\xb4\xe6\x2d\xe8\x85\x56\x68\x7c\xb7\x24\x3c\xb2\x39\x7a\xfe\x34\x51\x19\x48\x7e\x74\xa4\xfc\xef\x25\x18\xa5\x7b\x15\xd8\x26\xc5\x67\xe8\x8f\x5d\x4b\xce\x8e\xbb\x1b\x1d\xb8\x39\x50\xf8\x3f\x15\xfe\x16\x4a\x5f\xfd\x4f\x43\xe9\xcf\x86\x63\xae\x77\xb0\x5b\xff\xef\xab\x56\x9b\x33\xf4\x7b\x98\xfb\x71\x0f\x31\x6f\x90\x86\xc1\xf3\x77\xe2\xbc\x92\x0d\xb7\xc7\xc3\x70\xce\x4f\x45\x9a\xf4\xf5\xbf\xf9\xf7\x43\xe4\xe3\x18\x90\xa8\xd9\xe2\x3c\x34\x68\x42\x61\x8f\x7b\xfc\xe6\x93\x9e\xb8\x54\xd6\x58\x9e\xe4\x59\xf3\x4b\x22\x4b\x09\xc3\xf0\x03\x5c\xbb\x54\xf7\x7a\xf9\x0f\xb8\xc3\xb9\x98\x87\x59\x36\x86\x20\xeb\xd6\x1e\x89\x46\x87\xd8\x08\x8d\x44\xe2\xd3\xb0\x8d\x8d\xd0\x33\xa4\x07\xa4\xf6\xc2\xe3\x18\x68\x1c\x92\x38\x76\xcb\x57\x64\x06\xa7\x59\x48\x53\xf8\x84\xcd\x53\x03\x8d\xa7\x55\x57\x85\xf7\x4f\xa8\xf0\xd7\x0a\x69\x95\x8c\xf8\xe7\xf0\x30\x48\x3a\xa8\xb4\x7d\x44\x0a\x36\xd3\x8b\x04\xe3\xb5\xe9\x45\xbf\x4f\x46\x83\x83\xd9\xd2\xbe\xfd\x42\xaf\x5f\xdb\x77\x21\xa7\xa1\xd9\xdf\xa8\x07\xe8\xd2\x14\x2e\x45\x8e\x04\x2d\x80\x46\x24\xbe\x10\x1e\x04\xb5\xaf\x22\x45\x28\xc1\x9a\xcd\x43\xc9\x96\x48\x4d\x6b\xf1\x63\x0b\x94\xf7\x43\x9c\x68\xa5\xd8\x21\x2f\xe1\x9e\x5f\x19\xbd\xea\x36\xc8\x0f\xce\x4b\x6a\x38\x4f\x9b\xce\x98\x14\x61\x4f\x28\x93\x87\xc7\xeb\xa4\xae\xbb\x3e\x6e\xb7\xfd\xe8\x0a\x24\x95\x65\xfc\xbd\x20\x57\x08\x9d\xfc\x7f\x73\x70\x55\x36\x2b\xf3\xb0\x03\xa7\x66\xa1\x2b\x89\x97\xcb\xd2\xaf\xae\x45\x7e\x0e\x9e\x2a\x1c\x1f\x98\xbd\x21\x5b\x95\xee\x1c\xbe\x7c\x75\xcd\x5e\x39\x35\x32\x62\x81\x86\xa6\xbf\xa8\x67\x8b\x02\x97\x22\x0e\xe6\xd6\xdb\x93\x4a\x0f\xab\xfb\xd6\x2a\x03\x49\x1b\x70\xa6\xd5\x02\x81\x8f\xe0\x86\x8d\xd9\xcd\xd1\x57\xc3\xb6\x1e\x7f\x35\x45\xd8\x71\x81\x3d\x39\x2b\x8e\xf9\xab\xbb\x3c\xd5\x63\xc0\x67\xca\xdf\x21\x29\xa1\xd5\xf7\x86\x2f\x68\x4a\x1e\xf5\x3e\x35\x3e\x61\x5b\x7d\x44\x65\xb1\x31\x9c\x16\xcd\x7f\x36\x27\x34\x9f\x9a\xcc\x26\xc7\xd9\x8d\x41\x51\x3e\x1b\x57\x37\xa3\x88\xe1\xea\x97\x98\xf2\xed\x68\xd0\xcd\x6a\xf7\xc6\xdb\x7e\xfd\x19\x00\x00\xff\xff\x00\xf4\x5f\x61\x8a\x0e\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 3722, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x6f\xf3\x36\x0c\xbd\xe7\x57\x70\x42\x0e\x76\x90\xc8\xa7\x5d\x3a\xf4\xb4\x74\x6d\x2e\xdd\xb0\x16\xeb\x59\xb1\x68\x5b\xa8\x2c\x79\x34\xdd\xb4\xf3\xf2\xdf\x07\xda\x86\x9b\x34\x29\x76\xf9\x04\x18\xb1\x94\xc7\x47\xbe\x47\x5a\x7d\x9f\xad\xa0\x8c\xfc\xd1\xe0\x0d\x60\xe0\x32\x6a\x17\x33\x0c\x2c\x4f\x9e\x95\x18\xf4\x3d\x99\xa6\x82\x55\x76\x3c\x2e\x16\x7d\x0f\x16\x0b\x17\x10\x54\xc5\xdc\x64\x16\x3d\x32\x2a\x38\x1e\x17\x00\x00\x7d\xbf\x81\x83\xe3\x0a\xf0\x9d\x31\x58\x58\x82\xfa\xc3\xe4\xaf\xa6\x44\x35\x06\x28\xd8\x4c\xd0\x11\x0e\x8c\x75\xe3\x0d\x0b\x1f\x1a\x8b\xa4\x40\x7f\x92\x81\x70\x4c\x3b\x57\x37\x91\x18\x54\xe9\xb8\xea\xf6\x3a\x8f\x75\x56\xc6\x4d\x5e\xb9\x4c\x9e\xb7\x9f\x15\x0c\x52\x9e\x2b\xd7\x82\x6b\x21\x20\x5a\xb4\x50\x44\x82\x96\xbb\xc6\x59\x78\xda\xfd\x05\xd4\x79\x9c\x94\x4c\x19\x96\xcd\x6b\x09\x37\xb7\xb0\x37\x2d\xc2\x52\xff\x1a\x43\xe1\x4a\x3d\x15\x7d\x52\x09\x99\x50\x22\x2c\x83\x60\x97\xfa\x31\x5a\x6c\xe1\x44\x49\x96\xc1\x76\xb0\x02\x08\xeb\xf8\x86\x2d\x98\x99\xfd\x78\xd4\xf2\x1a\xf4\xa3\xa9\x85\x12\x0a\x8a\x35\x70\x85\x60\x0d\x1b\x49\xac\x67\x9e\xa2\x0b\x39\x24\x15\x9c\x05\x3c\x98\x60\x3d\x52\x3a\xa5\x48\x0e\x20\x56\xea\x3f\xb1\x6d\x62\x68\xf1\x85\x1c\x23\xad\x81\x60\x35\x9d\xff\xdd\x61\xcb\x29\xf4\x33\xad\x2c\x2f\xa5\x57\xda\xc7\x52\xbf\x38\xae\x92\x7f\x4c\xa3\x9f\x98\x5c\x28\x13\x55\x23\x57\xd1\xaa\x35\xa8\x31\x85\x4a\xd3\xb3\x58\xe9\xeb\x69\xa7\x7c\x83\x94\x0d\x03\xe0\xec\x46\xe4\x6c\x3a\xf2\x4a\xec\x39\x6d\xef\xd0\xb6\x02\x90\x68\x4c\x9d\x7b\x87\x81\xcf\xcd\xd0\x63\xc2\xdf\x03\xee\xb6\x49\xdf\x0b\x7e\x19\xf4\x6e\xab\x1f\x4c\x7b\x1f\x9f\x3f\x1a\x01\x8d\x11\xbb\xad\x9e\xf6\x89\xb3\xa9\x4c\x87\x6f\x65\xe7\xec\x3c\x29\xa9\xbe\x7b\xc7\x3c\x21\xe9\x23\xe3\x3b\x27\x69\xfa\xcb\x90\xff\xa7\x5b\x08\xce\x7f\x71\x44\x56\x7b\x70\x9c\x57\x82\xd1\x89\x7c\x04\x5f\x5d\x93\x95\xcb\x6c\xac\xa4\xf4\xc7\xc8\xbf\xc5\x2e\xd8\x3b\xa2\x48\x37\x17\x40\x59\x75\x3b\xcc\x53\xcb\xe4\x9a\xbb\xc0\x03\x32\x41\xa2\xf4\x2a\xda\xeb\x5d\x28\x62\x52\xb7\xe5\x1a\xa4\x21\xbb\xc0\x89\x9a\xe5\x4e\x1e\xa9\x35\x38\x9b\x8e\x80\x4f\xbe\xeb\x84\x84\xc1\x22\xcd\x85\x26\x87\x35\xd0\x1a\xd4\x89\xe7\xff\xc2\x2b\xee\xcd\x5e\x06\x31\x44\x86\x42\x60\xea\x92\xcc\x62\x61\x3a\xcf\xd7\x45\xfa\xa9\x0e\x85\xf2\x03\xc3\x2d\xe0\x42\x09\xd7\xd3\x0c\xf3\x6e\xf7\xea\xc7\x4a\xdc\x05\x46\x0a\xc6\x3f\x21\xbd\x21\x8d\x41\xa3\xda\xe0\xfc\x65\xe4\xf1\xe2\x84\x90\x3b\x0a\x8b\xef\x41\x53\x73\xbe\x31\x6f\xbc\xfa\xec\xff\xab\x3a\xaf\x65\x6e\xd0\x30\xa2\x81\x93\xc3\xe7\xff\x5f\xef\xbd\xf9\xed\xbf\x00\x00\x00\xff\xff\x6e\x33\x49\x6d\xa6\x05\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1446, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x5e\x85\x60\x21\x1b\x36\xb5\x39\x14\x28\x8c\xe4\xd2\x34\xd8\x16\xd8\x06\x41\x76\xbb\x3d\x33\xd2\x98\x22\x22\x93\x02\x49\x39\xbb\x55\xf5\xef\x05\x29\x5a\x91\x1c\x39\x45\x0e\x82\x48\xcd\xcc\x9b\xe1\xcc\xe3\xb3\xdb\x36\x5b\x41\x68\xf7\xa3\xa6\x2d\x48\x39\xa1\x99\xd4\x19\x29\xe7\x9f\x3c\x13\xa4\xd8\x27\xc3\xeb\x12\xab\xac\xeb\x16\x8b\xb6\x45\x41\x3b\xa9\x08\x49\xe9\x5c\x9d\x95\x5c\x15\x15\x99\x04\x5d\xb7\x00\x80\xb6\xdd\xe0\x59\xba\x12\xf4\xdd\x91\x2a\x70\x81\xe4\x9e\xe7\x4f\x5c\x50\xd2\x47\x24\xd8\x44\xd7\xde\x1d\x8e\xf6\x75\xc5\x9d\x07\x24\x5e\x78\x28\xf6\x02\x06\x8f\x11\x77\x72\x5f\x6b\xe3\x90\x22\x94\xfc\xb5\x94\x16\xd2\x42\x11\x15\x54\x60\xa7\x0d\xac\x6b\x6a\x59\xe0\xcb\x1f\xdf\x60\x9a\x8a\xfa\x8a\x8f\x99\x12\x21\x5d\xd9\x3c\xb2\x5c\xef\x33\xa1\x37\x79\x29\x33\xff\x1c\x7e\x4e\xce\xb9\xd4\x15\xff\x21\x8c\x6e\x54\x91\x1d\x78\x25\x0b\xee\xb4\xc9\x0e\x97\x1f\xfb\x80\xe5\x22\xbc\xb2\x0c\xb1\x05\x28\xb9\x85\xd5\x7b\x42\xae\xd5\x81\x94\x24\x95\x13\xf6\xe4\x4a\x5d\x58\x34\x96\x0a\x68\x05\xa5\x0b\xda\xc4\x08\xcb\x02\x84\x6f\xfd\x00\x62\x9d\x69\x72\x87\xb6\x1b\xe0\x7f\x95\x6e\xcf\xed\x13\x9c\xf6\xc0\x3b\x29\x1a\x43\x78\x2e\x65\x5e\xc2\xe8\xc6\x91\xf5\x16\x43\x42\x5a\x47\x66\x84\xf8\xd0\x1b\x1b\xa9\xdc\x2f\x3d\xd8\xae\x51\x39\x52\x63\xa3\x69\xe9\x2b\x4e\xcd\xb0\x7b\xd4\xba\x42\x0b\x43\xae\x31\x0a\xc6\x7e\x30\xf8\xe9\x1a\x1f\x11\x4b\x69\x5b\x5c\xd4\x4f\x02\xdb\x6b\x3c\x72\x4b\xb8\x60\x37\xa1\x1c\x16\xe7\x3b\x1a\x9a\xe1\x4a\x10\x2e\x94\xf7\xbd\x60\x77\xba\x20\x8b\xd1\x28\x72\xad\xac\x43\x3a\xec\x8f\xe8\x8a\xdd\xf1\xbd\xc7\xb9\x31\xe4\x09\x11\x4f\x70\x8d\x4b\x5c\x5d\x41\x6a\xc7\xcf\x87\x3c\x10\x2f\xce\x5b\xff\xaa\x0b\xee\xe8\xbc\xfd\x37\xaa\xe8\x2d\xfb\x67\x69\xdd\xa9\x35\x1e\x92\xc2\x21\x15\xbb\x2d\x04\xd9\x09\xb7\x67\x91\xfc\x86\xfa\xcd\xbf\xa8\xb9\xcd\x79\x85\x93\x98\xc8\xfa\x53\xa8\xe9\x71\x87\xd6\x5c\x5d\xf9\xc6\x60\x83\xcb\xc1\x3b\x52\x33\xf2\x67\x12\xf7\xfb\xc0\x55\xff\xb6\xf0\x37\x12\xb9\x69\x0a\xe8\x9a\x0c\x77\x52\x2b\xeb\x69\x7a\x1c\x76\xd7\xb1\x49\x3c\x1b\x90\x03\xc7\x66\xb1\x8f\x14\x9e\x54\x1f\xf9\xbd\x98\x7c\xcc\x2b\x49\xca\xf9\xd5\x8a\x94\x63\x37\x61\x3b\xf1\xa8\xb4\x88\xab\xd5\x3f\xbc\x66\x9f\xb5\x10\x64\x26\x1e\xc3\xd5\xc4\x6a\x58\xb2\x6f\xfd\xea\x65\xa2\xdd\x4b\xe2\x70\x0b\xee\xe8\x79\xae\xf6\x34\x1f\x57\xb2\x46\x35\x4e\xbb\xc6\x61\x2e\xc7\x12\xab\xd9\x36\x4c\xcf\x1f\x6f\xd5\x87\x39\xd7\xf6\x15\x65\xfa\xc6\x6c\xc3\x72\xfd\xca\x5a\x69\xb1\x3d\x2e\xd9\xdf\xd2\x95\xa9\x2f\xf2\x8b\x33\x52\x89\x34\x39\x2a\xf2\x1a\xc9\x5c\xb2\x64\xb9\x7c\x8d\x38\x9c\x6a\x8b\xc3\xd4\xda\xcd\xb5\x30\xcb\xf0\x10\x05\x27\xa2\xda\x41\x81\x2c\x5c\x49\x10\xa4\x3c\x9d\xa8\x38\x0e\x3e\xb0\x2a\x58\xe4\x81\x14\xf2\x52\xf6\xea\x65\xd8\x74\x30\x69\x39\xdf\xce\x25\xfe\xd4\x8d\x72\xa9\xf1\xa1\x2c\xd0\xdf\xac\x31\xd2\xb2\x69\x13\xe5\x0e\xc6\x32\xaf\x6f\x33\xc2\x72\xea\x1c\xe6\xc3\xee\xb5\x75\x69\x92\x25\x6b\x94\x2c\xfa\x9d\xe9\xc4\x1b\x09\xbc\x0c\xcd\xc3\x7f\x22\x8f\xde\xca\xa2\x0b\x19\x82\xe3\xfb\xf1\x7b\x21\x3b\x73\x00\xee\xf2\x72\x9c\x23\x3a\xbf\x3f\x4b\x2f\x87\xf3\x59\x7a\xdb\x38\x4d\xf4\x7e\x7f\x1a\xaf\xaa\x6f\x35\x2b\xa0\x07\xa7\x37\xb0\xdf\xa3\xc4\x67\xea\x98\xd7\xe4\xb9\xca\x70\x32\xca\x6c\x14\xda\xf5\xdd\x38\x03\xf6\x0a\xea\x7f\x35\xff\xf4\x2f\xd0\xcb\x4f\xb8\x75\x46\xd6\xb7\xca\xdd\x1a\xa3\x4d\x4a\xc6\x80\xfc\x6a\x19\x0c\x4a\x8c\xea\x8e\xaa\xd3\x7f\xb7\xec\xab\x91\xfb\x7b\x43\x3b\xf9\xdd\x47\xb1\x3e\x7e\xb9\x46\x12\xc4\x26\xe9\x8b\xec\x16\x43\xce\xff\x02\x00\x00\xff\xff\xb7\x2d\x9b\xd2\x1c\x0a\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 2588, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\xb8\x09\xc3\x4a\x07\x16\xb5\x62\x6f\x09\xfa\xd0\x2e\xed\x20\x20\xc8\xb2\x64\xdd\x3b\x6d\x9e\x64\xae\x14\xa9\x1c\xa9\x64\xae\xaa\xff\x3e\x90\x54\x6c\xd9\x71\x33\x23\xeb\x66\xc0\x30\x24\xdf\xf1\xbe\xfb\xbe\xef\x8e\x7d\x5f\x9c\x42\x6d\xfd\xba\xc5\x33\x40\xe3\x6b\xcb\x95\x2d\xd0\xf8\xf0\x5d\x16\x35\x1a\xfe\xfb\xba\x45\x38\x2d\x86\xe1\xe4\xa4\xef\x41\x62\xa5\x0c\x42\xb6\x42\xdd\x22\x15\x2b\xef\xdb\x42\xe2\xd2\x4a\xcc\x85\x91\xf9\xbd\xd0\x4a\x0a\x8f\x39\xe1\x5d\x87\xce\xe7\x0b\x2b\xd7\x19\x0c\xc3\x09\x00\x80\xaa\x00\x89\xe0\xec\x0d\xfc\xe9\xac\xe1\x57\xf8\x70\x11\x53\x89\x11\x7f\x67\xe5\x7a\xc6\xd3\x33\xfb\x41\xce\xce\x63\xe8\x77\x6f\xc0\x28\x0d\x7d\x4c\x0f\x1f\xcd\xdf\x13\x59\x62\x19\x86\x1f\x88\xa5\x95\xa9\xe3\x81\xd9\x1c\x3e\x8b\x76\x0c\x40\xa2\xd9\x6c\x93\x46\x68\x24\x12\x7f\x27\xe4\x4d\x02\xc6\x1e\xe6\x40\x73\xc8\x94\x89\x90\x63\x3e\x38\x4f\xca\xd4\xd9\x34\xcd\x77\x64\xe2\x63\xea\xa0\x28\xe0\x8f\xb1\x45\xf0\x2b\x04\x29\xbc\xe0\x7b\xbd\xad\xf8\xc8\x82\x25\x7e\xeb\xa9\x5b\x7a\xf6\xd5\x76\x52\xd6\x1c\xec\xa7\x90\x89\x44\x9c\x9d\x6e\xb3\xcb\x04\x6e\xac\xa8\xac\x89\xad\xcd\xce\x43\xf8\xf6\x8c\x03\xb4\x8c\x47\x04\x62\x46\x21\x22\xd2\x67\x08\x9a\x90\x54\x1a\x8f\x64\x84\xbe\x45\xba\x47\x4a\xc1\x89\x2d\xa3\xf4\x7e\xc6\x86\x9f\x2d\x47\x09\x4f\x69\x2a\xcb\xb2\xfb\x0d\x74\xa8\x84\xd2\x28\x5f\xa0\x51\x88\x3a\xac\x48\xdf\x03\x1a\x09\xcf\x58\x53\xc9\xbc\x22\xdb\xe4\x1d\xe9\x8d\x0b\x8b\x02\xca\x0b\x50\x0e\x3e\xde\x5c\x42\x2b\x48\x34\xe8\x91\x92\x8a\x7d\x9f\x07\x4d\xbe\xe7\xe5\x05\x2f\x5d\x69\xfc\x63\x52\x14\x4b\xce\x1f\x35\x76\x9e\x96\xd6\xdc\xf3\xb7\xde\x2a\xb6\x5c\x29\xfe\xf1\xe6\xf2\x3a\x1c\xc5\xa2\xa9\x64\x36\xe9\x6b\x74\xc6\x13\xed\x0f\xe8\x56\xa3\x8f\xa2\x29\x09\x01\x36\x74\xa4\xb7\x08\x47\xea\x6e\xa3\x49\x59\x28\x32\x87\xc3\xa5\x8f\x92\xf9\xc0\x2c\x48\x68\x3a\xe7\x61\x81\x20\x0c\x28\xe3\xb1\x46\x82\x9a\x50\x78\x24\xf8\x8c\x64\xb3\x23\xe4\x0f\xa2\x68\x87\xbb\xc4\x05\xce\x0e\x62\xdd\xa4\x18\x09\xf9\x70\x8c\xa4\x84\xda\x0a\x59\x44\xc2\xf2\x95\x30\x52\x87\x99\xdd\x5b\x31\x4f\xc8\x76\x0f\xca\x2f\x57\x93\x17\x4b\xe1\x30\x6c\x3c\x5e\xba\x2b\xeb\x3f\xd8\xce\xc8\xc8\xd5\xd9\x4e\x87\x8d\xab\x47\xb9\x55\xfb\xde\xf8\x2d\xa5\x7b\x2a\x46\xb7\x37\xae\x4e\xcc\x97\xc6\xb3\xac\xef\x93\x8d\xae\x44\x13\xc8\xc8\xe6\x80\xfc\xf1\x5d\x5a\x0b\x1f\x14\x6a\x39\x0c\xc7\xc9\xb5\x01\x99\xc4\x6a\x5c\xbd\x0d\x93\x58\x89\x4e\xfb\xb3\xe7\xac\x55\xa1\x5f\xae\x82\xb7\x22\x86\x08\xea\x0b\x7c\xc2\x85\x58\xc0\x30\x24\xb7\xc9\x45\xf6\xdf\xe1\x3f\x72\xab\x0c\x2f\x9d\xf4\x56\xd4\xca\xc4\x4d\xb3\xf1\x42\x2b\x6a\x0c\xea\xbd\x7e\x74\x46\xb4\x21\x05\x13\xf2\xdf\x3a\xa4\x35\x9b\xf1\x5f\xd0\xb3\x2c\x04\x66\xb3\x73\x90\xc1\x37\x59\x36\x71\x49\xf8\x27\x0d\xfd\xde\xcc\xcb\x63\xe7\x3b\xed\xc1\xa4\x41\x2b\xc8\x05\x09\xee\x42\xf1\xed\x60\xc3\xab\x50\xe6\xd5\xde\x7c\x47\x50\x73\x90\x2f\x9d\xe6\xd8\xfd\x37\x98\xe7\x71\xae\x3c\x36\xee\x1a\xe9\x7a\xe4\xf4\xa7\x1f\xff\x89\xd4\x69\xc6\x61\x72\xa7\x11\xff\x03\xc9\xd3\x72\xfb\x64\xef\x80\xfd\x17\xa4\xef\xd0\xf4\xcd\xc8\x47\xb7\xb9\x78\xee\xf8\xa5\x6a\x94\x67\xd3\x42\x33\xfe\x6b\x55\x39\xf4\x8c\x45\xcd\x73\x78\x3d\x83\x53\xd8\x8d\x78\xab\x35\x23\xfe\xb3\x35\x1e\xff\xf2\x6c\x6c\xe7\x6b\xa4\x1e\xbf\x3a\xbe\x40\xab\x3b\x12\xfa\xc9\x0a\x79\xe6\x82\x3f\x72\x13\x1c\x9e\xff\xbf\x03\x00\x00\xff\xff\x01\xdd\x84\x81\xb1\x0a\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 2737, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xdf\x6b\xe4\x36\x10\x7e\xcf\x5f\xf1\x55\x2c\xc5\x1b\x1c\xf9\x7d\x21\x0f\xa5\x84\x6b\xe8\xf5\xae\xbd\x1c\xdc\x43\x29\x9c\xb2\x1a\xdb\x6a\xb4\x23\x67\x24\x27\xcd\x39\xfe\xdf\x8b\xbc\x4e\xb2\xce\xa6\x3d\x81\xc1\xab\x9d\xef\x87\x67\x3e\x69\x18\xaa\x53\x34\x21\x3d\x74\xb4\x01\x71\x6a\x82\x76\xa1\x22\x4e\xf9\xd9\x56\x0d\xb1\x7e\x27\xa6\x6b\x71\x5a\x8d\xe3\xc9\xc9\x30\xc0\x52\xed\x98\xa0\xda\x94\xba\xca\xbb\x98\x14\xc6\xf1\x04\x00\x86\xe1\x0c\xf7\x2e\xb5\xa0\x7f\x12\xb1\xc5\x0a\xea\x77\xb3\xbd\x31\x0d\xa9\x7d\xb9\xc2\xd9\x5c\xba\x2f\x47\xa2\x5d\xe7\x4d\xca\x6c\x64\x2c\x89\x82\x7e\x21\x43\xe6\xc8\xa2\xf3\xcf\x55\x77\xd3\x60\x73\x8e\x6b\x13\x09\x2b\xfd\x73\xe0\xda\x35\x7a\x56\x38\x80\x89\xe1\x86\xb0\xe2\x5c\xbb\xd2\x1f\x82\xa5\x88\x03\xd9\xaa\xc2\x27\x32\x16\x35\xa5\x6d\x4b\x11\xa9\xa5\x67\xf6\x71\xd4\xf9\x95\xf5\x07\xb3\xcb\x94\x70\x96\x38\xb9\xda\x91\xc5\xf5\x03\x0c\x1a\x77\x47\x8c\x5e\xfc\x59\x67\xc4\xec\x28\x91\xa0\x96\xb0\xcb\x2c\x87\x0a\xd6\x24\x33\xf9\x34\x6c\x21\x94\x7a\xe1\x08\x97\x90\xc2\xa4\xb7\xf5\x8e\x38\xe9\x67\x44\xdd\xf3\x16\x45\x8b\xd3\x85\xfa\x2f\x86\xad\x27\x59\xe3\xbd\x8b\xa9\xb8\x47\x6e\xa1\xfe\x44\xb1\x0b\x1c\xe9\x8b\xb8\x44\x52\x42\x70\x3a\xef\xdf\xf6\x14\xd3\x1a\xc3\x33\x6b\x5e\x3e\x77\xa1\xd5\x3e\x34\xfa\x8b\x4b\x6d\xf1\xcd\x74\xfa\x2a\x89\xe3\xa6\x50\x3b\x4a\x6d\xb0\xaa\x84\xca\x02\x6a\xbd\x5e\x20\x6f\xf7\xc8\xd9\xea\xc2\x98\xfe\xa3\x27\x79\x28\x96\xf5\x2f\xd3\xb7\x0d\xc5\xcf\xe1\x7d\x30\x36\x4f\x41\x2d\x32\x72\xb8\xaa\x0a\x17\xa6\x21\x81\xcf\xa5\x13\x0c\xa9\x35\x09\x46\x08\x42\xb7\xbd\x13\xb2\x08\x8c\xcc\x80\xd0\x91\x98\xe4\x02\xeb\x23\xa2\x61\x78\xc9\xcd\xa1\x9d\x39\x40\x87\xdb\x77\x46\x40\x32\x3d\x41\x8e\x00\x87\x79\xf4\x1d\x49\x35\x85\xbc\x33\x8d\xe3\x49\x5a\xe5\x0f\x3a\x7b\xca\xe4\xd3\xb2\xe5\x44\xb9\x39\x47\x6c\x49\x5c\x5d\xeb\xdf\x8c\xc4\xd6\xf8\xe2\xc7\xa7\x8d\x8f\x5d\x86\xc7\xe1\xc8\xfa\x25\x6f\x7d\x6f\xe9\x62\xd7\xa5\x87\xcf\xa6\xd9\x20\x49\x4f\xe5\x51\xd9\x3b\x09\x7d\x17\x37\xf8\xf3\xaf\x38\x0d\xef\x98\x68\x31\x82\x15\xeb\x9f\x98\x43\x9a\x4c\x47\x7d\xe1\x6f\xae\xb6\x2d\xed\x8c\xce\x83\xde\x73\x2d\x8e\xe2\xeb\xa5\x86\x01\x7f\x07\xc7\x28\xf6\x72\x57\xde\x6d\x09\x7a\x8d\xaf\xaa\x54\x5f\x31\x8e\xea\x3f\xf5\xc9\x47\xfa\x2e\xf7\x53\x94\x1e\x71\x43\xd7\xe6\xfa\xff\x09\xd9\xbe\xc9\x37\x2e\xbb\x34\x96\xa0\xb8\x4c\xa4\xab\xa7\xb9\xfc\x70\x0e\x76\x1e\xc7\x2d\xf3\xfa\x22\xa7\xa0\x50\x91\xc4\x19\xef\xbe\x4d\xed\xda\x47\x43\x95\xc8\x47\x65\x5f\x40\x22\xaf\x0e\x47\x5e\x42\x6c\x49\xf4\x25\x27\x12\x36\xfe\x8a\xe4\x8e\x64\x0f\xb8\x2f\x21\x65\x56\x7d\x0b\x95\x2f\x83\xa5\xf5\xe5\x89\xd5\x97\x5c\x87\xe2\xad\x36\x3d\xa2\xf3\xbd\x18\x9f\x6f\xa6\xbd\x3a\xd9\xd9\xe8\x25\xa7\x42\x99\x5d\xe8\x39\xa9\x12\x9e\xb8\xa0\xb8\x7e\x65\x7a\x36\xfc\xf1\xd7\xd9\x9f\x7d\xf9\xfb\xf5\x9d\xfb\xfc\xf6\x6f\x00\x00\x00\xff\xff\x61\xb6\x32\x42\x20\x06\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1568, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4f\x6f\xe3\xb6\x13\xbd\xe7\x53\xcc\x8f\x30\x7e\x90\x02\x9b\x3e\xf5\x12\x60\x0f\xed\x26\xcd\x1a\x6d\x93\x76\x1d\x34\x87\xa2\xc0\xd2\xe2\x48\x62\x43\x91\xca\x90\x4a\xd6\xeb\xfa\xbb\x17\x23\x29\x8a\x15\x79\x37\x68\x11\x02\x46\x2c\xf1\xcd\x9b\x79\xf3\x2f\xde\xed\x96\xa7\x50\xf8\xb8\xad\xf1\x0c\xd0\xc5\xc2\x4b\xe3\x97\xe8\x22\x7f\xb2\x65\x81\x4e\x5e\x92\xaa\x4b\x38\x5d\xee\xf7\x27\x27\xbb\x1d\x68\xcc\x8d\x43\x10\x65\x8c\xf5\x92\x50\x69\x01\xfb\xfd\x09\x00\xc0\x6e\xb7\x80\x47\x13\x4b\xc0\xcf\x11\x9d\x86\x19\x88\x5f\x55\x76\xa7\x0a\x14\x1d\x5c\xc0\xa2\x87\x76\x70\x88\x58\xd5\x56\x45\x66\x43\xa5\x91\x04\xc8\x67\x32\x60\x8e\xfe\xc9\x54\xb5\xa7\x08\xa2\x30\xb1\x6c\x36\x32\xf3\xd5\xb2\xf0\x8b\xac\x34\x4b\xfe\x3c\x7c\x27\xa0\x15\x72\x53\x9a\x00\x26\x80\x43\xd4\xa8\x21\xf7\x04\x21\x36\xb5\xd1\xb0\x5e\xfd\x0e\xd4\x58\xec\x75\xf4\x1e\x66\xf5\x5d\x01\x67\xef\x60\xa3\x02\xc2\x4c\xbe\xf7\x2e\x37\x85\xec\x83\x3e\x88\x84\x94\x2b\x10\x66\x8e\xb1\x33\x79\xe5\x35\x06\x38\x50\xb2\x5c\xc2\x47\x54\x1a\x72\x8c\x59\x89\x01\x62\x89\x03\xfb\x7e\x2f\xf9\xab\x93\x57\xaa\x62\x4a\x30\x1a\x5d\x34\xb9\x41\x0d\x9b\x2d\x28\x28\xcc\x03\x3a\x68\xc8\x2e\x6a\x45\xaa\xc2\x88\x04\x39\xf9\x8a\x59\x0e\x3d\x68\x15\x55\x1b\xa7\x72\x1a\x08\x9d\x46\x0a\x60\x22\x44\xdf\xfa\xcb\xac\x41\x17\xe5\x60\x91\x37\x2e\x83\xa4\x84\xd3\x91\xf7\x0f\xca\x69\x8b\x94\xb6\xf1\x26\x8f\xc0\x55\x91\x1f\x31\xd4\xde\x05\xbc\x25\x13\x91\xe6\x40\x70\xda\xbf\xbf\x6f\x30\xc4\x14\x76\x03\x2b\x1f\xcb\x59\x28\xa5\xf5\x85\xbc\x35\xb1\x4c\xbe\xa8\x5a\xae\x23\x19\x57\x24\xa2\xc2\x58\x7a\x2d\xe6\x20\xd8\x81\x48\xd3\x91\x25\x37\xc8\x61\xc9\x6d\x8d\xb4\x6c\xfb\xc8\xe8\x05\x6b\x5e\x34\x64\x05\xe7\x79\xf1\x54\xa4\x83\x04\xbc\x27\x64\x3b\x16\x7b\xdf\x20\x6d\x59\x79\x9b\xf1\x21\xdf\x83\xcc\x91\xe9\x7d\x17\x6f\x9f\xa0\x11\x4e\xfe\xc6\x44\x49\x2a\x6f\x4b\x24\x4c\x0e\xee\xfe\x06\xeb\x1f\x91\x18\xb3\x3a\xe7\x0b\x93\xf3\xdd\xea\x5c\x7e\x50\xe1\xd2\xdf\x6c\x6b\xb6\xef\x0c\x56\xe7\xb2\x7f\x4e\x8c\x4e\xb9\x71\x6d\xe0\x27\xa3\x87\x26\x4e\xd3\x93\x49\x26\xba\x51\xd1\x05\x86\x1b\xff\xb3\x57\x9a\x75\x8b\xd1\x40\xbd\x48\xc0\x85\x2a\x90\xc0\x32\xb4\x35\x83\x58\xaa\x08\x8a\x10\x08\xef\x1b\x43\xa8\xc1\x3b\x60\x06\xf0\x35\x92\x8a\xc6\x3b\x39\x21\xda\xed\x9e\x87\xec\x30\x9c\x83\x69\x7b\x3a\x38\x07\x24\xe2\xf4\xdd\xcb\x6b\x67\xb7\x09\xf1\x88\x44\xfc\x1c\x93\x17\x95\x35\x79\x8b\xfc\xdf\x3b\x70\xc6\xbe\xe8\x17\x3e\xe1\xd1\x70\xa1\xa6\x17\x19\x77\x34\xd7\x65\x15\xae\x7c\xfc\xd1\x37\x4e\x27\x48\x94\x9e\x4d\x90\x7c\xaa\xd0\x8e\x6b\x88\x64\xea\x0b\x17\x2f\x88\x3c\xb5\xf0\xa3\x68\x2b\x57\x2e\xf7\x49\x15\x8a\x39\x70\x93\xae\x5c\x4c\xc4\x50\xb2\xbe\x05\xc4\x1c\x8c\x4e\x3b\xc0\x33\xdf\x71\xc2\x6e\xea\xe4\x10\xe8\xe3\x1c\x68\xce\x41\x4d\xe1\x63\x5d\x6b\xe3\x8a\xc6\x2a\x7a\x43\x69\x1d\xe0\xcd\xb5\xfd\xa0\x74\x3f\xf6\xdf\x52\xa7\x31\x57\x8d\x8d\xc7\x95\x3c\xc5\x26\x90\xff\x74\x23\x6a\x5c\x01\xa3\xe9\xba\xc3\x8d\xda\xf0\x3a\x6c\x57\x9d\xde\x88\xb7\x95\xb1\x72\x11\xc9\x29\xbb\x46\x7a\x40\xea\x8c\x3a\x3d\xce\xd8\xa9\xe5\x74\xdc\x08\x63\x43\xee\xe4\xeb\x20\x3d\xcc\x46\x28\x91\x4c\x9e\xcb\x5f\x14\x85\x52\xd9\xe4\xff\x4f\x2f\xae\x6b\x9e\xc0\x30\x6d\xfa\x95\xcb\x6c\xa3\xf1\xa2\xaa\xe3\xf6\x46\x15\x67\x10\xa9\xc1\xf9\x04\x76\x49\xbe\xa9\xc3\x19\xfc\xf1\x67\x68\xd7\xeb\x94\x08\x0e\x57\xc9\xcc\xc9\xef\x9d\xf3\xb1\x9d\xfb\x20\x2f\xec\xdd\x3a\x2b\xb1\x52\x92\x57\x71\xc7\x35\xfa\xff\xfb\xf2\x70\xde\xff\xf2\xc6\x41\xd2\xb9\x5b\x5b\x93\x21\xc8\x14\x3e\x89\xb9\xf8\xc4\x75\xf8\xaa\xff\x76\xe1\xbd\xc6\x3d\x2d\xfe\x37\x08\x9d\x3e\xca\xb7\x1f\x67\x69\x3f\x07\xfc\x77\x8b\x68\x68\xce\x80\x64\x94\x35\x5f\xda\x6c\x41\xdb\xaa\x6f\xd1\x83\xff\xad\xff\x5e\xed\xb6\x7e\x95\x1d\x4f\x63\xef\x14\xf5\xeb\x02\xc6\xae\xfb\x60\xaf\x7f\xea\x63\xd3\xcf\xd7\x2f\x7f\x84\x0d\xdf\xfe\x09\x00\x00\xff\xff\xe3\xd1\x1b\x5f\x31\x0a\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 2609, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x51\x6f\xdb\x36\x10\x7e\xef\xaf\xb8\x09\xc1\x20\x15\x32\xfd\x6e\xa0\x0f\x5b\xeb\x76\xc6\xba\xa6\x6b\x32\xe4\x61\x18\x50\x46\x3c\x49\x5c\xe8\xa3\x7c\xa4\x9a\xb8\xae\xfe\xfb\x40\x49\x76\xec\x58\xca\xda\x25\x01\x56\x02\x41\x62\xeb\xbb\x3b\xf2\xbb\xbb\x8f\xa7\x6c\x36\xd3\xe7\x50\x58\xbf\xae\x70\x06\x48\xbe\xb0\x42\xdb\x29\x92\x0f\x3f\xd9\xb4\x40\x12\x6f\x58\x56\x25\x3c\x9f\x36\xcd\xb3\x67\x9b\x0d\x28\xcc\x35\x21\x44\xa5\xf7\xd5\x94\xd1\x48\xaf\x2d\xb9\x08\x9a\xe6\x19\x00\xc0\x66\x33\x81\x6b\xed\x4b\xc0\x1b\x8f\xa4\xe0\x04\xa2\xf7\x32\xbb\x92\x05\x46\x9d\x4d\x04\x93\x1e\xda\xc1\xc1\xe3\xb2\x32\xd2\x07\x97\x28\x15\x72\x04\xe2\xd6\x19\x04\x1f\x21\x72\xff\xf1\xa4\xba\x2a\x60\xf6\x02\x2e\xa5\x43\x38\x11\x2f\x2d\xe5\xba\x10\x7d\x84\x3d\x33\x96\x54\x20\x9c\x50\xc0\x9e\x88\x77\x56\xa1\x83\xc3\xb0\x3d\x02\x5b\x04\x89\xb9\x2a\x0e\x21\x61\x4d\xa7\x6d\x4c\x14\xef\xe4\x12\xe1\x0b\x54\xd2\x65\xd2\x40\xd3\x40\x8e\x3e\x2b\xd1\x81\x2f\x71\xb7\xad\xa6\x11\x7b\xe8\xa6\x01\xe9\xbd\xcc\x4a\x54\xe0\xed\x10\x90\xb6\xc0\xbb\x31\xb5\x42\xf2\x3a\xd7\xa8\xe0\x72\x0d\x12\x0a\xfd\x09\x09\x6a\x36\x93\x4a\xb2\x5c\xa2\x47\x86\x9c\xed\xb2\x75\xaa\xa4\x97\x2d\x1b\x92\x14\x30\x92\x42\x76\xa0\xfd\x36\x66\x66\x34\x92\x17\x07\x21\xf2\x9a\x32\x88\x4b\x38\xd8\xc4\x2f\x92\x94\x41\x4e\x46\x4e\x1c\x5f\x43\xc8\x9e\xf8\x80\xae\xb2\xe4\xf0\x82\xb5\x47\x4e\x81\xe1\x79\xff\xfd\xaa\x46\xe7\x13\xd8\x1c\x84\x0a\xcb\x04\x8a\x4b\x61\x6c\x21\x2e\xb4\x2f\xe3\xcf\xb2\x12\x67\x9e\x35\x15\x71\xb4\x44\x5f\x5a\x15\xa5\x10\x0d\x87\x8d\x92\xe4\xc8\x5f\x28\xb1\xfd\xa2\x31\x15\xf2\xb4\x2d\x47\xad\x26\x81\x97\x49\xcd\x26\x0a\xc9\x9f\x6c\x2b\xe7\x0e\xc1\x2f\x19\x83\x6d\xe0\x67\x55\x23\xaf\x03\x59\x6d\x46\x77\x69\xda\xed\xe4\x0a\x2f\xe5\xe5\x71\x32\xb5\xdb\x67\xef\x16\x76\x14\x6d\xd5\x1d\xbe\x4f\xc3\x01\xe3\xe2\xf7\x10\x3b\x4e\xc4\x45\x89\x8c\xf1\x81\x3f\x63\xaf\x91\x03\x66\xf1\x2a\xd6\x2a\x49\x3a\xec\x48\x6a\x86\x29\xd2\x79\x00\xff\x41\x7a\x55\x1f\x15\xd9\x3e\xae\xeb\xd6\x50\xfe\xe7\xf6\xad\x95\x2a\x58\x9d\xaf\x2b\x84\x88\x51\xaa\x68\xcc\xb4\xa7\x72\x2e\x0b\x64\x30\xc1\xae\xf5\x01\xbe\x94\x1e\x24\x23\x30\xae\x6a\xcd\xa8\xc0\x12\x04\x4f\x60\x2b\xe4\x56\x2d\xc4\xa8\xc3\xcd\xe6\xb6\xf9\x87\xf6\xda\xab\xc1\xd0\x63\x4c\x01\x99\x03\xdb\x2b\x71\x4a\x66\x1d\x73\x50\x07\x8f\x37\x3e\x1e\xa8\xa1\xb0\x74\xde\x5a\xfc\xf0\x02\x48\x9b\x81\xba\xdd\x2e\x77\xad\x43\x69\x8c\x03\xb2\xd0\x7e\x21\xbd\x0b\xf7\xce\xfa\xd7\xb6\x26\x15\x23\x73\x32\x1b\xb5\x08\x6b\xe9\x5a\x25\x73\x9e\x75\x35\x27\x3f\x67\xb6\xdc\x9a\xdd\x6b\x65\xc4\x82\x72\x1b\x2f\x5d\x91\x42\x68\xa4\x05\xf9\x38\xea\x4a\x67\xf1\x6a\x5b\x59\x51\x0a\x5a\x25\x1d\xe0\xd6\xef\xfd\x8e\x3b\xe9\x10\xbb\x03\x5c\xa7\xc0\x69\xbb\x3b\x2a\x9c\x38\x67\xbd\x7c\xcf\x98\xeb\x9b\xe0\xaa\x77\x9a\xa4\x10\x21\xf9\x19\x0c\x75\xe9\x30\x39\x67\x9a\x8a\xda\x48\x7e\x42\x7e\x3a\xe0\x93\x11\xf4\xb3\x54\xbd\xd6\x3d\x1a\x45\x0a\x73\x59\x1b\x7f\x3f\x1d\xdb\x83\x45\x18\x7e\x75\x72\xa5\xa9\xe8\xd5\x2a\x34\xec\x91\x64\xb5\x77\x84\xba\x8c\x8e\x88\xb8\x03\x14\x8f\x48\xcf\x82\x3c\x32\x49\x73\x86\xfc\x09\xb9\x33\xee\x78\x22\x6d\xc6\x3d\x8c\x6b\x0c\xa3\xaf\x99\x06\x1f\x0f\x1b\xa9\x9d\x10\xb8\x12\x59\xe7\xb9\xf8\x4d\xb2\x2b\xa5\x89\x7f\xdc\x7e\x71\x5a\xb5\x43\xcb\x78\x47\x2f\x28\x33\xb5\xc2\xf9\xb2\xf2\xeb\x73\x59\xcc\xc0\x73\x8d\xe9\x28\xfc\x0d\xdb\xba\x72\x33\xf8\xf3\xaf\xae\x18\xc6\x1d\xc3\xbe\xe8\x6e\xf3\xf6\x13\x91\xf5\xdd\x1c\x25\xe6\xe6\xea\x2c\x2b\x71\x29\xc5\x07\x94\xaa\x73\x7c\x30\x31\x8d\xad\x90\xda\xbf\xad\x26\x88\xbb\x3d\x9c\x19\x9d\x21\x88\x04\x3e\x46\x69\xf4\x31\x24\xf5\x5f\x37\x85\xc6\xe1\x57\xc7\x1a\x29\xba\xaf\x88\x42\xea\xde\x20\xcd\x30\xcf\x4d\x0a\xf8\x30\x1d\xdf\x75\x90\x43\xd6\xd2\xe8\xcf\x2d\xe5\xd0\xf6\xd3\x71\x8f\x1c\x74\x03\x8a\xbd\x13\x2f\x5e\x85\xf1\xa5\xce\xfc\x6b\x8d\x26\xdc\x47\xdf\xd0\x29\x0f\xeb\x92\x6f\xee\x85\xfe\xb6\xb8\x27\x5f\xfd\x8e\x50\x3d\x8c\x81\xe1\x3d\xf7\xa7\x3d\xfd\xb5\x3f\x9c\x1a\x9e\x54\xda\xba\xfb\x4f\x13\x8a\xd1\xce\x3f\xce\x84\x12\x3c\x3d\xe2\x84\x32\xfa\x7c\x78\x70\xad\x64\xa1\xa9\x8d\x1c\xed\x0e\x37\x38\xbc\xc2\xf7\x25\x70\x34\xa2\x6d\x6f\xb5\xf3\xff\x67\x6d\x3b\xba\x22\x9f\x54\xd6\xdc\x93\xeb\xda\x77\x28\x4d\x5f\xa0\x32\x35\x77\x6f\xdb\x43\x1a\x25\x97\xb6\x26\x1f\xa5\x60\x90\x62\x74\xc9\x03\x25\xe8\xf8\xc5\xe2\xe0\xbf\x05\x7b\xcf\x6f\x3f\xed\xfe\xfa\x27\x00\x00\xff\xff\xaa\xf9\xec\xcf\x46\x11\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 4422, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdd\x6e\xdb\xb8\x12\xbe\xf7\x53\xcc\x11\x8c\x03\x29\xc7\xa6\x7a\x2e\xf6\x26\x40\xb1\xe8\x36\x69\x6a\x6c\xdb\x74\xeb\x74\x7b\x51\x14\x08\x2d\x8e\x24\x26\x34\xa9\x90\x94\x53\x37\xeb\x77\x5f\x90\x94\x7f\x24\xcb\x4e\xba\xbb\x5d\x01\x41\x6c\x79\x38\x3f\xdf\xcc\x7c\x33\x7c\x78\x48\x4f\xa0\x50\x76\x59\xe1\x29\xa0\xb4\x85\x22\x5c\xa5\x28\xad\xfb\xcb\xd2\x02\x25\xb9\xd0\xb4\x2a\xe1\x24\x5d\xad\x06\x83\x87\x07\x60\x98\x73\x89\x10\x95\xd6\x56\x69\x5d\x31\x6a\x31\x82\xd5\x6a\x00\x00\xf0\xf0\x30\x86\x7b\x6e\x4b\xc0\xaf\x16\x25\x83\x21\x44\xef\x69\x76\x4b\x0b\x8c\xc2\x81\x08\xc6\x8d\x68\x10\x07\x8b\xf3\x4a\x50\xeb\xf4\x21\x65\xa8\x23\x20\x5b\x65\xe0\x74\x34\xdf\xf8\xbc\x52\xda\x42\x0c\xde\xe3\xab\x92\x1b\xe0\x06\x24\x22\x43\x06\xb9\xd2\x60\x6c\x5d\x71\x06\xd3\xc9\xef\xa0\x6b\x81\xc1\xe1\xb5\xa5\xa8\xe0\xb6\xac\x67\x24\x53\xf3\xb4\x50\xe3\xac\xe4\xa9\xfb\x5b\xfc\x14\x1d\x12\xa9\x04\x5d\x16\x5a\xd5\x92\xa5\x0b\x2a\x38\xa3\x56\xe9\x74\xf1\xff\x67\xe1\x40\x32\x58\xbb\x38\xac\x6e\x0b\x38\x7d\x0e\x33\x6a\x10\x86\xe4\xa5\x92\x39\x2f\x48\x13\xf5\x4e\x28\x9a\xca\x02\x61\x28\x9d\xec\x90\xbc\x53\x0c\x0d\xec\x38\x98\xa6\xf0\x9e\x2e\x85\xa2\x0c\x54\x0e\x74\xa3\x79\xb5\x22\xee\xa3\x24\xef\xe8\xdc\xa9\x83\x80\x38\x68\xbc\xab\xd1\x58\xb2\x51\xe0\x32\x08\x2d\xd1\x8f\x5e\xf2\x43\x10\x04\x63\x75\x9d\x59\x78\xd8\x1c\x08\x7e\x39\x2c\x2f\xcf\x2e\x4f\xe1\x35\x5d\x70\x59\x00\x15\x02\x2a\xc5\xa5\x45\x6d\xa0\x44\x8d\x60\x10\xe7\x06\xa4\xb2\xa0\x79\x51\x5a\x02\x6f\xe9\x72\x86\x60\x5d\x06\x32\x2a\x61\x86\xc0\x94\x44\xe0\x12\xa8\x54\xb6\x44\x0d\xf7\x74\x09\x84\x90\x76\x0a\xda\x38\xe4\x1e\x07\x49\x5e\x71\x14\xcc\xb4\xaa\x62\x47\x98\xe7\xde\xf0\x30\x27\x93\xf9\xbc\xb6\x74\x26\xb0\x57\x74\x9d\x8b\x9c\x4c\x7d\x98\x5e\xab\x43\xeb\x24\xbc\xbd\x5a\x56\xe8\x7e\x72\x11\xae\x56\xd7\x37\x46\xc9\xd3\xc8\xe9\x97\x0c\xbf\x42\x6c\x2a\xc1\x2d\xc4\x96\x16\x6f\x94\xba\xad\xab\xad\xa2\x2b\x5a\x40\xe4\xc4\xa3\x04\xa2\x51\x94\xc0\x33\x58\xad\xa2\x03\xf6\x9b\xda\x6f\xca\x85\x2b\x79\x45\x0b\xe3\x74\xbd\x90\x52\x59\xff\xc6\x90\x73\x71\x0b\xd1\xb6\x6d\xd6\xd2\xe8\xfd\x71\xb5\x1f\x6d\xea\xfe\xba\x07\x92\xf1\x6e\x4f\xec\x84\xee\xde\x76\x91\xd9\xa2\x8d\x0d\xda\xe7\xac\xc0\x83\x60\x0f\xb1\x83\x5e\x48\xc0\x10\xc9\x47\xc9\xef\x6a\x57\x52\x0e\x4e\x14\xc6\x7d\xfc\xfc\x65\xe3\x67\x38\xeb\x31\x9e\x9c\x75\xb0\x86\x27\x80\x8d\xdf\x07\xf6\x41\xa0\xf1\x9f\x01\xba\xcd\x3b\xee\x59\x0d\x76\xfb\x34\xf4\x55\xd3\x88\x06\x28\x14\x7c\x81\xf2\x70\xc7\x52\xc9\xc0\xd0\x05\x1a\xb0\x25\x42\x56\xba\x94\x18\xb0\xca\x7f\x65\xd4\x52\x47\x1d\xdb\x46\xce\x6b\x99\x41\x5c\xb6\x7b\xf9\x35\x95\x4c\xa0\x4e\x1a\xe3\xf1\x3d\x38\x36\x25\x1f\xd0\x54\x4a\x1a\xfc\xa4\xb9\x45\x3d\x02\x0d\x27\xcd\x7b\xdf\xf4\x49\xa7\xdd\x85\x2b\x83\x92\x08\x55\x90\x4f\xdc\x96\xf1\x37\x5a\x35\x99\x8a\xa3\x39\xda\x52\xb1\x68\x04\x51\x30\x11\x25\xc9\xa0\x8b\xfa\x2e\x59\x8b\x0a\x75\xea\x67\x00\x67\xe3\x5c\xab\xf9\xb8\xd6\x22\x72\x04\xe7\xca\xab\x75\x34\x4d\xe1\x02\xad\x0f\xb7\x52\xc6\xfa\x98\x49\x4b\x62\x41\x35\xb0\x23\xec\xf5\x44\x4f\x18\x66\x8a\xe1\x98\x4a\x36\x5e\x67\x7b\xdc\x10\xe5\x78\xa6\xd8\x32\xea\xf5\x6d\x4a\x17\xb8\xc9\x45\xdb\xaf\x59\x00\x2c\x13\x1c\xa5\x6d\xa7\x95\x04\x07\x2f\x25\x4e\xce\xe2\xa6\x53\xa4\xab\xff\xd7\xd4\x5c\x28\xd7\x04\x4d\x67\xc8\x75\x53\xc0\x6a\x15\x73\x96\x6c\x5b\x88\xb3\x4d\xa9\x75\xb1\xfe\x71\x34\xc9\x73\x60\xa4\x97\x2b\xff\xf3\x1c\x24\x17\x9d\x92\x69\xa1\x41\xa6\x68\xfb\x8e\xc6\x27\xfd\x2a\x93\x30\x60\xac\x62\x0a\xc6\x70\x5f\x52\x0b\x74\xa6\x6a\x0b\x46\xf0\x0c\x21\x0f\x41\x59\xf7\xbe\x74\x49\xc8\x6a\x63\xd5\x1c\xe6\x54\x9b\x92\x0a\x81\xda\xfc\xbc\x3f\x43\xd6\x4f\x2f\x12\x07\x68\xf0\xef\xb2\xe3\x06\xb4\x2e\x45\x1e\x07\xad\x4b\xa0\x87\x72\x12\xc0\x0d\xfa\xdf\xd6\x81\xc0\xa6\x68\x77\x90\xed\xda\x4d\x0e\xd9\xf3\xa5\xf5\x3d\x76\x5e\x0a\xa4\xda\x59\x4a\x3a\x3f\xbc\x60\x3e\xb5\xfd\xf6\x09\x21\x87\x5c\xe8\x9d\x50\xb0\x97\xb0\x03\x59\x71\xfd\x68\x95\xf6\xeb\xc4\x3e\x37\xba\x07\x47\x80\x5a\xfb\x95\x8b\xb8\xd6\x8d\xb5\x5b\xba\x2c\x7e\xb5\x71\x87\xb2\x78\xee\x25\x0f\xa6\xc8\xdc\x73\x9b\x95\x4e\x86\xc4\x6e\x7d\xea\xd2\xe5\xfa\xc9\xdc\x6a\x77\xe2\x18\xe0\x9d\xb2\xaf\xdc\x4a\x78\xae\xb5\xd2\xa7\x07\x31\x16\x64\x22\x73\x15\x47\x3b\x84\xf1\x07\xdc\xe2\x8c\xce\x5c\xc9\xb8\x56\xcd\x9d\x96\x68\x04\x8e\x81\x27\xd2\xae\x45\x27\x67\x6b\x7a\x89\x46\xc0\x59\x12\x04\xbc\xb5\x18\xb5\x4e\xfa\x31\x77\x8f\x46\xc9\x50\x6f\x1c\x8c\xef\x47\xa0\x47\xf0\xa8\x07\xfd\x0a\x5b\x01\x4f\xb9\x2c\x6a\x41\xf5\xa3\x31\x07\x37\x23\x56\x57\x82\x67\x8e\x9b\x51\x5a\xbd\xf4\xbb\x79\xaf\x1b\x3f\x20\xfc\x5f\x28\x6b\x26\xc6\x1a\x80\xad\x37\xfd\x50\x04\x1f\xfd\x3a\xc1\x19\x44\xf0\x3f\xb7\x28\x67\x4a\x2e\xc8\xc4\x2a\x1a\x23\xd9\x78\xd6\x69\xc0\x7e\x5f\x18\xe6\xb4\x16\xf6\x09\x30\xa1\xfb\xe7\xf6\x02\xb7\x27\xfd\x5b\xf8\x4c\xdc\x5e\x2f\xa9\x98\xa2\x5e\x60\xc8\x68\x03\x94\xe4\x62\xff\xf4\x7e\x0f\x6b\xb4\xb5\x96\x83\xc3\x42\x69\x0a\x1f\xd0\x5f\x63\x3c\xb2\xed\xd6\xbd\x3b\x32\x4e\x7f\xab\x51\x2f\xe3\x84\x7c\x72\x97\x8e\xb8\x05\x88\x50\xf7\xe8\x28\x8a\x4c\xce\x8e\x26\x64\x6f\x4b\x08\x57\x51\xc7\xea\x57\xea\x8d\xf3\x69\x28\x21\xca\x34\xee\x5e\x59\x3b\xce\x9f\xd3\x02\x35\x84\x00\xfc\x38\xf0\xd3\x89\xea\x70\xe3\xe2\x1a\x19\x28\xb9\xbe\x84\xa9\x0a\xb5\xe7\x4a\xd2\x37\x8b\xc8\xfe\x9a\xde\xcb\x8d\x0d\xa1\x3d\x87\x3b\x72\x29\xc5\xb2\xcd\x67\x4f\xdc\x7c\xb4\xc7\x3c\xf5\x45\x35\x2e\xdd\xb2\xc8\x65\xe1\xee\xd2\x7b\x0b\xcf\xcd\x86\x3e\x4d\x89\x9a\xe7\x39\x79\x1b\xc6\x6d\xfc\xdf\xf5\x8b\xcb\xca\x6f\xd0\xfb\x64\x38\x91\x99\xa8\x19\x9e\xcf\x2b\xbb\xbc\xa2\xc5\x29\x58\x5d\xe3\x68\x4f\xec\x42\xab\xba\x32\xa7\xf0\xf9\x8b\xf1\xcb\xe5\xa1\xe1\xd8\x24\x68\x28\xbb\x7b\xfb\x34\x2b\x71\x4e\x9b\x0d\x2b\x68\x3b\x3a\xd3\x5c\x7b\xdc\x28\x2e\x21\x0e\x06\xa7\x7e\xbd\x20\x09\x5c\x47\xa3\xe8\xfa\xe8\x8d\xed\xd1\x79\xd9\x4f\xa1\x47\x14\xf6\x0c\x35\xf7\xac\xda\x38\xad\x46\x80\xdf\x37\xad\x36\xcc\x61\x50\x73\x2a\xf8\x37\x8f\x17\xf8\x94\x3f\x42\x15\x87\x9b\xe6\x71\x06\xf9\x6b\xcc\xf1\x28\x4f\x1c\x1f\x91\xc1\x28\x3e\x36\x21\x9f\xca\xce\x4d\x0c\x97\xbf\x36\x2e\xdf\x24\x83\xb6\x57\xdb\x2b\xdf\xe6\xd3\x9f\x01\x00\x00\xff\xff\x18\xf8\x95\x3b\x19\x13\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 4889, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
