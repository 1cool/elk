// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/import.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/request.tmpl
// template/http/response.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xdb\x38\x10\xbd\xe7\x57\xcc\x12\x2e\x20\x05\x36\x75\x2f\x90\xc3\xa2\xc9\xb6\x01\xda\x6c\xb7\xc9\x6e\x2e\xbd\xd0\xe6\x48\xe2\x86\x21\xe5\xe1\x28\xae\xd7\xf5\x7f\x5f\x50\x92\x3f\x64\x29\x69\x22\x20\x80\x62\xcf\xbc\x99\xc7\xf7\x38\xe3\xcd\x26\x3b\x87\xc2\xf3\xba\xc2\xf7\x80\x8e\x0b\x2f\x8d\xcf\xd0\x71\xfc\x5b\x64\x05\x3a\xf9\x91\x54\x55\xc2\x79\xb6\xdd\x9e\x9d\x6d\x36\xa0\x31\x37\x0e\x41\x94\xcc\x55\xb6\x20\x54\x8c\x02\xb6\xdb\x33\x00\x80\xcd\x66\x06\x2b\xc3\x25\xe0\x0f\x46\xa7\x61\x02\xe2\xab\x5a\x3c\xa8\x02\x45\x9b\x20\x60\xd6\x85\xb6\xe1\xc0\xf8\x58\x59\xc5\x11\x0f\x95\x46\x12\x20\x0f\x60\x10\x31\x0e\xff\x1d\xc7\xda\x0a\x29\x6b\x5a\x30\x8f\x95\x27\x16\x30\x89\x91\xbb\xd0\x49\xf5\x50\xc0\xfb\x0b\x98\xab\x80\x30\x91\x1f\xbc\xcb\x4d\x21\xbb\x5e\x8e\x20\x49\xb9\x02\x61\xe2\x62\xec\x44\xde\x78\x8d\x01\x8e\x1a\xcc\x32\xf8\xd0\x30\x84\x96\x68\x00\x05\x0e\x57\xfb\x0a\xdb\xad\x8c\xaf\x4e\xde\xa8\xc7\x08\x0b\xca\x69\x08\xec\x09\x03\x18\x06\xe3\x80\x4b\x04\xad\x58\xc5\x46\xe4\x1e\x37\xaf\xdd\x02\x92\x12\x7a\xc9\x9f\x94\xd3\x16\x29\xed\x4a\x26\x2b\x88\xfc\xe4\x37\x0c\x95\x77\x01\xef\xc9\x30\xd2\x14\x08\xce\xbb\xcf\x97\x35\x06\x4e\x61\xb3\x87\x8d\x8f\x8d\x54\x4a\x69\x7d\x21\xef\x0d\x97\xc9\x7f\xaa\x92\xb7\x4c\xc6\x15\x89\x78\x44\x2e\xbd\x16\x53\x10\x6d\x09\x91\xa6\xbd\xdc\x2c\x83\x8f\xc8\x4d\xcf\x95\x0f\xdc\x34\x2e\x7b\x11\x4f\x8a\x40\xf7\xdb\x6e\xa1\xba\x6e\xce\x7a\xd1\xd1\x0e\xe3\xa2\x69\x5c\x78\x8d\x33\x6a\xb3\x66\x73\xaf\xd7\xad\x35\x06\xf9\x26\x07\x87\xa8\xc3\x3f\xca\x1a\xad\xd8\x78\x17\xe5\x12\x07\xe3\x3d\x6b\x8c\xa7\x36\xe3\xb4\x4a\x93\x11\x8d\x35\x28\x97\x65\x70\xab\x9e\x70\xaf\x59\x9f\xfa\xbc\x3d\xd8\x85\x35\xe8\xb8\x2f\xbb\xec\x14\x4b\x4f\xba\xdf\xd9\x2b\x6f\xec\xe5\xe4\x1f\x06\xad\x0e\xbd\x2b\xb0\x7b\x4c\x0e\xba\x01\xcd\xa3\x5a\xf5\x82\x9b\xd8\x68\xa9\xdf\x2e\xc0\x19\x7b\xa2\xf2\xbe\x29\x79\x8b\x3c\x96\x96\x9c\x8f\xc3\xa5\x03\x98\xed\x69\xd3\xbb\xb3\x19\xe7\x82\x1d\x97\x2b\x5d\xe0\x2f\xa8\xe0\x9b\xa8\x74\x62\x4f\x50\xfe\xed\xcc\xb2\x46\x18\x81\x3e\xd0\x6e\xf1\xbf\xd4\xdc\x58\xe2\x16\xf9\x88\xf3\x69\xdd\x21\xe7\x5d\x3d\xb4\xe1\x4d\x75\x7e\xd7\xcd\xd9\x8e\x97\x91\x52\xbe\x50\xe9\x30\xc9\x8e\x9f\x57\x1d\x3e\x4e\x01\x89\x9a\x71\x26\xa3\x41\x13\x8a\x03\x8d\xf1\x07\x27\x69\xfa\xda\x1b\x87\x44\x9e\x66\x65\x9c\x31\xc6\x15\x02\xb4\x59\x30\x88\x4b\xcc\x55\x6d\x59\x40\x52\x91\x71\x0c\x62\xe1\x6b\xab\xc1\x79\xee\x26\x1e\x08\x48\x76\x46\xff\x09\x0f\x38\x57\xf3\x34\x1d\xbd\x3a\xdf\xd0\x7a\xa5\xe3\x0e\xa1\x75\xff\xe6\x2c\x5f\xb8\x39\x7f\xd5\x48\xeb\x24\x95\xf7\x25\x12\x26\x47\xdf\xfd\x04\xeb\x57\x48\x31\xe6\xfa\x32\xc1\x2e\xed\xfa\xf2\x54\xdb\x91\x03\x68\x37\x50\xf4\xe7\x9d\xff\x1c\x7b\xea\x0f\x8c\x81\x08\x59\x06\x57\xaa\x40\x82\x96\x40\x63\x6c\x2e\x15\x83\x22\x84\x38\x3c\x0c\xa1\x06\xef\x76\x47\xe2\x2b\xa4\xc6\x0e\x72\x00\xb5\xdc\x6c\x40\x5e\x39\x6e\x68\x9d\xd6\x7a\xc6\x07\x9d\xbc\x17\xb0\x94\x7f\x3a\xbb\x7e\x59\xdd\x41\xc5\xd7\xab\x3d\x48\x15\x57\x31\x2a\x08\x48\xac\x09\x0c\xc2\x79\x9e\xe5\xbe\x76\x5a\xb4\xef\xc1\xb8\xa2\xb6\x8a\xc4\xd0\xd6\xe2\xb3\x2f\xf6\x89\xad\x77\x72\x10\x71\xd7\x5c\x3b\x4e\xbe\x8b\x77\xe1\xbb\x98\x02\xca\x77\x21\x15\x9d\x6e\x8d\xaa\x03\x09\xd3\x11\xec\x17\x4c\x49\xa8\xf4\xb8\x25\x05\xa8\x9c\x91\xa0\xae\xe2\xcc\x17\x3d\xd4\x81\x5d\xad\xbc\x76\xb9\x4f\x44\xcf\x6f\x0d\x52\x1c\x53\x84\x4e\x23\x61\x5c\x94\x3b\x46\x62\x6f\xbf\xce\xb8\x0d\xbb\xe7\x3d\xd9\xd3\x57\x85\xf5\xbf\xc1\x3b\xf9\x45\x51\x28\x95\xbd\xf3\x9f\xee\xee\xbe\xf6\xd7\x7a\x72\x83\xab\xd1\xad\xda\x06\x25\x98\x4e\x61\x75\x80\x3d\xfd\x81\xb4\x7f\xfb\x3f\x00\x00\xff\xff\x3f\x43\x8e\xd4\xcf\x09\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 2511, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x41\x6b\xdc\x3c\x10\xbd\xef\xaf\x18\x86\xfd\x40\x0e\xb1\x7c\x0f\x7c\xa7\x6e\x48\x16\x4a\x5a\xda\x42\x2e\xb9\x28\xd6\xd8\x16\xd1\x4a\xae\x3c\x6e\x92\xba\xfe\xef\x65\x62\xaf\xb3\x4e\x52\x81\x41\x63\xbd\x79\x33\xf3\x9e\x34\x0c\xc5\x19\xd4\x91\x9f\x5b\xba\x00\x0a\x5c\x47\xed\x62\x41\x81\xe5\x2b\x8b\x9a\x82\xbe\x4a\xa6\x6d\xe0\xac\x18\xc7\xcd\x66\x18\xc0\x52\xe5\x02\x01\x36\xcc\x6d\x61\xc9\x13\x13\xc2\x38\x6e\x00\x00\x86\x21\x87\x47\xc7\x0d\xd0\x13\x53\xb0\xb0\x05\xfc\x6a\xca\x07\x53\x13\x4e\x09\x08\xf9\x0c\x9d\xe0\xc0\x74\x68\xbd\x61\xe1\x23\x63\x29\x21\xe8\x57\x32\x10\x8e\xd7\xe8\x14\xeb\x5b\x4a\xc5\x4b\x0b\xee\xd0\xc6\xc4\x08\x5b\x41\x1e\xa1\xdb\xf6\xa1\x86\x8b\xff\xe1\xde\x74\x04\x5b\xfd\x29\x86\xca\xd5\x7a\xee\xe5\x84\x32\x99\x50\x13\x6c\x83\x60\xb7\xfa\x26\x5a\xea\xe0\xa4\xc1\xa2\x80\xdd\xcb\x84\x90\xe8\x10\x7f\x51\x07\x66\x61\x1f\x47\x2d\xdb\xa0\x6f\xcc\x41\x28\xa1\x4a\xf1\x00\xdc\x10\x58\xc3\x46\x0a\xeb\x85\xa7\xea\x43\x09\xaa\x81\x55\xc2\xb5\x09\xd6\x53\xca\xe6\x12\xea\x11\x64\x1e\xfd\x8d\xba\x36\x86\x8e\x6e\x93\x63\x4a\xe7\x90\xe0\x6c\xfe\xff\xb3\xa7\x8e\x33\x18\x16\x5a\x59\x5e\x5a\x6f\xb4\x8f\xb5\xbe\x75\xdc\xa8\xdf\xa6\xd5\xdf\x39\xb9\x50\x2b\x3c\x10\x37\xd1\xe2\x39\xe0\x54\x02\xb3\x6c\x95\x2b\x76\xfd\x43\x54\x9b\xcb\x38\x79\x9f\x3c\x8a\x3c\xf9\x51\xdb\xe3\xa2\x94\x40\xea\x96\xde\x51\xe0\xb5\x12\x7a\xaa\xf6\x25\xd0\x7e\xa7\x86\x01\x5c\x25\x87\xfb\x9d\xbe\x36\xdd\x55\xfc\xf1\xdc\x0a\x68\xca\xd8\xef\xf4\x1c\x2b\x67\x33\x71\xdc\x77\x12\x39\xbb\xb8\x9f\xe9\xcb\x27\x2a\x55\x12\x13\x99\x9e\x58\x65\xd9\xe6\xed\x14\xab\x58\xd6\xc7\x53\x51\x4a\x31\xe5\x8d\xe8\xee\x42\x8d\x60\x5d\xc9\xef\x52\xf1\x52\x50\x1d\x82\xf2\xae\x63\xc0\x10\x39\xaf\x62\x1f\x2c\x66\xef\xb1\x9f\x63\xbd\x20\x55\x9b\x5c\xe0\x0a\x50\x2c\xd8\x07\x56\x77\xf8\x5f\x77\x87\xe7\xe0\x6c\x86\xf3\xb0\xa2\x50\xf6\x01\xcf\x8e\x2a\xd3\x7b\xc6\x99\x04\xb0\x8c\xbd\xb7\x10\x22\xc3\xf4\xc4\x00\x17\x81\xff\xc0\x03\xdd\x9b\xfb\x35\xcb\x3b\x83\xbc\xde\x87\x2a\x2a\x3c\x71\x66\x4e\x94\xbb\x3a\x91\xca\xd5\x38\x36\x8b\x8b\x21\xb3\x8b\x53\xe3\xeb\x2a\x89\x82\xa5\xa4\x6f\xe2\x8b\x17\x81\xd5\xe3\xeb\xf9\xdb\x47\xbb\xec\xfe\x06\x00\x00\xff\xff\x37\xb6\xe9\xcf\x63\x04\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1123, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xbc\x0a\xc6\x42\x36\x1c\xaa\xdb\xde\x8c\xec\xa5\x69\xb0\x3d\x6c\x83\x20\xfd\x3a\x73\xa5\xb1\x44\x44\x26\x05\x72\xec\x6c\xab\xea\xbf\x17\xa4\x68\x59\x72\xe4\x14\x39\x18\x1e\x6a\xde\xbc\x19\xce\x8c\x9e\xdd\xb6\xd9\x1a\xa5\xe1\xbf\x1b\xda\x82\x34\x97\x46\x28\x93\x91\x66\xff\xc9\xb3\x92\xb4\xf8\x6c\x65\x53\x61\x9d\x75\xdd\x62\xd1\xb6\x28\x68\xa7\x34\x21\xa9\x98\x9b\xac\x92\xba\xa8\xc9\x26\xe8\xba\x05\x00\xb4\xed\x0d\x5e\x14\x57\xa0\x6f\x4c\xba\xc0\x12\xc9\xa3\xcc\x9f\x65\x49\x49\x1f\x91\xe0\x26\x42\x7b\x38\x98\xf6\x4d\x2d\xd9\x13\x92\x2c\x3c\x95\x38\x93\xc1\x73\x9c\x4f\x63\x6c\xdd\x90\xcd\x42\x0d\x6a\xdf\x18\xcb\x09\x96\x1e\x19\xa0\x59\x86\x58\x18\x2a\xe9\xe0\xcc\x9e\x90\x1b\x7d\x24\xad\x48\xe7\x84\x3d\x71\x65\x0a\x87\x83\xa3\x02\x46\x43\x9b\x82\x6e\x62\x84\x13\x81\xc2\x37\x64\x20\x71\x6c\x0f\x39\xa3\x3d\xd3\xff\xa4\x78\x2f\xdd\x33\xd8\x78\xe2\x9d\x2a\x0f\x96\xf0\x52\xa9\xbc\x82\x35\x07\x26\xe7\x3d\x96\x4a\xe5\x98\xec\x88\xf1\xa9\x77\x1e\x94\xe6\x1f\x7f\xe8\xd9\x76\x07\x9d\x23\xb5\x2e\xfa\x56\xbe\xe4\xd4\x0e\xa7\xaf\xc6\xd4\x68\x61\x89\x0f\x56\xc3\xba\x0f\x16\xdf\x7d\xc2\xf7\x88\xb5\xb4\x2d\x96\xcd\x73\x89\xed\x27\x7c\x95\x8e\xb0\x14\x77\xa1\x1e\x11\xdb\x3e\xea\x9e\x95\xba\x24\x2c\xb5\xc7\x2e\xc5\x83\x29\xc8\x61\x34\x8b\xdc\x68\xc7\x48\x87\xf3\x89\x5d\x8b\x07\xb9\xf7\x3c\x77\x96\x7c\xef\xe3\x15\x3e\xe1\x23\x6e\x6f\xa1\x0c\xcb\xeb\x21\x4f\x24\x8b\xeb\xde\x3f\x9a\x42\x32\x5d\xf7\xff\x4c\x35\xbd\xe5\xff\xa2\x1c\x5f\x7a\xe3\x25\x29\x5c\x52\x8b\xfb\xa2\x24\x37\x59\xb9\x59\x26\x7f\xa0\xfe\xf0\x2f\x1a\xe9\x72\x59\xe3\x22\x26\x2e\xe3\x25\xd5\xf4\xba\x43\x6b\x6e\x6f\x7d\x63\x70\x83\x8f\x03\x7a\xb5\x18\xcc\x2c\x9b\xc6\xfd\x32\x2c\xab\xff\x76\xf0\x6b\x8d\xdc\x1e\x0a\x98\x86\xac\x64\x65\xb4\xf3\x7b\x7a\x1a\x76\xd7\x89\x49\xbc\x18\x98\xc3\x92\xcd\x72\x9f\x76\x78\x52\x7d\x5c\xf0\xc5\xe4\x61\x5e\x2b\xd2\xec\xad\x35\x69\x16\x77\xe1\x38\x41\xd4\xa6\x8c\xd6\xfa\x1f\xd9\x88\x2f\xa6\x2c\xc9\x4e\x10\x47\x59\xab\x42\xb2\xb1\x58\x0f\xa6\xf8\xb3\xb7\xce\x13\xed\xce\x89\xc3\x5b\xf0\x40\x2f\x73\xb5\xa7\xf9\xb8\x92\x0d\xea\x71\xda\x0d\x8e\x73\x39\x56\x58\xcf\xb6\x61\x7a\xff\xf8\x56\x7d\x98\x83\xb6\xaf\x56\xa6\x6f\xcc\x36\x98\x9b\x57\xde\xda\x94\xdb\x93\x29\xfe\x52\x5c\xa5\xbe\xc8\xdf\xd8\x2a\x5d\xa6\xc9\x49\x28\x37\x48\xe6\x92\x25\xab\xd5\x6b\xc6\xe1\x56\x5b\x1c\xa7\xde\x6e\xae\x85\x59\x86\xa7\xa8\x38\x91\xd5\x0d\x12\xe4\xc0\x15\xa1\x24\xed\xd7\x89\x8a\xd3\xe0\xc3\x56\x05\x8f\x3a\x92\x46\x5e\xa9\x5e\xbe\xac\x98\x0e\x26\xad\xe6\xdb\xb9\xc2\xaf\xe6\xa0\x39\xb5\x3e\x54\x84\xf5\xb7\x1b\x8c\xb4\x6c\xda\x44\xb5\x83\x75\xc2\xeb\xdb\x8c\xb0\x5c\x82\xc3\x7c\xc4\xa3\x71\x9c\x26\x59\xb2\x41\x25\x22\xee\x4a\x27\xde\x48\xe0\x65\x68\x9e\xfe\x33\x79\xf6\x56\x15\x5d\xc8\x10\x80\xef\xe7\xef\x85\xec\xca\x05\x24\xe7\xd5\x38\x47\x04\xbf\x3f\x4b\x2f\x87\xf3\x59\x7a\xdf\x38\x4d\x44\xbf\x3f\x8d\x57\xd5\xb7\x9a\x15\xd8\x03\xe8\x0d\xee\xf7\x28\xf1\x95\x3a\xe6\x35\x79\xae\x32\x5c\x8c\x32\x1b\x85\x76\x7d\x37\xae\x90\xbd\xa2\xfa\x5f\xcd\xbf\xfc\x67\x72\xfe\x09\x77\x6c\x55\x73\xaf\xf9\xde\x5a\x63\x53\xb2\x16\xe4\xad\x55\x70\xe8\x72\x54\x77\x54\x9d\xfe\xb9\x13\xbf\x5b\xb5\x7f\xb4\xb4\x53\xdf\x7c\x94\xe8\xe3\x57\x1b\x24\x41\x6c\x92\xbe\xc8\x6e\x71\xce\xf9\x5f\x00\x00\x00\xff\xff\xa1\x51\x7e\x4a\xb4\x09\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 2484, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\xdf\x6f\xdb\x36\x10\xc7\xdf\xf3\x57\xdc\x84\x60\x95\x03\x9b\x5a\xb1\xb7\x04\x7d\x68\x97\x76\x30\x10\x74\x59\xb2\xec\x9d\x31\x4f\x12\x57\x89\x54\x8e\x94\x3b\x57\xd5\xff\x3e\xf0\x47\x6c\x45\x56\x1a\x37\xcb\x26\x20\x08\x6c\xdf\x1d\x8f\x9f\xef\xf1\x2b\x76\x1d\x08\xcc\xa5\x42\x48\x4a\xac\x1a\xa4\xac\xb4\xb6\xc9\x04\xae\xb4\xc0\x05\xe1\x5d\x8b\xc6\x2e\x6e\xb5\xd8\x24\xd0\xf7\x47\x00\x00\x32\x07\x24\x82\xd3\x37\x80\xdc\x6c\xfe\x32\x5a\xb1\x1b\x55\x73\x32\x25\xaf\x3e\x90\xae\xaf\x90\x0b\xa4\x94\xd8\x3b\x2d\x36\x73\xf8\x51\xcc\xce\x7c\xc2\x0f\x6f\x40\xc9\x0a\x3a\x5f\xc4\x3d\x15\x7b\x4f\xa4\x29\x4d\xd0\xfd\x03\xbf\xa6\x54\x05\xb8\x92\xc9\x1c\xbe\xf0\x26\x06\x20\xd1\x6c\xb6\x4d\x23\x54\x02\x89\xbd\xe3\xe2\x2a\xb4\x97\x7e\x9e\x03\xcd\x21\x91\x6a\xcd\x2b\x29\x7c\x3e\x18\x4b\x52\x15\xc9\x30\xcd\xb6\xa4\xfc\xc7\xfe\xa8\xeb\x00\x95\x70\x3b\x3a\x7a\x84\x80\x2f\xc5\xed\x98\xc1\x22\x42\xc8\x32\xf8\x33\x46\x80\x2d\x11\x04\xb7\x9c\x8d\xf0\x94\x2c\x16\xd1\xc4\xae\x2d\xb5\x2b\x9b\x3e\xca\x22\x64\xcd\x41\x7f\xf2\x60\x89\x58\x7a\xb2\xcb\x5e\x86\x9d\xc5\x15\xa5\x56\x9e\xcb\xec\xcc\x85\xef\x6a\x4c\x30\x8d\x25\x1c\xd5\xb8\x0f\xdf\xe9\x37\xe8\x0e\x08\x2f\x95\x45\x52\xbc\xba\x46\x5a\x23\x85\xe0\x80\x5a\xc9\x6a\x9c\xb1\x85\x1b\x00\xef\xfa\x59\xaa\x5c\xa7\xc9\x7a\xdb\x3a\xe4\x5c\x56\x28\x9e\x21\xb0\x8b\x7a\xae\x9c\x52\x2c\x72\xd2\xf5\xa2\xa5\x6a\x3b\xc8\x59\x06\xcb\x73\x90\x06\x6e\xae\x2e\xa0\xe1\xc4\x6b\xb4\x48\x41\xc5\xae\x5b\x38\x4d\x8e\xd9\xf2\x9c\x2d\xcd\x52\xd9\xfb\x24\x2f\x96\x98\xdf\x6b\x6c\x2c\xad\xb4\x5a\xb3\xb7\x56\xcb\x74\x55\x4a\x76\x73\x75\x71\xe9\x4a\xa5\x7e\x22\x45\x32\xd8\x57\x9c\x8c\x3d\xed\x27\x74\x2b\xd0\x7a\xd1\xa4\x00\xd7\x36\xb4\x54\xed\x3a\x8c\xe8\xae\xfd\x84\xa7\x6e\x91\x39\x4c\x2f\x7d\x90\xcc\x13\x07\x49\x40\xdd\x1a\x0b\xb7\x08\x5c\x81\x54\x16\x0b\x24\x28\x08\xb9\x45\x82\x2f\x48\x3a\x39\x40\x7e\x27\x4a\x65\xf0\x21\x38\xc7\x6c\xb2\xd7\x6d\x8a\x12\xfe\x90\x3d\x2d\xa9\x27\xb5\x28\xb9\x12\x95\x3b\xe9\x23\x7b\xda\xa3\x6c\x3e\x4b\xbb\x2a\x07\x5f\x38\x89\x89\xab\x02\xe1\x38\x8a\x79\x1c\x50\x99\x61\xcb\x83\x61\xc0\xbb\x10\x99\x28\x6d\x17\xb9\x6e\x95\x48\xc6\x91\xee\x59\x71\x83\x80\xca\xb2\xa5\xf9\xa8\xed\x07\x17\xe7\xe1\x9f\xee\x45\xba\xa7\x36\x45\x9c\x23\xd9\xbc\x57\x76\xa7\xd5\x64\x74\x3c\x4e\xb5\x29\xc6\xd2\x76\xdd\xfd\x66\xd8\x85\x2e\xdc\x16\xe6\x0e\x27\x83\xbe\xdf\xa2\x9c\xae\x19\xc7\x60\xdb\x6b\x18\x82\xda\x14\xb3\x3d\x08\x5e\xcf\x31\x09\x23\x55\xd1\x56\x9c\x0e\x80\x71\x1d\x43\x5f\x90\x47\x08\xf8\x2f\x80\xec\x9d\x8b\xc3\x90\x34\x24\xd7\x7c\xb5\x99\xa4\x91\x65\x70\x19\x7e\xf6\x60\xf6\x8b\x85\x89\xff\xc6\x57\x02\x73\xde\x56\xf6\x74\xda\x3c\xba\x0e\x8e\xd9\x79\x08\x81\xbe\xdf\xf3\xd8\xef\x67\xf2\x7d\xaf\x82\xfe\xb9\xf6\xdc\xf0\x42\x2a\xff\x7a\xd8\xbd\x62\xbb\x2e\x3b\x81\x42\xdb\x4d\x83\xa7\x6e\x84\x0a\xcd\xa4\xce\x50\x59\xf7\xb7\xca\x0a\x54\xec\x8f\x4d\x83\x70\x92\xc5\x84\x86\x17\xe8\x66\xe7\xf5\xbd\x0f\x78\xb7\x21\xe7\x35\xec\xf7\x16\x69\x93\xce\xd8\xaf\x68\xd3\xc4\x05\x26\xb3\x33\x10\xce\x25\x92\x64\xe0\x09\xee\x97\xe0\xed\x23\x6b\x17\x87\xda\x78\x78\xdd\x05\x17\x6f\x38\xb9\xc3\x01\x77\x6e\xf1\x9d\x7f\xc3\x2b\xb7\xcc\xab\x91\x8d\xfb\xa6\xe6\x20\x9e\x6b\xda\x7e\xf7\x2f\x60\xdb\xd1\x45\x2d\xd6\xe6\x12\xe9\x32\x32\xfd\xf9\xa7\xa7\xa0\x0e\x33\xa6\xe1\x0e\x23\xfe\x07\xc8\xc3\xe5\xc6\xb0\x1f\x34\xfb\x2f\xa0\x3f\xc0\xf4\x62\xf0\xd1\x6c\xef\x17\x77\xec\x42\xd6\xd2\xa6\xc3\x85\x66\xec\xb7\x3c\x37\x68\xd3\xd4\x6b\xbe\x80\xd7\x33\x38\x81\x87\x11\x6f\xab\x2a\x25\xf6\x8b\x56\x16\xff\xb6\x69\xdc\xce\x63\x50\x47\x97\x8f\x1c\xed\xaa\x74\x48\xbd\x9d\x7c\xe4\x35\xc2\x57\xf8\x84\xb7\xfc\x16\xbe\x42\x53\xb5\xc4\xab\xbe\x0f\xf7\x12\x71\xfb\xf4\x3d\xee\x40\xef\x98\x76\x8c\x7f\x02\x00\x00\xff\xff\x2e\xf2\xdc\xc3\xa0\x0c\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 3232, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpImportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xb1\x6a\xc4\x30\x10\x44\x7b\x7f\xc5\x22\xae\x48\x0e\xe2\x4d\x8a\x34\x07\xa9\xd3\xe5\x1f\x14\x6b\x22\x09\x64\xad\x90\xf7\x0c\x87\xf0\xbf\x07\xc5\x84\xb8\xc8\x2d\x4c\x31\xcb\x9b\x61\x5a\xe3\x33\x79\xd1\x5b\xc1\x85\x90\xd5\xcb\x18\x85\x91\xb5\x6b\x62\x8f\x3c\xbe\x57\x5b\x02\x9d\x79\xdb\x86\xa1\x35\x72\xf8\x8a\x19\x64\x02\x52\x41\xe5\xa0\x5a\x38\xce\x45\xaa\x1a\xda\xb6\x81\x88\x68\xb7\xf4\xf0\x63\xfa\xb5\x46\xd5\x66\x0f\x3a\x65\xba\xbc\xd1\x69\xfc\x10\x87\xe5\x17\x3f\x50\x8a\xb9\x24\xab\x20\xb3\x77\x70\x1f\xb6\x98\x9e\x3b\xc0\xad\x11\xb2\x3b\x7e\x8c\x8f\x1a\xae\x9f\xe3\x24\x33\x7b\x79\x2a\xc9\xde\x7c\x95\x6b\x76\xbc\xda\x14\x9d\x55\xa9\xbc\xbe\x3c\x9b\x7b\x81\x29\x44\xee\x5a\x5f\xff\x47\x66\xbb\x2c\x40\x9a\x02\x57\x64\x87\xba\x53\x8f\xc3\xdf\x92\xef\x00\x00\x00\xff\xff\x96\x48\x41\x5d\x49\x01\x00\x00")

func templateHttpImportTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpImportTmpl,
		"template/http/import.tmpl",
	)
}

func templateHttpImportTmpl() (*asset, error) {
	bytes, err := templateHttpImportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/import.tmpl", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\x4f\x6f\x22\x39\x10\xc5\xef\xf9\x14\x4f\x16\x87\x06\x81\xfb\x1e\x69\x4f\xab\x68\x13\x29\x1b\x65\xb3\x48\x39\x17\xb8\xe8\xf6\xa4\xb1\x9b\x72\x75\x18\xa6\xc3\x77\x1f\x99\xf0\xaf\x93\xb1\x64\xc9\xa0\x57\xbf\x7a\x54\x3d\xfa\xbe\x9c\xa0\x8a\xba\x6b\xf9\x16\x1c\xb4\x8a\xd6\xc7\x92\x83\xe6\xbb\x2c\x2b\x0e\xf6\x1f\xa1\xb6\xc6\xa4\xdc\xef\x6f\x6e\xfa\x1e\x8e\x57\x3e\x30\x4c\xad\xda\x96\x8d\x4f\x6a\xb0\xdf\xdf\x00\x40\xdf\xcf\xb0\xf5\x5a\x83\x7f\x2a\x07\x87\x11\xcc\x33\x2d\xdf\xa8\x62\xf3\x29\x37\x98\x1d\xa5\x9f\x72\x28\xaf\xdb\x86\x34\xd3\x98\x1c\x8b\x81\xbd\xc0\x90\x19\x97\x4f\xd7\xda\xa6\x65\x29\x0f\x06\xfc\xba\x8d\xa2\x06\xa3\xac\x3c\x49\x47\xed\x5b\x85\xdb\xbf\xb0\xa0\xc4\x18\xd9\xbf\x63\x58\xf9\xca\x1e\xbd\x5c\x21\x85\x42\xc5\x18\x85\xac\x1d\xd9\xa7\xe8\x38\xe1\xca\x60\x59\xe2\x85\xc9\x61\xc5\xba\xac\x39\x41\x6b\x3e\xd3\xf7\x7b\x9b\x9f\xc1\x3e\xd1\x3a\x23\xe1\x1d\x07\xf5\x2b\xcf\x0e\x8b\x1d\x08\x95\x7f\xe7\x80\x4e\x9a\x59\x4b\x42\x6b\x56\x16\xac\x24\xae\x33\xe5\xba\x83\x23\xa5\x83\x4f\x0a\x0e\xc2\xda\x49\x48\xf0\x0a\x8d\x87\x7e\xcb\xc6\x73\x50\x7b\xae\x58\x75\x61\x89\xa2\xc6\x64\xd0\xfd\x9e\x82\x6b\x58\xc6\x78\xf4\x49\x8b\x2d\xf2\x68\xec\x0b\xa7\x36\x86\xc4\xaf\xe2\x95\x65\x0a\xc1\xe4\xf8\xfd\xa6\xe3\xa4\x63\xf4\x67\x6a\x3e\x4d\x9e\x42\x6d\x9b\x58\xd9\x57\xaf\x75\xf1\x8b\x5a\xfb\xbf\x8a\x0f\x55\x61\xd6\xac\x75\x74\x66\x0a\x93\x1b\x98\xf1\x78\x50\xb9\xf9\xac\x3c\x5a\x1d\x18\xb3\xff\x75\x2c\xbb\x62\xa8\xbf\xe4\xc4\x55\x9c\xe6\xf1\x31\x92\xcb\x5b\x30\x83\x34\x5d\x9f\xb2\xc4\x1d\x55\x2c\x68\xb2\xf4\x50\x06\xad\x49\x41\xc2\x10\xde\x74\x5e\xd8\x21\x06\x64\x02\x62\xcb\x42\xea\x63\xb0\xdf\x40\x9b\xbe\x87\xbd\x0b\x7a\xb0\xf5\xb5\x53\xf6\x75\x95\xb9\xd3\x79\x27\x01\xcb\xe1\x46\xf9\x56\xf0\xe7\x58\xb6\x54\xf9\x70\xf0\x60\xf2\x2f\x9b\x9d\xc2\x79\x1e\xb6\x7d\x08\xab\x58\x98\xab\x61\x7d\xe0\x8d\x17\xb4\xc0\x07\xda\xa6\x13\x6a\x72\xa8\x84\x83\x63\xe1\x3c\xf9\xbc\x8e\x87\xa0\x85\xa1\x75\xec\x82\x9a\x29\x1a\x0e\x05\xa7\xf1\x97\x65\x30\xa5\xdd\x8f\x14\x83\xfd\x97\x24\xd5\xd4\xcc\xe3\xfd\x7c\xfe\x3c\xcc\x42\xf1\xc4\xdb\xc1\x9a\xf2\x56\x4f\x92\xcc\x9c\x62\x7b\xa1\x7e\xfd\x3f\x9e\x5f\xbf\x03\x00\x00\xff\xff\x77\x64\xfd\x5a\x3c\x04\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1084, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x51\x6f\xe3\x36\x0c\x7e\xef\xaf\x20\x84\x0c\xb0\x8b\x44\x79\x3f\x60\x4f\xd7\xe2\x1a\xe0\xd6\xdd\x6e\x01\xfa\x72\x2f\x4a\x44\xdb\x5a\x15\xc9\xa1\xe8\xe5\x32\x2f\xff\x7d\xa0\xed\xb8\x76\xd3\x19\x08\x60\x45\xdf\xf7\x91\xfc\x48\xba\x6d\xd7\xf7\x50\x46\x3e\xd7\xf8\x09\x30\x70\x19\xb5\x8b\x6b\x0c\x2c\xbf\xfd\xba\xc4\xa0\xbf\x90\xa9\x2b\xb8\x5f\x5f\x2e\x77\x77\x6d\x0b\x16\x0b\x17\x10\x54\xc5\x5c\xaf\x09\x8d\x55\x70\xb9\xdc\x01\x00\xb4\xed\x0a\x4e\x8e\x2b\xc0\x9f\x8c\xc1\xc2\x02\xd4\x37\xb3\x7f\x35\x25\xaa\x1e\xae\x60\x35\x40\x7b\x38\x30\x1e\x6a\x6f\x58\xd4\xd0\x58\x24\x05\xfa\x4d\x0c\x44\xe3\xed\x34\xc5\xfa\x1a\x69\xdd\x25\xe0\x0e\x75\x24\x56\xb0\x10\xe4\x15\xba\xa8\x5f\x4b\xf8\xf4\x2b\xec\x4c\x42\x58\xe8\xcf\x31\x14\xae\xd4\x43\x2e\x13\x49\x32\xa1\x44\x58\x04\xc1\x2e\xf4\x73\xb4\x98\x60\x92\xe0\x7a\x0d\xdf\xd1\x58\x28\x90\xf7\x15\x26\xe0\x0a\x47\xf5\xcb\x45\xcb\x6b\xd0\xcf\xe6\x20\x92\xe0\x2c\x06\x76\x85\x43\x0b\xbb\x33\x18\x28\xdd\xdf\x18\xa0\x21\xbf\xaa\x0d\x99\x03\x32\x12\x14\x14\x0f\xa2\x32\x8d\x60\x0d\x9b\x2e\x4f\x13\x2c\x10\x06\x8b\x94\xc0\x31\x70\xec\xe2\xed\xbd\xc3\xc0\x7a\x64\x14\x4d\xd8\x43\x56\xc1\xfd\x2c\xfa\x93\x09\xd6\x23\xe5\x5d\xbe\xd9\x09\xc4\x1a\xfd\x1d\x53\x1d\x43\xc2\x17\x72\x8c\xb4\x04\x82\xfb\xe1\xff\x63\x83\x89\x73\x68\x47\x55\x79\xbc\xb8\x50\x69\x1f\x4b\xfd\xe2\xb8\xca\xfe\x31\xb5\xfe\x93\xc9\x85\x32\x53\x07\xe4\x2a\x5a\xb5\x04\x25\x01\x54\x9e\xcf\x98\xd2\xf7\xff\xe9\x8e\x5d\x49\xcd\xab\x86\xbc\x12\x9f\x57\xd7\x26\x4d\x0c\xf8\x4c\x28\x3c\x29\xf6\xd8\x20\x9d\xa5\xf2\xce\xf1\xd1\xef\xb1\xcc\x19\xf5\xd8\xe7\x3b\x18\x34\xc3\xe9\x3f\x44\x28\xcb\xf5\x4b\x85\x84\xd9\xe4\xee\x5f\xf0\xf1\x84\x24\x98\xcd\x83\x5c\xb8\x42\xee\x36\x0f\xfa\xc9\xa4\x2f\x71\x7b\xae\x85\xdf\x13\x36\x0f\x7a\x38\x67\xce\xe6\x32\x8f\x3e\xc9\xc9\xd9\x71\x36\xf3\xfc\xee\xc6\x89\x7e\x03\x6c\x89\x69\x1b\xbf\x46\x63\xa5\x6e\x35\xdb\x93\x77\x06\x3c\x9a\x12\x09\xbc\x40\x3b\x1a\x70\x65\x18\x0c\x21\x10\x1e\x1b\x47\x68\x21\x06\x10\x05\x88\x35\x92\x61\x17\x83\xbe\x11\x3a\xb6\x2d\xe8\xc7\xc0\x5d\xe9\xef\x23\x49\x5e\x93\x6d\xba\x3e\xb8\x04\x24\x12\x1f\x8f\xfa\xf7\xe0\xcf\x19\xc9\xae\x30\xfe\xe4\xec\x83\xca\x6e\x42\x7e\xdc\x73\x24\x8a\xb4\xaa\x64\x22\x5d\x28\x15\x58\xb7\xe7\x1b\xaa\x7a\x14\x54\x52\x90\x79\x97\x18\x54\x88\xbc\x2a\x62\x13\xac\xea\xdf\x93\x0b\x65\xe3\x0d\xa9\xfc\x96\xfa\x35\x96\x23\x31\xab\xc9\x05\x2e\x40\xc9\xb4\x6e\x02\x67\x3f\xd4\x2f\xe9\x87\x5a\x82\xb3\xb9\x1a\x9a\x28\x8d\xcf\x3f\xd0\x79\xc0\xc2\x34\x9e\xd5\x20\x02\x6a\x1f\x1b\x6f\x21\x44\xee\xcd\x56\x93\xa9\x79\xc5\x9d\xd9\xcd\x35\x6e\x66\xd9\xeb\x4d\x28\x62\xa6\x66\xe3\xd6\x11\xe5\xfb\xd0\xaf\x36\xca\x12\x5d\x73\x55\xe3\x9c\x0d\x73\xdb\xe7\x3d\x0f\x83\x26\x9d\xff\x4a\x31\xe8\xdf\x0c\xa5\xca\xf8\x6d\x7c\xda\x6e\xbf\xcd\x77\x3b\x7b\xc6\xd3\x6c\x01\x64\x4b\xaf\x90\x0c\xf3\x25\x9c\xde\x44\xdf\x7f\x5e\xc7\xb7\xff\x02\x00\x00\xff\xff\xa2\xee\x05\x09\x0b\x06\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 1547, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x0c\x08\x17\x90\x02\x9b\xbe\x2f\xd0\xd3\x26\xed\x06\x48\xd3\xed\xd6\x45\x2e\x7b\x61\xc4\x91\xc4\x86\x26\xe5\xe1\xa8\x5e\x57\xab\xff\x5e\x50\x92\x1d\xcb\x96\xf6\xb0\xd8\x12\x08\x20\x25\x8f\x6f\xbe\xde\x9b\xa8\x69\xd6\xb7\x50\x78\x3e\x54\xf8\x0e\xd0\x71\xe1\xa5\xf1\x6b\x74\x1c\x7f\xb2\x75\x81\x4e\xfe\x4a\xaa\x2a\xe1\x76\xdd\xb6\x37\x37\x4d\x03\x1a\x73\xe3\x10\x44\xc9\x5c\xad\x09\xad\x62\xe3\x5d\x10\xd0\xb6\x37\x00\x00\x4d\xb3\x82\xbd\xe1\x12\xf0\x0b\xa3\xd3\xb0\x00\xf1\x51\x65\xaf\xaa\x40\xd1\xdf\x11\xb0\x1a\xa0\x3d\x1c\x18\xb7\x95\x55\x1c\x29\x51\x69\x24\x01\xf2\x8d\x0c\x22\xc7\xdb\xdb\x39\xd6\x56\x48\xeb\x2e\x0b\xb3\xad\x3c\xb1\x80\x45\x44\x1e\xa1\x8b\xea\xb5\x80\x77\x3f\xc3\x8b\x0a\x08\x0b\xf9\xde\xbb\xdc\x14\x72\xc8\xe5\x8c\x92\x94\x2b\x10\x16\x2e\x62\x17\xf2\xc9\x6b\x0c\x30\x4e\x70\x40\x60\x87\x70\xf2\x5e\x17\x63\x48\x3c\xeb\x75\x17\x13\xe5\x93\xda\x22\x7c\x85\x4a\x85\x4c\x59\x68\x5b\xc8\x91\xb3\x12\x03\x70\x89\xa7\xb4\xda\x56\x9e\xa1\xdb\x16\x14\xb3\xca\x4a\xd4\xc0\x7e\x0a\xe8\x8e\xc0\xcb\x98\x46\xa3\x63\x93\x1b\xd4\xf0\x72\x00\x05\x85\xf9\x07\x1d\xd4\x64\x57\x95\x22\xb5\x45\x46\x82\x9c\xfc\xb6\x23\xd5\x8a\x55\xd7\x0d\xe5\x34\x10\x3a\x8d\x14\xc0\xf0\x31\x66\x66\x0d\x3a\x96\xa3\x10\x79\xed\x32\x48\x4a\x18\x25\xf1\x41\x39\x6d\x91\xd2\x99\x8a\x93\x3d\xc4\xa9\xc8\x4f\x18\x2a\xef\x02\x3e\x93\x61\xa4\x25\x10\xdc\x0e\xbf\xdf\xd5\x18\x38\x85\x66\x14\x2a\x1e\x1b\x5b\x5c\x4a\xeb\x0b\xf9\x6c\xb8\x4c\xfe\x55\x95\xfc\x93\xc9\xb8\x22\x11\x5b\xe4\xd2\x6b\xb1\x04\x31\x1d\x56\xa4\xe9\x15\x5f\x14\xe3\x8c\x64\xf4\x2a\xf6\x65\x55\x93\x15\x71\xf8\xab\xa3\x72\x2e\x1a\xfc\x9e\x30\xde\x8d\xfd\xd9\xd5\x48\x87\xd8\xac\x6e\xa2\xa7\x31\x9d\x32\x79\xc5\x17\xf5\x72\x3d\x4c\x13\xce\xbb\xf7\x06\xbb\x8a\xb6\xeb\x8b\x1f\xc6\x30\xea\xb8\xfc\x23\xc6\x4e\x52\xf9\x5c\x22\x61\x32\xe2\xb3\x7e\x8f\x14\x31\x0f\x77\x89\xd1\x69\xda\x63\x67\x46\x33\xdd\x22\x93\x47\xf0\x5f\xce\xec\xea\x2b\x91\x9d\xe3\x7a\x5f\x47\xf9\x6f\xfc\xa3\x57\x3a\xde\xda\x1c\x2a\x04\x41\xa8\xb4\x98\xbb\x3a\xb4\xf2\x5e\x15\x48\x60\xe3\xbd\x8e\x03\xb8\x54\x0c\x8a\x10\x08\x77\xb5\x21\xd4\xe0\x1d\x44\x26\xf0\x15\x52\xb7\x57\xe4\x2c\xe1\xae\x69\x40\xde\x3b\xee\xaa\xfd\x56\xd2\x67\x0b\xe4\xf2\xe0\x12\x90\x28\xb6\x7d\x27\x7f\x77\xf6\x90\x50\x5c\x13\x8c\x5f\x38\x49\xd3\x6b\x39\x0c\x8c\xb3\x29\x4d\x2b\x0d\x89\x3c\xad\xca\xe8\x19\xe3\x0a\x01\xda\x64\x3c\x4b\x21\xee\x23\x3a\x08\x48\xac\x09\x0c\xc2\x79\x5e\xe5\xbe\x76\x5a\xf4\xcf\xc1\xb8\xa2\xb6\x8a\xc4\xf5\x20\x4f\x14\x8f\xbe\x38\x11\x24\x15\x19\xc7\x39\x88\xe8\xa4\x07\xc7\xc9\x67\xf1\x53\xf8\x2c\x96\x60\x74\x1a\x75\x2f\x1f\xee\x3a\x91\x4c\x78\xe7\xc4\x77\x87\xb9\xaa\x2d\x8b\x81\x0c\x44\xe6\x6b\xab\xc1\x79\xee\x87\x25\x2e\xc5\x3d\xcd\x35\xe9\xb0\x78\xac\x7c\x70\xb9\x4f\x06\x5b\x47\x3d\x5d\x39\xaa\x5f\x56\x18\xdd\x7f\x2c\x44\xf4\x26\x18\xf2\x8f\xfe\x5f\x02\xca\x33\x8e\x87\xbb\xb8\x3a\xea\x8c\x7f\x31\x68\xa3\x04\x66\x6a\x44\x15\x0e\x7f\x07\xef\xe4\x6f\x8a\x42\xa9\xec\xc6\x7f\xd8\x6c\x3e\x8e\x97\x57\xf2\x84\xfb\xcb\xf4\xda\xf6\x13\x2a\x7d\xc4\x25\x98\x2e\x61\x3f\x6d\x2f\xb4\xe1\x3b\x6d\x15\x67\xf8\x63\x6c\xd5\xa9\xe1\x7f\xb0\xd5\xec\xdf\xa7\xcd\x50\xa9\xc2\xb8\x2e\x05\x71\xaa\xf2\xbb\x85\xf1\x15\x2a\x5b\x53\xff\x5f\x76\x4a\x21\x6a\xeb\x6b\xc7\x62\x09\x16\x5d\x82\x21\xfd\xe1\x02\x78\x34\x81\xdf\x04\x10\xbe\xa1\x80\xeb\x1d\x34\xfa\xc2\x18\x7f\xe4\x0c\x6f\xa7\xa7\xff\x02\x00\x00\xff\xff\x93\x5b\x7f\xdd\xa4\x09\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 2468, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRequestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x41\x6f\xdb\x3e\x0c\xc5\xef\xfd\x14\x0f\x82\x0f\x49\xf0\xaf\xfc\x3f\x07\xd8\xa1\x58\xbb\xad\xc0\xb6\x16\x6b\x76\x1a\x06\x94\xb1\x69\x47\xab\x23\xa9\x92\xd2\x36\xf0\xfc\xdd\x07\xd9\x4e\xec\xa5\x29\xd0\x61\x3b\x04\x88\x08\xf2\xe9\xf1\x47\xca\x75\x8d\x9c\x0b\xa5\x19\x62\x15\x82\x4d\x1d\xdf\x6f\xd8\x07\x81\xd3\xa6\x39\x01\x80\xba\x4e\x67\x28\x4d\xd8\x5a\x9e\x83\x75\x28\x8d\x54\x26\x65\x1d\xe2\x2f\x4b\x4b\xd6\xf2\xbd\x23\xbb\xc2\x2c\xdd\x57\x9c\xe2\x51\x85\x15\xf8\x29\xb0\xce\x91\x40\x5c\x53\x76\x47\x25\x8b\xee\x92\x41\xbc\x4b\x47\xe0\xb5\xad\x28\x44\x0f\x4c\x39\x3b\x01\x89\xbd\x18\xa2\xc6\x70\x1a\xe7\x56\x96\x5d\xda\xda\x56\x6b\x6b\x5c\x10\x48\x62\xe6\x2e\xd5\x91\x2e\x19\x89\xc6\xfc\x0d\x12\xf9\xd9\xe4\xec\xf1\xf2\xc5\x83\xd8\x9e\xc1\xae\x01\x0d\x71\x96\x05\x65\xb4\x80\xc8\x1c\x53\x60\xf1\xf7\x42\x1b\x9b\x8f\x85\x22\xb5\xbe\xd3\xa1\xe7\x93\xf1\x78\x8e\x09\xbf\x7e\x48\x8b\xad\xe5\x61\x46\x69\x8a\x6b\xda\x56\x86\x72\x98\x02\x14\x5b\x58\x92\x67\x24\xf2\xad\xd1\x85\x2a\x65\x3f\x31\x34\x8d\xac\xeb\x48\x8f\xd6\xf1\x80\xf6\x70\x93\x19\xcb\xb2\xeb\x24\x06\x7b\x3b\xb2\x95\x8e\x26\x30\xae\x79\x5e\xf2\x13\x96\x7c\x46\x15\x9a\xe6\x4b\x57\x0a\x1f\xdc\x26\x0b\xa8\x47\x50\xd3\x19\x16\x57\xe7\x57\x73\x7c\xa0\x07\xa5\x4b\x50\x55\xc1\x1a\xa5\x03\x3b\x8f\x15\x3b\x86\x67\x5e\x7b\x68\x13\xe0\x54\xb9\x0a\x12\x9f\x68\xbb\x64\x84\x95\xf2\xc8\x48\x63\xc9\xc8\x8d\x66\x28\x0d\xd2\x26\xac\xd8\xe1\x91\xb6\x90\x52\x0e\x24\x76\xec\xfb\x65\x29\xba\x65\x79\xa7\xb8\xca\x7f\xdb\x96\x5d\x9e\x2a\x60\x1c\x26\x9a\x0f\x9b\xda\x0d\x74\x8a\x49\x74\x94\x14\xf2\x72\xbd\xde\x04\x5a\x56\x3c\x3d\x14\xea\xb7\x26\x29\xe4\x4d\xdb\x77\x7b\x5d\x24\x39\xeb\xa2\xed\xb0\x9a\x06\xb7\x3f\xbc\xd1\x73\x51\xd7\x50\x3a\xe7\x27\x4c\xbc\xad\x54\xc0\x24\x50\xf9\xd1\x98\xbb\x8d\x1d\x24\x16\x54\x42\xc4\x74\x31\x85\xf8\x4f\x4c\xf1\x3f\x9a\x46\x1c\xb9\xb5\x7f\x9c\x0f\x54\xa9\x9c\xa2\xf3\x05\x95\x3e\xea\x9c\x69\x6d\x42\x1b\xf1\xf2\xa2\xba\x3b\x32\xe7\xbe\x86\x5b\x47\xf1\x89\x8a\xfd\xaa\xde\x3e\x03\x35\x7a\xb6\xe3\xd0\xe9\x71\xee\xdc\x71\xbf\xc8\x4b\x3e\x82\x1d\x09\x1f\x90\x8a\x48\x8a\x18\xfe\xaa\xd5\xfd\x26\xc2\x8a\xe8\xb8\xf2\xf1\xef\xb7\xef\x7b\x5f\x5d\x6d\xe4\x29\x2f\xcf\xff\x84\x2b\xbf\x9e\xeb\x8b\x4c\xf9\x5f\x31\x3d\xe0\x39\xfe\x44\xfc\x0a\x00\x00\xff\xff\x21\x30\x93\x5b\xc1\x05\x00\x00")

func templateHttpRequestTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRequestTmpl,
		"template/http/request.tmpl",
	)
}

func templateHttpRequestTmpl() (*asset, error) {
	bytes, err := templateHttpRequestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/request.tmpl", size: 1473, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpResponseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x51\x6f\xdb\x36\x10\x7e\xef\xaf\x38\x08\xee\x90\x04\xb1\x84\xbe\x06\xc8\x43\xb1\x76\x45\x81\xa2\x18\x92\x6c\x2f\x46\x80\x31\xd2\x49\x26\x22\x53\x8a\x48\x27\xd9\x14\xff\xf7\x81\xa4\x44\x51\x12\x25\x4b\xb6\x83\x3d\xec\xa1\x40\x15\x1f\x8f\xbc\xef\xfb\xee\x78\xc7\xb2\x84\x08\x63\xca\x10\xbc\xb5\x10\x79\x50\x20\xcf\x33\xc6\xd1\x83\xe5\x6e\xf7\x01\x00\xa0\x2c\x83\x0b\x48\x32\xf1\x77\x8e\x57\x80\x4c\x24\x99\x4f\xb3\x00\x99\x90\xff\xc2\x20\x41\xe6\x7f\x2b\x48\xbe\x86\x8b\xc0\xac\x58\xc2\x0b\x15\x6b\xc0\x57\x81\x2c\x82\x05\x78\xbf\x93\xf0\x91\x24\xe8\xe9\x5d\x1a\xe7\xda\x1c\x04\x6e\xf2\x94\x08\x79\x08\x24\x11\x16\x1e\xf8\x60\x9c\x81\xf4\xd1\x7c\xd9\xb6\x69\x8e\x45\xa0\xce\x4d\x37\x79\x56\x08\x0f\x16\xd2\xb2\x36\x2d\x08\x4b\x10\x16\x0c\xae\xae\x61\xe1\xff\xcc\x22\xe4\x30\xbc\x71\xe3\xac\x01\xa1\x8e\x80\x81\xf7\x39\x14\x34\x63\x1e\x78\x61\x81\x44\xa0\x77\x02\x4f\x05\x92\xe8\x14\x7e\xb6\x79\x74\xa2\x13\xa5\x94\x0b\x0f\x2c\x1e\x2b\xec\x1b\x16\x3e\xd8\x8a\x71\xfa\x9d\x21\x1c\xf9\xdb\x6d\x98\xe5\xd8\x88\x27\x08\xe0\xa6\x72\x05\x59\x0c\x44\x46\xf2\x40\x38\xc2\xc2\xff\x35\x63\x31\x4d\xfc\x4a\x4b\xb0\xdb\xf9\x65\x29\x79\x25\x1b\xf9\x01\xea\x43\x79\xf3\x75\x3c\xf2\x8f\x05\x3e\x6d\x91\x0b\x5f\xf9\x96\xdb\x81\xbd\xa6\xbf\xe4\x0d\x72\xc2\x43\x92\xc2\x6e\x67\x8e\x51\x96\x40\x63\xc0\xa7\xae\xad\x41\x6b\x75\x6f\xf0\xe1\xa2\xd8\x86\x02\x4a\x8b\x88\xe5\x1e\x26\x82\x98\x62\x1a\xf1\x4a\xbb\xf6\x3a\xad\x5f\x8c\x12\xe4\x77\xd9\x8f\x8c\x44\xb0\xf0\xef\x64\x0c\xbd\x38\xcd\xb2\x89\x5b\x2a\x9f\x56\x96\x75\xe8\x96\x9f\x26\x8d\x96\xb0\x90\x81\xca\x24\x1a\xc1\x40\x19\xc7\x5b\x16\xc2\x4f\x7c\x99\x8d\xf1\x99\xb2\xba\xc1\x10\xe9\x33\x16\x15\x9b\x34\xae\x76\x6e\x21\x7c\x31\x55\x10\xe7\x95\x0f\x96\x09\xe3\xe7\xc2\xb8\x39\x40\x06\x2d\xa4\x16\x28\x52\x05\xc9\x1c\x76\xe4\x42\x2b\xaa\x16\x6b\x85\xf4\xb6\x21\x8f\x15\x16\x73\x8e\x76\x09\x29\xb2\x1e\x84\xe7\xe7\x2d\xff\x71\x56\x00\x95\x7b\x68\x55\xf5\x01\x6f\x59\xb7\x25\xa8\x82\xed\x9c\x77\xae\xda\x02\x8e\x42\xc8\xd2\xfe\x5a\x15\x1e\x5f\xd6\x9d\x10\x39\xcf\x0a\x0f\xce\xf2\x82\x32\x11\x83\xf7\x91\xaf\xe8\xbd\xff\x55\xeb\xb3\x39\xe1\x39\x78\x3f\xf0\x19\x53\x0f\x3e\xb9\x0e\xd2\xd1\x6e\x0b\xd7\x15\xbd\x87\x6b\xd0\x89\xd9\x0f\xf2\x98\x1c\x75\x83\x35\x3b\x5f\x0f\x41\xb3\x93\xbb\x13\xb1\xd8\x0d\xc6\x3f\x78\xa0\x49\xb8\xd4\xdc\x0e\x7a\xa9\xef\x9a\x41\x03\xef\x5b\x91\x6d\x73\x45\xb9\x86\x4a\x7f\x0f\xdb\x0f\x49\xa7\x25\x1a\xe7\xf2\xbd\x04\x8e\xa9\x5d\x5b\x82\x12\xa8\x7f\xab\x34\xf5\x9b\x84\x00\x76\xbb\x2b\xf7\x0f\x6f\x90\x66\x2f\x2a\xc5\x3e\x5d\xce\xe6\xeb\xc3\xf0\x57\x81\x62\x5b\x30\x28\xda\xf5\x3b\xe5\xe8\xba\x0e\xc6\x03\x3b\x65\x0a\xdb\x55\xc5\xab\xf2\x78\x24\x79\x07\x82\xaf\x82\xfb\x65\x76\x29\x74\x56\x31\x27\xec\xc7\x0b\x7b\x54\xd4\x73\x04\x6d\x81\xd8\xa0\xd7\x17\x83\x9b\xb8\x29\x15\xfa\x64\x7a\x1d\xa0\x6b\xa4\x89\x98\xde\x39\x06\xba\x1d\x9e\xd1\x3e\xaa\xda\x6a\x8d\x1d\x93\x5b\xde\x5e\x0f\x6e\xb1\xf5\x99\xb1\x4c\x10\xf9\x2b\xf7\xbf\xa6\x8f\xb7\xe1\x1a\x37\xc4\xbf\x41\x12\x69\x9b\x79\xed\xb0\xb9\x38\x8e\x08\x6b\x09\x0b\x41\x12\x3d\xc4\x7c\xff\x52\x91\x75\x47\x12\x9d\x13\x6a\xd2\x92\x06\x5c\x5b\xd8\xe7\x57\x8c\x72\xe7\x0a\xca\x22\x7c\xad\xd6\x29\xb7\x56\x96\xc9\xdd\xae\xd5\x05\x63\xb7\x4b\xed\x31\x4c\x36\x56\x88\x11\xbf\xc5\x82\x92\x94\xfe\xa3\x76\xd4\x9e\x3a\x08\xc2\x59\x3b\x05\xe0\x4d\x5e\xc6\x94\x25\xb7\x29\x0d\xf1\xbc\xce\x6c\x13\x59\xad\xcf\xba\x05\x54\x87\xa3\x69\x4a\x1e\x52\xfc\x93\xa4\x5b\xec\xf7\x71\xdf\xbf\x68\xd0\xcc\x22\xd5\xf3\x29\x97\xc8\x38\x15\xf4\x59\xfe\xf6\x57\x1d\x9b\xfe\xaf\x3b\x30\x93\x50\xb1\x86\x53\x43\xd8\x6d\xe2\x0c\x21\xf1\x7b\xd0\x11\xcf\x22\x63\x9c\x90\xf8\x30\x3a\xe2\x01\x32\xe2\x3d\x54\xc4\x2e\x22\xe2\x43\x68\x98\x3d\x79\xd6\x8d\x91\x33\xd3\x12\x2a\xd6\xdb\x07\x3f\xcc\x36\xc1\x86\x70\x8e\x98\x86\xeb\x00\xd3\x47\x55\xff\xaa\x66\xad\x9d\x72\xae\x92\xd9\x52\x97\xfa\xfd\x0f\x46\x9f\x14\x0c\x27\x9a\x01\xeb\x0a\xa5\xbd\x2b\x2c\x4d\x6d\xf2\x9b\x02\xe4\xb8\x00\xf4\x5d\x5b\x85\xf2\x3e\x13\x21\x18\x7d\xdb\xe0\xdc\x19\x2a\xfd\x16\xa5\xf3\xab\xa4\xe9\x2f\x8e\x2a\x96\xa7\xac\x4c\x76\x82\x39\x4a\xd4\x55\xfb\xd1\x41\x5f\xe2\x66\x0e\xed\x99\x5f\x76\xc5\x3d\xa7\xe4\x9c\x2e\xbf\x3b\xd2\xe8\x27\xfb\x68\x58\x5d\xe3\xcb\x21\xb9\xd4\x9f\xcb\x03\xb2\x78\x5c\x09\x83\xc9\x8c\x26\x99\x3b\xaf\x4a\xf5\xe0\xdd\x49\xda\x36\xbd\x23\xad\x90\x85\x87\xea\x64\x65\x2d\xb8\xaa\x87\xca\xce\xe8\xfc\x7e\xd9\x3e\x23\xe3\x8f\xc8\x7a\x07\x95\xd0\x9f\x1d\x5d\x6d\xf5\x71\x2d\x75\x1f\x8c\x9e\x49\x17\x9c\xbe\x81\x73\x2c\xf4\x3f\x5a\x7d\xb8\xd1\x73\x9f\xf0\xf6\xbc\x68\xc7\xde\x08\xba\x33\x60\x1d\x28\x1c\xf5\xce\xb3\xba\xff\x5f\xe9\xc7\x7a\xa5\x1a\x28\x98\x8e\x1b\xd7\x7a\xc4\x52\x0f\x58\x03\x78\x5a\x6f\x5a\xd3\x7d\x3b\x70\x9f\x8e\xcc\x21\x33\x65\xab\xb4\x39\x1d\x98\xc1\x7a\xdf\x9c\xd8\x56\xf7\x8a\x7e\x8c\xac\x47\xb3\xbd\x42\x6f\x63\xe8\x7e\x26\xa9\x47\xf6\x33\x12\x75\xec\xe1\x53\x7f\xc5\xb4\xb1\xfe\x80\x6c\x59\xb9\x28\x6f\x1e\xf4\x06\x9e\x2d\xdf\x2f\x7f\x60\x9e\x52\x26\x1e\x68\xec\x4d\x6f\x68\xe6\xfe\x2f\x9e\x3a\x46\x6a\x33\x4c\xa9\xcf\xb0\x57\xc5\x27\xd1\xef\x29\x38\x3b\xec\xcd\xa4\x2c\xc1\x91\x2f\xad\x36\xc9\x3e\xd1\xe8\x5b\xca\x48\x1b\xf5\x6f\x00\x00\x00\xff\xff\x43\xf8\x8c\x75\xb7\x1d\x00\x00")

func templateHttpResponseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpResponseTmpl,
		"template/http/response.tmpl",
	)
}

func templateHttpResponseTmpl() (*asset, error) {
	bytes, err := templateHttpResponseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/response.tmpl", size: 7607, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x4d\x6f\xdb\x38\x10\xbd\xe7\x57\xcc\x12\x5e\x40\x0a\x6c\xfa\x5e\x20\x58\x2c\x9a\x6c\x62\xa0\x4d\xbb\x4d\xba\xb9\xf4\x42\x8b\x23\x89\x1b\x9a\x54\xc8\x51\x5c\xaf\xeb\xff\xbe\x18\x49\x76\x2c\x5b\x0e\xd2\x7b\x05\x18\x90\xe4\xf9\x7c\xf3\xe6\x89\xeb\xf5\xf4\x1c\x0a\x4f\xab\x0a\xdf\x01\x3a\x2a\xbc\x34\x7e\x8a\x8e\xf8\x97\x4d\x0b\x74\xf2\x3a\xa8\xaa\x84\xf3\xe9\x66\x73\x76\xb6\x5e\x83\xc6\xdc\x38\x04\x51\x12\x55\xd3\xba\xd2\x8a\x50\xc0\x66\x73\x06\x00\xb0\x5e\x4f\x60\x69\xa8\x04\xfc\x4e\xe8\x34\x8c\x40\x7c\x56\xd9\xa3\x2a\x50\xb4\x0e\x02\x26\x9d\x69\x6b\x0e\x84\x8b\xca\x2a\xe2\x78\xa8\x34\x06\x01\xf2\x25\x18\x70\x8c\x97\xa7\x7d\x5b\x5b\x61\x98\x36\x25\x98\x45\xe5\x03\x09\x18\xb1\xe5\xd6\x74\x54\x3d\x16\xf0\xee\x02\xe6\x2a\x22\x8c\xe4\x7b\xef\x72\x53\xc8\xae\x96\xbd\x90\x41\xb9\x02\x61\xe4\xd8\x76\x24\x6f\xbd\xc6\x08\x7b\x05\x4e\xa7\xf0\xb5\xe9\x10\xda\x46\x23\x28\x28\xcc\x33\xba\x5d\x8e\xcd\x46\xf2\xad\x93\xb7\x6a\xc1\x81\x41\x39\x0d\x51\x3d\x63\x04\x2a\x11\xb2\x92\x13\x44\x20\xdf\x3c\x6a\x45\x8a\x4b\x92\xbb\x0c\x79\xed\x32\x48\x4a\xe8\x05\xb9\x51\x4e\x5b\x0c\x69\x97\x3c\x59\x02\x77\x2a\xbf\x60\xac\xbc\x8b\xf8\x10\x0c\x61\x18\x43\x80\xf3\xee\xfd\x53\x8d\x91\x52\x58\xef\xc2\xf2\x65\xb9\xa9\x52\x5a\x5f\xc8\x07\x43\x65\xf2\x9f\xaa\xe4\x1d\x05\xe3\x8a\x44\x2c\x90\x4a\xaf\xc5\x18\x44\x9b\x42\xa4\x69\xcf\x97\x07\x79\x02\x6e\x3d\xc9\x83\x5f\x4c\xea\x60\x05\x03\x37\xd9\xa2\xbe\x87\xd9\x35\x52\xd3\x6e\xe5\x23\x35\x3d\xcb\x9e\xc5\xb3\x0a\xa0\xfb\x1d\xb7\x55\x74\x8d\x9c\xbd\xb1\x14\x8d\x99\xd7\x38\x09\xad\xd7\x64\xee\xf5\x4a\x1c\xd7\xc3\xfe\x26\x07\x87\xa8\xe3\x3f\xca\x1a\xad\xc8\x78\xc7\xa5\x8b\x17\xf6\x9e\x64\xd7\x73\xeb\x71\x98\xa5\xf1\x60\x76\x0e\xb5\x7f\xa7\x9e\x71\x37\xee\x7e\xeb\xf3\x76\x26\x99\x35\xe8\xa8\xcf\x1c\xd9\x62\xf0\xc9\xe1\xec\x32\x59\xaf\xb9\xe6\x91\x93\xb3\x4b\x79\xa3\xe2\xb5\xbf\x5f\x55\xd8\x66\x6d\x5f\x76\xcf\x89\xd1\x29\x57\x62\x23\x3f\x19\xbd\xdb\x99\xc3\x71\x6e\x99\x9e\x37\x4c\x77\xf2\x2f\x83\x56\xc7\xde\x36\xee\x19\x33\x5e\x9e\x60\x94\xcb\xd9\x62\x51\x93\x9a\x5b\x1c\x34\xe5\xcb\xe4\xa0\x9b\x4e\x72\x66\x57\x9d\x51\x13\x9a\x57\xe1\xb7\x0b\x70\xc6\x1e\xb0\xb2\x87\x86\xbc\x43\x1a\x72\x4d\xce\x87\x43\xa6\xd0\xe8\x15\x79\xed\x61\x02\xcb\x52\x11\xa8\xb9\xaf\x09\xa2\x35\x19\x42\xde\x36\x45\xfc\xbe\xe4\x21\x64\x75\x24\xbf\x80\x85\x0a\xb1\x54\xd6\x62\x88\x7f\xb4\x42\x36\x54\xcd\x20\x12\xdb\x19\xbf\xed\x75\x07\x32\x76\x20\x5f\x69\xde\xfd\x21\xe0\x76\xa0\xe1\x4f\x81\xd6\xd1\x02\xe5\x57\x67\x9e\xea\xd3\x33\x69\xc1\x6d\xe3\x7f\xac\xa9\x61\xfc\x1d\xd2\x1e\xb2\x87\x79\xd3\x53\xf9\x1a\x6a\xfd\x4c\x9e\xf7\x16\x55\xe0\x4c\xe9\xc1\x1f\x7f\xea\x66\xb4\xc3\xf9\xa5\x94\xa7\x4a\x98\xec\x7f\x06\xf6\xaf\x37\x4d\x85\xf7\x91\x7c\x40\x30\x6e\x40\x7e\xf9\xc2\x31\x60\x08\xcd\xd7\x42\xf2\xea\x26\x81\xbf\x17\x84\xdf\x29\x49\xd3\x23\x2d\x39\xaa\x62\x58\x37\x30\x04\x1f\x26\x25\x0b\xb9\x71\x85\x00\x6d\x32\x3a\x72\x15\x57\x6c\x15\x05\x24\xd6\x44\x02\xe1\x3c\x4d\x72\x5f\x3b\x2d\xda\xfb\x68\x5c\x51\x5b\x15\xc4\x31\x34\xe2\x83\x2f\x76\x8e\x49\x15\x8c\xa3\x1c\x04\x4b\xfc\xcc\x51\xf2\x4d\xfc\x1e\xbf\x89\x31\x18\x9d\x8a\x4e\x30\x58\x65\xd2\x81\x38\x97\x98\xab\xda\x92\xe8\x82\x80\xc8\x7c\x6d\x75\xb3\xfe\xad\x3c\x82\xd8\x89\xd4\x0f\x78\xc4\xb9\x9a\xf7\xa3\x0c\x29\xe0\x17\xb4\x5e\x69\x3e\x4f\x84\x55\x1f\xec\xa7\x57\x04\xf0\xef\x1a\xc3\x2a\x49\xe5\x43\x89\x01\x93\xbd\xff\x7e\x80\xf5\x4b\x64\x52\xc9\xd9\x65\x82\x72\xa7\x82\x07\x1c\x3e\x9e\x56\x77\x1a\xe1\x3d\xbc\xf7\x1f\xb8\x26\xd6\xfd\x2c\xe0\xfe\xa9\xe5\xa0\xf8\x2b\x55\x60\x80\xb6\x81\x66\x81\x1b\x3d\x51\x01\x81\xbf\x01\x26\xa0\x06\xef\xb6\xe0\xf8\x0a\x43\xc3\x6e\x79\x14\xea\x69\xbd\x06\x79\xe5\xa8\x69\xeb\x30\xd7\x09\x5a\x77\x5c\xbc\x80\x27\xf9\xc9\xd9\xd5\x2f\x2a\x76\x54\x0c\xa8\xf4\x00\x11\x41\x80\xca\x09\x43\x37\x0d\xf1\x3a\x31\xad\x9c\xb9\xdc\x27\xa2\xc7\xac\x26\x10\x0b\x6f\x40\xa7\x31\x20\x1f\x8a\xb6\xb5\x8b\x1d\xd1\x3a\x8a\x8a\x31\xbc\xc6\xbe\xde\x24\x55\x5c\xfd\x1b\xbd\x93\x1f\xdb\x8f\xcf\xbd\xbf\xb9\xbf\xff\xdc\x3f\xc2\x25\xb7\xb8\x1c\x3c\x06\xb5\x46\x09\xa6\x63\x58\xbe\x84\x3d\x3c\x16\xef\xee\xfe\x0f\x00\x00\xff\xff\x2f\x66\x8d\xa1\xc5\x0b\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 3013, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/import.tmpl":    templateHttpImportTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/request.tmpl":   templateHttpRequestTmpl,
	"template/http/response.tmpl":  templateHttpResponseTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"import.tmpl":    &bintree{templateHttpImportTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"request.tmpl":   &bintree{templateHttpRequestTmpl, map[string]*bintree{}},
			"response.tmpl":  &bintree{templateHttpResponseTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
