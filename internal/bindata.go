// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x6d\x6f\xdb\x36\x10\xfe\xee\x5f\x71\x23\x8c\x41\x0e\x6c\xaa\xfb\x1a\xa0\x18\x8a\x26\x6b\x8d\xb5\x4d\x57\x67\xeb\x87\xa2\x40\x68\xf1\x24\x31\xa1\x49\x85\xa4\xe2\xb8\x9e\xfe\xfb\x40\x8a\x7e\x91\x6c\x67\x5d\x36\x60\x06\x82\x38\xcc\xf1\x5e\x9e\xbb\xe7\xe1\xad\xd7\xe9\x19\x14\xda\xad\x2a\x3c\x07\x54\xae\xd0\x54\xe8\x14\x95\xf3\x3f\x59\x5a\xa0\xa2\x6f\x0c\xab\x4a\x38\x4b\x9b\x66\x30\x58\xaf\x81\x63\x2e\x14\x02\x29\x9d\xab\xd2\xcc\x20\x73\x48\xa0\x69\x06\x00\x00\xeb\xf5\x04\x96\xc2\x95\x80\x8f\x0e\x15\x87\x21\x90\x8f\x2c\xbb\x63\x05\x92\xf6\x02\x81\x49\x34\x6d\xcd\xc1\xe1\xa2\x92\xcc\x79\x7f\xc8\x38\x1a\x02\x74\xe7\x0c\xbc\x8f\xf8\x97\x58\x54\xda\x38\x20\x85\x70\x65\x3d\xa7\x99\x5e\xa4\x85\x9e\x54\x92\xad\x0a\xa3\x6b\xc5\xd3\x07\x26\x05\x67\x4e\x9b\xf4\xe1\xa7\x17\x04\x42\x61\xd7\xa5\xb0\x20\x2c\x28\x44\x8e\x1c\x72\x6d\xc0\xba\xba\x12\x1c\x66\xd3\x3f\xc0\xd4\x12\x63\x5d\x31\xde\xb0\xba\x2b\xe0\xfc\x25\xcc\x99\x45\x18\xd2\xd7\x5a\xe5\xa2\xa0\xb1\x84\xbd\xbc\x0c\x53\x05\xc2\x50\x79\xdb\x21\xfd\xa0\x39\x5a\xd8\xab\x2b\x4d\xe1\x23\x5b\x49\xcd\x38\xe8\x1c\xd8\xd6\x73\xd3\x50\xff\x55\xd1\x0f\x6c\xe1\xdd\x41\x0b\x1f\x18\xbc\xaf\xd1\x3a\xba\x75\xe0\xdb\x01\x1d\xd3\xd7\xc1\xf2\x53\x6b\x08\xd6\x99\x3a\x73\xb0\xde\x5e\x68\xf3\xf2\x15\x5f\x5d\x5c\x9d\xc3\x5b\xf6\x20\x54\x01\x4c\x4a\xa8\xb4\x50\x0e\x8d\x85\x12\x0d\x82\x45\x5c\x58\x50\xda\x81\x11\x45\xe9\x28\xbc\x67\xab\x39\x82\xf3\x38\x65\x4c\xc1\x1c\x81\x6b\x85\x20\x14\x30\xa5\x5d\x89\x06\x96\x6c\x05\x94\xd2\x16\xa8\x6e\xbc\x0d\x0e\x79\xc0\x41\xd1\x5f\x04\x4a\x6e\x3b\x2d\xde\x33\x1e\xe6\x74\x16\xf2\x0e\x66\xbe\xfc\xb3\xf6\xf4\x7a\x55\xa1\xff\x97\x4f\xb9\x69\xe0\xe6\xd6\x6a\x75\x4e\xd6\x6b\x10\x8a\xe3\x23\x24\xb6\x92\xc2\x41\xe2\x58\xf1\x4e\xeb\xbb\xba\xda\x79\xba\x66\x05\x10\x6f\x4e\x46\x40\xc6\x64\x04\x2f\xa0\x69\xc8\x91\xe0\x71\x2c\xe3\x8c\x08\xad\xae\x59\x61\xbd\x9f\x57\x4a\x69\x17\x4e\x2c\xbd\x94\x77\x40\x76\x13\xbd\xb1\xc6\x90\x8b\x1f\x4b\xb2\x1d\xc9\x9b\x3e\x12\xfe\xb8\x5f\xf7\x0e\x20\x8c\x00\x5d\xf2\x02\x4f\xe3\x83\x3d\x7c\x3c\x02\xb9\x3f\xfe\x5d\x89\xfb\xda\x4f\x81\x07\x0c\xa5\xf5\x5f\xbf\x7c\xdd\x26\xd3\xde\x0d\x28\x4e\x2f\x9e\x81\x26\xfe\x47\x68\xe2\x21\x9a\x75\xc5\x9f\x8b\xe6\x1e\x48\x91\xa0\x91\x5a\x2d\x15\x22\x77\x2c\x30\x50\xb8\x3c\x4d\x31\xa6\x38\x58\xa7\x0d\x5a\x10\xce\xcf\xb5\x2b\x11\x38\x73\xcc\x73\x7c\xc7\xb8\xbc\x56\x19\x24\x65\x97\x74\x6f\x99\xe2\x12\xcd\x28\x86\x4c\x96\xe0\x35\x8c\x7e\x42\x5b\x69\x65\xf1\xb3\x11\x0e\xcd\x18\x0c\x9c\xc5\xf3\xc0\xce\x51\x8f\x97\xd2\x37\xbf\xa4\x52\x17\xf4\xb3\x70\x65\xf2\x8d\x55\xb1\x3f\x09\x59\xa0\x2b\x35\x27\x63\x20\x6d\x08\x32\x1a\x75\xee\xa6\x29\xbc\x41\x17\x72\xae\xb4\x75\x21\x71\xda\xb1\x78\x60\x06\xf8\x13\x5a\x31\xe8\xb7\x6e\x5f\x71\x65\x85\x26\x0d\x42\xce\x31\xd3\x1c\x27\x4c\xf1\xc9\xa6\x51\x93\x28\x4b\x93\xb9\xe6\x2b\x72\x30\xb5\x69\x0a\x33\xf6\x80\x5b\x3c\xbb\x69\xcd\xdb\xa2\x33\x29\x50\xb9\x6e\x4b\x68\x44\xf3\xa0\xd2\x56\xbb\x96\x25\x73\xc0\xe6\xba\x76\x60\xa5\xc8\x10\xf2\x56\x55\x9c\x3f\x2f\x7d\xc4\xac\xb6\x4e\x2f\x60\xc1\x8c\x2d\x99\x94\x68\xec\xcf\xcf\x17\x26\x91\x03\xa7\x47\xd5\xe9\x87\x97\xa0\x84\xec\x35\x73\x5b\x1f\x9d\xa1\x3b\x76\x2d\x39\x3b\xee\x6e\x74\xe0\xe6\x40\x2c\xfe\xad\x86\x6c\x4b\xe9\x0b\xc9\xd3\xa5\xf4\x65\xe6\x98\xeb\x5d\xd9\xad\xff\xf7\x75\x4b\xf3\x19\xba\xbd\x9a\xfb\x71\x0f\x6b\xde\x54\xea\x35\xec\x9f\xc4\x79\xc5\x03\xb6\xc7\xc3\x50\x4a\x4f\x45\x9a\xf4\xa5\x64\xf3\xf9\x2e\xf0\xfd\x88\x7b\xe9\xf0\xb2\x71\x28\x19\xfe\x83\x63\x40\x63\xc2\xca\x40\x3d\x1b\x12\xe3\x97\x06\x87\x8f\x2e\xe9\x31\x59\xe4\xc1\xf2\x64\x27\x24\xbd\x34\x46\x9b\x84\xa0\xff\x05\xb6\x7d\xc1\xf7\x88\xf3\x27\xdc\xe1\x9c\xcd\xbd\x70\x8e\xc1\x6b\x48\x6b\x8f\xc6\x8c\x0e\xab\x37\xa8\x38\x1a\x3a\xf5\x4f\xbf\x62\x72\x86\xe6\x01\x4d\x7b\x61\x39\x06\x33\xf6\x49\x1c\xbb\xe5\x6a\xa3\x06\xa7\x71\x4a\x53\xf8\x84\x61\xaf\x41\xe5\xcc\xaa\x8b\xc5\xfd\x13\x94\xff\xad\x46\xb3\x4a\x46\xf4\xb3\xdf\x42\x92\x4e\x55\x52\x2f\xd1\x78\x9b\xe9\x45\x82\xf1\xda\xf4\xa2\x3f\x49\xa3\xc1\x81\x90\xb5\x8b\xa6\x67\xc3\xb5\x7e\xe7\x73\x1a\xaa\xfd\xe7\xfb\xa0\xba\x34\x85\x4b\x56\xa0\x81\xb6\x80\x40\xa3\x20\x2a\xcc\xb4\x2b\x98\x30\xc8\x41\xab\xcd\x56\xa6\x2b\x34\x61\xf8\xe8\xb1\xd7\x9a\xf6\x43\x9c\x18\xb6\x38\x21\x2f\xe1\x9e\x5e\x29\xb9\xea\x0e\xc8\x77\x8a\xb3\x09\x98\xa7\x61\x32\x26\xa5\x7f\x94\x84\x2a\xfc\xa6\x3c\x69\x9a\xae\x8f\xdb\xed\x3c\xda\x12\x8d\xc8\x73\xfa\xbe\x55\xc9\xe4\xc7\xcd\xc1\x55\x15\xde\xe7\xc3\x09\x9c\xaa\x4c\xd6\x1c\x2f\x17\x95\x5b\x5d\xb3\xe2\x1c\x9c\xa9\x71\x7c\x60\xf6\xc6\xe8\xba\xb2\xe7\xf0\xe5\xab\x0d\x8f\xd8\x29\x51\x89\x0d\x1a\xaa\xfe\x56\x30\xcb\x4a\x5c\xb0\xf8\x0a\xb4\xde\x9e\xd4\x02\xbf\x27\xdc\x6a\xa1\x20\x69\x03\xce\xc2\xab\x40\x47\x70\x43\xc6\xe4\xe6\xe8\x8a\xb2\xed\xc7\xdf\xe9\x0c\x39\x4e\xb0\x27\xd5\xe4\x98\xbf\xa6\x8b\x53\x33\x06\x7c\x26\xfd\x2d\x1a\xc1\xa4\xf8\x16\xf0\x82\xd0\xf2\xc8\xf7\xa9\x72\x09\xd9\xf2\x23\x32\x8b\x8c\xe1\x34\x69\xfe\x37\x9d\x90\x74\xaa\x72\x9d\x1c\x47\x37\x06\x45\xfe\xec\xba\xba\x19\xc5\x1a\xae\x7e\x8d\x29\xdf\x8e\x06\xdd\xac\x76\x0b\xe5\xf6\xdb\x5f\x01\x00\x00\xff\xff\x1b\x25\x30\x44\xf7\x0e\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 3831, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x6f\xf3\x36\x0c\xbd\xe7\x57\x70\x42\x0e\x76\x90\xc8\xa7\x5d\x3a\xf4\xb4\x74\x6d\x2e\xdd\xb0\x16\xeb\x59\xb1\x68\x5b\xa8\x2c\x79\x34\xdd\xb4\xf3\xf2\xdf\x07\xda\x86\x9b\x34\x29\x76\xf9\x04\x18\xb1\x94\xc7\x47\xbe\x47\x5a\x7d\x9f\xad\xa0\x8c\xfc\xd1\xe0\x0d\x60\xe0\x32\x6a\x17\x33\x0c\x2c\x4f\x9e\x95\x18\xf4\x3d\x99\xa6\x82\x55\x76\x3c\x2e\x16\x7d\x0f\x16\x0b\x17\x10\x54\xc5\xdc\x64\x16\x3d\x32\x2a\x38\x1e\x17\x00\x00\x7d\xbf\x81\x83\xe3\x0a\xf0\x9d\x31\x58\x58\x82\xfa\xc3\xe4\xaf\xa6\x44\x35\x06\x28\xd8\x4c\xd0\x11\x0e\x8c\x75\xe3\x0d\x0b\x1f\x1a\x8b\xa4\x40\x7f\x92\x81\x70\x4c\x3b\x57\x37\x91\x18\x54\xe9\xb8\xea\xf6\x3a\x8f\x75\x56\xc6\x4d\x5e\xb9\x4c\x9e\xb7\x9f\x15\x0c\x52\x9e\x2b\xd7\x82\x6b\x21\x20\x5a\xb4\x50\x44\x82\x96\xbb\xc6\x59\x78\xda\xfd\x05\xd4\x79\x9c\x94\x4c\x19\x96\xcd\x6b\x09\x37\xb7\xb0\x37\x2d\xc2\x52\xff\x1a\x43\xe1\x4a\x3d\x15\x7d\x52\x09\x99\x50\x22\x2c\x83\x60\x97\xfa\x31\x5a\x6c\xe1\x44\x49\x96\xc1\x76\xb0\x02\x08\xeb\xf8\x86\x2d\x98\x99\xfd\x78\xd4\xf2\x1a\xf4\xa3\xa9\x85\x12\x0a\x8a\x35\x70\x85\x60\x0d\x1b\x49\xac\x67\x9e\xa2\x0b\x39\x24\x15\x9c\x05\x3c\x98\x60\x3d\x52\x3a\xa5\x48\x0e\x20\x56\xea\x3f\xb1\x6d\x62\x68\xf1\x85\x1c\x23\xad\x81\x60\x35\x9d\xff\xdd\x61\xcb\x29\xf4\x33\xad\x2c\x2f\xa5\x57\xda\xc7\x52\xbf\x38\xae\x92\x7f\x4c\xa3\x9f\x98\x5c\x28\x13\x55\x23\x57\xd1\xaa\x35\xa8\x31\x85\x4a\xd3\xb3\x58\xe9\xeb\x69\xa7\x7c\x83\x94\x0d\x03\xe0\xec\x46\xe4\x6c\x3a\xf2\x4a\xec\x39\x6d\xef\xd0\xb6\x02\x90\x68\x4c\x9d\x7b\x87\x81\xcf\xcd\xd0\x63\xc2\xdf\x03\xee\xb6\x49\xdf\x0b\x7e\x19\xf4\x6e\xab\x1f\x4c\x7b\x1f\x9f\x3f\x1a\x01\x8d\x11\xbb\xad\x9e\xf6\x89\xb3\xa9\x4c\x87\x6f\x65\xe7\xec\x3c\x29\xa9\xbe\x7b\xc7\x3c\x21\xe9\x23\xe3\x3b\x27\x69\xfa\xcb\x90\xff\xa7\x5b\x08\xce\x7f\x71\x44\x56\x7b\x70\x9c\x57\x82\xd1\x89\x7c\x04\x5f\x5d\x93\x95\xcb\x6c\xac\xa4\xf4\xc7\xc8\xbf\xc5\x2e\xd8\x3b\xa2\x48\x37\x17\x40\x59\x75\x5b\x8e\x6a\x5b\x26\xd7\xdc\x05\x1e\xb0\x09\x12\xa5\x57\xf1\x5e\xef\x42\x11\x93\xba\x2d\xd7\x20\x2d\xd9\x05\x4e\xd4\x2c\x78\x72\x49\xad\xc1\xd9\x74\x04\x7c\xf2\x5d\x27\x24\x0c\x16\x69\x2e\x35\x39\xac\x81\xd6\xa0\x4e\x5c\xff\x17\x5e\x71\x6f\xf6\x32\x8a\x21\x32\x14\x02\x53\x97\x64\x16\x0b\xd3\x79\xbe\x2e\xd3\x4f\x75\x28\x94\x1f\x18\xee\x01\x17\x4a\xb8\x9e\x66\x98\x78\xbb\x57\x3f\x56\xe2\x2e\x30\x52\x30\xfe\x09\xe9\x0d\x69\x0c\x1a\xd5\x06\xe7\x2f\x23\x8f\x17\x27\x84\xdc\x51\x58\x7c\x0f\x9a\x9a\xf3\x8d\x79\xe3\xe5\x67\xff\x5f\xd5\x79\x2d\x73\x83\x86\x21\x0d\x9c\x1c\x3e\xff\xff\x7a\xf3\xcd\x6f\xff\x05\x00\x00\xff\xff\xc4\xd0\x72\x62\xa8\x05\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4d\x8f\xdb\x36\x10\xbd\xfb\x57\x3c\x08\x46\x21\x19\x5e\xb2\x3d\xf4\x62\xa0\xa7\xcd\x22\x2d\x10\x2c\x16\x9b\x34\x3d\x33\xe2\x98\x24\x22\x93\x02\x49\x79\xb3\x55\xf5\xdf\x0b\xea\x6b\xa5\xb5\x62\xc0\xd0\x88\xf3\xe6\xcd\xe3\x1b\x91\x6d\xcb\x0f\x50\x2e\xbe\xd6\x74\x02\xd9\xa8\x1c\x33\x8e\x93\x8d\xe9\x5f\x72\x45\x96\x7d\xf4\xa2\xd6\x38\xf0\xae\xdb\xed\xda\x16\x92\xce\xc6\x12\x32\x1d\x63\xcd\xb5\xb0\xb2\x22\x9f\xa1\xeb\x76\x00\xd0\xb6\x77\x78\x31\x51\x83\x7e\x44\xb2\x12\x7b\x64\x4f\xa2\xfc\x2e\x14\x65\x43\x45\x86\xbb\x11\x3a\xc0\x11\xe9\x52\x57\x22\x26\x42\x12\x32\x51\xb1\x37\x32\x24\x8e\xf1\xcd\x5c\x6a\xe7\x23\x72\xf4\x92\xbf\x68\x13\x60\x02\x2c\x91\x24\x89\xb3\xf3\x08\xb1\xa9\x8d\xc4\xe7\xbf\xbe\xc2\x37\x15\x0d\x8a\xa7\x4e\x99\x32\x51\x37\xdf\x58\xe9\x2e\x5c\xb9\xbb\x52\x1b\x9e\xfe\xd7\xdf\xb3\x9f\x41\xea\x4a\xbc\x2a\xef\x1a\x2b\xf9\x55\x54\x46\x8a\xe8\x3c\xbf\xfe\xf6\xeb\x50\x50\xec\xfa\x07\xe7\x18\x2d\x80\x16\x01\xc1\x5d\x08\xa5\xb3\x57\xb2\x86\x6c\x49\xb8\x50\xd4\x4e\x06\x34\x81\x24\x9c\x85\x75\x92\xee\xc6\x8a\xc0\x7a\x8a\x64\xfd\x4c\x12\xa2\x6f\xca\x88\xb6\xdb\x4d\x0e\xec\xeb\xef\x0a\xa7\x3f\xf0\x4d\x04\xc2\x9e\xdd\x3b\x7b\x36\x8a\x8d\xa6\x2e\x9c\xf2\xc2\x2a\xc2\xde\x26\xec\x9e\x3d\x3a\x49\x01\x8b\xfd\x73\xde\x93\x59\xf6\x28\x2e\xa9\xec\xcf\x59\x75\x7a\x06\xa4\xd9\xa0\xf4\x8d\x84\xab\xc9\x8b\x68\x9c\x0d\x49\xf0\xa4\xa0\xeb\xd8\xaa\x9e\xcd\xcc\xbd\xfe\x4d\xee\x69\x33\x33\x34\xfd\xc6\x9d\xee\x56\x8b\x65\x65\xc8\xc6\x14\x1d\xc8\x46\x76\xdf\xbf\xae\x10\x95\x53\x63\x74\xf8\x57\xd4\xec\x93\x53\x8a\xfc\x0a\x31\x0f\x09\x87\x39\x64\x5f\x87\x88\x66\x64\xf7\xd6\xf8\xdc\xd8\x12\x8f\xf4\xb2\xa5\x3d\x2f\x97\x4a\x8e\xa8\x96\x6d\x8f\xb8\x6e\xf5\x28\x70\xd8\xb4\x61\xbd\x7f\x4f\xb1\xf1\x16\xbf\x6c\x41\xd7\xc8\x37\x63\x4e\x7d\x78\xbc\xc9\x56\x4e\x9d\xa6\x90\xfd\x63\xa2\xce\x93\xc8\xcf\xd1\x1b\xab\xf2\x6c\x3a\x9b\x47\x64\x5b\xcd\xb2\xa2\xb8\x65\x9c\x77\x75\xc2\x75\x9d\xed\xb6\x2c\xe4\x1c\xcf\xa4\x4c\x88\xe4\x47\xd6\x00\x3f\x2e\x04\x44\x4d\x50\x64\xd3\xe7\x44\x72\x1a\x7c\xff\x55\xf5\x19\x73\x25\x8b\x52\x1b\x78\xd7\x44\xf2\x6c\x3d\x98\x5c\x6f\xdb\x59\xdc\x74\xcc\x7d\x62\x61\xcf\x3d\x4b\xf1\xce\x6e\xce\xf1\xc1\xc1\xba\x74\x02\xe1\x07\x50\x5e\x20\x3a\x88\xab\x33\x12\x2f\xa6\x92\xa5\xf0\x12\x17\x11\x4b\x6d\xac\x62\xeb\x69\xb1\x8f\x14\xf3\x8c\x67\x47\x68\xf6\xc9\x84\x58\xbc\x4b\x3f\xb9\x30\xe7\xef\x3d\xa5\xcf\x60\x93\xa0\x35\xb2\xeb\x41\xcf\x24\xe4\x0d\x49\xea\xbd\x04\xfd\x5d\xcb\x0d\xa6\x0f\x54\x51\xa4\x25\x6e\x58\x59\xe3\xde\xee\x02\xea\xef\x02\xcb\x1e\xa4\xa2\xb0\xba\x77\xb7\xd4\xf1\xe4\x36\x4d\x6e\xf7\xf4\x8b\x95\xff\x50\x8b\x50\x8a\x0a\x5d\x77\xd3\x2e\x5d\xd2\x4b\xf6\xf7\xb7\xf7\x6e\x39\x54\x3d\x8d\x31\x44\x6f\xea\x07\x1b\x1f\xbc\x77\x3e\x27\xef\x41\x29\x1a\x12\x56\x2d\xe6\x38\x1e\x99\x61\x3d\xb0\x2f\xde\x5c\x9e\x3c\x9d\xcd\x8f\x54\xc5\x86\xfa\xe2\x88\xac\x3f\x29\xd9\x20\xaf\xdb\xcd\xfd\xff\x0f\x00\x00\xff\xff\x7d\x16\x39\xae\xe3\x06\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 1763, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x13\x86\x95\x32\x2c\x6a\xc5\xde\x12\xf4\xa1\x5d\xda\xc1\x40\x90\x65\xc9\xba\x77\xda\x3c\xcb\x5c\x69\x52\x39\x9d\x92\xb9\xaa\xfe\xf7\x81\xa4\xfc\x33\x6e\x66\x64\xdd\x0c\x18\x86\xac\x3b\xde\x77\xdf\xf7\xdd\xb1\xeb\xca\x11\x54\x9e\x57\x35\x9e\x03\x3a\xae\xbc\x34\xbe\x44\xc7\xe1\x3b\x2b\x2b\x74\xf2\xf7\x55\x8d\x30\x2a\xfb\xfe\xec\xac\xeb\x40\xe3\xdc\x38\x84\x6c\x81\xb6\x46\x2a\x17\xcc\x75\xa9\x71\xe6\x35\x16\xca\xe9\xe2\x41\x59\xa3\x15\x63\x41\x78\xdf\x62\xc3\xc5\xd4\xeb\x55\x06\x7d\x7f\x06\x00\x60\xe6\x80\x44\x70\xfe\x06\xfe\x6c\xbc\x93\xd7\xf8\x78\x19\x53\x49\x90\x7c\xe7\xf5\x2a\x97\xe9\x59\xfc\xa0\xf3\x8b\x18\xfa\xdd\x1b\x70\xc6\x42\x17\xd3\xc3\xc7\xca\xf7\x44\x9e\x44\x86\xe1\x07\x62\x69\xe3\xaa\x78\x60\x36\x86\xcf\xaa\x1e\x02\x90\x28\xcf\x37\x69\x84\x4e\x23\xc9\x77\x4a\xdf\x26\x60\xe2\x71\x0c\x34\x86\xcc\xb8\x08\x39\xe6\x43\xc3\x64\x5c\x95\xed\xa6\x71\x4b\x2e\x3e\xa6\x0e\xca\x12\xfe\x18\x5a\x04\x5e\x20\x68\xc5\x4a\x1e\xf4\xb6\x90\x03\x0b\x9e\xe4\x1d\x53\x3b\x63\xf1\xd5\x76\x52\xd6\x18\xfc\xa7\x90\x89\x44\x52\x8c\xb6\xd9\x93\x04\x6e\xa8\x68\xbc\x8b\xad\xe5\x17\x21\x7c\x7b\xc6\x11\x5a\x86\x23\x02\x31\x83\x10\x11\xe9\x33\x04\xed\x90\x34\x71\x8c\xe4\x94\xbd\x43\x7a\x40\x4a\xc1\x89\x2d\x67\xec\x61\xc6\x86\x9f\x2d\x47\x09\xcf\xc4\xcd\xbd\xc8\x1e\x36\xd0\x61\xae\x8c\x45\xfd\x02\x8d\x42\xd4\x71\x45\xba\x0e\xd0\x69\x78\xc6\x9a\x46\x17\x73\xf2\xcb\xa2\x25\xbb\x71\x61\x59\xc2\xe4\x12\x4c\x03\x1f\x6f\xaf\xa0\x56\xa4\x96\xc8\x48\x49\xc5\xae\x2b\x82\x26\xdf\xcb\xc9\xa5\x9c\x34\x13\xc7\xeb\xa4\x28\x96\x1e\xaf\x35\x6e\x98\x66\xde\x3d\xc8\xb7\xec\x8d\x98\x2d\x8c\xfc\x78\x7b\x75\x13\x8e\x12\xd1\x54\x3a\xdb\xe9\x6b\x70\xc6\x13\xed\x8f\xe8\x56\x21\x47\xd1\x8c\x86\x00\x1b\x5a\xb2\x5b\x84\x03\x75\x77\xd1\xa4\x22\x14\x19\xc3\xf1\xd2\x27\xc9\x7c\x64\x16\x34\x2c\xdb\x86\x61\x8a\xa0\x1c\x18\xc7\x58\x21\x41\x45\xa8\x18\x09\x3e\x23\xf9\xec\x04\xf9\x83\x28\xb6\xc1\x7d\xe2\x02\x67\x47\xb1\x6e\x52\x9c\x86\xa2\x3f\x45\x52\x42\xeb\x95\x2e\x23\x61\xc5\x42\x39\x6d\xc3\xcc\x1e\xac\x98\x27\x64\x37\x8f\x86\x67\x8b\x34\x61\x61\xdb\xe5\x3b\xef\x66\xaa\x41\x18\xa1\x63\x79\xed\xf9\x83\x6f\x9d\x8e\xd4\x9d\xef\xf5\xba\x6c\xaa\x34\xdc\x61\x49\xd4\xef\x1d\x6f\xe9\x3d\x50\x34\x3a\x7f\xd9\x54\x49\x85\x89\x63\x91\x75\x5d\xb2\xd4\xb5\x5a\x06\x62\xb2\x31\xa0\x5c\xff\x97\x56\xc4\x07\x83\x56\xf7\xfd\x69\xd2\xad\x61\x0e\xc2\x2d\x9b\x6a\x1b\xa6\x71\xae\x5a\xcb\xe7\xcf\xd9\x6c\x8e\x3c\x5b\x04\x9f\x45\x0c\x11\xd4\x17\xf8\x84\x53\x35\x85\xbe\x4f\xce\xd3\xd3\xec\xbf\xc3\x7f\xe2\x86\xe9\x5f\x3a\xf5\xb5\xaa\x8c\x8b\x5b\x67\xe3\x8b\x5a\x55\x18\xf4\x7b\xbd\x76\x49\xb4\x24\x05\x43\xca\xdf\x5a\xa4\x95\xc8\xe5\x2f\xc8\x22\x0b\x81\x59\x7e\x01\x3a\x78\x28\xcb\x76\x6c\x12\xde\xa4\x05\x70\x30\xff\xfa\xd4\x59\x4f\x3b\x31\x69\x50\x2b\x6a\x82\x04\xf7\xa1\xf8\x76\xc8\xe1\x55\x28\xf3\xea\x60\xd6\x23\xa8\x31\xe8\x97\x4e\x76\xec\xfe\x1b\xcc\xf6\x30\x63\x8c\xcb\xe6\x06\xe9\x66\xe0\xf4\xa7\x1f\xff\x89\xd4\xdd\x8c\xe3\xe4\xee\x46\xfc\x0f\x24\xef\x96\x3b\x24\x7b\x0f\xec\xbf\x20\x7d\x8f\xa6\x6f\x46\x3e\x36\x9b\x4b\xe8\x5e\x5e\x99\xa5\x61\xb1\x5b\x28\x97\xbf\xce\xe7\x0d\xb2\x10\x51\xf3\x02\x5e\xe7\x30\x82\xfd\x88\xb7\xd6\x0a\x92\x3f\x7b\xc7\xf8\x17\x8b\xa1\x9d\xaf\x91\x7a\xfa\xea\xf8\x02\xb5\x6d\x49\xd9\x27\x2b\xe4\x99\xcb\xfe\xc4\x4d\x70\x7c\xfe\xff\x0e\x00\x00\xff\xff\xe0\xd2\xca\x30\xbd\x0a\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 2749, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xdf\x6b\xe4\x36\x10\x7e\xcf\x5f\xf1\x55\x2c\xc5\x1b\x1c\xf9\x7d\x21\x0f\xa5\x84\x6b\xe8\xf5\xae\xbd\x1c\xdc\x43\x29\x9c\xb2\x1a\xdb\x6a\xb4\x23\x67\x24\x27\xcd\x39\xfe\xdf\x8b\xbc\x4e\xb2\xce\xa6\x3d\x81\xc1\xab\x9d\xef\x87\x67\x3e\x69\x18\xaa\x53\x34\x21\x3d\x74\xb4\x01\x71\x6a\x82\x76\xa1\x22\x4e\xf9\xd9\x56\x0d\xb1\x7e\x27\xa6\x6b\x71\x5a\x8d\xe3\xc9\xc9\x30\xc0\x52\xed\x98\xa0\xda\x94\xba\xca\xbb\x98\x14\xc6\xf1\x04\x00\x86\xe1\x0c\xf7\x2e\xb5\xa0\x7f\x12\xb1\xc5\x0a\xea\x77\xb3\xbd\x31\x0d\xa9\x7d\xb9\xc2\xd9\x5c\xba\x2f\x47\xa2\x5d\xe7\x4d\xca\x6c\x64\x2c\x89\x82\x7e\x21\x43\xe6\xc8\xa2\xf3\xcf\x55\x77\xd3\x60\x73\x8e\x6b\x13\x09\x2b\xfd\x73\xe0\xda\x35\x7a\x56\x38\x80\x89\xe1\x86\xb0\xe2\x5c\xbb\xd2\x1f\x82\xa5\x88\x03\xd9\xaa\xc2\x27\x32\x16\x35\xa5\x6d\x4b\x11\xa9\xa5\x67\xf6\x71\xd4\xf9\x95\xf5\x07\xb3\xcb\x94\x70\x96\x38\xb9\xda\x91\xc5\xf5\x03\x0c\x1a\x77\x47\x8c\x5e\xfc\x59\x67\xc4\xec\x28\x91\xa0\x96\xb0\xcb\x2c\x87\x0a\xd6\x24\x33\xf9\x34\x6c\x21\x94\x7a\xe1\x08\x97\x90\xc2\xa4\xb7\xf5\x8e\x38\xe9\x67\x44\xdd\xf3\x16\x45\x8b\xd3\x85\xfa\x2f\x86\xad\x27\x59\xe3\xbd\x8b\xa9\xb8\x47\x6e\xa1\xfe\x44\xb1\x0b\x1c\xe9\x8b\xb8\x44\x52\x42\x70\x3a\xef\xdf\xf6\x14\xd3\x1a\xc3\x33\x6b\x5e\x3e\x77\xa1\xd5\x3e\x34\xfa\x8b\x4b\x6d\xf1\xcd\x74\xfa\x2a\x89\xe3\xa6\x50\x3b\x4a\x6d\xb0\xaa\x84\xca\x02\x6a\xbd\x5e\x20\x6f\xf7\xc8\xd9\xea\xc2\x98\xfe\xa3\x27\x79\x28\x96\xf5\x2f\xd3\xb7\x0d\xc5\xcf\xe1\x7d\x30\x36\x4f\x41\x2d\x32\x72\xb8\xaa\x0a\x17\xa6\x21\x81\xcf\xa5\x13\x0c\xa9\x35\x09\x46\x08\x42\xb7\xbd\x13\xb2\x08\x8c\xcc\x80\xd0\x91\x98\xe4\x02\xeb\x23\xa2\x61\x78\xc9\xcd\xa1\x9d\x39\x40\x87\xdb\x77\x46\x40\x32\x3d\x41\x8e\x00\x87\x79\xf4\x1d\x49\x35\x85\xbc\x33\x8d\xe3\x49\x5a\xe5\x0f\x3a\x7b\xca\xe4\xd3\xb2\xe5\x44\xb9\x39\x47\x6c\x49\x5c\x5d\xeb\xdf\x8c\xc4\xd6\xf8\xe2\xc7\xa7\x8d\x8f\x5d\x86\xc7\xe1\xc8\xfa\x25\x6f\x7d\x6f\xe9\x62\xd7\xa5\x87\xcf\xa6\xd9\x20\x49\x4f\xe5\x51\xd9\x3b\x09\x7d\x17\x37\xf8\xf3\xaf\x38\x0d\xef\x98\x68\x31\x82\x15\xeb\x9f\x98\x43\x9a\x4c\x47\x7d\xe1\x6f\xae\xb6\x2d\xed\x8c\xce\x83\xde\x73\x2d\x8e\xe2\xeb\xa5\x86\x01\x7f\x07\xc7\x28\xf6\x72\x57\xde\x6d\x09\x7a\x8d\xaf\xaa\x54\x5f\x31\x8e\xea\x3f\xf5\xc9\x47\xfa\x2e\xf7\x53\x94\x1e\x71\x43\xd7\xe6\xfa\xff\x09\xd9\xbe\xc9\x37\x2e\xbb\x34\x96\xa0\xb8\x4c\xa4\xab\xa7\xb9\xfc\x70\x0e\x76\x1e\xc7\x2d\xf3\xfa\x22\xa7\xa0\x50\x91\xc4\x19\xef\xbe\x4d\xed\xda\x47\x43\x95\xc8\x47\x65\x5f\x40\x22\xaf\x0e\x47\x5e\x42\x6c\x49\xf4\x25\x27\x12\x36\xfe\x8a\xe4\x8e\x64\x0f\xb8\x2f\x21\x65\x56\x7d\x0b\x95\x2f\x83\xa5\xf5\xe5\x89\xd5\x97\x5c\x87\xe2\xad\x36\x3d\xa2\xf3\xbd\x18\x9f\x6f\xa6\xbd\x3a\xd9\xd9\xe8\x25\xa7\x42\x99\x5d\xe8\x39\xa9\x12\x9e\xb8\xa0\xb8\x7e\x65\x7a\x36\xfc\xf1\xd7\xd9\x9f\x7d\xf9\xfb\xf5\x9d\xfb\xfc\xf6\x6f\x00\x00\x00\xff\xff\x61\xb6\x32\x42\x20\x06\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1568, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\xcc\x2b\x18\x2f\xa4\xc0\xa6\x4f\xbd\x04\xd8\x43\xbb\x49\xb3\x46\xdb\xa4\x5d\x07\xcd\xa1\x28\xb0\xb4\x38\x92\xd8\x50\xa4\x32\x1c\x25\xeb\x75\xfd\xdf\x8b\x91\x14\xc5\x1f\xd9\x0d\x5a\x84\x80\x11\x4b\x7c\xe6\x99\x79\xe6\x2b\xde\x6c\xe6\xa7\x50\x06\x5e\x37\x78\x06\xe8\xb9\x0c\xca\x86\x39\x7a\x96\x4f\x3e\x2f\xd1\xab\x4b\xd2\x4d\x05\xa7\xf3\xed\xf6\xe4\x64\xb3\x01\x83\x85\xf5\x08\x49\xc5\xdc\xcc\x09\xb5\x49\x60\xbb\x3d\x01\x00\xd8\x6c\x66\xf0\x68\xb9\x02\xfc\xcc\xe8\x0d\x4c\x20\xf9\x55\xe7\x77\xba\xc4\xa4\x87\x27\x30\x1b\xa0\x3d\x1c\x18\xeb\xc6\x69\x16\x36\xd4\x06\x29\x01\xf5\x4c\x06\xc2\x31\x3c\xd9\xba\x09\xc4\x90\x94\x96\xab\x76\xa5\xf2\x50\xcf\xcb\x30\xcb\x2b\x3b\x97\xcf\xc3\x77\x09\x74\x42\x6e\x2a\x1b\xc1\x46\xf0\x88\x06\x0d\x14\x81\x20\x72\xdb\x58\x03\xcb\xc5\xef\x40\xad\xc3\x41\xc7\xe0\x61\xd2\xdc\x95\x70\xf6\x0e\x56\x3a\x22\x4c\xd4\xfb\xe0\x0b\x5b\xaa\x21\xe8\x9d\x48\x48\xfb\x12\x61\xe2\x05\x3b\x51\x57\xc1\x60\x84\x1d\x25\xf3\x39\x7c\x44\x6d\xa0\x40\xce\x2b\x8c\xc0\x15\x8e\xec\xdb\xad\x92\xaf\x5e\x5d\xe9\x5a\x28\xc1\x1a\xf4\x6c\x0b\x8b\x06\x56\x6b\xd0\x50\xda\x07\xf4\xd0\x92\x9b\x35\x9a\x74\x8d\x8c\x04\x05\x85\x5a\x58\x76\x3d\x18\xcd\xba\x8b\x53\x7b\x03\x84\xde\x20\x45\xb0\x0c\x1c\x3a\x7f\xb9\xb3\xe8\x59\x8d\x16\x45\xeb\x73\x48\x2b\x38\xdd\xf3\xfe\x41\x7b\xe3\x90\xb2\x2e\xde\xf4\x11\xa4\x2a\xea\x23\xc6\x26\xf8\x88\xb7\x64\x19\x69\x0a\x04\xa7\xc3\xfb\xfb\x16\x23\x67\xb0\x19\x59\xe5\x38\xc9\x42\xa5\x5c\x28\xd5\xad\xe5\x2a\xfd\xa2\x1b\xb5\x64\xb2\xbe\x4c\x93\x1a\xb9\x0a\x26\x99\x42\x22\x0e\x92\x2c\xdb\xb3\x94\x06\xd9\x2d\xb9\x6b\x90\xe6\x5d\x1f\x59\x33\x13\xcd\xb3\x96\x5c\x22\x79\x9e\x3d\x15\x69\x27\x01\xef\x09\xc5\x4e\xc4\xde\xb7\x48\x6b\x51\xde\x65\x7c\xcc\xf7\x28\x73\xcf\xf4\xbe\x8f\x77\x48\xd0\x1e\x4e\xfd\x26\x44\x69\xa6\x6e\x2b\x24\x4c\x77\xee\xfe\x06\x17\x1e\x91\x04\xb3\x38\x97\x0b\x5b\xc8\xdd\xe2\x5c\x7d\xd0\xf1\x32\xdc\xac\x1b\xb1\xef\x0d\x16\xe7\x6a\x78\x4e\xad\xc9\xa4\x71\x5d\x94\x27\x6b\xc6\x26\xce\xb2\x93\xa3\x4c\xf4\xa3\x62\x4a\x8c\x37\xe1\xe7\xa0\x8d\xe8\x4e\xf6\x06\xea\x20\x01\x17\xba\x44\x02\x27\xd0\xce\x0c\xb8\xd2\x0c\x9a\x10\x08\xef\x5b\x4b\x68\x20\x78\x10\x06\x08\x0d\x92\x66\x1b\xbc\x3a\x22\xda\x6c\x9e\x87\x6c\x37\x9c\x9d\x69\x7b\x3a\x38\x05\x24\x92\xf4\xdd\xab\x6b\xef\xd6\x29\xc9\x88\x30\x7e\xe6\xf4\xa0\xb2\xb6\xe8\x90\xff\x7b\x07\xde\xba\x83\x7e\x91\x13\x1f\xad\x14\x0a\x89\x54\x2a\xbb\xe6\xb0\xa7\xe4\xe4\xd2\xdc\xa7\x52\xa3\xab\xc0\x3f\x86\xd6\x9b\x0b\xa2\x40\x67\x47\x40\x39\x75\x2c\xfb\xb2\x46\x26\xdb\x5c\x78\xee\xb0\x29\x12\x65\x2f\xe2\x9d\x5a\xf8\x22\xa4\x75\x2c\xa7\x20\x0d\xbb\xf0\x9c\x26\x63\xf9\x86\x76\x48\xa6\x60\x4d\xd6\x03\x9e\xf9\x5e\x26\xec\x27\x70\x0c\x35\x7d\x9c\x02\x4d\x25\xac\x63\xf8\x9e\xb0\xa5\xf5\x65\xeb\x34\xbd\xa9\xb6\x1e\xf0\xe6\xe2\x7e\xd0\x66\xd8\x01\xdf\x92\x67\xb0\xd0\xad\xe3\x97\xb5\x3c\xc5\x96\xa0\xfc\xe9\xe7\xd5\xfa\x12\xf6\x46\xed\x0e\x57\x7a\x25\xbb\xb1\xdb\x7b\x66\x95\xbc\xad\x8c\x85\x67\x24\xaf\xdd\x12\xe9\x01\xfb\xc4\x0f\x7a\xbc\x75\xc7\x96\xc7\xb3\x47\xc8\x2d\xf9\x93\xaf\x83\xcc\x38\x28\xb1\x42\xb2\x45\xa1\x7e\xd1\x14\x2b\xed\xd2\xff\x3f\xbd\xb8\x6e\x64\x1c\xe3\x71\xdb\x2f\x7c\xee\x5a\x83\x17\x75\xc3\xeb\x1b\x5d\x9e\x01\x53\x8b\xd3\x23\xd8\x25\x85\xb6\x89\x67\xf0\xc7\x9f\xb1\xdb\xb5\xc7\x44\xb0\xbb\x57\x26\x5e\x7d\xef\x7d\xe0\x6e\x09\x44\x75\xe1\xee\x96\x79\x85\xb5\x56\xb2\x97\x7b\xae\xbd\x7f\xc6\x87\x47\xf2\xfe\x57\xb0\x1e\xd2\xde\xdd\xd2\xd9\x1c\x41\x65\xf0\x29\x99\x26\x9f\xa4\x0e\x5f\xf5\xdf\x6d\xbf\xd7\xb8\x8f\x8b\xff\x0d\x42\x6f\x5e\xe4\xdb\xee\x67\x69\x3b\x05\xfc\x77\x5b\x69\x6c\xce\x88\x64\xb5\xb3\x5f\xba\x6c\x41\xd7\xaa\x6f\xd1\x83\xff\xad\xff\x5e\xed\xb6\x61\x97\xbd\x9c\xc6\xc1\x29\x9a\xd7\x05\xec\xbb\x1e\x82\xbd\xfe\x69\x88\xcd\x3c\x5f\x1f\xfe\x22\x1b\xbf\xfd\x13\x00\x00\xff\xff\xc8\x5b\x45\x89\x3e\x0a\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 2622, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\xb8\x09\xc1\x20\x07\x32\xfd\x6e\xa0\x0f\x5b\xe3\x76\xc6\xba\xa4\x6b\x32\xe4\x61\x18\x50\x46\x3c\x49\x5c\x68\x52\x3e\x9e\x9a\xb8\xae\xfe\xfb\x40\x49\x76\xec\x58\xca\xda\x25\x01\x56\x02\x41\x62\xeb\xbb\x3b\xf2\xbb\xbb\x8f\xa7\xac\xd7\x93\x13\xc8\x1d\xaf\x4a\x9c\x02\x5a\xce\x9d\xd0\x6e\x82\x96\xc3\x4f\x3a\xc9\xd1\x8a\xb7\x24\xcb\x02\x4e\x26\x75\x7d\x74\xb4\x5e\x83\xc2\x4c\x5b\x84\xa8\x60\x2e\x27\x84\x46\xb2\x76\xd6\x47\x50\xd7\x47\x00\x00\xeb\xf5\x18\x6e\x35\x17\x80\x77\x8c\x56\xc1\x31\x44\xef\x65\x7a\x23\x73\x8c\x5a\x9b\x08\xc6\x1d\xb4\x85\x03\xe3\xa2\x34\x92\x83\x4b\x94\x0a\x29\x02\x71\xef\x0c\x82\x8f\x10\xb9\xfb\x78\x5c\xde\xe4\x30\x7d\x05\xd7\xd2\x23\x1c\x8b\xd7\xce\x66\x3a\x17\x5d\x84\x1d\x33\x92\x36\x47\x38\xb6\x01\x7b\x2c\xce\x9c\x42\x0f\xfb\x61\x3b\x04\x36\x08\x2b\x66\x2a\xdf\x87\x84\x35\x99\x34\x31\x51\x9c\xc9\x05\xc2\x17\x28\xa5\x4f\xa5\x81\xba\x86\x0c\x39\x2d\xd0\x03\x17\xb8\xdd\x56\x5d\x8b\x1d\x74\x5d\x83\x64\x96\x69\x81\x0a\xd8\xf5\x01\xed\x06\xf8\x30\xa6\x56\x68\x59\x67\x1a\x15\x5c\xaf\x40\x42\xae\x3f\xa1\x85\x8a\xcc\xb8\x94\x24\x17\xc8\x48\x90\x91\x5b\x34\x4e\x95\x64\xd9\xb0\x21\xad\x02\x42\xab\x90\x3c\x68\xde\xc4\x4c\x8d\x46\xcb\x62\x2f\x44\x56\xd9\x14\xe2\x02\xf6\x36\xf1\x8b\xb4\xca\x20\x8d\x06\x4e\x1c\xdf\x42\xc8\x9e\xf8\x80\xbe\x74\xd6\xe3\x15\x69\x46\x4a\x80\xe0\xa4\xfb\x7e\x59\xa1\xe7\x11\xac\xf7\x42\x85\x65\x02\xc5\x85\x30\x2e\x17\x57\x9a\x8b\xf8\xb3\x2c\xc5\x05\x93\xb6\x79\x1c\x2d\x90\x0b\xa7\xa2\x04\xa2\xfe\xb0\xd1\x68\x74\xe0\x2f\x94\xd8\x6e\xd1\x98\x12\x69\xd2\x94\xa3\x56\xe3\xc0\xcb\xb8\x22\x13\x85\xe4\x8f\x37\x95\xf3\x80\xe0\xd7\x84\xc1\x36\xf0\xb3\xac\x90\x56\x81\xac\x26\xa3\xdb\x34\x6d\x77\x72\x83\xd7\xf2\xfa\x30\x99\xda\xef\xb2\x77\x0f\x3b\x88\xb6\x6c\x0f\xdf\xa5\x61\x8f\x71\xf1\x7b\x88\x1d\x8f\xc4\x55\x81\x84\xf1\x9e\x3f\xe3\x6e\x91\x02\x66\x7e\x1a\x6b\x35\x1a\xb5\xd8\x81\xd4\xf4\x53\xa4\xb3\x00\xfe\xc3\xea\x65\x75\x50\x64\xbb\xb8\xb6\x5b\x43\xf9\x5f\xba\x77\x4e\xaa\x60\x75\xb9\x2a\x11\x22\x42\xa9\xa2\x21\xd3\x8e\xca\x99\xcc\x91\xc0\x04\xbb\xc6\x07\x70\x21\x19\x24\x21\x10\x2e\x2b\x4d\xa8\xc0\x59\x08\x9e\xc0\x95\x48\x8d\x5a\x88\x41\x87\xeb\xf5\x7d\xf3\xf7\xed\xb5\x53\x83\xbe\xc7\x98\x00\x12\x05\xb6\x97\xe2\xdc\x9a\x55\x4c\x41\x1d\x18\xef\x38\xee\xa9\xa1\xb0\x74\xd6\x58\xfc\xf0\x0a\xac\x36\x3d\x75\xbb\x59\xfe\x56\x87\xd2\x40\x22\x11\x07\xa1\xec\xab\xf1\xcd\x4a\x43\x27\x9e\x84\x54\x9f\x39\x7e\xe3\x2a\xab\x66\x44\x8e\xa6\x83\x06\x61\x2d\x7c\xde\x56\x89\x67\xd2\xe5\xcc\x72\x63\x13\x23\x51\xff\xc6\x37\xcb\x88\xb9\xcd\x5c\xbc\xf0\x79\x02\xa1\xa9\xe6\x96\xe3\xa8\x2d\xa3\xf9\xe9\xa6\xca\xa2\x04\xb4\x1a\xb5\x80\x7b\xbf\x8f\x3b\x6e\x65\x64\x7b\x84\xf8\x36\x01\x4a\xc0\x37\x3d\xeb\xc5\x25\xe9\xc5\x7b\xc2\x4c\xdf\x05\x57\x9d\xd3\x51\x02\x11\x5a\x9e\x42\x5f\xc7\xf6\xb2\x73\xa1\x6d\x5e\x19\x49\x2f\x4a\x50\x0b\x7c\x31\x86\x7e\x96\xaa\x13\xbe\x67\xe3\x48\x61\x26\x2b\xc3\x8f\x13\xb2\x39\x58\x84\xe1\x57\xab\x5d\xda\xe6\x9d\x74\x85\xee\x3d\xd0\xaf\xe6\xc2\x50\xd7\xd1\x01\x11\x0f\x80\xe2\x19\xe9\x99\x5b\x46\xb2\xd2\x5c\x20\x7d\xc2\x36\xd1\x1d\x4f\x56\x9b\x61\x0f\xc3\x82\x43\xc8\x15\xd9\xde\xc7\xfd\x46\x6a\xab\x0a\xbe\x40\xd2\x59\x26\x7e\x93\xe4\x0b\x69\xe2\x1f\x37\x5f\x9c\x97\xcd\x04\x33\xdc\xd3\x73\x9b\x9a\x4a\xe1\x6c\x51\xf2\xea\x52\xe6\x53\x60\xaa\x30\x19\x84\xbf\x25\x57\x95\x7e\x0a\x7f\xfe\xd5\x16\xc3\xb0\x63\xd8\x55\xe0\x4d\xde\x7e\xb2\xd6\x71\x3b\x54\x89\x99\xb9\xb9\x48\x0b\x5c\x48\xf1\x01\xa5\x6a\x1d\xef\x8d\x4f\x43\x2b\xa4\xf6\x6f\xa7\x2d\xc4\xed\x1e\x2e\x8c\x4e\x11\xc4\x08\x3e\x46\x49\xf4\x31\x24\xf5\x5f\x37\x85\xc6\xe3\x57\xc7\x1a\x28\xba\xaf\x88\x62\xd5\xa3\x41\xea\x7e\x9e\xeb\x04\xf0\x69\xa2\xbe\xed\x20\x8f\xa4\xa5\xd1\x9f\x1b\xca\xa1\xe9\xa7\xc3\x1e\xd9\xeb\x06\x14\x3b\x27\x9e\x9f\x86\x59\xa6\x4a\xf9\x8d\x46\x13\x2e\xa7\x6f\xe8\x94\xa7\x75\xc9\x37\xf7\x42\x77\x5d\x3c\x92\xaf\x6e\x47\xa8\x9e\xc6\x40\xff\x9e\xbb\xd3\x9e\xff\xda\x1d\x4e\xf5\x8f\x2d\x4d\xdd\xfd\xa7\x71\xc5\x68\xcf\xcf\x33\xae\x04\x4f\xcf\x38\xae\x0c\x3e\xef\x9f\x62\x4b\x99\x6b\xdb\x44\x8e\xb6\x87\xeb\x9d\x64\xe1\xfb\x12\x38\x3b\xa0\x6d\xef\xb4\xe7\xff\xb3\xb6\x1d\x5c\x91\x2f\x2a\x6b\xfe\xc5\x75\xed\x3b\x94\xa6\x2f\x50\x9a\x8a\xda\x57\xef\x3e\x8d\x92\x0b\x57\x59\x8e\x12\x30\x68\x63\xf4\xa3\x27\x4a\xd0\xe1\x5b\xc6\xde\xbf\x0e\x76\x9e\xdf\x7f\xda\xfe\xf5\x4f\x00\x00\x00\xff\xff\x91\x11\x91\xeb\x53\x11\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 4435, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdf\x6f\xdb\x38\x12\x7e\xf7\x5f\x31\x27\x18\x07\x29\x67\x53\xbd\x87\x7b\x09\x50\x1c\xba\x4d\x9a\x1a\xdb\x36\xdd\x3a\xdd\x3e\x14\x05\x42\x8b\x23\x89\x09\x4d\x2a\x24\xe5\xd4\xcd\xfa\x7f\x5f\x90\x94\x7f\x48\x96\x9d\xb4\xbb\x5b\x01\x41\x6c\x79\x38\xfc\xf8\xcd\xcc\x37\xc3\x87\x87\xf4\x04\x0a\x65\x97\x15\x9e\x02\x4a\x5b\x28\xc2\x55\x8a\xd2\xba\xbf\x2c\x2d\x50\x92\x0b\x4d\xab\x12\x4e\xd2\xd5\x6a\x30\x78\x78\x00\x86\x39\x97\x08\x51\x69\x6d\x95\xd6\x15\xa3\x16\x23\x58\xad\x06\x00\x00\x0f\x0f\x63\xb8\xe7\xb6\x04\xfc\x6a\x51\x32\x18\x42\xf4\x9e\x66\xb7\xb4\xc0\x28\x2c\x88\x60\xdc\x98\x06\x73\xb0\x38\xaf\x04\xb5\xce\x1f\x52\x86\x3a\x02\xb2\x75\x06\xce\x47\xf3\x8d\xcf\x2b\xa5\x2d\xc4\xe0\x11\x5f\x95\xdc\x00\x37\x20\x11\x19\x32\xc8\x95\x06\x63\xeb\x8a\x33\x98\x4e\x7e\x07\x5d\x0b\x0c\x80\xd7\x3b\x45\x05\xb7\x65\x3d\x23\x99\x9a\xa7\x85\x1a\x67\x25\x4f\xdd\xdf\xe2\x7f\xd1\x21\x93\x4a\xd0\x65\xa1\x55\x2d\x59\xba\xa0\x82\x33\x6a\x95\x4e\x17\xff\x7d\x16\x16\x24\x83\x35\xc4\x61\x75\x5b\xc0\xe9\x73\x98\x51\x83\x30\x24\x2f\x95\xcc\x79\x41\x9a\x53\xef\x1c\x45\x53\x59\x20\x0c\xa5\xb3\x1d\x92\x77\x8a\xa1\x81\x1d\x80\x69\x0a\xef\xe9\x52\x28\xca\x40\xe5\x40\x37\x9e\x57\x2b\xe2\x3e\x4a\xf2\x8e\xce\x9d\x3b\x08\x8c\x83\xc6\xbb\x1a\x8d\x25\x1b\x07\x2e\x82\xd0\x32\xfd\xe8\x2d\x3f\x04\x43\x30\x56\xd7\x99\x85\x87\xcd\x82\x80\xcb\x71\x79\x79\x76\x79\x0a\xaf\xe9\x82\xcb\x02\xa8\x10\x50\x29\x2e\x2d\x6a\x03\x25\x6a\x04\x83\x38\x37\x20\x95\x05\xcd\x8b\xd2\x12\x78\x4b\x97\x33\x04\xeb\x22\x90\x51\x09\x33\x04\xa6\x24\x02\x97\x40\xa5\xb2\x25\x6a\xb8\xa7\x4b\x20\x84\xb4\x43\xd0\xe6\x21\xf7\x3c\x48\xf2\x8a\xa3\x60\xa6\x95\x15\x3b\xc6\x3c\xf7\x1b\x0f\x73\x32\x99\xcf\x6b\x4b\x67\x02\x7b\x4d\xd7\xb1\xc8\xc9\xd4\x1f\xd3\x7b\x75\x6c\x9d\x84\xb7\x57\xcb\x0a\xdd\x4f\xee\x84\xab\xd5\xf5\x8d\x51\xf2\x34\x72\xfe\x25\xc3\xaf\x10\x9b\x4a\x70\x0b\xb1\xa5\xc5\x1b\xa5\x6e\xeb\x6a\xeb\xe8\x8a\x16\x10\x39\xf3\x28\x81\x68\x14\x25\xf0\x0c\x56\xab\xe8\xc0\xfe\x4d\xee\x37\xe9\xc2\x95\xbc\xa2\x85\x71\xbe\x5e\x48\xa9\xac\x7f\x63\xc8\xb9\xb8\x85\x68\x5b\x36\x6b\x6b\xf4\x78\x5c\xee\x47\x9b\xbc\xbf\xee\xa1\x64\xbc\x5b\x13\x3b\x47\x77\x6f\xbb\xcc\x6c\xd9\xc6\x86\xed\x73\x56\xe0\x41\xb2\x87\xd8\x61\x2f\x04\x60\x88\xe4\xa3\xe4\x77\xb5\x4b\x29\x47\x27\x0a\xe3\x3e\x7e\xfe\xb2\xc1\x19\xd6\x7a\x8e\x27\x67\x1d\xae\xe1\x09\x64\xe3\xf7\x91\x7d\x90\x68\xfc\x7b\x88\x6e\xeb\x8e\x7b\x56\x83\xdd\x3a\x0d\x75\xd5\x14\xa2\x01\x0a\x05\x5f\xa0\x3c\x5c\xb1\x54\x32\x30\x74\x81\x06\x6c\x89\x90\x95\x2e\x24\x06\xac\xf2\x5f\x19\xb5\xd4\x49\xc7\xb6\x90\xf3\x5a\x66\x10\x97\xed\x5a\x7e\x4d\x25\x13\xa8\x93\x66\xf3\xf8\x1e\x9c\x9a\x92\x0f\x68\x2a\x25\x0d\x7e\xd2\xdc\xa2\x1e\x81\x86\x93\xe6\xbd\x2f\xfa\xa4\x53\xee\xc2\xa5\x41\x49\x84\x2a\xc8\x27\x6e\xcb\xf8\x1b\xad\x9a\x48\xc5\xd1\x1c\x6d\xa9\x58\x34\x82\x28\x6c\x11\x25\xc9\xa0\xcb\xfa\xae\x58\x8b\x0a\x75\xea\x7b\x00\x67\xe3\x5c\xab\xf9\xb8\xd6\x22\x72\x02\xe7\xd2\xab\xb5\x34\x4d\xe1\x02\xad\x3f\x6e\xa5\x8c\xf5\x67\x26\x2d\x8b\x05\xd5\xc0\x8e\xa8\xd7\x13\x91\x30\xcc\x14\xc3\x31\x95\x6c\xbc\x8e\xf6\xb8\x11\xca\xf1\x4c\xb1\x65\xd4\x8b\x6d\x4a\x17\xb8\x89\x45\x1b\xd7\x2c\x10\x96\x09\x8e\xd2\xb6\xc3\x4a\x02\xc0\x4b\x89\x93\xb3\xb8\xa9\x14\xe9\xf2\xff\x35\x35\x17\xca\x15\x41\x53\x19\x72\x5d\x14\xb0\x5a\xc5\x9c\x25\xdb\x12\xe2\x6c\x93\x6a\x49\x17\x54\x10\xe5\xfb\x92\x5a\xa0\x33\x55\x5b\x30\x82\x67\x08\x79\x90\x4b\xeb\xde\x97\x0e\x77\x56\x1b\xab\xe6\x30\xa7\xda\x94\x54\x08\xd4\xe6\xff\x3f\x4d\x71\x79\x0e\x8c\xf4\xca\xee\xbf\x9e\x83\xe4\xa2\x93\x7d\x2d\x62\xc9\x14\x6d\xdf\xd2\xf8\xa4\xdf\x65\x12\x7a\x95\x55\x4c\xc1\xf8\xc7\x78\xd9\x6f\x47\xeb\xa7\x97\x89\x03\x8a\xfa\x57\x85\x76\x43\x5a\x57\x6d\x8f\x93\xd6\xd5\xe2\x43\x31\x09\xe4\x06\xff\x6f\xeb\xa0\x85\x53\xb4\x3b\xcc\x76\xf7\x4d\x0e\xed\xe7\xb3\xf4\x7b\xf6\x79\x29\x90\x6a\xb7\x53\xd2\xf9\xe1\x05\xf3\xa1\xed\xdf\x9f\x10\x72\x08\x42\x6f\xb3\x83\xbd\x80\x1d\x88\x8a\x2b\x6d\xab\xb4\x9f\x4c\xf6\x65\xd6\x3d\x38\x02\xd4\xda\x4f\x6f\xc4\xa9\x40\xac\xdd\xfc\x66\xf1\xab\x8d\x3b\xea\xc7\x73\x6f\x79\x30\x44\xe6\x9e\xdb\xac\x74\x36\x24\x76\x93\x58\x57\x79\xd7\x4f\xe6\xa6\xc4\x13\x27\x26\xef\x94\x7d\xe5\xa6\xcb\x73\xad\x95\x3e\x3d\xc8\xb1\x20\x13\x99\xab\x38\xda\xd1\x9e\x3f\xe0\x16\x67\x74\xe6\x52\xc6\x95\x6a\xee\xbc\x44\x23\x70\x62\x3e\x91\x76\x6d\x3a\x39\x5b\x2b\x55\x34\x02\xce\x92\x60\xe0\x77\x8b\x51\xeb\xa4\x9f\x73\xf7\x68\x94\x0c\xf5\x06\x60\x7c\x3f\x02\x3d\x82\x47\x11\xf4\x3b\x6c\x1d\x78\xca\x65\x51\x0b\xaa\x1f\x3d\x73\x80\x19\xb1\xba\x12\x3c\x73\x32\x8f\xd2\xea\xa5\x1f\xf3\x7b\x61\xfc\x03\xc7\xff\x85\xb2\xa6\xf9\xac\x09\xd8\xa2\xe9\xa7\x22\x60\xf4\x93\x09\x67\x10\xc1\x7f\xdc\xcc\x9d\x29\xb9\x20\x13\xab\x68\x8c\x64\x83\xac\x53\x80\xfd\x58\x18\xe6\xb4\x16\xf6\x09\x34\xa1\xfb\xe7\x46\x0c\x37\x72\xfd\x2c\x7e\x26\xee\x8a\x20\xa9\x98\xa2\x5e\x60\x88\x68\x43\x94\xe4\x62\x7f\xf5\x7e\x0d\x6b\xb4\xb5\x96\x83\xc3\x46\x69\x0a\x1f\xd0\xdf\x88\x3c\xb3\xed\xd2\xbd\x3b\xd2\x99\x7f\xab\x51\x2f\xe3\x84\x7c\x72\xf7\x97\xb8\x45\x88\x50\xf7\xe8\x24\x8a\x4c\xce\x8e\x06\x64\x6f\xe0\x08\xb7\x5a\xa7\xea\x57\xea\x8d\xc3\x34\x94\x10\x65\x1a\x77\x6f\xbf\x1d\xf0\xe7\xb4\x40\x0d\xe1\x00\xbe\x1d\xf8\xee\x44\x75\xb8\xbc\x71\x8d\x0c\x94\x5c\xdf\xe7\x54\x85\xda\x6b\x25\xe9\xeb\x45\x64\x7f\xe2\xef\xd5\xc6\x46\xd0\x9e\xc3\x1d\xb9\x94\x62\xd9\xd6\xb3\x27\x0e\x51\xda\x73\x9e\xfa\xa4\x1a\x97\x6e\xee\xe4\xb2\x70\xd7\xf2\xbd\xd9\xe9\x66\x23\x9f\xa6\x44\xcd\xf3\x9c\xbc\x0d\xed\x36\xfe\xf7\xfa\xc5\x65\xe5\x87\xf1\x7d\x31\x9c\xc8\x4c\xd4\x0c\xcf\xe7\x95\x5d\x5e\xd1\xe2\x14\xac\xae\x71\xb4\x67\x76\xa1\x55\x5d\x99\x53\xf8\xfc\xc5\xf8\x39\xf5\x50\x73\x6c\x02\x34\x94\xdd\x2b\xc0\x34\x2b\x71\x4e\x9b\x61\x2d\x78\x3b\xda\xd3\x5c\x79\xdc\x28\x2e\x21\x0e\x1b\x4e\xfd\x78\x41\x12\xb8\x8e\x46\xd1\xf5\xd1\xcb\xdf\xa3\xfd\xb2\x5f\x42\x8f\x38\xec\x69\x6a\xee\x59\xb5\x79\x5a\x8d\x00\xbf\xaf\x5b\x6d\x94\xc3\xa0\xe6\x54\xf0\x6f\x9e\x2f\xf0\x21\x7f\x44\x2a\x0e\x17\xcd\xe3\x0a\xf2\x63\xca\xf1\xa8\x4e\x1c\x6f\x91\x61\x53\x7c\xac\x43\x3e\x55\x9d\x9b\x33\x5c\xfe\xda\x40\xbe\x49\x06\x6d\x54\xdb\xdb\xe3\xe6\xd3\x9f\x01\x00\x00\xff\xff\x46\x69\x4a\x6a\x64\x13\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 4964, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
