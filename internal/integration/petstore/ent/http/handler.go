// Code generated by entc, DO NOT EDIT.

package http

import (
	"github.com/go-playground/validator/v10"
	"github.com/masseelch/elk/internal/integration/petstore/ent"
	"go.uber.org/zap"
)

// CategoryHandler handles http crud operations on the Category model.
type CategoryHandler struct {
	client    *ent.Client
	log       *zap.Logger
	validator *validator.Validate
}

func NewCategoryHandler(c *ent.Client, l *zap.Logger, v *validator.Validate) *CategoryHandler {
	return &CategoryHandler{
		client:    c,
		log:       l.With(zap.String("handler", "CategoryHandler")),
		validator: v,
	}
}

// OwnerHandler handles http crud operations on the Owner model.
type OwnerHandler struct {
	client    *ent.Client
	log       *zap.Logger
	validator *validator.Validate
}

func NewOwnerHandler(c *ent.Client, l *zap.Logger, v *validator.Validate) *OwnerHandler {
	return &OwnerHandler{
		client:    c,
		log:       l.With(zap.String("handler", "OwnerHandler")),
		validator: v,
	}
}

// PetHandler handles http crud operations on the Pet model.
type PetHandler struct {
	client    *ent.Client
	log       *zap.Logger
	validator *validator.Validate
}

func NewPetHandler(c *ent.Client, l *zap.Logger, v *validator.Validate) *PetHandler {
	return &PetHandler{
		client:    c,
		log:       l.With(zap.String("handler", "PetHandler")),
		validator: v,
	}
}
