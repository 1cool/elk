// Code generated by entc, DO NOT EDIT.

package http

import "github.com/masseelch/elk/internal/integration/pets/ent"

// Response of a ent.Category create request.
type CategoryCreateResponse struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

func NewCategoryCreateResponse(c *ent.Category) *CategoryCreateResponse {
	return &CategoryCreateResponse{
		ID:   c.ID,
		Name: c.Name,
	}
}

// Response of a ent.Category read request.
type CategoryReadResponse struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

func NewCategoryReadResponse(c *ent.Category) *CategoryReadResponse {
	return &CategoryReadResponse{
		ID:   c.ID,
		Name: c.Name,
	}
}

// Response of a ent.Category update request.
type CategoryUpdateResponse struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

func NewCategoryUpdateResponse(c *ent.Category) *CategoryUpdateResponse {
	return &CategoryUpdateResponse{
		ID:   c.ID,
		Name: c.Name,
	}
}

// Response of a ent.Category list request.
type CategoryListResponse []struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

func NewCategoryListResponse(c []*ent.Category) CategoryListResponse {
	r := make(CategoryListResponse, len(c))
	for i := range c {
		r[i] = struct {
			ID   int    `json:"id,omitempty"`
			Name string `json:"name,omitempty"`
		}{
			ID:   c[i].ID,
			Name: c[i].Name,
		}
	}
	return r
}

// Response of a ent.Owner create request.
type OwnerCreateResponse struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Age  int    `json:"age,omitempty"`
}

func NewOwnerCreateResponse(o *ent.Owner) *OwnerCreateResponse {
	return &OwnerCreateResponse{
		ID:   o.ID,
		Name: o.Name,
		Age:  o.Age,
	}
}

// Response of a ent.Owner read request.
type OwnerReadResponse struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Age  int    `json:"age,omitempty"`
}

func NewOwnerReadResponse(o *ent.Owner) *OwnerReadResponse {
	return &OwnerReadResponse{
		ID:   o.ID,
		Name: o.Name,
		Age:  o.Age,
	}
}

// Response of a ent.Owner update request.
type OwnerUpdateResponse struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Age  int    `json:"age,omitempty"`
}

func NewOwnerUpdateResponse(o *ent.Owner) *OwnerUpdateResponse {
	return &OwnerUpdateResponse{
		ID:   o.ID,
		Name: o.Name,
		Age:  o.Age,
	}
}

// Response of a ent.Owner list request.
type OwnerListResponse []struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Age  int    `json:"age,omitempty"`
}

func NewOwnerListResponse(o []*ent.Owner) OwnerListResponse {
	r := make(OwnerListResponse, len(o))
	for i := range o {
		r[i] = struct {
			ID   int    `json:"id,omitempty"`
			Name string `json:"name,omitempty"`
			Age  int    `json:"age,omitempty"`
		}{
			ID:   o[i].ID,
			Name: o[i].Name,
			Age:  o[i].Age,
		}
	}
	return r
}

// Response of a ent.Pet create request.
type PetCreateResponse struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Age  int    `json:"age,omitempty"`
}

func NewPetCreateResponse(pe *ent.Pet) *PetCreateResponse {
	return &PetCreateResponse{
		ID:   pe.ID,
		Name: pe.Name,
		Age:  pe.Age,
	}
}

// Response of a ent.Pet read request.
type PetReadResponse struct {
	ID    int    `json:"id,omitempty"`
	Name  string `json:"name,omitempty"`
	Age   int    `json:"age,omitempty"`
	Owner struct {
		ID   int    `json:"id,omitempty"`
		Name string `json:"name,omitempty"`
		Age  int    `json:"age,omitempty"`
	} `json:"owner,omitempty"`
	Friends []struct {
		ID    int    `json:"id,omitempty"`
		Name  string `json:"name,omitempty"`
		Age   int    `json:"age,omitempty"`
		Owner struct {
			ID   int    `json:"id,omitempty"`
			Name string `json:"name,omitempty"`
			Age  int    `json:"age,omitempty"`
		} `json:"owner,omitempty"`
		Friends []struct {
			ID    int    `json:"id,omitempty"`
			Name  string `json:"name,omitempty"`
			Age   int    `json:"age,omitempty"`
			Owner struct {
				ID   int    `json:"id,omitempty"`
				Name string `json:"name,omitempty"`
				Age  int    `json:"age,omitempty"`
			} `json:"owner,omitempty"`
			Friends []struct {
				ID    int    `json:"id,omitempty"`
				Name  string `json:"name,omitempty"`
				Age   int    `json:"age,omitempty"`
				Owner struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				} `json:"owner,omitempty"`
			} `json:"friends,omitempty"`
		} `json:"friends,omitempty"`
	} `json:"friends,omitempty"`
}

func NewPetReadResponse(pe *ent.Pet) *PetReadResponse {
	owner1 := struct {
		ID   int    `json:"id,omitempty"`
		Name string `json:"name,omitempty"`
		Age  int    `json:"age,omitempty"`
	}{
		ID:   pe.Edges.Owner.ID,
		Name: pe.Edges.Owner.Name,
		Age:  pe.Edges.Owner.Age,
	}
	friends1 := make([]struct {
		ID    int    `json:"id,omitempty"`
		Name  string `json:"name,omitempty"`
		Age   int    `json:"age,omitempty"`
		Owner struct {
			ID   int    `json:"id,omitempty"`
			Name string `json:"name,omitempty"`
			Age  int    `json:"age,omitempty"`
		} `json:"owner,omitempty"`
		Friends []struct {
			ID    int    `json:"id,omitempty"`
			Name  string `json:"name,omitempty"`
			Age   int    `json:"age,omitempty"`
			Owner struct {
				ID   int    `json:"id,omitempty"`
				Name string `json:"name,omitempty"`
				Age  int    `json:"age,omitempty"`
			} `json:"owner,omitempty"`
			Friends []struct {
				ID    int    `json:"id,omitempty"`
				Name  string `json:"name,omitempty"`
				Age   int    `json:"age,omitempty"`
				Owner struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				} `json:"owner,omitempty"`
			} `json:"friends,omitempty"`
		} `json:"friends,omitempty"`
	}, len(pe.Edges.Friends))
	for i1 := range pe.Edges.Friends {
		owner2 := struct {
			ID   int    `json:"id,omitempty"`
			Name string `json:"name,omitempty"`
			Age  int    `json:"age,omitempty"`
		}{
			ID:   pe.Edges.Friends[i1].Edges.Owner.ID,
			Name: pe.Edges.Friends[i1].Edges.Owner.Name,
			Age:  pe.Edges.Friends[i1].Edges.Owner.Age,
		}
		friends2 := make([]struct {
			ID    int    `json:"id,omitempty"`
			Name  string `json:"name,omitempty"`
			Age   int    `json:"age,omitempty"`
			Owner struct {
				ID   int    `json:"id,omitempty"`
				Name string `json:"name,omitempty"`
				Age  int    `json:"age,omitempty"`
			} `json:"owner,omitempty"`
			Friends []struct {
				ID    int    `json:"id,omitempty"`
				Name  string `json:"name,omitempty"`
				Age   int    `json:"age,omitempty"`
				Owner struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				} `json:"owner,omitempty"`
			} `json:"friends,omitempty"`
		}, len(pe.Edges.Friends[i1].Edges.Friends))
		for i2 := range pe.Edges.Friends[i1].Edges.Friends {
			owner3 := struct {
				ID   int    `json:"id,omitempty"`
				Name string `json:"name,omitempty"`
				Age  int    `json:"age,omitempty"`
			}{
				ID:   pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Owner.ID,
				Name: pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Owner.Name,
				Age:  pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Owner.Age,
			}
			friends3 := make([]struct {
				ID    int    `json:"id,omitempty"`
				Name  string `json:"name,omitempty"`
				Age   int    `json:"age,omitempty"`
				Owner struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				} `json:"owner,omitempty"`
			}, len(pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Friends))
			for i3 := range pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Friends {
				owner4 := struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				}{
					ID:   pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].Edges.Owner.ID,
					Name: pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].Edges.Owner.Name,
					Age:  pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].Edges.Owner.Age,
				}
				friends3[i3] = struct {
					ID    int    `json:"id,omitempty"`
					Name  string `json:"name,omitempty"`
					Age   int    `json:"age,omitempty"`
					Owner struct {
						ID   int    `json:"id,omitempty"`
						Name string `json:"name,omitempty"`
						Age  int    `json:"age,omitempty"`
					} `json:"owner,omitempty"`
				}{
					ID:    pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].ID,
					Name:  pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].Name,
					Age:   pe.Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].Age,
					Owner: owner4,
				}
			}
			friends2[i2] = struct {
				ID    int    `json:"id,omitempty"`
				Name  string `json:"name,omitempty"`
				Age   int    `json:"age,omitempty"`
				Owner struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				} `json:"owner,omitempty"`
				Friends []struct {
					ID    int    `json:"id,omitempty"`
					Name  string `json:"name,omitempty"`
					Age   int    `json:"age,omitempty"`
					Owner struct {
						ID   int    `json:"id,omitempty"`
						Name string `json:"name,omitempty"`
						Age  int    `json:"age,omitempty"`
					} `json:"owner,omitempty"`
				} `json:"friends,omitempty"`
			}{
				ID:      pe.Edges.Friends[i1].Edges.Friends[i2].ID,
				Name:    pe.Edges.Friends[i1].Edges.Friends[i2].Name,
				Age:     pe.Edges.Friends[i1].Edges.Friends[i2].Age,
				Owner:   owner3,
				Friends: friends3,
			}
		}
		friends1[i1] = struct {
			ID    int    `json:"id,omitempty"`
			Name  string `json:"name,omitempty"`
			Age   int    `json:"age,omitempty"`
			Owner struct {
				ID   int    `json:"id,omitempty"`
				Name string `json:"name,omitempty"`
				Age  int    `json:"age,omitempty"`
			} `json:"owner,omitempty"`
			Friends []struct {
				ID    int    `json:"id,omitempty"`
				Name  string `json:"name,omitempty"`
				Age   int    `json:"age,omitempty"`
				Owner struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				} `json:"owner,omitempty"`
				Friends []struct {
					ID    int    `json:"id,omitempty"`
					Name  string `json:"name,omitempty"`
					Age   int    `json:"age,omitempty"`
					Owner struct {
						ID   int    `json:"id,omitempty"`
						Name string `json:"name,omitempty"`
						Age  int    `json:"age,omitempty"`
					} `json:"owner,omitempty"`
				} `json:"friends,omitempty"`
			} `json:"friends,omitempty"`
		}{
			ID:      pe.Edges.Friends[i1].ID,
			Name:    pe.Edges.Friends[i1].Name,
			Age:     pe.Edges.Friends[i1].Age,
			Owner:   owner2,
			Friends: friends2,
		}
	}
	return &PetReadResponse{
		ID:      pe.ID,
		Name:    pe.Name,
		Age:     pe.Age,
		Owner:   owner1,
		Friends: friends1,
	}
}

// Response of a ent.Pet update request.
type PetUpdateResponse struct {
	ID   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
	Age  int    `json:"age,omitempty"`
}

func NewPetUpdateResponse(pe *ent.Pet) *PetUpdateResponse {
	return &PetUpdateResponse{
		ID:   pe.ID,
		Name: pe.Name,
		Age:  pe.Age,
	}
}

// Response of a ent.Pet list request.
type PetListResponse []struct {
	ID      int    `json:"id,omitempty"`
	Name    string `json:"name,omitempty"`
	Age     int    `json:"age,omitempty"`
	Friends []struct {
		ID      int    `json:"id,omitempty"`
		Name    string `json:"name,omitempty"`
		Age     int    `json:"age,omitempty"`
		Friends []struct {
			ID      int    `json:"id,omitempty"`
			Name    string `json:"name,omitempty"`
			Age     int    `json:"age,omitempty"`
			Friends []struct {
				ID   int    `json:"id,omitempty"`
				Name string `json:"name,omitempty"`
				Age  int    `json:"age,omitempty"`
			} `json:"friends,omitempty"`
		} `json:"friends,omitempty"`
	} `json:"friends,omitempty"`
}

func NewPetListResponse(pe []*ent.Pet) PetListResponse {
	r := make(PetListResponse, len(pe))
	for i := range pe {
		friends1 := make([]struct {
			ID      int    `json:"id,omitempty"`
			Name    string `json:"name,omitempty"`
			Age     int    `json:"age,omitempty"`
			Friends []struct {
				ID      int    `json:"id,omitempty"`
				Name    string `json:"name,omitempty"`
				Age     int    `json:"age,omitempty"`
				Friends []struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				} `json:"friends,omitempty"`
			} `json:"friends,omitempty"`
		}, len(pe[i].Edges.Friends))
		for i1 := range pe[i].Edges.Friends {
			friends2 := make([]struct {
				ID      int    `json:"id,omitempty"`
				Name    string `json:"name,omitempty"`
				Age     int    `json:"age,omitempty"`
				Friends []struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				} `json:"friends,omitempty"`
			}, len(pe[i].Edges.Friends[i1].Edges.Friends))
			for i2 := range pe[i].Edges.Friends[i1].Edges.Friends {
				friends3 := make([]struct {
					ID   int    `json:"id,omitempty"`
					Name string `json:"name,omitempty"`
					Age  int    `json:"age,omitempty"`
				}, len(pe[i].Edges.Friends[i1].Edges.Friends[i2].Edges.Friends))
				for i3 := range pe[i].Edges.Friends[i1].Edges.Friends[i2].Edges.Friends {
					friends3[i3] = struct {
						ID   int    `json:"id,omitempty"`
						Name string `json:"name,omitempty"`
						Age  int    `json:"age,omitempty"`
					}{
						ID:   pe[i].Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].ID,
						Name: pe[i].Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].Name,
						Age:  pe[i].Edges.Friends[i1].Edges.Friends[i2].Edges.Friends[i3].Age,
					}
				}
				friends2[i2] = struct {
					ID      int    `json:"id,omitempty"`
					Name    string `json:"name,omitempty"`
					Age     int    `json:"age,omitempty"`
					Friends []struct {
						ID   int    `json:"id,omitempty"`
						Name string `json:"name,omitempty"`
						Age  int    `json:"age,omitempty"`
					} `json:"friends,omitempty"`
				}{
					ID:      pe[i].Edges.Friends[i1].Edges.Friends[i2].ID,
					Name:    pe[i].Edges.Friends[i1].Edges.Friends[i2].Name,
					Age:     pe[i].Edges.Friends[i1].Edges.Friends[i2].Age,
					Friends: friends3,
				}
			}
			friends1[i1] = struct {
				ID      int    `json:"id,omitempty"`
				Name    string `json:"name,omitempty"`
				Age     int    `json:"age,omitempty"`
				Friends []struct {
					ID      int    `json:"id,omitempty"`
					Name    string `json:"name,omitempty"`
					Age     int    `json:"age,omitempty"`
					Friends []struct {
						ID   int    `json:"id,omitempty"`
						Name string `json:"name,omitempty"`
						Age  int    `json:"age,omitempty"`
					} `json:"friends,omitempty"`
				} `json:"friends,omitempty"`
			}{
				ID:      pe[i].Edges.Friends[i1].ID,
				Name:    pe[i].Edges.Friends[i1].Name,
				Age:     pe[i].Edges.Friends[i1].Age,
				Friends: friends2,
			}
		}
		r[i] = struct {
			ID      int    `json:"id,omitempty"`
			Name    string `json:"name,omitempty"`
			Age     int    `json:"age,omitempty"`
			Friends []struct {
				ID      int    `json:"id,omitempty"`
				Name    string `json:"name,omitempty"`
				Age     int    `json:"age,omitempty"`
				Friends []struct {
					ID      int    `json:"id,omitempty"`
					Name    string `json:"name,omitempty"`
					Age     int    `json:"age,omitempty"`
					Friends []struct {
						ID   int    `json:"id,omitempty"`
						Name string `json:"name,omitempty"`
						Age  int    `json:"age,omitempty"`
					} `json:"friends,omitempty"`
				} `json:"friends,omitempty"`
			} `json:"friends,omitempty"`
		}{
			ID:      pe[i].ID,
			Name:    pe[i].Name,
			Age:     pe[i].Age,
			Friends: friends1,
		}
	}
	return r
}
