{
  "info": {
    "title": "Fridge CMS",
    "description": "API to manage fridges and their cooled contents. **ICY!**",
    "termsOfService": "",
    "contact": {},
    "license": {
      "name": ""
    },
    "version": "0.0.1"
  },
  "paths": {
    "/compartments": {
      "get": {
        "summary": "List Compartments",
        "description": "List Compartments.",
        "tags": [
          "Compartment"
        ],
        "operationId": "listCompartment",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Compartment list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Compartment1151786357View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Compartment",
        "description": "Creates a new Compartment and persists it to storage.",
        "tags": [
          "Compartment"
        ],
        "operationId": "createCompartment",
        "requestBody": {
          "description": "Compartment to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "contents": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "fridge": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Compartment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Compartment1151786357View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/compartments/{id}": {
      "get": {
        "summary": "Find a Compartment by ID",
        "description": "Finds the Compartment with the requested ID and returns it.",
        "tags": [
          "Compartment"
        ],
        "operationId": "readCompartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Compartment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compartment with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Compartment1151786357View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Compartment by ID",
        "description": "Deletes the Compartment with the requested ID.",
        "tags": [
          "Compartment"
        ],
        "operationId": "deleteCompartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Compartment to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Compartment with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Compartment",
        "description": "Updates a Compartment and persists changes to storage.",
        "tags": [
          "Compartment"
        ],
        "operationId": "updateCompartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Compartment to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Compartment properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "contents": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "fridge": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Compartment updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Compartment1151786357View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/compartments/{id}/contents": {
      "get": {
        "summary": "Find the attached Contents",
        "description": "Find the attached Contents of the Compartment with the given ID",
        "tags": [
          "Compartment"
        ],
        "operationId": "listCompartmentContents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "ID of the Compartment",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Compartment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contents attached to Compartment with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Content3310419308View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/compartments/{id}/fridge": {
      "get": {
        "summary": "Find the attached Fridge",
        "description": "Find the attached Fridge of the Compartment with the given ID",
        "tags": [
          "Compartment"
        ],
        "operationId": "readCompartmentFridge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Compartment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fridge attached to Compartment with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fridge2716213877View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contents": {
      "get": {
        "summary": "List Contents",
        "description": "List Contents.",
        "tags": [
          "Content"
        ],
        "operationId": "listContent",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Content list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Content3310419308View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Content",
        "description": "Creates a new Content and persists it to storage.",
        "tags": [
          "Content"
        ],
        "operationId": "createContent",
        "requestBody": {
          "description": "Content to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "compartment": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Content3310419308View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contents/{id}": {
      "get": {
        "summary": "Find a Content by ID",
        "description": "Finds the Content with the requested ID and returns it.",
        "tags": [
          "Content"
        ],
        "operationId": "readContent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Content",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Content3310419308View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Content by ID",
        "description": "Deletes the Content with the requested ID.",
        "tags": [
          "Content"
        ],
        "operationId": "deleteContent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Content to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Content with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Content",
        "description": "Updates a Content and persists changes to storage.",
        "tags": [
          "Content"
        ],
        "operationId": "updateContent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Content to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Content properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "compartment": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Content3310419308View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contents/{id}/compartment": {
      "get": {
        "summary": "Find the attached Compartment",
        "description": "Find the attached Compartment of the Content with the given ID",
        "tags": [
          "Content"
        ],
        "operationId": "readContentCompartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Content",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compartment attached to Content with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Compartment1151786357View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/fridges": {
      "get": {
        "summary": "List Fridges",
        "description": "List Fridges.",
        "tags": [
          "Fridge"
        ],
        "operationId": "listFridge",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Fridge list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fridge2716213877View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "summary": "Create a new Fridge",
        "description": "Creates a new Fridge and persists it to storage.",
        "tags": [
          "Fridge"
        ],
        "operationId": "createFridge",
        "requestBody": {
          "description": "Fridge to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title"
                ],
                "properties": {
                  "compartments": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "title": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fridge created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fridge2716213877View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/fridges/{id}": {
      "get": {
        "summary": "Find a Fridge by ID",
        "description": "Finds the Fridge with the requested ID and returns it.",
        "tags": [
          "Fridge"
        ],
        "operationId": "readFridge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Fridge",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fridge with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fridge2716213877View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "summary": "Updates a Fridge",
        "description": "Updates a Fridge and persists changes to storage.",
        "tags": [
          "Fridge"
        ],
        "operationId": "updateFridge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Fridge to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Fridge properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title"
                ],
                "properties": {
                  "compartments": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "title": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fridge updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fridge2716213877View"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/fridges/{id}/compartments": {
      "get": {
        "summary": "Find the attached Compartments",
        "description": "Find the attached Compartments of the Fridge with the given ID",
        "tags": [
          "Fridge"
        ],
        "operationId": "listFridgeCompartments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "ID of the Fridge",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Fridge",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compartments attached to Fridge with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Compartment1151786357View"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/fridges/{id}/contents": {
      "get": {
        "summary": "Return everything stored in this fridge",
        "description": "List every item stored in every compartment belonging to this fridge.",
        "tags": [
          "Fridge"
        ],
        "operationId": "fridgeContents",
        "responses": {
          "200": {
            "description": "All the contents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of the fridge",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Compartment1151786357View": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Content3310419308View": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Fridge2716213877View": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 400
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Bad Request"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "user misses permission",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 403
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 404
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Not Found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 409
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Conflict"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": 500
                },
                "errors": {
                  "type": "object",
                  "properties": {}
                },
                "status": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {}
  },
  "openapi": "3.0.3"
}