// Code generated by entc, DO NOT EDIT.

package compartment

const (
	// Label holds the string label denoting the compartment type in the database.
	Label = "compartment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeFridge holds the string denoting the fridge edge name in mutations.
	EdgeFridge = "fridge"
	// EdgeContents holds the string denoting the contents edge name in mutations.
	EdgeContents = "contents"
	// Table holds the table name of the compartment in the database.
	Table = "compartments"
	// FridgeTable is the table that holds the fridge relation/edge.
	FridgeTable = "compartments"
	// FridgeInverseTable is the table name for the Fridge entity.
	// It exists in this package in order to avoid circular dependency with the "fridge" package.
	FridgeInverseTable = "fridges"
	// FridgeColumn is the table column denoting the fridge relation/edge.
	FridgeColumn = "fridge_compartments"
	// ContentsTable is the table that holds the contents relation/edge.
	ContentsTable = "items"
	// ContentsInverseTable is the table name for the Item entity.
	// It exists in this package in order to avoid circular dependency with the "item" package.
	ContentsInverseTable = "items"
	// ContentsColumn is the table column denoting the contents relation/edge.
	ContentsColumn = "compartment_contents"
)

// Columns holds all SQL columns for compartment fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "compartments"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"fridge_compartments",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
