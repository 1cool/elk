// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/date_utc_converter.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_delete.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xd1\x6f\xdb\xbc\x11\x7f\xdf\x5f\x71\x33\x0c\x58\xfa\xe0\xc8\x7b\x4e\xea\xf4\xdb\x92\x65\xeb\xf0\x75\x28\x96\xe4\xa9\x28\x02\x46\x3c\x39\x5c\x24\x52\x21\xa9\xb6\x9e\xaa\xff\x7d\x20\x29\xd9\x94\x4c\xc9\x6e\x8b\x15\x2b\xf0\xe5\x25\x89\x74\xbc\x3b\xde\xfd\xee\x77\x77\xaa\x6b\xa0\x98\x31\x8e\x30\x4b\x73\x86\x5c\xcf\xa0\x69\xfe\x00\x00\x50\xd7\xa0\xb1\x28\x73\xa2\x11\x66\x4f\x48\x28\xca\x19\x9c\xb5\x2f\x59\x51\x0a\xa9\x61\x51\x92\xf4\x99\x6c\xf0\x9c\x32\xb1\xa2\x4c\x24\x94\x48\xbd\xb8\x08\x8a\x64\x79\xa5\x35\xca\xd5\x27\x46\x37\xa8\xd5\x94\xe8\xbf\x95\xe0\x0f\x84\x73\xa1\x89\x66\x82\xaf\x06\xff\x4f\x1d\x2d\xa5\xf8\xc8\x28\xca\x55\xf7\x47\x27\xdc\x93\x4e\x92\x15\x25\x1a\x1f\x2a\x9d\x3e\xa4\x82\x7f\x44\xa9\x07\x92\x75\xbd\xfa\x05\xde\x38\x71\xfd\x84\x90\x56\x4a\x8b\x02\x8c\x08\xe8\x6d\x89\x2a\x81\x5f\x56\xfb\x48\x49\xc2\x37\x08\xf3\xe4\x6e\x5b\xe2\x5b\x52\x96\x8c\x6f\xd4\x2e\x58\xbe\xe5\xba\x86\xa4\x55\xdb\x34\xed\x1d\x9c\x8e\x33\x60\x19\x24\x57\x9d\x37\x3b\x21\xff\xe4\xe1\xdb\xc5\x45\x5d\x03\x72\xba\x33\xd6\xfe\xdb\x34\xe1\x7b\x70\x41\x11\x98\x56\x98\x67\x40\x38\x05\x92\xe7\x20\x32\xfb\x0a\xe9\x06\x15\x68\x22\x37\xa8\xad\x9c\x82\x15\x38\x50\xf8\xb7\xf5\x62\x58\x08\x8a\xf9\xaa\xae\x61\x9e\xfc\x93\x14\x08\x5f\x40\x71\xf2\x8c\xd0\x34\x7e\x8a\xf6\xe1\x41\x38\x5f\xc3\x3c\xf9\xab\x35\x14\x8a\x4e\x4f\x27\xda\x68\x4e\x69\xf6\x02\x27\x24\x44\x5c\xe8\xdd\xa9\x3f\xef\xd0\xa2\x92\xbf\x13\x4e\x73\x94\x7f\x43\x1e\x9f\x22\x94\xdc\x3e\xb3\x32\x06\xcf\xbd\x81\x8b\x2e\x26\x5f\xe5\xe3\xd1\x14\xfd\x43\x09\x7e\x8b\x92\x91\x9c\xfd\x87\x3c\xe6\x08\x65\xa5\x95\x4d\xcb\x06\x39\x4a\xa2\x91\x42\x6a\x73\xc7\x41\x3f\x31\x05\x19\xcb\xd1\xcb\x4a\x49\x5a\x8c\x1c\xa6\x62\x73\x08\xec\xb7\xe6\x95\x51\x5e\xc9\x36\xfd\x4c\x39\x68\x90\x34\x45\xa5\x98\xf1\x40\x0b\x10\xfa\x09\xa5\x03\xbd\xb1\xe7\xc3\x20\x15\x5c\x69\x08\x19\xbc\x97\x39\xac\xad\x2f\x91\xc4\x32\x27\x29\x42\xd4\x17\x8a\x61\xf6\x30\x83\xd9\xd9\x2c\x86\x2f\x50\xe6\x95\x24\xb9\xab\x86\xbd\x87\x77\xa6\xe6\x6c\x9c\x21\x13\x12\x08\x58\x5c\x24\x70\x25\xb8\xaa\x0a\x1c\x86\x86\x94\xcc\xf7\x2d\x27\x4a\x79\xbe\x35\xcd\x95\x53\x55\xfb\x29\x19\xbc\x8c\xea\x5f\x25\xbe\x54\x4c\x22\xb5\xf1\x48\x28\x13\x4d\x0c\xe7\x40\x94\x42\xa9\x23\xca\x04\xfc\x71\x0d\xbc\xca\xf3\xb8\xf5\xd4\xfc\x64\x8c\x93\x1c\xae\x99\x00\xca\x84\xf7\xdc\xde\xe2\x86\x99\x12\x03\xc5\xf8\x26\x6f\x6b\xef\x71\x0b\x8c\x7a\xbe\x9a\x9f\x9b\x4a\x57\x12\x5f\xf9\x3e\x5d\x1a\xc5\x34\xb2\x8f\xde\x5c\x5b\x94\xc1\x17\x9b\x09\xfb\x67\xd3\x00\xa3\x31\x10\xb5\xe5\xa9\x77\xab\xbd\x43\x12\xd6\x40\x3e\x11\xa6\x8d\x5b\xc9\x06\x75\xb4\x58\xcd\x47\xb2\xb5\x9a\x33\xba\x88\x2f\x7a\x5a\x24\xea\x4a\xf2\x5e\x98\x92\x4c\x8a\xc2\xe0\x34\x32\x54\xa9\x89\x77\xa2\x19\xdc\xfb\x37\xa6\x34\x14\x55\xae\x59\xd9\xde\xdb\x02\x56\xa3\x09\xee\xe3\x16\x5e\x2a\x94\x5b\x83\x59\x52\xa8\x70\x2c\x8c\x86\x7e\x40\x2e\x21\x67\x4a\x47\xfd\xcb\x32\xae\xa1\x24\x1b\x5c\x1e\x3c\x65\x1a\x0b\xf5\x0e\xe5\xbb\x83\xb7\x86\x31\x5a\x42\xca\x1c\x21\xdd\x30\xcc\xa9\x1a\x56\x7c\x27\x3b\x37\xed\xc7\x7a\x71\xbe\x06\xc6\x29\x7e\x86\x48\x95\x39\xd3\x10\x69\xb2\xf9\x4d\x88\xe7\xaa\x84\x79\x96\xdc\x6a\x59\xa5\xfa\x8e\x6c\x60\x66\x4e\xcc\x62\x98\x2d\x67\x31\xfc\x29\xa4\xb7\x85\x20\xcb\xc0\xf0\x51\x84\x2f\x9e\x15\x5b\x17\x67\x23\x87\x3a\xec\x66\x21\x48\xb8\x17\x6d\x82\x53\x52\xa0\x29\xab\xe5\x98\xf1\x96\x83\xa6\x9f\x36\x53\x20\x73\x09\x84\x75\x47\x06\x8d\x87\x7f\x9b\x87\x0c\x22\x93\x9d\x5d\xdd\x0c\xb4\x80\x23\x2e\x52\xa8\xf7\x0b\x23\xb7\xf8\x00\x6b\x9b\xce\x3e\x16\x9b\x43\xad\x7e\x76\x4f\xd1\xee\xcb\x5b\x2b\xfe\x83\x49\x6b\xfb\xee\xf5\xff\x0b\x96\x09\xac\x98\x60\x05\x61\x31\x15\xb5\x50\x04\x8d\x92\x9d\xd5\xa6\xb1\x41\x0c\x2a\xbe\x18\x55\x37\x7a\xb3\x49\x24\x7e\x27\xb9\x2d\xe2\x00\x28\x1d\x81\xc1\x7a\x3c\x04\x2d\xff\xbd\xff\x30\x09\x8e\x56\xaa\xd3\x47\x94\x65\xbe\x38\x29\x48\x19\x45\x2c\x86\xf5\xe5\x08\x83\xb2\x38\x4e\xb4\x30\xc2\xd1\x04\x8d\x5e\x49\x34\xd3\x37\x01\x8e\x9f\x5c\xf7\x10\xdc\x36\x3e\x89\x85\xd0\x78\x4a\x17\x49\xad\x8a\xa8\xd7\xee\xec\xa3\x7f\xe1\x4b\x85\x4a\x83\xc4\x97\xd3\xfb\x48\x29\xd4\x64\xac\x97\x60\xe2\x70\x6e\x94\x26\x5a\xd8\x9b\xc6\xe1\xc6\x12\x4d\x76\x96\x89\x98\xdc\x97\xb4\x8d\xc9\x37\xc5\xa3\xb2\xc7\x7b\xd6\x9d\xc6\x6f\x8b\x07\xd1\xe9\xd3\x64\x67\xad\x4d\x28\xba\x2e\xde\x1a\x6c\x7e\x44\x9c\xae\x31\xc7\xaf\x89\x13\x50\x7b\xe0\xd8\xc4\xb1\xbe\xec\x79\x69\x77\x3e\x77\xf0\xf8\x7c\x31\x98\x8d\x50\xa7\x4f\xbb\x9d\x44\xb9\xf5\x63\xe0\x5a\x78\x75\x38\xa4\x8a\x1f\xb1\x00\xf4\x21\xc5\x32\xa3\xe4\x9e\xb3\x97\xca\xdc\x72\xb8\x0b\xd8\x27\x98\x2b\xf3\xd7\x6e\x94\xe9\x0b\x5c\xee\x28\xce\x91\x04\x0e\x89\xb4\x97\x7a\xc0\x30\x2a\xa7\xd0\x79\x6c\xea\xab\xf1\x00\x99\x4e\x3a\xbc\xd5\xb4\x64\x1a\xb2\x3e\x0c\xc8\xd4\xf4\xe2\x03\xbb\x1f\x91\x29\x78\x0f\xac\xd9\xd0\x9e\x62\xe5\x08\x33\x8f\x39\x10\xe6\xe7\xa1\x13\xde\x4e\xe7\xff\x1c\x9b\xa9\x02\xbd\xcd\xdf\xca\xfc\x55\xac\xdb\xc5\x1e\xb7\xb6\x52\xec\x26\xd6\x7d\xd9\x80\xf6\x9b\xc7\xa0\x66\x94\x01\x74\x1a\xda\x7e\x44\x16\xfd\xa5\x62\x39\xbd\x12\x5c\xe3\x67\x6d\xa6\x36\xf3\xdb\x06\xe3\x5d\xf7\xb9\x44\x64\xaf\x0e\x8f\x5e\x46\xad\xec\xd2\x0e\xe1\xc8\xcf\x21\x23\xb9\xc2\x36\x36\xcd\x60\x71\x2b\x50\x29\x33\x98\x55\xca\xec\x52\xa2\x6d\x42\x6d\x1f\xb3\x8b\xdc\x28\x21\x19\xdb\x34\x4b\x4d\xb5\x9b\xcb\xb6\xac\xdc\xce\x5c\xee\xfb\x0a\xcc\x4c\x7d\xba\x2e\xb6\xfb\x5a\xf5\xeb\x70\x81\x8e\x9c\xd1\x1b\x92\x6a\x21\xb7\x9d\xbf\x4e\xf6\x9a\x68\xbc\xd7\xe9\xee\x6b\x4a\x14\x8f\xad\x8d\xbd\x56\x39\xb2\x3d\xfa\x32\x83\xf5\x64\xcf\x5f\xe6\x4e\x21\xac\xd8\x4d\xb3\xae\x61\x7a\x6a\x0f\x80\xad\xe9\x13\xea\x88\x3f\x16\xd1\xfe\xdb\x03\x52\x39\x1f\x71\x98\x2d\xbb\x89\x77\xcc\xf5\xf0\x58\xb9\x06\x4c\x82\x93\xb1\x21\x88\x2c\x79\xa3\x0c\x85\x43\xd3\x58\xba\x7f\x9d\x4c\x94\x51\x50\xff\x29\xaa\x5f\x1f\x3a\xd0\x97\x34\x72\xa7\x50\x95\xf3\xc0\x4a\x5b\x9a\xd8\x13\xe5\xa8\x81\xa3\xc4\x64\x09\x08\x6d\xcd\x39\xfa\x0d\x1b\x88\x5f\xef\xf8\x67\xdc\xd6\x78\xe0\xc6\x5f\x9d\xf5\xf6\x08\x06\x11\xc5\x14\xa2\x1c\xb9\x4d\x74\x1c\x9b\xbe\xb7\x1c\x9b\xc9\x0f\x6d\xf6\x41\x38\x01\x76\xd7\x22\xf6\x5f\x30\x5d\x8b\x1c\xfe\x1f\xf2\xdb\x88\x79\x1b\xee\xf8\xbe\x11\xe0\xd5\xb7\xa4\x7c\x75\xab\x25\xe3\x9b\x25\xd0\x2d\x27\x05\x4b\x2f\xa1\x9b\xb8\x4c\x0e\x1e\xe6\xa3\xb5\x73\xe7\xc4\x4c\x85\x9e\xc8\x73\x55\x37\x9b\x9e\xc2\x71\xd5\x71\x8e\x73\x93\xe9\xff\x98\xe3\xfa\xe3\x6f\x98\xe3\x7a\x32\x03\x8e\xeb\x18\xcc\x9f\x23\x0e\xd8\x6b\x07\x8c\xea\x07\xb1\x60\xcf\xe3\x6f\x60\x41\xff\x36\x96\xd3\x06\xcf\x1c\x9c\xdb\xb2\xa9\xa6\x6a\x26\x44\xa8\xe1\x28\xfc\x4e\xa8\x01\x03\x3f\x37\xa1\x56\xdf\x49\xa8\x63\xab\xd8\x00\x8d\x17\x41\x12\x3e\x44\xd9\x4f\x41\xc2\xbd\xd2\x0d\x91\xf0\xde\xc4\x7f\x03\x00\x00\xff\xff\xbe\x56\xeb\x78\xbe\x1c\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 7358, mode: os.FileMode(420), modTime: time.Unix(1611309498, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4f\x6b\xdb\x4e\x10\xbd\xe7\x53\xbc\x5f\x08\xc4\x0a\x8e\x7c\x57\x7e\x09\x69\x53\x68\x4b\x69\x28\xf8\x90\x43\x29\x66\xab\x1d\xdb\x83\xd7\xbb\xea\xee\xc8\x89\x51\xf5\xdd\x8b\xfe\x58\x96\xec\x60\xd2\xee\x45\xec\xcc\xbc\xb7\xf3\x66\x9e\x8a\x02\x9a\xe6\x6c\x09\xe7\xa9\x61\xb2\x32\xc9\xbc\xdb\xb0\x26\x7f\x8e\xb2\x3c\x03\x80\xa2\x80\xd0\x3a\x33\x4a\x08\xe7\x4b\x52\x75\xee\xba\x4d\xf2\x3a\x73\x5e\x70\x99\xa9\x74\xa5\x16\x94\x68\x76\x13\xcd\x2e\xd6\xca\xcb\xe5\xcd\xab\x25\x73\x93\x8b\x90\x9f\x3c\xb3\x5e\x90\x84\x53\xa5\xbb\x5e\xba\xa6\xde\x54\x1c\xd8\x2e\x0c\xcd\xd2\x25\x1b\x3d\x6b\x5e\xd9\xe1\x5a\x41\x93\x2b\x7c\x6e\xd0\xb4\x21\xbf\x85\x75\x9a\x70\x35\xd9\x0b\xf6\xca\x2e\x08\x17\x16\xc9\x2d\x2e\xe2\x47\xa7\x29\x74\x92\x9b\x92\x6b\xf0\x1c\xd6\x09\x2e\x6c\xfc\xce\x5a\x27\x4a\xd8\xd9\x10\x7f\x52\x56\x1b\xf2\x1f\xc9\xc6\xd3\x15\x67\xe8\x81\xfa\x4d\x17\x45\x05\x7c\x54\x6b\xc2\x6f\x04\xab\x56\x84\xb2\xec\xab\x6b\x1b\x21\xab\xbb\x87\x7b\xd7\xbd\x8e\x6f\x8d\x6a\xc8\x92\xd0\x6c\x30\x40\xbb\x67\x5b\x07\x1a\xf1\x10\x4f\x14\xef\xf5\xa5\x46\x85\x80\x87\xba\xb8\x85\x7b\xd0\x8b\x90\xd5\x01\xd3\x7a\x78\x0f\xd5\xec\xa6\xa2\x84\x0c\x85\xf0\xd4\xd0\x14\x5d\x63\x43\xec\xa8\x18\x48\xfc\x42\x5b\xac\x68\x3b\x1e\x04\xef\x3d\xfd\xca\xd9\x93\x86\x2c\x39\xc4\x9a\xdd\x30\x5f\x47\xeb\x8d\xed\xe3\x65\x84\x04\x2a\x04\xf2\x32\xd2\xec\xf0\xdf\x2d\x6c\x6e\x4c\x34\x46\xc8\x33\xf2\xa3\x15\x6d\x93\xfa\x25\xd4\xc0\xa4\xf9\x44\xed\x96\xab\x33\x67\xab\x0c\x3e\xb0\x83\x66\x77\x73\x10\x6e\x55\xd5\xa0\x1e\xe6\xde\x6d\xc8\x7b\xd6\xd4\x45\xda\xc2\x9f\x39\x1b\xfd\xc4\xb2\xac\x87\x33\x7a\x5f\x5d\x1f\x9c\x15\x7a\x11\xa4\xcd\x77\x3c\x20\x8d\x30\x1c\x8c\x27\xc9\xbd\xc5\xd7\xdc\x08\x77\xb3\x1b\x54\x54\x67\x67\xe3\x90\xe0\xfb\x51\xf2\x8d\xf6\x3c\x86\xfc\xa3\x5d\x0f\xcf\xae\xed\xff\x7b\xfe\x2d\xcb\xc6\x0e\x77\xc7\x5a\x0e\x4f\xea\x49\x09\x25\x18\xcd\x22\xdc\xde\xe1\x15\x92\x6a\xd1\x49\xb5\xad\x68\x7c\x92\xed\x44\xfa\xe0\xaf\xf9\x8b\xf4\x8f\x63\xd2\xbe\xb3\x86\xd9\x68\xef\xa7\x86\xa9\x3c\x6b\xa9\xcb\xf2\x4f\x00\x00\x00\xff\xff\xe4\x64\xed\x6d\x56\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1366, mode: os.FileMode(420), modTime: time.Unix(1605565331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterDate_utc_converterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xc3\x30\x10\x86\xf7\x3c\xc5\xaf\x2e\x4d\x24\x14\x60\x41\x28\x90\x16\x09\x16\x58\xa1\x33\x32\xc9\xb5\x72\x49\xee\x22\xfb\xda\x25\xf2\xbb\x23\x3b\x6d\x24\x8a\x84\x17\x9f\xcf\xf7\x7f\x9f\x3d\x8e\x68\x69\x6b\x99\xb0\x68\x8d\xd2\x46\x9b\x67\xe1\x23\x39\x25\xb7\x40\x08\x19\x00\xd8\x7e\x10\xa7\x58\xb6\xc6\x69\x75\xb0\xcb\x87\xec\x57\x7b\x30\xcd\xb7\xd9\x51\xb5\xf7\xc2\x9f\x86\x59\xd4\xa8\x15\xbe\xbe\x38\x97\x31\x7e\xce\x36\x9d\xf1\x1e\x2f\x17\xc6\x88\xec\xa8\x27\x56\x8f\x37\x2f\x3c\x5f\x3c\xc6\xc9\x0f\xdb\xd3\x15\xde\xd5\x59\xde\xad\x30\x26\x4e\x62\x09\x7b\xfd\xc3\xca\x8b\x93\x2a\xae\x27\x39\x92\x73\xb6\xa5\xb9\x73\x06\x62\xeb\xa4\x8f\xae\x7c\x02\x23\xbe\xba\x40\xbd\x4a\x05\xea\x1a\x7c\xe8\x3a\xac\xa7\xad\x9a\x73\xe5\x60\x9c\xa7\x3c\x4d\xff\x2b\x3a\x61\x55\x92\x64\xd6\xca\xd7\x9e\x1a\x4d\xa2\xa9\x5c\x97\x2a\x1b\x6d\xf2\x22\x16\xaf\x5e\xee\xef\x6e\x6e\xa7\x6c\xfc\x49\x24\x85\x6c\x1c\x41\xdc\x22\x84\x9f\x00\x00\x00\xff\xff\x00\x01\xc1\x3b\xb6\x01\x00\x00")

func flutterDate_utc_converterTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterDate_utc_converterTpl,
		"flutter/date_utc_converter.tpl",
	)
}

func flutterDate_utc_converterTpl() (*asset, error) {
	bytes, err := flutterDate_utc_converterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/date_utc_converter.tpl", size: 438, mode: os.FileMode(420), modTime: time.Unix(1606432038, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x6d\x4f\xdb\x30\x10\xfe\xce\xaf\x38\x55\x11\x2d\x68\xb8\xdf\x81\x22\x26\xde\xc6\x34\x36\x69\xc0\xe7\xca\xc4\xe7\xd4\x90\xd8\xc1\x76\x91\xba\x90\xff\x3e\xf9\x25\x69\x92\xb6\x43\x9b\xf6\x29\x8e\xef\xee\xb9\x97\xe7\x39\x57\x15\x30\xe4\x42\x22\x8c\x0a\xc5\x30\x1f\x41\x5d\xef\x01\x00\x54\x15\x58\x2c\xca\x9c\x5a\x84\xd1\x02\x29\x43\x3d\x82\xa3\x68\x14\x45\xa9\xb4\x85\x31\xa3\xda\x1e\xa7\x4a\xbe\xa1\xb6\xe3\x93\xbd\x9e\xad\xa4\xe9\x0b\xcd\xf0\xf8\xd9\x28\x39\xa7\x52\x2a\x4b\xad\x50\x72\x3a\xf8\x27\x0e\x63\x18\x4b\xc8\x94\x51\x8b\xf3\xa5\x4d\xe7\x11\x1e\x75\xcf\xb3\xaa\x20\x61\x1c\x8e\x67\xe0\x6e\x7f\xe2\xeb\x12\x8d\xbd\x16\x98\x33\x03\x09\x79\x58\x95\x08\x23\xdf\x4b\xf4\x9e\x1e\xc2\x6d\x00\xb7\x0b\x84\x74\x69\xac\x2a\x7c\x28\xd8\x55\x89\x86\xc0\xe1\x74\xdd\xb8\xa6\x32\xc3\x08\x73\x47\xcb\x52\xc8\xcc\xb4\xbd\x77\xeb\xac\x2a\x20\x11\xb6\xae\xc7\x27\xad\xbd\xaa\x8e\x40\x70\x20\x17\x4d\xed\xad\x53\x37\x72\xd3\x3a\x3e\xa9\x2a\x40\xc9\xda\x64\xf1\xb7\xd7\xc7\xb5\xd2\x80\x6f\xa8\x57\x80\x2c\xc3\xa6\x16\xd7\x56\x86\x12\x35\xb5\xc8\xc0\x73\xb9\xb5\x29\x74\x33\x4b\xc8\x15\xcb\x70\x7b\x4f\x84\x4c\x7d\xf4\xd4\x8d\x18\xfd\x0c\xc8\x77\x5a\x20\xbc\x83\x91\xf4\x05\xa1\xae\x1b\x26\x76\x55\xf8\xd5\x28\x79\x8f\x5a\xd0\x5c\xfc\xa2\x4f\x39\x42\xb9\xb4\x66\x50\x61\xaa\x18\x82\x90\x60\x17\xc2\x00\x17\x39\x76\xaa\x2d\x69\x1c\x51\xb2\x91\x39\xeb\xa9\xe0\x7c\x98\x69\x72\x10\xee\x2f\xa9\xc5\x47\x9b\xb6\x13\x8e\xf7\x69\x4e\x8d\x81\x35\x70\x5d\x43\xd5\x21\x6d\x7d\x3d\x39\x88\x19\xda\x9e\x1e\x16\x08\x3c\xe8\x4b\x71\xdf\xcb\x70\xc6\x2d\xc6\xed\x65\x10\xe0\xbb\x17\x98\x3f\xba\x44\xd1\x14\x33\xf4\xc5\x12\xc9\xe1\x81\x9c\xa8\xe3\x2e\x3b\x8d\x63\x92\x7a\x17\xc6\xd7\xea\x71\x7a\x48\x38\x6c\x71\x16\x1c\xa8\x64\x90\x70\xf2\xb9\xdd\x37\x13\xd0\x6f\x50\x92\x3b\x5a\xde\x28\x5f\x5e\xc2\xc9\x17\x6a\xe2\xcf\x30\x6d\x07\x2d\x49\xa1\xae\x5d\x23\xf1\xdb\x95\x6a\x67\x04\x3b\xae\x13\xbe\x6b\x2e\xbc\xe1\x39\xa5\x05\xe6\x83\xe9\xf4\xf4\xd5\xe3\x03\xbd\x88\x3f\xa2\x23\x0e\x3c\x28\xde\x87\x74\xb8\x3d\x57\x6f\xa8\xb5\x60\xb8\xde\x03\x69\x21\x43\x0b\x0b\x6a\x16\x17\x4e\xa4\xb3\xb3\x21\x77\xa4\xb1\xfd\x11\xe8\x49\xa9\x1c\x54\xe9\xf4\xae\x34\xcc\x66\x93\x1f\x4f\xcf\x98\x5a\x50\x76\x81\xfa\xc0\xc1\xfa\x13\x88\x81\x22\xf7\xf7\x87\xf9\x60\x36\x0b\xbe\x64\x43\x44\x6d\x36\x4e\x53\xab\xf4\xaa\x07\x45\xb8\x56\x85\x5b\x91\xc9\x1d\x2d\x4f\xef\xad\x16\x32\xfb\x04\x6c\x25\x69\x21\xd2\x33\x70\x2f\xb1\xaf\x63\x9e\x74\xa3\xae\x9b\x20\x6f\x5f\x33\xb1\x15\xc3\x2a\xef\xba\x05\xe6\x21\x58\xdc\x7e\x77\x97\x29\x20\x80\x55\xe1\x10\x22\x5d\xa6\x2b\xe9\x9e\x84\x49\x03\x18\x13\x77\x9f\x95\x0f\x29\xdf\xf5\x1c\x6c\xae\x7d\x10\xc3\xf6\xdd\xf7\xb6\xc1\x03\xf0\xe1\xeb\x19\xdd\xdc\x8e\x20\x79\x94\xe2\x75\x89\x71\x55\xba\x4f\x68\x58\x9a\xdc\xb8\xd3\x37\x61\xec\xe9\xa6\xc3\x59\x2b\x78\x08\xc6\xbf\xd9\x8c\x6d\x22\xf0\xb5\xfe\x9b\x12\x7c\xe8\x7f\x92\x83\xc7\xea\x6b\x22\xf0\xbb\x6e\xe3\x77\x00\x00\x00\xff\xff\x85\xe5\x03\xb4\x8c\x08\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 2188, mode: os.FileMode(420), modTime: time.Unix(1611763918, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x71\x13\x8c\x56\xf6\x6c\x2a\xed\x80\x3d\x64\xf0\x43\xd7\x61\x6d\x81\x36\xc8\x92\x76\x7d\x66\xc4\xb3\x44\x44\x22\x59\x92\x4a\xea\x19\xfa\xdf\x07\x52\x3f\x2c\xd5\x92\x97\x5f\x05\x3a\x03\x06\x44\xde\x1d\xbf\xbb\xef\x3e\x91\xd4\x6e\x07\x33\x75\x9d\xc2\xe9\x1a\xae\xa8\x41\x08\x33\x2a\x58\x8e\x3a\x84\xaa\x0a\x76\xbb\x15\xdc\x72\x9b\x01\x7e\xb5\x28\x18\xcc\x20\x3c\xa7\xc9\x35\x4d\x31\xec\x39\xae\xaa\x2a\x00\x00\xd8\xed\xc0\x62\xa1\x72\x6a\xdd\x32\x48\x99\x33\x92\x7a\x1d\x70\xe1\x55\x15\x04\xbc\x50\x52\x5b\x88\x7c\x44\x28\xd0\xc6\x99\xb5\x2a\xac\x87\xc6\xea\x44\x8a\x9b\x30\xa8\x87\x29\xb7\x59\x79\x45\x12\x59\xc4\xa9\x5c\x25\x19\x8f\x93\x8c\x87\x63\x36\x95\xd3\x6d\xaa\x65\x29\x58\x7c\x43\x73\xce\xa8\x95\x3a\xbe\x79\x71\x72\xe8\x9c\x73\xae\x62\x93\xa1\xe6\x9b\xcd\xa1\xb5\xa0\xc6\x20\xe6\x49\x16\x6b\x14\x2e\xff\x03\x0f\xc3\x75\xa9\x0c\x8a\x38\x97\xa9\x2e\x4d\x9b\xaa\xa3\x91\xbc\x96\x62\xc3\x53\xd2\x50\x04\x55\x15\x36\xbc\xc4\x0b\x78\x57\xd7\x4d\xf3\x1c\xec\x56\xa1\x81\xd2\x20\x03\x2e\xc0\x66\x08\x1b\x8e\x39\x33\xb0\x88\xf7\x4c\x6a\x2a\x52\x04\x75\x9d\xd6\x81\x06\x66\x1d\xcf\x2d\x20\xe9\x21\xb4\xfc\xce\x83\x20\x8e\xe1\x32\xa3\x1a\x19\x34\x1d\x22\x81\x43\x6c\x47\x60\xac\x2e\x13\x0b\x3b\x1f\xb9\x48\x32\x4e\x3e\x94\x5f\xeb\x32\x92\x9c\xa3\xb0\x7e\x1e\x85\x25\xaf\xfd\xd0\x5b\x3a\x56\x61\xd1\x3d\x92\xbf\xeb\x27\xf4\x1e\xb9\x4c\x53\xd4\x3e\xb6\xa6\x86\xbc\xf7\x33\x41\x15\x04\x5d\x3d\x33\xe1\x84\x36\x23\x67\x92\xa1\x81\x7d\xb5\x7c\x03\x42\x5a\x98\x09\xf2\x4a\x08\x69\xa9\xe5\x52\x18\xf2\xb6\xce\xf8\x0d\x0a\x72\x79\xcd\x95\xd7\x4f\x4b\x40\x1c\xc3\xc7\x0c\x5d\xec\x4c\x90\x33\x5a\x38\xba\xdf\xb6\xf5\xb6\x4e\xbe\xee\x31\x97\x21\x09\xed\x6f\xd1\x50\xd4\x4d\x0e\xf1\x5e\x6b\x74\xd2\xa6\x20\xf0\x76\x74\xd5\xce\x79\x53\x8a\x04\xce\xf0\x76\xcc\x29\x4a\xfa\xe4\x2e\xe1\x66\x8c\xd1\xa5\xa3\xf3\x1b\x22\xe7\xb0\x18\x2d\x65\x58\x43\xe6\x08\x7e\x36\xe6\x38\xf4\x73\xbf\x67\xd9\x94\xc5\xfd\x3e\x94\x5f\x4f\xbb\x81\x93\xc9\x19\xde\x5e\xc8\xd2\xa2\x8e\xe6\xcb\xd1\x88\x5a\x3e\x3e\x28\x19\xf7\xe8\x2a\x3d\x85\x9b\x71\x8f\x5a\x46\xa7\xcd\xe3\xa1\x4f\x35\x9c\xea\x75\x08\xee\x21\xa5\xa6\x95\x55\x35\xdc\xb3\x6a\xa7\x38\xf1\xd6\x58\xbb\x62\x43\xa7\x59\xef\xd7\xbc\x61\x0f\x81\xbb\x40\xca\xa6\xc0\x34\x52\xf6\x84\x50\x9f\x14\x3b\x52\x59\xe9\xad\x4f\x08\xf7\x07\xe6\x38\x0d\xc7\xbc\xb5\x85\x7b\x2c\xd6\x7b\x6e\xec\x14\x52\xce\x8d\x9d\x28\xeb\x1b\xac\x78\x01\x56\x32\x09\x2b\x30\x6e\x4f\xd1\x68\x64\xa9\x13\xec\xed\xbe\xbd\xbc\x0e\x81\x4c\x79\xd5\x86\xc4\x29\x0e\x31\x87\x50\x1a\x6d\xa9\x05\x64\x63\xbb\xc9\x53\xea\x74\xb2\x8f\x4f\xa5\xce\x47\x03\xdc\x45\x93\x8f\x06\xb9\x8b\x12\x1f\x0d\xf2\x5f\x12\x9c\x16\xdf\x5d\x85\x77\x17\xd1\xb5\x72\x83\xc1\xd1\xdf\x03\xf5\x60\x97\xb2\x40\xc8\x30\x57\xa8\x1b\x0c\x7f\x2c\x45\x59\x7b\x13\x98\x43\xa9\xf3\x73\xaa\x69\x71\x69\x35\x17\x69\x74\x0b\xee\x2e\x46\x2e\xd0\x28\x29\x0c\x7e\xd6\xdc\xa2\x5e\x82\x86\x45\x33\xff\xa5\x44\x63\x97\xa0\x5c\x8c\x3b\x42\xb9\x48\xe7\x10\x71\xd6\x3c\x2f\x01\xb5\x76\x7f\xa9\xe7\xcd\xb1\xc4\x19\xac\xfd\xe1\xf1\xe9\xe2\xbd\x87\x8a\x74\x13\x3f\xaf\xed\x1b\xef\xb2\x86\x30\xec\x1d\x64\x6e\x99\x75\xbd\x90\x71\xc7\x4e\x14\x62\xa1\xec\xd6\xe5\x5b\x07\x87\xf3\xce\x37\x23\xf5\x91\x41\x3e\x73\x9b\xfd\xe9\x2e\x52\x51\x58\xfb\xb4\x40\xe4\x9d\xd8\xc8\x63\x4b\xd4\x77\x3d\xf2\x3b\x65\x4d\x89\xd1\xed\x12\xda\x3c\xe1\x67\x08\x21\xa1\x4e\x13\x70\x85\xf0\xfc\x79\x13\xd8\xf4\xb6\x7e\xcb\x83\x23\xe4\xbe\x13\xf6\x11\xcc\x72\x77\x47\x38\xa0\x55\xb9\x53\xfe\x38\xad\xea\x7f\xc9\x6a\x8f\xd2\x1e\xc9\x9c\x2d\x9b\xec\x9b\x2f\x04\xf2\xca\x4a\x1e\xa9\xae\x58\x67\xfc\x69\x0d\x82\xe7\xbd\x7a\x47\x6a\xf0\xd8\x4b\x50\x5d\xf6\x8e\x0c\x97\x91\xe1\x22\xdd\x57\x81\x16\xf5\xbd\x2a\x29\x4a\xe3\xeb\xa0\xa0\xa4\xe1\x96\xdf\xa0\x6b\x1c\xba\x0b\x71\xea\x37\x69\x0d\xff\xa0\x96\x47\x8b\xec\x94\x34\x2d\xa5\x8f\xbc\xc0\x87\x6a\xc9\x6f\xc1\x96\x17\x48\xdc\x2a\x4f\xa5\xa9\x1f\x4b\x27\xf5\xd5\xb9\x56\x8a\x2f\xf5\x9c\x6a\x83\x51\xf8\xf2\xe4\xe4\xd7\xd5\xc9\x8b\xd5\xc9\x4b\x97\xd6\x0f\xa8\x1a\x7f\x2f\xf6\xe9\xbb\x4f\xc2\xed\x76\xbb\x5d\x15\xc5\x8a\x31\xd8\x48\x5d\x50\xfb\x50\xdd\x28\x9a\x72\xe1\x4f\x32\x9f\xf8\xdd\x94\x33\x87\x48\xb9\xcf\x57\xbf\xf3\x70\x8b\x85\x39\x47\x7d\xde\xcd\x1c\xea\xc6\x99\xd6\xf0\xa2\x66\xb5\xef\xbf\x86\x5f\x4e\x82\x96\x6c\xe6\xe4\xa5\x9d\xb8\xc8\x5f\x25\xea\x6d\x34\x27\x6f\xd0\x46\x61\x3f\x22\x9c\xff\x06\xcc\xb5\x64\xa0\xb1\xbe\xc7\xe8\x3e\xc0\xf6\xf4\x4c\x75\x75\x4a\xab\x03\xf4\x25\xb0\xf1\x16\x7f\x71\x09\xef\x9b\x0c\xcf\xfb\x61\x7d\x49\x1e\xeb\xfb\x00\xeb\x01\x3b\xc6\x37\xdd\xaf\x15\xd0\xdf\x24\xa7\x39\x56\x93\xdc\xaa\xef\xc0\xa9\xba\x1f\x97\xea\x3e\x1c\xaa\xef\xc3\xdd\xfe\x1d\xfa\x37\x00\x00\xff\xff\x37\x9d\x80\xac\x10\x13\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 4880, mode: os.FileMode(420), modTime: time.Unix(1611309159, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x5d\x6f\xdb\xb8\x12\x7d\xcf\xaf\x98\x2b\x18\x05\x15\xd8\xf4\xed\x6b\x8a\xe2\xa2\x6d\x7a\x73\x83\xbb\x6d\x77\xeb\xee\xf6\xa1\x28\x50\xda\x1c\x59\x6c\x64\xd2\x21\xa9\x24\x5e\x2d\xff\xfb\x82\x1f\x96\x2d\x4b\x71\xd3\x2e\xba\x1f\x7a\x49\x44\xcd\x0c\x87\x73\x0e\xcf\x8c\x9b\x06\x38\x16\x42\x22\x64\x25\x93\xbc\x42\x3d\x5d\x68\x64\x16\xa7\x5a\xd5\x16\x33\x70\xae\xa4\x3f\x2a\x63\x49\x36\xcd\xc6\x50\xd2\x17\xe1\x6b\xde\x34\x80\x92\x83\x73\x27\x27\xf7\x86\xf0\xce\x27\x00\x00\xd3\x29\x18\xab\xeb\x85\x05\xab\x60\x2e\x24\x07\x5b\x22\xac\x95\xb1\x30\x57\x7c\x03\x56\xd1\x60\x67\x37\x6b\x84\xa6\x81\x11\x7d\xcd\x56\x08\xbf\xc1\x82\xad\xb0\x02\xe7\xe2\xa6\x6f\xf1\xba\x46\x63\xb7\xb1\x9a\xe0\xe3\x9f\xa6\x99\x9e\xc2\x33\xce\x81\x55\x15\x14\x02\x2b\x6e\xc0\x96\xcc\x02\xd3\x08\x52\x59\xc0\xbb\x45\x55\x73\xe4\x14\x4e\xa7\x29\xa7\xe8\x07\x9a\xc9\x25\xc2\xa8\x80\xb3\xa7\x30\xa2\xff\x8d\xbe\x93\x3d\x9b\x68\x37\x81\x11\x0b\x26\x05\x7d\x26\xa5\xb2\xcc\x0a\x25\x4d\xb4\xbf\x40\x09\x03\x0e\xa2\x08\x5b\x13\x26\xb9\x77\x1e\x31\x3a\xbb\x12\xeb\x54\xbe\x43\x87\x94\xcd\xa8\xa0\xb3\x70\xb8\x10\x18\x9c\x83\xd3\xb8\xfa\x6e\xb3\x46\xff\x49\xc8\xa5\x5f\xfd\xf4\xd9\x28\x79\x96\x35\x0d\x08\xc9\xf1\x0e\x88\x59\x57\xc2\x02\xb1\x6c\xf9\x83\x52\x57\xf5\x7a\x17\xe9\x1d\x5b\x42\xe6\xcd\xb3\x1c\xb2\x71\x96\xc3\xbf\xc1\xb9\xe0\x59\xf8\x9c\x62\x3e\xbf\xb0\x4a\xf0\x70\x26\x6f\xee\x5c\xc8\xe5\xbe\x8f\x2d\xf4\x9f\x7a\x67\x4e\x94\x38\x5c\x9a\x74\xd6\xf6\xb0\x42\xbe\xc4\x87\x42\x35\xd9\x62\x85\x11\xab\x97\xc1\xf7\x08\x54\xf8\x35\x50\x79\x94\x88\xdf\x7f\x84\xb1\xd8\xfb\xbe\xff\x8b\xb4\xbe\x40\x19\x30\xcc\xa3\xe5\x30\xb2\xf7\x42\x8b\x87\xd0\x26\x0c\x90\xfe\x2c\xc5\x75\x8d\xe0\x9c\x07\x1b\x2b\xe3\xff\xfd\xf0\xb1\x2d\x73\x74\x0e\x49\x5d\x9e\x7f\x03\x13\xf0\xaf\x62\xc2\x64\x80\x0a\x69\xc9\x9d\x6c\x85\xe1\x5d\x29\x0c\x14\xb5\x5c\xf8\xb0\x10\x85\xc3\x00\x03\x89\xb7\x7b\x52\xe0\x1c\xac\x14\xc7\x2a\xe0\x64\xac\xd2\x68\x40\x58\x10\x32\x28\x09\x67\x96\xcd\x99\xc1\xa8\x22\x3e\x18\x29\x3b\xce\x09\xc0\x1c\xe2\x39\xc8\x2d\x94\xd6\xae\xe9\x5b\x34\x6b\x25\x0d\xbe\xd7\xc2\xa2\x1e\x83\x86\xd3\xb4\x1e\x84\x26\xdf\x93\x98\xe9\x14\x2e\xd0\xee\x74\xcb\x6f\x49\xdb\xaf\xdc\x13\x6e\x5f\xb8\x8c\x64\x57\x78\x28\x5c\x8d\xf3\x61\xac\xe2\x0a\x26\x9e\xfe\xea\x16\x0a\xa5\x57\x93\x5a\x57\x13\x94\x0b\xae\x38\xf2\xe9\xdd\xaa\x9a\xae\xb5\xb2\x6a\x5e\x17\x07\xbb\x88\x02\x50\x6b\xbf\x95\x47\x91\xbe\xc6\xdb\x73\x5c\x28\x8e\x9a\x68\xfa\x5c\xf1\x4d\x4e\xe3\x3b\x79\xc4\xf3\x27\xc1\xf4\x5f\x4f\x41\x8a\x6a\xef\x18\xfe\x29\x69\xa5\x96\x4b\xd4\xf4\xbd\xb0\xe5\x4b\xad\x95\x26\xa8\x75\x4e\xe3\xbf\x19\xfa\x3f\xc0\x7d\x24\xcf\xb1\x48\x98\x4e\x00\x8d\x92\xa3\xa6\xcf\x19\x4f\x07\x23\xb7\x63\xd0\x63\xc8\x84\xbc\xf1\x0c\x09\x3e\x5e\xa5\x85\x5c\xf6\x5c\x6d\xad\x65\xbb\x94\x68\x90\x0a\x9c\xe8\x85\x2d\xa6\x43\x47\x2f\xe9\x4d\x34\x53\x3a\xf1\x9a\x1c\x3d\x6d\xf4\x1c\x83\xba\xf2\xde\xa8\x35\x25\xa7\xbb\x08\x97\x31\xe3\x1d\xb1\x43\x11\xf2\x27\xde\xbc\xe9\x5d\xe3\x07\x55\x2e\x05\xf7\xb5\xd3\xa9\x61\xf9\xb3\x1c\x14\x62\xaf\x8e\x97\xd2\xa2\x96\xac\x9a\xa1\xbe\x41\x1d\x63\xc5\x82\x4a\x51\x0d\x79\x75\x4a\x78\x50\xc6\x63\x69\x5e\xca\x42\x91\xec\xa6\x3d\x2b\x14\x4c\x54\xc8\x1f\x88\xae\x0f\xf1\x70\x2c\x67\xec\x66\x08\xc7\x79\x84\x70\x51\x09\x94\x96\xee\x5f\xd1\x24\x31\x24\x1f\x92\xfc\xbf\x43\x7b\x16\x05\x70\x3a\xd8\xa3\x07\x79\xd7\x9e\x98\xce\xd0\x0e\xb9\x91\xd3\xe1\x70\x79\x6c\x91\x49\x26\x6e\x43\x6f\x9c\xab\xda\x82\xa9\xc4\x02\x3b\xe3\x4d\xe9\x8b\xbc\xa8\x8d\x55\x2b\x58\x31\x6d\x4a\x56\x55\xa8\xcd\x7f\xba\xad\x73\x07\xd0\x61\x0d\xfa\x22\x3d\xd4\xc1\xff\xb9\x6d\xb7\x85\xac\xd7\x7b\x8f\x42\x96\x72\xdb\xef\xcc\x83\x76\x11\xde\x18\xff\x55\x1d\xb3\x9e\xa1\xdd\xc3\xf6\x70\xdf\xfe\x6d\x6e\xa1\x88\x6d\xff\xc1\xfb\xf8\x09\xca\x39\x32\xbc\x0d\xa5\xf4\xc8\x4e\x5d\x84\xb7\xcf\xd7\xb0\xa3\x73\xd1\x7d\x33\xf6\x8d\xb8\xdb\x84\xfd\x83\xe3\xad\x68\xcf\xa9\xd7\x03\xa2\xe9\x0b\x25\x2d\xde\x59\x92\xe7\x87\xd2\xfe\xed\xad\xca\xb0\x1b\x2f\xb6\xfb\x62\x32\x2c\x69\x5f\x21\xb4\x47\xb5\xed\x2d\x32\x1e\xe6\x13\x94\x56\x6f\x76\xe7\xbd\xbe\x5f\xdc\x7e\xaa\x51\x6f\x48\x4e\xdf\x97\xa8\x91\x0c\x4d\x0a\xf4\xf2\x9c\xf8\x01\x2f\x1f\x14\xc0\xce\xe5\xeb\x5d\xa5\xad\xd5\x32\x5a\xdd\x73\x87\xe2\x4d\xb9\xd0\xaa\x5e\xf7\x62\x74\xe3\x60\x08\xf4\x85\x49\x72\x19\x02\xc5\x59\xf2\x3e\xe6\xc6\xe1\x12\xaf\x7d\x6a\x3e\xaa\x73\xd7\x01\xca\xa6\x81\x35\x33\x0b\x56\xf9\x98\xa9\x46\x24\xef\xcb\x4f\x9f\x7a\xc7\x57\xfb\x2b\xf8\xb8\x25\xe1\x35\x7d\x23\xab\xcd\x77\x22\xa1\x46\xc6\xff\x5c\x16\xce\x50\x0b\x56\x89\x5f\x87\xda\x6c\x90\xe3\x08\xd0\x37\x51\xe2\x73\x5b\x34\x53\xa2\x16\x45\x41\x5f\xc5\xf6\x42\x1e\x6d\x17\xde\xac\x43\xb4\x26\x3a\x9f\xc1\x87\x8f\x71\xe0\x6b\x86\x64\x7e\x9b\xcb\x20\xb4\x93\x2e\x7d\xa3\x69\xf8\x65\x32\x5a\x3a\x97\x8d\x13\xa8\xfd\x96\x13\x45\xf3\x70\xdd\x3f\xd9\xd0\x0d\x3b\xf3\x18\x65\x5f\x94\x39\xe7\xc6\x80\x8f\xff\x18\x35\xfc\x6b\x10\x63\x92\x75\x64\x20\xbc\x5c\x9e\xb7\x04\x19\x43\xb8\xf2\x5b\x2a\x99\x04\x69\x9c\xce\x02\xb1\xbe\x23\x87\x3a\xc9\xf7\xb2\xdd\xd5\xad\xcd\x32\xce\x8f\x43\x26\x29\xaf\xce\x2c\x99\x52\x7d\xf3\xff\x94\xd9\xe7\x3c\xfd\xf2\x6b\x2f\xe9\xef\x01\x00\x00\xff\xff\x04\x61\xe3\xa1\x7c\x12\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 4732, mode: os.FileMode(420), modTime: time.Unix(1612176683, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_deleteTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xd4\x40\x0c\xbd\xef\xaf\x78\x44\x3d\x24\x90\xce\xde\x8b\x7a\x62\x8b\xc8\x81\x82\x28\x52\x2f\xbd\xa4\x1d\x67\x63\x31\xeb\x29\xce\xa4\x5d\x34\xcc\x7f\x47\xf9\x60\x95\x6d\x59\x09\x5f\x22\xdb\xf1\x7b\xcf\x6f\x1c\x23\x2c\x35\x2c\x84\xac\xad\xc5\x3a\xd2\xb5\x25\x47\x81\xd6\xea\xfb\x40\x19\x52\x6a\xcd\xe7\x7e\x6f\x36\x63\x35\xcf\xd6\x91\x6d\x8c\xe0\x06\x67\xa6\xda\x98\xaa\xab\x24\x20\xa5\x8b\xbb\x3b\xfb\x2e\x46\x90\x58\xa4\x94\xb2\x12\xed\x3c\x52\x1c\xaa\xab\xd5\x49\xb6\x81\x67\x05\x00\xeb\x35\xbe\xb7\xdc\xa1\xe9\xe5\x21\xb0\x17\x4c\xfd\x0e\xa1\x25\xc4\x88\x33\x73\x5d\xef\x08\x29\x61\xe7\x2d\x39\xb0\x25\x09\xdc\x30\x59\xdc\xff\x42\x8d\x2d\x3f\x91\xa0\x57\x77\xfe\x58\x6b\xbd\xa3\x40\x6a\x46\xe0\x01\x30\x6f\x8f\x20\x3e\x4d\x12\x0a\xcc\xbb\x3d\xa3\x0d\xe1\xd1\x7c\xa3\xee\xd1\x4b\x47\xb7\xca\x81\xb4\x84\xe2\xed\x5c\xff\xd9\x53\x17\x0a\xc4\x11\x70\x88\x18\xcf\x5f\x39\x71\x68\x0e\xc1\xb6\x04\xa9\xe2\xe2\x12\xad\xe9\xd5\x7d\x1d\x44\x55\x12\xf2\xe7\x12\x5a\x22\x63\x9b\x15\x0b\x34\x90\xeb\xe8\xbf\x30\x6e\x82\xb2\x6c\x4f\xc2\x88\xc5\xf9\x02\x86\x9b\x11\xe1\xcd\x25\x84\xdd\x42\xff\x10\x4a\xa1\x57\x39\x94\xd2\xea\xe5\xd4\xc8\xfb\xe0\x98\x24\x98\xa5\x7d\xf3\xfb\x7e\x11\xaa\x36\x39\xdb\xc2\x5c\xed\xe9\x21\x57\xf3\xc1\x4b\xa0\x7d\xc8\x8b\xe2\xfd\x69\xd6\xd6\x38\xbf\xdd\x92\x9a\x5b\x0e\xed\x95\xaa\xd7\x9c\x54\x8b\x31\xfd\xc8\xe4\x6c\x9e\x1d\x71\x8d\x49\xb5\xf9\x9b\x67\x25\x46\xc6\x71\x30\xa3\xe1\x33\x5d\x0a\xcb\x16\xe2\x2d\xa1\x51\xbf\x83\xbd\x5f\xf8\x32\x2d\x2b\x96\xd4\x54\x12\x48\xa5\x76\x37\xa4\x4f\xa4\x13\xca\x64\xa5\xb0\x7b\x39\x71\xca\x9e\xa3\x15\x5e\x69\xfe\x8d\x4e\xea\x1f\x0b\xad\x95\x34\xfe\xdf\x3f\xcc\x37\xbe\x7c\xc3\x59\xe7\xb5\x1f\xcd\x9c\xef\x65\x6a\xa7\x55\x8c\x24\x36\xa5\x3f\x01\x00\x00\xff\xff\x88\x2f\x8f\xc6\xbb\x03\x00\x00")

func handlerHandler_deleteTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_deleteTpl,
		"handler/handler_delete.tpl",
	)
}

func handlerHandler_deleteTpl() (*asset, error) {
	bytes, err := handlerHandler_deleteTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_delete.tpl", size: 955, mode: os.FileMode(420), modTime: time.Unix(1611313722, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\x12\x46\x2d\x2d\x6c\xba\xbd\xa6\x30\x8a\xec\x26\xcd\x06\x4d\x9b\x34\xc9\x22\x87\xa2\x07\xda\x1c\x49\x6c\x68\x52\x26\xa9\x64\x53\xad\xfe\x7b\x41\x4a\x72\x64\x59\x4e\x76\x81\x5c\xaa\x8b\x2d\x71\xf8\xe6\xeb\x71\x1e\xcb\x12\x38\x26\x42\x21\x90\x8c\x29\x2e\xd1\xcc\xa5\xb0\x6e\x6e\x74\xe1\x90\x40\x55\x65\xf4\x0c\x5d\x44\xe6\x64\x0a\x19\xbd\x10\xd6\xc5\x65\x09\xa8\x38\x54\xd5\x68\x74\x68\xf7\xa6\x40\xf3\x34\x4b\x84\x74\x68\x3c\xc8\x08\x00\x60\x3e\x87\xcf\x16\xc1\x65\x08\x61\x1d\x72\x66\xd8\x1a\x1d\x1a\x0b\x4e\x43\x6d\xfd\xbc\x4c\xc1\x69\xae\x61\x06\x0a\xad\x43\xde\xac\xff\x12\xa0\xca\x72\x06\x86\xa9\x14\x61\x9c\xc0\xd1\x02\xc6\xf4\x57\x81\x92\xdb\xd6\x55\x6b\x33\xfe\xc7\x6a\xf5\x07\x5b\xa3\x37\x12\x8a\xe3\x17\x88\x6c\x2e\x85\x83\xc8\xb1\xf4\x42\xeb\xfb\x22\x87\x71\x42\x6f\x9c\x29\x56\xee\x96\xa5\x40\xfc\x0e\x12\x03\x99\x92\x18\x7e\xec\xe2\x89\x04\x82\x2f\x43\x3f\x5f\x5f\xd0\x3f\x7d\x88\x51\x5c\x17\xa7\x2c\x3b\x9e\xaa\x8a\xc4\x3f\x43\x02\xef\x16\x40\x08\x94\xdb\xfd\x6d\x4c\x22\xf1\x1e\x3f\x31\x7b\xa6\x6f\x9f\x72\xec\xba\x68\x9f\xf9\x3c\xe4\xde\xdb\x8a\xd2\x62\xb3\xfb\xdc\x7e\xd0\x5a\x0e\x6d\x7d\x60\x06\x96\xb0\xd4\x5a\xee\x2d\x85\x04\x16\x0b\x20\xce\x14\xd8\x8f\xac\x7d\x96\xb0\x00\xbf\xbe\xb7\x58\x41\xeb\xbf\x06\x49\x98\xb4\x2f\xa2\x04\x83\x43\x30\xc3\xdb\x32\x2a\x75\x9a\xa2\xa1\x77\xc2\x65\xa7\xc6\x68\x13\xa1\x31\x71\x78\x0d\x0d\xde\x2f\xf5\x14\x92\x98\x9e\xe0\xb2\x48\x23\xb2\xd2\x85\xe4\xa0\xb4\xf3\xcc\xb2\x7b\x2c\x23\xf1\xa0\x53\x83\x8a\xa3\xa1\x1f\x18\xbf\xc6\x4d\x81\xd6\x45\x8f\x53\x30\x53\x20\x93\x9e\xaf\x09\xac\x0b\xeb\x60\x89\x30\xf1\x15\x9a\x80\x36\x30\x09\x59\x4e\x0e\x42\xbb\xc2\xa8\xfd\x1a\xec\x7d\xd9\xd0\xbb\x0c\x0d\x46\xde\x23\xbd\x62\xab\x7b\x96\x7a\x8f\xb4\x2c\xb7\xe4\x0c\xf9\x57\x55\xb4\x8c\xe3\x1e\x2f\x60\x87\x18\xe7\xca\x0d\xf1\x42\x4c\x01\x8d\xf1\xfc\xb5\xce\xac\xb4\x7a\xa0\xc7\x4e\x8b\x28\xd9\x0f\x5c\x24\xc1\xf2\xdd\x02\x94\x90\xff\xf3\x46\x31\x05\x42\x39\x4c\x5f\xc0\x7c\xfb\x0e\x89\x57\x3a\x74\xe3\x8c\x50\xe9\x50\x93\xbe\xc3\x49\xf2\x8a\x93\x5b\xb1\xfe\x8e\xd1\x12\x06\xfa\xac\x63\x5e\x8d\x3a\x0b\x55\x35\x7a\x7d\xe6\x77\xc7\xfc\x6d\x26\x2c\x24\x85\x5a\x39\xa1\x55\xe8\xae\x40\x0b\x89\x36\x10\x32\x6b\xda\x04\x6b\xcd\x51\x5a\x0a\x1f\x99\xf2\xcd\xaa\x07\x3c\x72\x58\x3e\xed\x09\x04\x0d\xd0\x1e\x32\xca\x76\x40\x3e\xd5\x21\xc4\xe0\xa5\x29\x7a\x84\xcc\xb9\x9c\x5e\xa3\xcd\xb5\xb2\x78\x67\x84\x43\x33\x05\x03\xef\x9b\xef\x81\x37\x71\x87\xd5\x1b\x7f\x24\x32\xba\x92\x02\x95\xa3\x5d\xe4\x76\xc4\x8f\x3a\x8a\x12\xca\xcb\x75\x2d\x39\xc7\x4a\x69\xc7\x7c\x8a\x96\x36\x61\x9c\xa1\xa2\x27\x98\xb0\x42\x3a\x1f\xcf\xa5\xe1\x68\xfa\x5d\x10\xc9\x90\x84\x68\x6f\x4a\xe2\x30\x5a\x87\xa6\xea\x86\x06\xb0\x68\x90\xc5\x1d\x39\xac\x63\xf3\xba\x39\xd0\xfc\xf6\x69\x52\xf5\x27\x7d\x03\xd1\x58\xd7\xd8\xf0\x15\xa4\x7e\xf4\xb5\x24\x1c\xed\xca\x37\xf4\x04\xed\xaa\x65\x56\x55\x1d\xd7\x2f\x81\x07\xf5\x01\xd7\xb5\xee\x06\xcd\x9b\x1e\x0c\xad\x4f\xae\xf6\xd9\x65\x70\x57\xb9\xb7\x64\xeb\xc2\x8c\xd1\xfa\xe4\x90\xa5\x68\x2e\x34\xe3\xc8\x4f\x79\x8a\x16\xc6\x40\x7c\xb1\xcf\x8c\x2e\x72\x4b\x76\xaf\x00\xa1\x61\x68\xfb\x3d\x98\xcf\xe1\xd4\xc3\x80\xd4\x8c\x03\x7a\x18\xba\x63\xb0\xd9\x93\xed\xa6\xbe\xe1\x26\xe1\x11\x87\x12\x0a\xf3\xaf\x2c\x21\x67\x76\xc5\x24\x8c\xb1\xe5\x52\xd4\x3f\xac\xb3\x36\xc3\x17\x72\x9e\xcf\xe1\x8a\xa5\x42\x05\x8a\x6d\xbf\xe6\x2c\xc5\x29\x08\x87\x6b\x7b\x85\xe6\x2a\xbc\x35\x93\x3d\xa3\xf9\xd6\xfe\x5c\x25\x3a\xcc\xc7\xb8\x7b\x81\x39\x38\xd8\x7b\x73\xb0\x13\xc5\x86\x5e\x88\xb5\x70\x51\xd7\x63\x4c\x2f\x93\xc4\xa2\x8b\x22\x1f\x0d\xcc\xe0\xa7\x18\xde\xef\xc4\xb4\x7b\x6a\x1c\xae\x73\xc9\xdc\xcb\xb7\xc4\xf1\x4e\xf2\x68\xb7\x69\x6d\xe8\xb1\x94\x91\xa1\x1f\xb5\x72\xf8\xc5\x45\xf1\xb7\xa5\x74\x48\xa3\xea\xbf\x04\xfd\x4f\x3d\x67\xfc\x34\xe6\xcc\xb1\x25\xb3\x48\xe2\x76\x44\xc2\x0c\x96\xe8\xfc\x95\x34\x98\xf6\xca\x15\xa4\xe8\x5c\x39\x34\x8a\xc9\x1b\x34\x0f\x68\x6a\xe0\x5a\x93\x94\x90\xf1\x37\x16\xd8\x9f\xa3\x34\x70\xf7\xc5\xb1\x72\x8d\x8c\xd7\x14\xef\xd2\x86\x3f\xcb\x7a\x86\x46\x24\x09\xfd\x9d\x19\x9b\x31\x19\xfd\xd0\x7e\xb8\xcc\x03\x56\x59\x6f\x3e\x82\xbf\xfe\xb6\x41\x80\x86\x6f\xa6\xe9\x9e\x8b\xae\x45\x73\x08\xd2\x10\x69\x6d\x5a\x55\xa4\x2c\xc7\xa9\x57\xf8\x01\x1d\x81\x8e\x34\x0d\x9d\x18\xf2\x3c\x71\xbf\x82\x55\xec\xde\x9f\x96\xa3\xa0\x27\x83\x27\x66\x47\xa3\xaa\x29\xa0\x7d\x13\x32\x58\x34\x82\x49\xf1\x6f\x28\x7b\xdd\x6f\xd2\xef\xdf\xdb\x75\x7c\x27\x98\xe6\xba\xc4\xd6\xba\x50\x8e\x4c\x41\xa2\x8a\xd0\xc6\x31\x0d\x27\x78\xb0\x3e\x4d\x30\xc8\x3b\x31\x36\xf1\x5d\xfe\xd6\x84\xc3\xeb\x25\xaf\xdc\xa8\x78\x55\xfd\x17\x00\x00\xff\xff\xeb\x5e\xb7\x44\xe8\x0d\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3560, mode: os.FileMode(420), modTime: time.Unix(1608651633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6f\xdb\x3c\x0c\xbd\xe7\x57\xf0\x33\x82\x0f\xf6\xe6\x28\xf7\x00\x3d\x0c\xcb\xd6\x19\xc3\xd6\xad\x1d\xd0\xc3\xba\x83\x5a\xd1\x96\x30\x85\x4e\x28\xb9\x5d\xa7\xe9\xbf\x0f\x96\x93\xd4\x69\xda\xa1\x3c\xd9\x14\xf9\xf8\x48\x3e\x86\x00\x0a\x6b\x43\x08\x99\x96\xa4\x2c\xf2\x9c\x51\xaa\x39\xb7\x9d\xc7\x0c\x62\xd4\xe2\x14\x7d\x9e\xcd\x83\x51\x21\x80\xa9\x61\x2a\xaa\xa5\xa8\x5c\x45\x1e\x62\x5c\x5c\x5d\xa9\xd7\x21\x00\x92\x82\x18\x63\x56\x82\x16\xe7\x28\x55\xb1\xf7\x4d\x26\xcf\x94\xe8\xc1\x27\x00\x00\xf3\x39\x7c\xd3\xc6\x41\xdd\xd1\x8d\x37\x2d\x41\x8d\xfe\x46\xa3\x03\xaf\x11\x42\x80\xa9\xf8\x2c\x57\x08\x31\xc2\xaa\x55\x68\xc1\x28\x24\x6f\x6a\x83\x0a\xae\xef\x41\x42\x63\x6e\x11\x3a\xb6\xb3\xb5\x64\xb9\x42\x8f\x0c\x35\xb7\xab\x1d\xb6\x92\x5e\x5e\x4b\x87\x20\x49\x01\xa3\xef\x98\x1c\x18\x0f\xbe\x4d\x05\x6e\xac\x41\xf2\x22\x45\xf7\x0c\x72\x7d\x50\xf3\xc3\xc0\xb8\x80\xbe\xab\xfc\x0e\xb4\xf7\x6b\x71\x8e\x6e\xdd\x92\xc3\x4b\x36\x1e\xb9\x04\x86\x57\x5b\xff\xa6\x43\xe7\x0b\x08\x09\xae\xb7\x10\x66\x47\x43\xdb\x3f\xf6\x66\x54\x09\xc8\x0c\x8b\x13\xd0\xa2\x63\xfb\xa5\x6f\xa2\x22\x9f\xdf\x95\xc0\x25\x64\x46\x65\xc5\x08\x0d\xd0\x3a\x7c\x11\xc6\x85\x67\x43\xcd\xb3\x30\xa4\x60\x36\x82\x31\x75\x42\xf8\xef\x04\xc8\xd8\x11\xff\xde\x86\xa1\xed\x5d\x71\xb2\xff\xdc\x0c\x25\xb7\x33\x1c\xcf\x4d\x7c\xed\x90\xef\xf3\x42\x5c\x6a\x64\xcc\x1f\x9e\xfe\x80\x23\xf9\x33\x85\x54\xcb\xdc\xa8\xe2\x80\x96\xc7\xd5\xda\x4a\x8f\x90\x25\x15\x6e\xae\x33\x98\x8e\xbb\xc5\x7d\xa3\x1b\x71\x46\xf6\x3e\x67\xf1\xb6\x25\x8f\xbf\x7c\xfe\x4f\x20\x64\x6e\x79\x96\xe4\x67\xa8\xd9\x82\x8e\xe3\xa7\x0d\xb7\xdd\xda\xf5\xc8\x53\xf1\x86\xa8\xf5\xb2\xd7\xa2\x13\x5b\x01\x9c\x22\x25\x61\x9f\x0e\x61\x23\x4a\x0f\xb3\x77\x1a\xd9\xd4\xb5\xf8\x24\xd9\x69\x69\xf3\xff\x77\x8e\xb3\x75\xc2\x0a\x43\xf2\x02\xbe\xff\x70\x69\x39\x87\x63\xde\x49\xa5\x39\x2a\x31\x8e\x60\x49\x0d\xc2\xb4\x49\x4c\x87\xd0\x18\xb3\x10\xa6\x4d\x7f\x7e\x4f\x6c\x76\xac\x9b\xc7\xfe\xde\xb2\xa7\x76\xb3\x48\x17\x7a\x44\xef\x31\x76\x8c\x25\x60\xf1\x22\x11\x69\x61\xdb\xa6\x41\x16\x97\xc6\xeb\x77\xfd\x3a\x72\x64\x2e\xd2\xef\x7b\x83\x56\xe5\xd9\x81\x7e\xd2\x4f\xb5\xdc\xfd\x67\x25\x18\x55\x88\x21\x31\x73\xc8\x46\x5a\xf3\x3b\xed\x08\xd2\x72\x47\xf2\x1e\x34\x4b\x0a\x59\x54\xe4\x91\x49\xda\x0b\xe4\x5b\xe4\x21\x7b\xb8\x08\x32\xf6\x71\xc6\x73\x2a\x3f\xa0\x7e\xc4\xf5\x61\x68\x59\x09\x28\xaa\x65\x21\x2a\xaa\xdb\xa7\x43\xb6\xbc\x70\x7c\x8d\x5b\xaa\x67\x1f\xb7\xcc\xd4\xf0\x14\x27\x21\x20\xa9\x18\xff\x06\x00\x00\xff\xff\x12\x11\x53\xd7\xa3\x05\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1443, mode: os.FileMode(420), modTime: time.Unix(1608651637, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x4c\x09\xa1\x90\x52\x9b\x42\xaf\x01\x72\x58\x6c\xd2\xd4\x68\xda\xa4\x49\x17\x39\x74\x8b\x82\xb1\x46\x32\x11\x99\x94\x48\xaa\x69\xaa\xd5\xbb\x17\x24\x65\x5b\xb6\x25\xd9\xd9\xa0\xed\x16\xd8\x39\x59\x32\x39\xff\xdf\xfc\xa8\xae\x21\xc1\x94\x0b\x04\xb2\x60\x22\xc9\x51\xc5\xba\x7a\x50\xa8\x65\xa5\xe6\x18\x67\x68\x62\x25\x2b\x83\x04\xa6\x4d\xf3\x06\x00\xa0\xae\x41\x31\x91\x21\x04\x08\xa7\x67\x10\xd0\x8b\x24\x43\xbd\xfe\xdb\x1f\x99\x02\x4f\x41\x48\x03\x01\xd2\x5f\x9e\x0b\xa4\x6f\x85\x90\x86\x19\x2e\x85\xa6\xdf\x7b\x41\x97\x28\xe8\xdd\x23\x2f\xa0\x73\xd3\xd2\x82\x5e\xa2\x09\x49\x5c\xf3\xa4\xae\x2d\x9f\x80\xce\xce\xe9\x4c\xcf\x84\x81\xa6\x39\xfd\xf0\x21\xf9\xa6\xae\x01\x45\x02\x4d\xd3\xc4\x56\x1d\x2c\x72\x36\x47\x08\x03\xa4\x3f\xb1\x25\xc2\x47\xd0\x82\x3d\x62\x04\xe4\x77\x02\x64\x4a\xa0\x69\xc8\x04\x16\xb4\xae\x61\x73\xa4\x60\x7a\xce\x72\x68\x9a\xa8\xa3\xb7\x63\xdb\xb1\x74\xf5\xd8\xf9\xf9\xe6\xb0\xcb\x08\x8c\xfb\x6a\xcb\x55\xaf\xf0\x54\x5d\xc7\x27\x70\x8b\x2c\x89\xaf\xb8\x36\x20\x0b\x54\xfe\x22\x48\x01\x5e\x27\xaf\x94\x86\x93\x78\xe7\x6e\x5a\x89\x79\xb8\xb0\xf2\x03\xef\x91\xa6\x69\xa5\x45\xd0\xef\xa7\xf0\x09\x16\xc6\x14\xf4\x16\x75\x21\x85\xc6\x7b\xc5\x0d\xaa\x09\x28\x38\x69\xdf\x97\x15\x6a\x13\x41\xbd\x25\xa8\x93\x10\x5b\x81\xdc\x3b\x64\x89\x27\x13\x40\xa5\xac\xb3\x16\xb4\x52\xf9\x0d\x53\x6c\x39\x13\x26\x7c\x9a\x80\x9a\x00\xe1\x09\x89\x7a\xb8\x03\xe6\x1a\x5f\xc4\xf3\xce\x28\x2e\xb2\x83\x6c\x3b\xd9\xb0\xc5\x32\x75\x1c\xbf\x3a\x03\xc1\xf3\x1e\x7b\x2d\x29\x34\x95\x12\x7b\x7f\x35\x6f\xf6\x5e\x95\x5e\xb5\x79\xce\x51\x18\xda\x8d\x08\xfd\xb9\x42\xf5\x1c\x46\xf4\x7e\x81\x0a\xc3\xcd\x5f\x6d\x86\xdb\x23\xb3\xf3\x90\x27\x51\xe4\x8f\x0e\x44\x2e\xda\x17\xda\x42\x0b\xe9\x7b\xc1\xcb\x6a\xd0\x79\x75\x0d\x06\x97\x45\xce\x0c\x02\x51\x36\xd5\xca\x07\xb2\xca\xd5\xa1\x4b\xb8\x76\x78\x49\xaf\x45\xfe\x1c\x2a\xfa\x4e\x0a\x83\x7f\x9a\x30\xda\xf7\x73\xbf\x18\x54\x4a\xaa\xa9\x03\x18\x17\xd9\x96\xc8\x21\x0e\x41\xa6\x64\x55\x68\x87\xb4\x71\x30\x59\xcc\x5c\xfa\xc3\x03\x26\x6c\x72\x46\x2f\x50\xf1\x34\xa5\x3f\x32\xa5\x17\x2c\x0f\xbf\x5e\xbd\xb8\x2e\x1c\xdf\xda\x33\x3a\x85\x5f\x7f\xd3\x2e\xa9\xfa\xd3\x01\x3a\x30\xc8\x46\x45\x77\x4f\xb7\xd5\x23\x73\x36\xf9\x6b\x4d\x43\xea\x3a\xc8\x6c\x49\x1b\xc9\xd0\x8e\x5b\x1c\x36\xc6\xce\x58\x22\x3e\x73\x9c\xd3\x76\x32\xec\xd4\xc6\x83\x8c\x1a\x35\xa6\x45\xd3\x4c\x00\xfb\xa3\x7e\x0c\x8c\xc0\x75\x84\x5c\x66\x19\x2a\x7a\xcf\xcd\xe2\xc2\x26\x46\x88\x4a\x45\xee\xf1\x3b\x8e\x79\x12\xee\xa9\xdf\x34\xb4\xf3\x6a\x76\xbe\x7a\x4b\x26\xc0\x93\x88\x7a\x26\x44\xa3\xe2\x2c\xe7\x7f\xb9\x0c\x01\x97\x72\x3d\x85\x60\x45\x0a\x45\x82\x8a\xce\x84\x41\x25\x58\x7e\x87\xea\x0f\x54\x9e\x93\xaf\x23\x82\xe7\x63\xb7\x7b\xeb\x01\xf4\xd7\x84\x3d\xb3\x07\xec\xdc\x84\x89\x4c\xc0\x1a\x1a\xd1\x99\x48\xe5\xd8\xc1\xd6\x0e\xec\xab\x79\x1d\x33\xaf\x7f\x68\xad\x4a\x5e\x5c\x71\xdb\xda\x92\xc8\x16\x8a\x5d\x14\xda\x0e\x68\x21\x78\x8e\x29\xab\x72\x73\xad\x12\x54\x63\x48\xe0\x29\x28\xfa\xfe\xf6\x6a\x5d\x0a\xdd\x70\x20\xed\x35\x12\xc1\xd9\x19\x10\x32\x92\x39\x96\x4a\xea\x84\x84\xa3\x87\x60\x1b\x70\x5e\xf3\x44\x1e\xc4\xcd\x8a\xda\xca\x6d\x33\xba\x84\x30\x90\x5e\x26\x7c\x84\x5c\x3e\xd9\x96\x4a\x12\xd4\x73\x3b\x17\x9c\xa3\x9e\x6f\xdc\xf7\xd6\x3f\xb8\x59\xc6\xc7\x4c\x52\x17\x69\x1b\xd0\x68\x72\x94\xca\x87\x4a\x80\xa5\xe1\xb4\x1c\x8c\xa0\xd3\x70\x2b\x8c\x63\x15\xb5\x0d\xa7\x9d\x43\xbe\x84\xf4\xb3\x0d\xa9\x53\x6a\xa8\x7f\x4e\x21\x40\xd7\x3c\x91\x65\xa8\xae\x24\x4b\x30\xf1\xf3\xea\xaa\xf7\x12\x1b\x5e\xdf\xee\xc8\x01\xec\xe3\x68\x7b\x8b\x63\xb8\xb0\x42\x20\x97\x2c\x01\xb4\x42\xe8\xe0\xe1\x72\xb4\xf5\x6c\xcd\xd7\x3b\x7b\xc8\xb0\x7e\x76\xe0\x0e\xb1\x5c\x5b\x16\x44\xb6\x63\xd8\x3a\x5b\xd7\xab\xb9\x29\x58\xb7\x92\xe3\xf2\xec\xd3\xb1\x72\x6c\x46\xba\x99\xbd\x84\x13\x37\x07\xbe\x93\x22\xe5\x19\xbd\x61\xf3\x47\x96\xd9\xfa\xfe\xc0\xf4\x6e\xdf\x6b\xf5\x77\x38\xeb\x9b\xcb\x87\xe8\x68\x7c\xed\xfa\xe0\x53\xb1\xd6\xa5\xff\x08\x77\xbb\xa6\x1c\x83\xc1\x2e\x0d\xe3\xb1\x4b\x87\xf9\x1d\x8d\xff\x0d\xa0\x0f\xb1\x1a\x86\xea\x58\x45\x88\x63\xb8\x61\x19\x17\x2e\x81\x7b\x4f\x14\x2c\xc3\x09\x70\x83\x4b\x7d\x83\xea\xc6\x3d\xad\x37\xad\x62\x7d\xd7\x0d\x24\x76\x96\x78\xdd\x14\xf8\xf2\x01\xaa\xa4\x57\x7c\xc9\x4d\xd8\xd5\x30\xa2\xd7\x69\xaa\xd1\x84\xa1\xd5\x1e\xa6\xf0\x6d\x04\x27\x5b\x36\xf4\x2c\x4b\xb0\xbb\xa2\xac\x16\xff\x9c\x6b\x13\x97\x16\x5e\xd3\x94\xe7\x06\xd5\xe1\x45\x05\x75\x67\x3b\x7a\x9b\xe7\x87\x97\xa3\xd7\x8e\xc9\xed\xb0\xeb\xc6\x5b\x70\xca\x72\x91\x41\xc2\x0c\xb3\x25\x83\x44\x36\xd2\x46\x5a\xb4\xc2\x03\x1a\x83\xca\x4f\xc2\x9f\xcd\x1c\xfc\xa2\xd5\x6e\xd3\xa2\xbe\xac\x76\x9e\xc6\x56\x3b\x9b\xbf\xaf\x5c\xed\xf4\x3f\x9a\xb4\xff\xbf\x0d\x8d\x2d\x65\x25\x0c\x99\x40\x8e\x22\x44\x1d\xfd\x6b\x0b\xd9\x7e\xa1\x6f\x76\xbf\x6c\x76\x6b\x92\xfb\x78\xf8\x4e\xa1\xad\x67\x47\x7d\x39\xdc\xf0\x58\xff\xfa\x3b\x00\x00\xff\xff\x95\x93\x9f\xb4\x3e\x16\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 5694, mode: os.FileMode(420), modTime: time.Unix(1608651640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdf\x6f\xdb\xb6\x13\x7f\xcf\x5f\x71\x5f\xc1\x28\xa4\x7c\x6d\x7a\xcf\x29\x8a\xa1\x5d\xba\xcc\xd8\xfa\x03\x4d\xbb\x3e\xb4\x05\x4a\x9b\x27\x89\x8d\x4c\xaa\x24\xe5\x24\xd3\xf8\xbf\x0f\xfc\x61\x59\x96\x15\x37\xd9\x30\x6c\xd3\x4b\x22\xfa\xee\x78\x77\x9f\xbb\xcf\x9d\xda\x16\x18\xe6\x5c\x20\x24\x25\x15\xac\x42\x35\x6f\x6a\x46\x0d\xce\x95\x6c\x0c\x26\x60\x6d\x49\x5e\x53\xb3\x2a\xd3\x64\xde\x72\xd6\xb6\xc0\x73\x98\x90\xc5\x39\x59\xe8\x85\x30\x60\xed\xd9\xc7\x8f\xec\xff\x6d\x0b\x28\x18\x58\x6b\x93\x29\x94\xe4\x9d\xb7\x91\x75\xa7\x27\x27\x77\x5e\xe4\xae\x38\x01\x00\x98\xcf\x41\x1b\xd5\xac\x0c\x18\x09\x4b\x2e\x18\x98\x12\xa1\x96\xda\xc0\x52\xb2\x5b\x30\x92\x78\x39\x73\x5b\x23\xb4\x2d\x4c\xc8\x4b\xba\x46\xf8\x1d\x56\x74\x8d\x15\x58\x1b\x2e\x7d\x83\x5f\x1b\xd4\x66\x6b\xab\xf5\x3a\xee\x69\xdb\xf9\x29\x3c\x65\x0c\x68\x55\x41\xce\xb1\x62\x1a\x4c\x49\x0d\x50\x85\x20\xa4\x01\xbc\x59\x55\x0d\x43\x46\xe0\x74\x1e\x7d\x0a\x7a\xa0\xa8\x28\x10\x26\x39\x9c\x3d\x81\x09\xf9\x31\xe8\xce\x7a\x32\x41\x6e\x06\x13\xea\x45\x72\xf2\x54\x08\x69\xa8\xe1\x52\xe8\x20\x7f\x81\x02\x46\x14\x78\xee\xaf\x4e\xa9\x60\x4e\x79\x42\xc9\xe5\x15\xaf\x63\xfa\x86\x0a\xd1\x9b\x49\x4e\x2e\x7d\x70\xde\x30\x58\x0b\xa7\xe1\xf4\xed\x6d\x8d\xee\x27\x2e\x0a\x77\xfa\xf9\x8b\x96\xe2\x2c\x71\x90\x09\x86\x37\x90\xea\xba\xe2\x06\x52\x43\x8b\x5f\xa4\xbc\x6a\xea\x9d\xa5\xb7\xb4\x80\xc4\x89\x27\x19\x24\xd3\x24\x83\xef\xc0\xda\x24\x82\x4d\x23\x9c\xbf\xd2\x8a\x33\x1f\x93\x13\xb7\xd6\xfb\x72\xd7\x8f\x1d\xf4\x9f\x0f\x62\x8e\x25\x31\x3c\x9a\xed\x9d\xf5\xb0\x42\x56\xe0\x7d\xa1\x9a\x6d\xb1\xc2\x80\xd5\x73\xaf\x7b\x04\x2a\x7c\x08\x54\x0e\xa5\xd4\xdd\x3f\xc1\x90\xec\xbe\xee\x4f\xa1\xac\x2f\x50\x78\x0c\xb3\x20\x39\x8e\xec\x9d\xd0\xe2\x10\xda\x88\x01\x92\x77\x82\x7f\x6d\x10\xac\x75\x60\x63\xa5\xdd\xbf\x1f\x3e\x75\x69\x0e\xca\xde\xa9\xc5\xf9\x9f\xa8\x04\xfc\xa7\x2a\x61\x36\x52\x0a\xf1\xc8\x9e\x6c\x89\xe1\x6d\xc9\x35\xe4\x8d\x58\x39\xb3\x10\x88\x43\x03\x85\x82\x6f\x50\xf4\xc8\xc0\x5a\x58\x4b\x86\x95\x47\x4a\xd3\x8d\xaf\x1b\x84\x55\xe9\x8a\x42\x03\x17\xfe\x95\x51\x43\x97\x54\x63\xe0\x13\x67\x36\x2d\xf7\x8c\x44\x28\x33\x08\x11\xa5\xd7\x50\x1a\x53\x93\x37\xa8\x6b\x29\x34\xbe\x57\xdc\xa0\x9a\x82\x82\xd3\x78\xee\x29\x27\xdb\x23\x9b\xd9\x01\x51\xee\x85\xcf\xd9\x14\x50\x29\x57\x83\x25\x69\x54\xf5\x9a\x2a\xba\x5e\x08\x93\x5e\x4f\x41\x4d\x21\xe1\x2c\xc9\xfa\x14\x14\x11\xff\xb6\x8d\x80\xfa\x9d\x66\x06\x19\xe7\xb9\xb7\xf0\xbf\x27\x20\x78\xd5\xf3\xdf\x3d\x0a\x4d\xa3\x44\x77\x14\xd1\x88\x88\x5c\xa0\xd9\xf1\xb3\x4b\x28\xe9\x7e\x65\xce\xa1\x3e\x41\x6b\x41\xaf\x70\x48\xd0\xad\x75\x66\x8c\x64\x12\x66\xae\xcd\xe5\x35\xe4\x52\xad\x67\x8d\xaa\x66\x28\x56\x92\x21\x9b\xdf\xac\xab\x79\xad\xa4\x91\xcb\x26\x1f\x5c\x12\x1d\x3f\x7b\x02\xae\x58\xc9\x4b\xbc\x3e\x47\xa7\xa4\x52\x45\x9e\x49\x76\x9b\x91\xf0\x9e\x3e\x62\xd9\xe3\xbb\x63\x2c\x49\x25\x8b\x02\x15\x79\xcf\x4d\xf9\x5c\x29\xa9\x52\x54\x2a\x23\xe1\xdf\x04\xdd\x1f\x60\xce\x92\x6b\xa5\xd0\x17\x83\x24\x09\x86\x8a\x3c\xa3\x2c\xc6\xd5\x65\x5e\x6c\x5c\x23\x78\x1d\x37\x8c\xb8\x28\x0e\x54\x8f\xe4\x37\x76\x11\x76\x05\x3b\x16\x7a\x49\x36\x41\x4c\xaa\xd8\xbe\xe9\xd1\x68\x83\xe6\x14\xe4\x95\xd3\x46\xa5\x48\x7a\xba\xb3\xb0\x08\x1e\xef\xfa\xd7\x27\x21\x7b\xec\xc4\xdb\x03\xb6\xba\x57\xe6\xa2\x71\x97\x3b\x15\xe7\xb2\x8b\x65\x90\x88\x5e\x1e\x17\xc2\xa0\x12\xb4\xba\x44\xb5\x41\x15\x6c\x85\x84\x0a\x5e\x8d\x69\xed\xa5\x70\x90\xc6\x63\x6e\x2e\x44\x2e\xd3\x64\xd3\xc5\x0a\x39\xe5\x15\xb2\x7b\xa2\xeb\x4c\xdc\x1f\xcb\x4b\xba\x19\xc3\x71\x19\x20\x5c\x55\x1c\x85\x21\x7d\xfe\x89\x4c\xfa\x4a\xe0\xe2\x3c\xe5\x2c\x1b\x1b\x70\xff\x86\x65\x84\xe7\xc0\xc8\xe8\x46\x32\x5a\x7e\x5d\xe0\xe4\x12\xcd\x98\x5a\x7a\x3a\x6e\x2e\x0b\x0b\x41\x24\x8b\x6b\xbf\x09\x2c\x65\x63\x40\x57\x7c\x85\x7b\xcb\x5c\xe9\x72\xbd\x6a\xb4\x91\x6b\x58\x53\xa5\x4b\x5a\x55\xa8\xf4\xf7\xfb\x8b\xc2\x0e\xa7\x61\x0e\x0e\x47\xd2\xd8\xbe\xf2\xdf\x5d\x32\x3a\xc8\x0e\x36\x8d\xa3\x90\x6d\xe7\x59\x6f\x0f\x19\x95\x0b\xf0\x06\xfb\x2f\x9a\xe0\xf5\x25\x9a\x1e\xb6\xc3\x7b\x0f\x9b\xba\x83\x62\x64\xe4\x1d\xbb\xc7\xed\x8b\xd6\xa6\xe3\xd7\x10\x42\x42\x15\xed\x86\x8e\xc2\xb5\xdc\x20\xf0\xe1\x77\x40\x58\x2a\xe2\xae\x50\xbb\x6f\x9f\x99\x6b\xdc\xd1\x02\x82\xf1\x9d\x76\xfb\x3c\xa4\xbe\x0e\x18\x83\x8b\xc1\xa6\xe2\x1e\xec\x46\xfe\x92\x38\xa9\x54\x91\x1f\xa4\x30\x78\x63\xd2\x2c\xbb\xd7\x58\xbf\x17\x71\x6b\xba\x71\xa4\xdd\x27\xa5\x71\x6a\x7c\x00\x61\x1f\xe7\x48\x54\x9c\x56\xfc\xb7\x31\xa2\xf4\x9d\x54\x28\xd9\xd4\x3a\x34\xdc\x1d\x1d\x11\xea\xfe\x22\x08\xf6\x72\xfc\xa5\xcb\x99\x2e\x51\xf1\x3c\x27\x2f\x02\x33\xa4\x8f\xb6\x07\xaf\x6a\x6f\xad\x0d\xca\x67\xf0\xe1\x53\x18\xd9\xed\x58\x87\x6e\x7d\x19\xdd\xe1\x3b\x72\x28\xbc\xaf\x41\xd4\xaf\xd0\x93\xc2\x7d\x1d\x8f\x2c\x61\xd0\x5b\xf1\x86\xe7\xee\x49\xc6\x96\xa9\x33\x85\x94\x25\xdf\xac\x2f\x6b\xa7\x80\x7f\xad\x30\xdc\xab\x6f\xa3\x34\xd9\x1b\x52\xfe\x65\x71\xde\xd5\xc7\x14\xdc\xb7\x47\x57\x48\x3a\x22\x1a\xc6\xab\x2f\xab\xbf\xb1\x84\xf6\x9c\x3f\xf0\x76\x97\xb6\xce\xcb\xb0\x00\x8c\x89\x44\xbf\xf6\x96\x81\xe8\xea\xab\x9f\xa3\x67\x5f\xb2\xf8\x85\xd2\xf5\xef\x1f\x01\x00\x00\xff\xff\x12\x70\x44\x3d\x4a\x11\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 4426, mode: os.FileMode(420), modTime: time.Unix(1612176747, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\xcf\x6e\xdb\x3c\x10\xc4\xef\x79\x8a\xf9\x04\x1f\xa4\xc0\x96\xef\x01\x82\x0f\x05\xf2\xa7\x06\x8a\x1c\xea\x02\x3d\xd3\xe2\x8a\x62\xca\x2c\xe5\xd5\x2a\x41\x20\xe8\xdd\x0b\x49\xb6\x21\x38\x69\xd1\x8b\x75\x5b\x72\x38\x3b\x3f\x72\xd5\x75\xb0\x54\x7a\x26\x24\x42\xc6\xae\xf7\xbb\x04\x7d\x7f\x05\x00\x5d\xb7\xbe\xc6\xa6\x44\x64\x42\x2c\xa1\x15\xc1\xf9\x57\x62\x54\x86\x6d\x20\x81\x93\xd8\xd6\x0d\x7c\x83\x86\x14\x91\x47\x09\x59\x47\x20\xe3\x48\xf0\x1c\x3d\xc3\x6b\x7e\xbd\x9e\x3b\x6a\xb4\x11\x2b\x30\x35\x4a\xf6\xa0\x0c\xd1\x58\xcf\xee\x7f\xcc\xa4\x2b\x88\x61\x47\x58\x10\x6e\x6e\xb1\xc8\xef\xad\xa3\xe6\x98\xed\x4c\xe2\x26\xc9\x17\xe6\xa8\x46\x7d\xe4\x26\xff\x3a\x85\x7c\x24\xce\xbf\x93\xb1\x8f\x53\xd6\xd9\xf1\xf3\x2e\xa3\x47\x53\x07\xaf\x48\xd5\xb8\x6f\x31\xfe\x6a\x6b\x2c\x28\xdf\xaa\xb4\x85\xfe\x30\x0e\xc9\x44\x9c\x64\x48\x96\xc9\xb9\xd7\xd1\xcf\x97\xa0\xfd\x10\x69\xb0\xec\xfb\x7d\xfe\xd3\x6b\xd5\x75\xa8\x4d\x53\x98\x30\x18\x3e\x99\x17\x42\xdf\xa7\x59\xd7\x81\xd8\x62\xf5\x49\xaa\x61\xfd\x8c\x75\xb6\x34\x2b\x0f\x1e\x7d\x7f\x75\x75\xfe\x96\x24\x12\x65\x35\xbe\x96\x67\x77\x0a\x3c\x04\x14\xc1\x7f\xb7\x60\x1f\xd0\x9d\x7a\x34\x6f\x5e\x8b\x6a\xd8\xcb\x53\x7d\xaf\x29\x9b\xed\x0d\x5f\x61\x1a\xc2\x35\xb1\xe6\x4f\x51\x1f\x62\xcb\xf6\x7e\x68\x70\xf3\xe1\x16\xaa\x3c\x44\xe7\x48\x46\xf2\x51\x93\x92\x48\x36\x96\x0f\x9e\x82\x4d\x93\xae\xc3\xe2\x78\x0f\xf9\x58\x6c\xee\x8e\x75\xb2\x84\xb7\x59\x7e\x47\xbb\xd6\xa5\xc9\x73\xdc\x81\xa3\xa2\x1c\x1a\x26\xd9\x87\x66\x42\x6c\x49\x4e\x91\xd2\xb7\x25\x64\x39\x40\x7c\x26\xd5\x56\xf8\xcf\x4c\x5b\xcf\xae\x0d\x46\x2e\x8a\x35\x1d\x4c\x6c\x5b\x07\x5f\x18\x25\x10\xab\xbc\xa3\x8c\x02\xff\x17\xbe\x0d\x2b\x09\x9b\xb0\x25\x79\xa5\x29\xe1\x01\x95\x7d\xf8\x27\x54\x4b\xa5\x69\x83\x5e\x98\x6b\x9c\x39\x94\xa4\x45\xe5\xd9\x81\xa3\x25\x94\x12\x5f\x60\x77\x97\x82\x9b\xa6\x7a\xfe\x27\xfc\x0e\x00\x00\xff\xff\x86\x5e\x99\x66\xd5\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1237, mode: os.FileMode(420), modTime: time.Unix(1605509907, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/date_utc_converter.tpl":    flutterDate_utc_converterTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_delete.tpl":        handlerHandler_deleteTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":             &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl":    &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"date_utc_converter.tpl": &bintree{flutterDate_utc_converterTpl, map[string]*bintree{}},
		"model.tpl":              &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_delete.tpl":        &bintree{handlerHandler_deleteTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
