// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/date_utc_converter.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_delete.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xdf\x6f\xe3\xb8\x11\x7e\xef\x5f\x31\x67\x18\xb0\x74\x48\xe4\x3e\x7b\xd7\xd9\xb6\xd9\x4b\x9b\xe2\xf6\xb0\xe8\x6e\x9e\x0e\x87\x80\x91\x46\x36\xbb\x14\xa9\x90\xd4\xe5\x5c\x9d\xfe\xf7\x82\x14\x65\x53\x3f\x2d\x67\x8b\xde\xfa\x25\x8a\x34\x9a\x19\x7d\xfc\xe6\x1b\x0e\xcb\x12\x12\x4c\x29\x47\x58\xc4\x8c\x22\xd7\x0b\xa8\xaa\x3f\x01\x00\x94\x25\x80\xc6\x2c\x67\x44\x23\x2c\xf6\x48\x12\x94\x0b\xb8\x76\x4f\x69\x96\x0b\xa9\x61\x95\x93\xf8\x0b\xd9\xe1\x26\x65\x85\xd6\x28\xd7\x2f\x34\xd9\xa1\x56\x51\x42\xa4\x5e\xbd\x19\x34\xa5\x5c\xa3\x8c\x31\xd7\x98\x3c\xee\xb5\xce\xd7\xdd\x1b\xf5\xcb\xa0\xf6\xe2\x05\x6e\x6d\x52\xc3\x8e\xfe\xad\x04\x7f\x24\x9c\x0b\x4d\x34\x15\x7c\xdd\xf9\x7f\x2a\x87\x5c\x8a\x5f\x69\x82\x72\xdd\x5c\x34\xc6\x2d\xeb\x28\x5a\x27\x44\xe3\x63\xa1\xe3\xc7\x58\xf0\x5f\x51\xea\x8e\x65\x59\xae\xbf\x87\xfb\xda\x5c\xef\x11\xe2\x42\x69\x91\x81\x31\x01\x7d\xc8\x51\x45\xf0\xfd\xfa\x04\xa8\x24\x7c\x87\xb0\x8c\x3e\x1f\x72\xfc\x40\xf2\x9c\xf2\x9d\x3a\x42\xea\x47\x2e\x4b\x88\x9c\xdb\xaa\x72\xdf\x50\xfb\xb8\x06\x9a\x42\x74\xdb\x64\x73\x34\xf2\xdf\xec\x3f\x5d\xbd\x29\x4b\x40\x9e\x1c\x83\xb9\x7f\xab\x6a\xf8\x3b\xb8\x48\x10\xa8\x56\xc8\x52\x20\x3c\x01\xc2\x18\x88\xd4\x3e\xc2\x64\x87\x0a\x34\x91\x3b\xd4\xd6\x4e\xc1\x1a\x6a\xee\xf8\x5f\xeb\x61\x98\x89\x04\xd9\xba\x2c\x61\x19\xfd\x44\x32\x84\xdf\x41\x71\xf2\x05\xa1\xaa\xfc\x25\x3a\xc1\x83\xb0\xd9\xc2\x32\xfa\xc1\x06\x1a\x42\xa7\xe5\x13\x2d\x9a\x53\x9e\x3d\xe0\x84\x84\x80\x0b\x7d\x7c\xeb\xaf\x47\xb6\xa8\xe8\x1f\x84\x27\x0c\xe5\xdf\x91\x87\x73\x8c\xa2\x4f\x5f\x68\x1e\x82\x97\x5e\x27\xc5\x1a\x93\x8b\x72\x3c\xbb\x44\xff\x54\x82\x7f\x42\x49\x09\xa3\xff\x21\x4f\x0c\x21\x2f\xb4\xb2\xcb\xb2\x43\x8e\x92\x68\x4c\x20\xb6\x6b\xc7\x41\xef\xa9\x82\x94\x32\xf4\x56\x25\x27\x8e\x23\xfd\xa5\xd8\xf5\x89\xfd\xc1\x3c\x32\xce\x0b\xe9\x96\x9f\xaa\x9a\x1a\x24\x8e\x51\x29\x6a\x32\xd0\x02\x84\xde\xa3\xac\x49\x6f\xe2\xf9\x34\x88\x05\x57\x1a\xfc\x80\x4c\xbc\xa0\xbc\xa3\x52\x19\x5e\x3e\x48\x06\x5b\x9b\x50\x20\x31\x67\x24\x46\x08\x8e\x96\x39\x2b\x24\x61\x4d\x8e\x21\x2c\x1e\x17\xb0\xb8\x5e\x84\x75\x49\x9c\xd2\xfc\x6c\x0a\xcf\x82\x0d\xa9\x90\x40\xc0\x92\x23\x82\x5b\xc1\x55\x91\x61\x17\x1f\x92\x53\x3f\x41\x46\x94\xf2\x12\xac\xaa\x5a\x72\xa0\xf4\xd7\xa5\xf3\x30\x28\x25\x3e\x17\x54\x62\x62\x31\x89\xea\xe8\x55\xe8\xb2\x32\xbf\x94\x72\xc2\x9c\x7c\xb9\xec\xbc\xa7\x36\xef\x3b\x6a\x2a\x0b\x14\xe5\x3b\xe6\x4a\xee\xe9\x00\x34\xf1\xb2\x33\xbf\xbb\x42\x17\x12\xdf\xfa\x59\xdc\x18\xf7\x49\x60\x6f\xdd\xbf\xb7\xe4\x82\xdf\xed\x02\xd8\xcb\xaa\x02\x9a\x84\x40\xd4\x81\xc7\xde\x77\x9c\xd2\x92\xb0\x05\xf2\x42\x68\x93\x59\xb4\x43\x1d\x3c\x48\x1a\xe4\x44\xef\x37\xb0\x5a\x2f\xa7\x56\x6c\xbd\xa4\xc9\x2a\xf4\x3f\xd6\xfc\x24\xea\x42\xf2\x16\x58\x51\x2a\x45\x66\x28\x1b\xc8\xe8\x49\x24\x87\xf0\xc4\xf5\xaa\x83\xc5\x8f\x54\x69\xc8\x0a\xa6\x69\xee\xb0\xb0\xdc\xd5\x68\x30\x7e\x3a\xc0\x73\x81\xf2\x60\xe8\x4b\x32\x35\x8c\x8f\xf1\xd0\x06\xe9\x06\x18\x55\x3a\x68\x03\x40\xb9\x7e\x07\x39\xd9\xe1\x55\xff\x36\xd5\x98\xa9\x8f\x28\x3f\xf6\x1e\x1b\xf9\x70\xea\x94\xd6\xea\x74\x47\x91\x25\xaa\x5b\xfe\x8d\xed\xd2\xf4\x22\x9b\xc7\x66\x0b\x94\x27\xf8\x1b\x04\x2a\x67\x54\x43\xa0\xc9\xee\x47\x21\xbe\x14\x39\x2c\xd3\xe8\x93\x96\x45\xac\x3f\x93\x1d\x2c\xcc\x1b\x8b\x10\x16\x57\x8b\x10\xfe\x3c\xe4\xd7\x51\x91\xa6\x60\xc4\x29\xc0\x67\x2f\x8a\x2d\x8b\xeb\x91\x97\x1a\x0e\xa7\x03\x44\x79\xe7\x9e\xb8\xa5\x8e\x49\x86\x0c\xaa\xea\x6a\x2c\xba\x53\xa4\xe9\xbb\xd5\x14\xf7\xea\x35\x84\x2d\xbc\xfd\xa4\x25\xe5\xbb\x2b\x48\x0e\x9c\x64\x34\xbe\x29\xab\x0e\xa5\x68\x0a\x81\x59\x2a\xf8\x6e\x0b\xbc\x60\x2c\xec\x38\x84\x5a\xd1\x48\xa6\x7e\x5e\x19\xbb\xd5\x2f\xb0\xb5\x6b\x1b\x69\x51\x3b\x0f\x3c\xca\x41\x9b\x76\x4d\x00\x7f\xd1\xe7\x04\xf2\xed\x6d\x40\xff\xc6\xdc\xc0\xa7\x66\xf7\xed\xd2\x69\x82\x4d\x06\xb7\x41\xde\x4c\x01\x38\x04\xa6\x71\x72\x8c\x5a\x55\x16\xcf\x41\xc7\x6f\x46\xdd\x8d\x7e\xd9\x24\x55\x2f\x11\xc5\x01\x2a\xcc\x50\xc9\x55\xbf\x86\xac\x88\x7d\x34\x9f\x8e\x1a\xa5\xda\x38\x18\xda\x86\x3d\x61\x35\x60\xd7\xfa\x19\x51\xf5\x43\x96\xeb\xc3\x10\xba\x4e\x7e\x7f\xfe\x65\x92\x77\xce\xca\xf9\x03\xa2\xac\xf0\x86\x51\x46\xf2\x20\xa0\x21\x6c\x6f\x46\x04\x9c\x86\x61\xa4\x85\x31\x0e\x26\x54\xfc\x56\xa2\x99\x16\x08\x70\x7c\xa9\x1b\x9a\xe0\xb6\xfb\x4a\xcc\x84\xc6\x39\x8d\x2d\xb6\x2e\x82\x56\xcf\xb5\xb7\xfe\x85\xcf\x05\x2a\x0d\x12\x9f\x2f\x6a\x6d\xb9\x50\xba\xbf\x84\xb3\x9b\xdd\x2a\xec\xaf\xa3\xc1\x6e\x63\x12\x89\xb4\xb0\xe8\x74\x6c\x46\x5a\x63\x30\xd9\x1b\x27\x60\x7d\xc8\x13\x07\xeb\xab\x20\x2d\xec\xeb\xad\xe8\xb5\xc7\x57\x43\x4a\x74\xbc\xff\x0a\x4c\xd7\x4b\xb3\x7f\x8a\x9a\xed\x8b\xcb\xa9\xfa\x16\xa0\x7e\x8f\x0c\x2f\x81\x1a\x12\xfb\xc2\xb9\xad\xd8\xf6\xa6\x95\xa5\xc3\xd1\xbd\xfb\x15\x1b\xaf\x7a\x1f\x89\x3a\xde\x1f\xc7\x36\x55\x4f\x68\x9d\x6c\x87\xa7\xab\xbe\x3c\xfe\x3f\x66\xa4\x36\x51\x69\x6a\x9c\x3c\x70\xfa\x5c\x18\xb8\xba\xe3\x92\xbd\x83\x4c\x99\xab\xe3\x16\xaf\x6d\x70\x73\x94\xf5\x5a\xbd\xb0\xdb\x3c\x5e\xb3\x51\x3e\x53\x02\x17\x6f\x98\xd7\xed\x19\xa7\x3d\x0c\xb6\x67\x9b\x30\x1c\xee\x76\x5d\xb0\xa6\xf6\x7b\x7e\x1d\xb4\xd1\x9a\xaa\x86\x4e\x34\x0b\xfb\x9c\x28\x67\xda\xc9\x58\x02\xc3\x4d\xa5\x9b\x84\x37\x12\xfb\xbf\x73\x9b\xd0\x81\x5e\xef\x0f\xb5\xfe\x24\xdb\x8c\xb2\x4f\x07\x5b\x45\x76\x90\x6d\x0e\x86\xc0\x1d\x19\x75\xea\x49\x19\xb2\xc7\x43\x73\xa3\x48\x83\xbf\x15\x94\x25\xb7\x82\x6b\xfc\x4d\x9b\x09\xd8\xfc\xb5\x60\xb8\xeb\x48\x22\x49\xde\xf6\xdf\xbd\x69\x60\xa8\x3a\xd3\x6d\x86\x4a\x99\xed\x69\xa1\xcc\xc4\x29\x5c\x93\x74\x7d\xd6\x4e\xbb\xa3\x52\x65\xa2\x24\x69\x6c\x8a\xde\x7c\x97\x93\x7c\xb7\xdd\xac\x4f\xa2\x60\x61\xca\xb4\xee\xb2\xc7\xe3\xbf\xbf\x74\x8f\x1a\x82\x3a\xe8\x1d\x89\xb5\x90\x87\x0d\xa4\x84\x29\xbc\x02\xca\x63\x56\x24\x78\x9f\xfe\x54\x30\xe6\xee\x86\xb5\x87\xf7\x44\xe3\x83\x8e\x8f\xa7\x51\x41\x38\x36\x71\xb7\x1a\xfc\xc8\xe0\xed\xdb\x74\x66\xba\x93\xb8\x99\x2f\x1d\x22\x8b\x9d\xd2\xcb\x12\xa6\xe7\x9c\x01\xb6\x55\x6d\xb5\x1d\xc9\xc7\x52\xda\x7f\xda\xea\x3f\x80\x21\x6c\x46\x12\xa6\x57\xcd\x08\x30\x96\xfa\xf0\x3e\x7b\x0b\x18\x0d\x8e\x0a\x46\x21\xd2\xe8\x5e\x19\x7d\x87\xaa\xb2\xbd\xe0\x5d\x34\x51\x47\x83\xfe\xe7\xb8\x7e\xd7\x4f\xa0\x6d\x69\xec\xe6\x68\x55\x9d\x81\xb5\xb6\x3a\x71\xda\x12\x8c\x06\x38\xab\x4c\x56\x81\xd0\x16\x1d\x46\xe3\x01\x4e\xfa\x33\x1e\x6a\x1c\xb7\xf1\x47\xd7\xad\xb9\x8a\x42\x90\x60\x0c\x01\x43\x6e\xd7\x39\x0c\x8d\xce\x5f\x8d\xcd\x28\xfd\x98\x6d\x0e\x4e\x70\xbd\x6e\x11\xa7\x03\xe0\xba\x7d\x76\xff\x1f\xca\xdb\x98\x35\x3d\x71\xa0\x50\x7a\xa7\x94\xbe\xae\x7e\x20\x79\x6f\x98\x87\x66\xbf\x66\x96\xe0\x71\x39\x5a\x3a\x9f\x6b\x33\x53\xa0\x33\xc5\xaf\x68\x76\xc3\x73\x84\xaf\x38\x2f\x7c\xf5\x5e\xf8\x0f\x11\xbe\xf6\x36\x7c\x58\xf8\x5a\x36\x1d\xe1\x6b\x9f\x42\x76\xf6\xd3\x3d\x6d\x3b\xf2\xa6\x38\xc7\xda\xe8\x3e\xcb\x0a\x6d\x0f\x98\xc7\x8a\x6c\x9e\xa2\x8e\x11\x1a\x2e\x54\xdb\x16\x08\xaf\x50\x5b\x1f\x17\xab\x9d\x9d\x7b\xdf\xd5\x85\xe3\x0a\xb4\x38\x95\x49\x3f\xe7\x01\xe1\xbe\x10\xcf\xd1\xc3\xb5\xb9\x3a\x0f\xaf\xd5\xfa\xd1\x38\x73\x43\x8c\x68\x3e\xbc\x4a\xf7\xe1\x72\xed\x87\xb9\xfa\x0f\xff\xb3\x1e\x00\x67\xfa\x00\x9c\xef\x05\xc3\xec\x3f\x27\xf3\x63\x13\x4b\x87\xba\x6f\x06\x5b\x43\x9f\x92\xf3\xcb\xfb\xf5\x4d\x04\x2e\x69\x24\x63\x28\x7c\x7d\x83\x69\xa9\xc5\x50\x83\x39\x85\xf8\x6f\x00\x00\x00\xff\xff\xcc\x2a\x69\x6a\x00\x1f\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 7936, mode: os.FileMode(420), modTime: time.Unix(1617871975, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x41\x6f\xda\x4c\x10\xbd\xe7\x57\x3c\x21\xa4\xe0\x88\x98\xbb\xf3\x25\xf9\x5a\x0e\x6d\x55\x35\xaa\xc4\x21\x87\xaa\x42\x5b\xef\x80\x57\x98\xb5\xbb\x3b\x86\x20\xd7\xff\xbd\xb2\x77\x31\xb6\x41\xa8\xed\x5e\x90\x67\xe6\xbd\x7d\xef\xed\x50\x96\x90\xb4\x52\x9a\x30\x8a\x53\x45\x9a\x67\xb9\xc9\x76\x4a\x92\x19\xa1\xaa\x6e\x00\xa0\x2c\xc1\xb4\xcd\x53\xc1\x84\x51\x42\xa2\xe9\xdd\xfb\xa6\xda\xe6\x99\x61\xdc\xe6\x22\xde\x88\x35\x45\xab\xb4\x60\x26\x33\xdb\x2b\xb9\x26\xb6\xa1\x14\x86\x6f\x1f\x2e\x8e\x2a\xcd\x64\x62\xca\x99\xe4\x32\x61\xce\x67\xc3\x82\x03\xc3\x26\xd9\x1e\xf3\x46\xdc\x65\xa2\xa3\xe2\x56\xfa\xb5\x5b\xdb\x61\xab\xf4\x3a\xa5\x65\x9c\xa8\x54\x2e\x9d\xdc\x23\xce\xdb\x9e\xdd\xe1\x93\x43\xd3\x8e\xcc\x01\x3a\x93\x84\xbb\xd9\x29\x16\x23\xf4\x9a\x30\xd6\x88\x1e\x31\x0e\x5f\x32\x49\xb6\x0d\xc6\x8d\xdc\x43\xad\xa0\x33\xc6\x58\x87\xef\xb4\xce\x58\xb0\xca\xb4\x0d\x3f\x0a\x2d\x53\x32\x1f\x48\x87\x8b\x8d\xca\xd1\x01\x75\x45\x97\x65\x0d\x7c\x11\x5b\xc2\x2f\x58\x2d\x36\x84\xaa\xea\xba\xf3\x42\x48\xcb\xf6\xe2\xce\xe7\xc9\xc7\x57\xe7\x1a\x9c\x10\xdc\x3b\x5b\xc8\x6c\xaf\x9b\x82\x33\x0f\x36\x44\xe1\xc9\x5f\x9c\x0a\x6b\x7d\xee\x1e\x6e\x40\x6f\x4c\x5a\x5a\x2c\x9a\xf0\xe6\x75\x76\x0b\x16\x4c\x29\x59\xfb\xea\x68\xca\x56\x58\x1f\x3b\x29\x7b\x16\x3f\xd3\xe1\x19\x1b\x3a\x4c\x7b\x55\x43\x3f\x0b\x65\x48\x82\x13\x65\x43\xa7\xb4\x3f\xe1\x1a\xf5\xc5\xa7\x7a\x15\x20\x82\x2d\x72\x32\x93\x0d\x1d\xa2\x86\x16\xcd\x4c\xe4\x7e\x02\xff\xa6\xf5\x59\x29\x2d\x52\xaf\xcd\x67\xf1\x30\x68\x3a\x27\xcf\x0e\xdb\x81\xfe\x9f\xed\xc8\x18\x25\xa9\xad\x78\xcf\x3f\x0a\x95\xca\x57\xc5\x49\x93\xc8\xe4\x7d\xfd\x39\xcf\x34\xd3\x1b\x23\x76\xbf\xd3\x3e\x6b\x80\x72\x60\x9c\x0b\xa3\xf1\xa5\x48\x59\xb5\x89\xf5\x26\xea\x73\x5c\x5e\x1b\xe1\xdb\x59\xf3\x0f\x97\xf2\x1c\xf2\x8f\x4b\x3a\x3c\x47\xd9\xff\x75\xb6\xb6\xaa\x5c\xd0\x4f\xe7\x5e\x86\x27\x36\x24\x98\x22\x4c\x96\x01\x1e\x9f\x70\x81\x64\xe2\x5e\x2b\xf2\xaf\x16\x4c\xaf\x72\x5e\x69\x0f\xfe\x31\x7f\xd1\xfe\x7e\x4e\xda\xdd\xb3\x7e\x37\x38\xed\x95\x63\xaa\x6e\x3c\x75\x55\xfd\x0e\x00\x00\xff\xff\xac\x27\xc9\xe1\x78\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1400, mode: os.FileMode(420), modTime: time.Unix(1614280316, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterDate_utc_converterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xc3\x30\x10\x86\xf7\x3e\xc5\xaf\x2e\x4d\x24\x14\x60\x41\xa8\x90\x06\x09\x16\x58\xa1\x33\x32\xc9\xb5\x72\x49\xee\x22\xfb\xe8\x62\xf9\xdd\x91\x9d\x12\xa4\x22\xe1\xc5\x67\xfb\xfe\xef\xf3\x85\x80\x8e\x76\x96\x09\xcb\xce\x28\x6d\xb5\x7d\x14\x3e\x92\x53\x72\x4b\xc4\xb8\x00\x00\x3b\x8c\xe2\x14\xab\xd1\xb4\x9f\x66\x4f\xeb\x83\x17\x7e\x37\xcc\xa2\x46\xad\xf0\xe5\xd9\xb9\xea\x8c\xd3\xd5\xdd\x22\x67\xdb\xde\x78\x8f\xa7\x33\x74\x42\xf6\x34\x10\xab\xc7\x8b\x17\x9e\x1f\xee\x53\xe7\x9b\x1d\xa8\xb9\xc0\xab\x3a\xcb\xfb\x66\x83\x90\x49\x99\x26\xec\xf5\x0f\xad\x28\x4f\xb2\xb4\x1e\xe4\x48\xce\xd9\x8e\xe6\x9b\x19\x89\x9d\x93\x21\xe9\x8a\x13\x1a\xe9\xe7\x25\xea\x4d\x2e\x50\xd7\xe0\xaf\xbe\x47\x33\x6d\xeb\x39\x59\x8d\xc6\x79\x2a\x72\xf7\xbf\xaa\x1f\xae\x4a\xd6\xfc\x9a\xe5\xe3\x40\xad\x66\xd5\x54\x36\x95\xca\x56\xdb\xa2\xac\x54\x9e\xbd\xdc\xde\x5c\x5d\x4f\xe1\x34\x4c\x42\xc5\x45\x08\x20\xee\x10\xe3\x77\x00\x00\x00\xff\xff\x80\x09\x97\x37\xa4\x01\x00\x00")

func flutterDate_utc_converterTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterDate_utc_converterTpl,
		"flutter/date_utc_converter.tpl",
	)
}

func flutterDate_utc_converterTpl() (*asset, error) {
	bytes, err := flutterDate_utc_converterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/date_utc_converter.tpl", size: 420, mode: os.FileMode(420), modTime: time.Unix(1613741733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xdf\x6f\xdb\x36\x10\x7e\xef\x5f\x71\x10\x84\x5a\x2e\x1a\x7a\xcf\x4e\x9d\x76\x68\x9a\x2e\x5b\xb3\x01\x4b\xfa\x1c\x30\xe2\x51\x66\x23\x91\x0a\x49\x07\xf3\x54\xfd\xef\x03\x7f\xe8\x87\x65\x3b\x5d\x8a\x3c\x59\xe6\xf1\xbe\xbb\xfb\xee\xbb\x63\xd3\x00\x43\x2e\x24\x42\x52\x29\x86\x65\x02\x6d\xfb\x0a\x00\xa0\x69\xc0\x62\x55\x97\xd4\x22\x24\x6b\xa4\x0c\x75\x02\x27\xd1\x28\xaa\x5a\x69\x0b\x33\x46\xb5\x5d\xe6\x4a\x3e\xa2\xb6\xb3\xd3\x57\x3b\xb6\x9a\xe6\xf7\xb4\xc0\xe5\x37\xa3\xe4\x2d\x95\x52\x59\x6a\x85\x92\x8b\xc9\x7f\xe2\x30\xa6\xbe\x84\x2c\x18\xb5\x78\xbb\xb1\xf9\x6d\x84\x47\xbd\x73\xb3\x69\x20\x65\x1c\x96\x2b\x70\xa7\x7f\xe3\xc3\x06\x8d\xbd\x10\x58\x32\x03\x29\xb9\xd9\xd6\x08\x89\xaf\x25\xde\x5e\xbc\x81\xcb\x00\x6e\xd7\x08\xf9\xc6\x58\x55\x79\x57\xb0\xdb\x1a\x0d\x81\x37\x8b\xa1\x70\x4d\x65\x81\x11\xe6\x8a\xd6\xb5\x90\x85\xe9\x6b\x1f\xe7\xd9\x34\x40\x22\x6c\xdb\xce\x4e\x7b\x7b\xd3\x9c\x80\xe0\x40\x3e\x76\xb9\xf7\x97\xc6\x9e\xfb\xd6\xd9\x69\xd3\x00\x4a\xd6\x07\x8b\x7f\x77\xea\xb8\x50\x1a\xf0\x11\xf5\x16\x90\x15\xd8\xe5\xe2\xca\x2a\x50\xa2\xa6\x16\x19\xf8\x5e\x1e\x2c\x0a\x1d\x67\x29\xf9\xc4\x0a\x3c\x5c\x13\x21\x0b\xef\xbd\x70\x14\xa3\xe7\x80\xfc\x49\x2b\x84\xef\x60\x24\xbd\x47\x68\xdb\xae\x13\xc7\x32\xfc\xdd\x28\x79\x8d\x5a\xd0\x52\xfc\x4b\xef\x4a\x84\x7a\x63\xcd\x24\xc3\x5c\x31\x04\x21\xc1\xae\x85\x01\x2e\x4a\x1c\x65\x5b\xd3\x48\x51\xba\x17\xb9\xd8\x51\xc1\x87\x69\xa4\x6c\x1e\xce\xcf\xa9\xc5\xaf\x36\xef\x19\x8e\xe7\x79\x49\x8d\x81\x01\xb8\x6d\xa1\x19\x35\x6d\x38\xce\xe6\x31\xc2\xa0\x9e\x73\x50\xdc\xd7\xe0\xd9\x19\x92\xed\xfa\x9d\x3a\x61\x7b\xf7\xe5\x0a\x84\x64\xf8\x0f\x64\xa6\x2e\x85\x85\xcc\xd2\xe2\x8b\x52\xf7\x9b\x1a\x52\x72\x79\x4e\xae\xad\xde\xe4\xf6\x86\x16\x90\x38\x9f\x64\x0e\xc9\xdb\x64\x0e\xbf\xc0\x04\x51\x70\xa0\x92\x41\x26\x95\x85\x0c\x1f\x20\x39\x49\x86\x28\xf3\xf9\x60\x18\x42\x67\x81\x28\x1f\x26\xdc\x9a\x8f\x51\x7b\xce\xfe\xc0\x6d\x26\x69\x85\xcb\x40\x73\xef\xdf\xb6\xb3\xf9\x98\x90\xb1\x16\x7b\x8e\x2e\xcf\xc3\x80\x7d\xf7\x03\xe4\x3f\xdb\xf6\x7d\x6f\x8b\x40\x53\x02\x6f\xd6\x08\x3c\x0c\xe8\x98\x48\xb2\xcf\x64\x54\x2a\x0f\x4a\x8d\x43\x7d\x32\x29\xc3\x53\x9e\xfb\x2b\x8c\x0f\xa3\xe4\x86\x23\xe5\xd3\x9a\x47\x6c\xa6\x9c\xfc\xda\x2f\x1f\x13\xd0\x3f\xa3\x24\x57\xb4\xfe\xac\x7c\x2d\x29\x27\xbf\x51\x13\xff\x4c\xc3\x8e\xd0\xd2\x1c\xda\xd6\x15\x1d\x7f\xa7\x5c\x1d\xa1\xf0\x79\x7a\xe1\xff\x4b\x2d\x2f\xa0\x18\x7e\x4c\x2f\xcf\xd3\xcc\x93\x45\xbb\x28\xc7\x94\xc3\xbb\x51\xcf\x69\x85\xa5\xd7\xcf\x04\xaf\x5b\x31\x3b\x8a\x42\xbf\xc7\x9e\x14\xd4\x30\xd5\x7e\xe9\xbd\x0f\x3e\x23\x79\x7e\x50\x8f\xa8\xb5\x60\x38\xec\x42\x69\xa1\x40\x0b\x6b\x6a\xd6\x1f\xdd\xa2\x5a\x9d\x4d\xe5\x4d\x3a\xdb\x93\x40\x77\x4a\x95\xa0\x6a\xb7\xf3\x94\x86\xd5\x2a\xfb\xeb\xee\x1b\xe6\x16\x94\x5d\xa3\x9e\x3b\x58\xff\x05\x62\xb2\x95\x5e\xbf\x9e\xc6\x83\xd5\x2a\xdc\x25\xc7\xe7\x8c\xd3\xdc\x2a\xbd\xdd\x81\x22\x5c\xab\xca\xb5\x2f\xbb\xa2\xf5\xbb\x6b\xab\x85\x2c\xde\x02\xdb\x4a\x5a\x89\xfc\x0c\x5c\x17\x7d\x1e\xb7\xe9\xd8\xeb\xa2\x73\xf2\xf6\xa1\x15\x07\x31\xac\xf2\x57\x0f\xc0\xdc\x04\x8b\xdb\xf1\xe3\x85\x1a\x10\xc0\xaa\xf0\x11\x3c\x5d\xa4\x4f\xd2\x3d\x0b\x59\x07\x18\x03\x8f\x9f\x96\x1f\xf6\xfc\xd8\x93\xb0\xbf\xfa\xc3\x13\x78\x78\xff\x7b\xdb\xe4\x11\xf8\xe1\x0b\x1a\xaf\xb9\xd5\x80\xe4\xab\x14\x0f\x1b\x8c\x1b\x62\xfc\x8c\x86\x5d\x51\x1a\xf7\xf5\x45\x18\xfb\x6e\xff\xc2\x59\xaf\xf8\x30\x1b\xf8\xac\xd9\x38\xa4\x02\x9f\xec\xcf\x49\xc1\xbb\xbe\x90\x1e\x3c\xd6\xae\x28\x42\x83\x87\x32\xfe\x0b\x00\x00\xff\xff\x20\x7e\xab\xed\x91\x0a\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 2705, mode: os.FileMode(420), modTime: time.Unix(1615976344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x5d\x8f\x13\x37\x14\x7d\xcf\xaf\xb8\x1d\xad\x60\xb2\x4d\x66\x16\x2a\xf5\x81\x2a\x0f\x74\x51\x29\x12\xac\xb6\x0b\x94\x67\x67\x7c\x33\xe3\xee\x8c\x6d\x6c\x4f\x42\x1a\xe5\xbf\x57\xd7\x9e\xaf\x90\x0f\x85\x05\x24\xba\xd2\x4a\x89\x7d\xec\x73\xef\xb9\xe7\xda\xce\x66\x03\x17\xfa\x3e\x87\x67\x33\x98\x33\x8b\x10\x15\x4c\xf2\x12\x4d\x04\xdb\xed\x68\xb3\x99\xc2\x4a\xb8\x02\xf0\x93\x43\xc9\xe1\x02\xa2\x5b\x96\xdd\xb3\x1c\xa3\x01\x70\xba\xdd\x8e\x00\x00\x36\x1b\x70\x58\xe9\x92\x39\xda\x06\x19\xa7\xc9\x24\xec\x03\xb4\x7c\xbb\x1d\x8d\x44\xa5\x95\x71\x10\xfb\x15\x91\x44\x97\x16\xce\xe9\x28\x7c\xb5\xce\x64\x4a\x2e\xa3\x51\xf8\x9a\x0b\x57\xd4\xf3\x24\x53\x55\x9a\xab\x69\x56\x88\x34\x2b\x44\x74\x68\x4e\x97\x6c\x9d\x1b\x55\x4b\x9e\x2e\x59\x29\x38\x73\xca\xa4\xcb\x27\x57\xfb\xe0\x52\x08\x9d\xda\x02\x8d\x58\x2c\xf6\x67\x2b\x66\x2d\x62\x99\x15\xa9\x41\x49\xf1\xef\x21\xac\x30\xb5\xb6\x28\xd3\x52\xe5\xa6\xb6\x6d\xa8\x24\x63\x72\xad\xe4\x42\xe4\x49\x23\x11\x6c\xb7\x51\xa3\x4b\x7a\x09\xaf\x42\xde\xac\x2c\xc1\xad\x35\x5a\xa8\x2d\x72\x10\x12\x5c\x81\xb0\x10\x58\x72\x0b\x97\x69\xaf\xa4\x61\x32\x47\xd0\xf7\x79\x58\x68\xe1\xa2\xd3\xb9\x25\x4c\x06\x0c\xad\xbe\xe3\xd1\x28\x4d\xe1\xcf\x50\x1a\x10\x16\xb0\x9a\x23\xe7\xc8\x61\xbe\xf6\xe4\x28\x9d\x70\x6b\x68\x8a\x67\x13\xb8\x35\x6a\x29\x08\x60\x55\x85\x40\xf2\xa3\x14\x28\x33\x84\x0a\x5d\xa1\xb8\x4d\x46\x14\x70\xb7\xa7\x75\xa6\xce\x1c\x6c\x3c\xf1\x65\x56\x88\xe4\x4d\xfd\x29\xa8\x70\x5d\x0a\x94\xce\x8f\xa3\x74\x49\xf8\xea\x67\xfe\x6e\x8b\x02\x97\x5d\x7d\x92\x66\x10\x3d\xe2\xb5\xca\x73\x34\x7e\x6d\x50\x36\x09\x23\xa3\xed\x68\xb4\xa8\x65\x06\x37\xb8\x6a\x42\x88\xb3\xe1\xfe\x13\x58\x1e\xda\x74\x02\xa5\xca\x3f\xdb\x6b\x0c\x97\x6d\x16\x21\x7c\x83\xae\x36\x12\x1e\xed\x8e\xd2\xdf\x9b\xfa\xd3\xb3\xe6\x23\xa5\x78\x83\xab\x3b\x55\x3b\x34\xf1\x78\xd2\x61\x02\xbf\x87\x65\xfd\x68\x97\xea\x33\x58\xf6\xa3\x21\x00\x8f\x2d\x55\x1e\xc6\xb7\x94\x5b\x57\xea\x0b\x49\x3d\x78\x91\xdc\x28\x8e\x16\x7a\x23\x88\x05\x48\xe5\xe0\x42\x26\xcf\xa5\x54\x8e\x39\xa1\xa4\x4d\x9a\x88\x5f\xa2\x4c\xde\xde\x0b\xed\x5b\xab\xe5\x4a\x53\x78\x57\x20\xad\xbd\x90\xc9\x0d\xab\xc8\x89\x0d\x3e\xe9\x40\xbe\xa6\x87\x20\xbb\x05\x6e\xff\x5a\xe1\xba\xc1\x5d\xbe\x6b\x83\xd4\xf5\x0c\x24\xae\x0e\xee\xda\x81\xdb\x5a\x1e\x02\x7d\x4d\x61\x0f\xa6\xb2\x9b\x43\x41\x02\x3f\x3a\x04\xdc\x0c\xcd\x35\x81\xa5\xe7\x18\x0f\x52\xec\xdb\x78\x01\x0c\x32\x53\xf3\xa9\xd2\x68\x7c\x31\xc0\x16\xaa\x2e\x61\x8e\x60\xef\x85\xd6\xc8\x81\x2b\x5f\x32\x83\xb9\xb0\x2e\xb4\xa1\x0a\x8d\xde\xb4\x5d\xd2\xb7\x7a\xbf\xfb\x79\x95\x6e\x94\xde\x6e\x77\x4f\xdb\x00\x4a\x33\x3f\x9b\x1a\xf2\x6a\x44\x96\xf2\xb8\xe6\x6c\x78\x08\xdd\x1d\x32\x7e\x8c\xcc\x20\xe3\xdf\x90\xea\xbd\xe6\x27\x32\xab\xfd\xec\x37\xa4\x7b\x81\x25\x1e\xa7\xe3\x7e\xb6\xa5\xfb\x5a\xae\xd7\xc2\xba\x63\x4c\xa5\xb0\xee\x48\x5a\xfb\xf6\x73\x8a\x2b\x98\x7a\xa3\x81\x41\xab\x6a\x93\xa1\x3d\x68\xa6\x7d\x22\x5b\xcf\xdb\x25\x69\x8e\xbb\x9c\xbb\x54\xcd\xb1\x58\x1c\x6a\x76\x0a\x63\x07\xfc\x22\x98\xdd\x87\x44\x16\xcf\x51\xb6\x8d\xa1\x16\x7e\x24\xdc\x23\x13\xf8\xa7\xb6\xce\x0f\x84\xc6\x68\x41\xa1\x33\x38\x2e\x58\x5d\x3a\x4a\x5d\x2b\x21\x5d\xb2\x43\xf2\xae\x10\x16\x56\x6c\xed\xa1\xb5\x45\x03\x19\x93\x60\x9d\x28\x4b\xfa\x3a\xa0\x81\x79\xed\x68\x4f\x26\x95\x2b\xd0\xf4\xfb\xc1\x4b\x05\xd7\xaa\xd2\x82\x0e\x86\x95\x28\xcb\xcf\x52\xae\xd4\x32\xec\x43\x27\x94\x8f\x4c\x2c\xa8\x73\x85\xf5\xf9\xf9\xeb\x9a\xc9\xf5\x8a\xad\x6d\x1f\xdb\x8e\xf2\x27\x3a\xb2\x95\xf9\x24\x94\xfa\xe9\x2c\x60\xe8\x85\xb3\xa0\xc1\xc7\x67\x41\xc9\x88\x7b\x76\x38\xd7\x75\xe7\x38\x6e\x18\x45\x6f\xf2\x81\xdd\x3d\xd9\x5b\x7a\x86\x14\x58\x6a\x34\x0d\x87\xbf\x32\xe2\xa2\x7d\x81\x8c\xe1\xfd\xdd\xeb\x5b\x66\x58\xf5\xd6\x19\x21\xf3\x78\x05\xf4\x84\x4c\xee\xd0\x6a\x25\x2d\x7e\x30\xc2\xa1\x99\x80\x81\xcb\x66\xfc\x63\x8d\xd6\x4d\x40\xd3\x1a\xba\xde\x84\xcc\xc7\x10\x0b\xde\x7c\x9e\x00\x1a\x43\xff\xca\x8c\x9b\x2b\x43\x70\x98\xf9\x8b\xbf\xa5\x8a\x4d\xb3\x7e\x1c\xe6\x17\x1e\x32\x83\x28\x1a\x5c\x32\xb4\xcd\x2c\x6c\x64\xe9\xc9\x10\x47\x58\x69\xb7\x86\xda\x94\x61\x71\x34\xee\xb0\x45\x73\x75\x25\x1f\x84\x2b\xfe\xa0\xf7\x5f\x1c\x05\x4c\x4b\x94\xbc\x92\x0b\x75\x6a\x8b\xf0\x44\x4d\x7e\x67\xbc\x49\x31\x5e\x4d\xa0\x8d\x13\x7e\x86\x88\x9a\x84\xbc\x3b\x47\x78\xfc\xb8\x59\xd8\xd4\x36\xb4\xf8\xe8\x84\xb8\xaf\xa4\xfb\x0a\x65\x05\xdd\xdf\x7b\xb2\x6a\xba\x81\x4f\xcb\xaa\xff\x97\xaa\x0e\x24\x1d\x88\x2c\xf8\xa4\x89\xbe\xf9\x61\x93\x3c\x77\x4a\xc4\xba\x4b\x96\x26\x7f\x9a\x81\x14\xe5\x20\xdf\x03\x39\x78\xee\x09\xe8\x2e\x7a\x12\x83\x22\xb2\x42\xe6\x7d\x16\xe8\xd0\x7c\x51\x26\x15\x9d\xc8\x73\x7a\xb7\x69\x65\x85\x13\x4b\xa4\xc2\x21\x3d\xc4\x73\x7f\x6e\x19\xf8\x17\x8d\x3a\x99\x64\xe7\xa4\xe3\x56\x7a\x27\x2a\x7c\xa8\x97\xfc\x9b\xc0\x89\x0a\x13\xda\xe5\x5b\x79\xea\xc7\xf2\x49\x78\xd6\x06\xa7\xf8\x54\x6f\x99\xb1\x18\x47\x4f\xaf\xae\x7e\x9d\x5e\x3d\x99\x5e\x3d\xa5\xb0\x7e\x40\xd7\xf8\xd7\xb9\x0f\x9f\x7e\xc9\xae\xd7\xeb\xf5\xb4\xaa\xa6\x9c\xc3\x42\x99\x8a\xb9\x87\xfa\x46\xb3\x5c\x48\xff\x3a\xf0\x81\x9f\xe7\x9c\x31\xc4\x9a\x7e\x75\xfb\x93\x47\x38\xac\xec\x2d\x9a\xdb\x6e\x64\xdf\x37\x34\x35\x83\x27\x41\xd5\x21\x7e\x06\xbf\x5c\x8d\x5a\xb1\x39\xd9\xcb\x90\xb9\x92\xbf\x6a\x34\xeb\x78\x9c\xbc\x44\x17\x47\xc3\x15\xd1\xf8\x37\xe0\x54\x92\x1d\x8f\x0d\x11\x07\xcf\x01\xde\xcb\x73\xac\xaa\xc7\xbc\xba\xc3\x3e\x01\x7e\xb8\xc4\x1f\x29\xe0\xbe\xc8\xf0\x78\xb8\x6c\x68\xc9\x53\x75\xdf\xe1\x7a\xc0\x89\xf1\x59\xf5\x83\x03\x86\x87\xe4\x71\x8d\xf5\x51\x6d\xf5\x77\xd0\x54\x7f\x99\x96\xfa\x4b\x34\xd4\xdf\x47\xbb\xbe\x87\xfe\x0b\x00\x00\xff\xff\x3f\xc7\x72\x35\xc7\x13\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 5063, mode: os.FileMode(420), modTime: time.Unix(1615384201, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x6d\x6f\xdb\x36\x10\xfe\x9e\x5f\x71\x13\x8c\x42\x0a\x6c\x7a\xfd\x9a\xa2\x18\xda\xa6\xcb\x8c\xf5\x65\xab\xb3\xf5\x43\x51\xa0\xb4\x79\xb2\xd8\xc8\xa4\x42\x52\x71\x3c\x4d\xff\x7d\xe0\x8b\x15\xc9\x92\xdd\x34\x43\xf7\xa2\x2f\x89\xa9\xbb\xe3\xf1\x9e\x87\xcf\x9d\xaa\x0a\x18\xa6\x5c\x20\x44\x19\x15\x2c\x47\x35\x5d\x2a\xa4\x06\xa7\x4a\x96\x06\x23\xa8\xeb\x8c\xfc\x22\xb5\x89\xa3\x69\x34\x86\x8c\xbc\x70\x6f\x93\xaa\x02\x14\x0c\xea\xfa\xe4\xe4\x60\x08\xeb\x7c\x02\x00\x30\x9d\x82\x36\xaa\x5c\x1a\x30\x12\x16\x5c\x30\x30\x19\x42\x21\xb5\x81\x85\x64\x5b\x30\x92\x38\x3b\xb3\x2d\x10\xaa\x0a\x46\xe4\x0d\x5d\x23\xd4\xb5\xdf\xec\x1d\x5e\x97\xa8\xcd\x2e\x46\xe5\x6c\xed\x53\x55\xd3\x53\x78\xc6\x18\xd0\x3c\x87\x94\x63\xce\x34\x98\x8c\x1a\xa0\x0a\x41\x48\x03\x78\xbb\xcc\x4b\x86\x8c\xc0\xe9\x34\xe4\xe2\xfd\x40\x51\xb1\x42\x18\xa5\x70\xf6\x14\x46\xe4\x47\xef\x3b\x69\xd9\x78\xbb\x09\x8c\xa8\x33\x49\xc9\x33\x21\xa4\xa1\x86\x4b\xa1\xbd\xfd\x05\x0a\x18\x70\xe0\xa9\xdb\x3a\xa6\x82\x59\xe7\x11\x25\xf3\x2b\x5e\x84\xb2\xed\x3b\x84\x6c\x46\x29\x99\xbb\xc3\xb9\xc0\x50\xd7\x70\xea\x57\x2f\xb7\x05\xda\x57\x5c\xac\xec\xea\xa7\xcf\x5a\x8a\xb3\xa8\xaa\x80\x0b\x86\xb7\x10\xeb\x22\xe7\x06\x62\x43\x57\xaf\xa4\xbc\x2a\x8b\xbb\x48\x97\x74\x05\x91\x35\x8f\x12\x88\xc6\x51\x02\xdf\x43\x5d\x3b\xcf\xd4\xe6\xe4\xf3\xf9\x9d\xe6\x9c\xb9\x33\x59\xf3\xba\x76\xb9\x1c\x7a\xd9\x40\xfe\xa9\x77\xe6\x40\x85\xfd\xa5\x49\x67\xad\x85\x15\xb2\x15\xde\x17\xaa\xc9\x0e\x2b\xf4\x58\xbd\x74\xbe\x47\xa0\xc2\xaf\x81\xca\xa2\x14\xdb\xfd\x47\xe8\x8b\xdd\xf6\xfd\xc9\xd3\xf9\x02\x85\xc3\x30\xf1\x96\xc3\xc8\x1e\x84\x16\xf7\xa1\x0d\x18\x20\xf9\x4d\xf0\xeb\xd2\xd2\xdc\x82\x8d\xb9\xb6\xff\x7e\xf8\xd8\x94\xd9\x3b\xbb\xa4\x66\xe7\x0f\x60\x02\xfe\x5b\x4c\x98\x0c\x50\x21\x2c\xd5\x27\x3b\x41\xb8\xcc\xb8\x86\xb4\x14\x4b\x1b\x16\xbc\x60\x68\xa0\x20\x70\xd3\x91\x00\x58\x4b\x86\xb9\xc3\x49\x1b\xa9\x50\x03\x37\xc0\x85\x53\x10\x46\x0d\x5d\x50\x8d\x5e\x3d\x6c\xb0\x38\xeb\x38\x07\x00\x13\xf0\xe7\x88\x37\x90\x19\x53\x90\x77\xa8\x0b\x29\x34\xbe\x57\xdc\xa0\x1a\x83\x82\xd3\xb0\xee\x84\x26\x69\x49\xcc\x74\x0a\x17\x68\xee\xf4\xca\x6e\x49\x9a\xb7\xcc\x12\xee\xa0\x60\x55\xb5\x75\x37\x92\x49\x98\x58\xda\xcb\x0d\xa4\x52\xad\x27\xa5\xca\x27\x28\x96\x4c\x32\x64\xd3\xdb\x75\x3e\x2d\x94\x34\x72\x51\xa6\x7b\xd1\x79\x0a\xa8\x94\xdd\xc2\xa2\x47\xde\xe0\xe6\x1c\x97\x92\xa1\x8a\x15\x79\x2e\xd9\x36\x21\xfe\x77\xfc\x88\x25\x4f\x9c\xe9\x77\x4f\x41\xf0\xbc\x95\xbe\x7d\x32\xf2\x4a\xae\x56\xa8\xc8\x7b\x6e\xb2\x97\x4a\x49\x15\xa3\x52\x09\xf1\xff\x46\x68\xff\x00\xb3\x91\x2c\xb7\x3c\x51\x3a\x01\x14\x0a\x86\x8a\x3c\xa7\x2c\x1c\x2c\xde\x8c\x41\x8d\x21\xe2\xe2\xc6\x32\xc3\xf9\x58\x75\xe6\x62\xd5\x73\x35\xa5\x12\xcd\x52\x80\x3f\x14\x36\xd0\x0a\x1b\x2c\x87\x8e\x9e\x91\x60\x26\x55\xe0\x73\x7c\xf4\xb4\xde\x73\x0c\xf2\xca\x7a\xa3\x52\x24\x3e\xbd\x69\x22\xcc\x7c\xc6\x77\x84\x76\x45\x48\x9e\x58\xf3\xaa\x77\x7d\xef\x55\xb9\x10\xdc\xd6\x4e\x85\x46\x65\xcf\xb2\x57\x88\x56\x1d\x67\xc2\xa0\x12\x34\x9f\xa3\xba\x41\xe5\x63\xf9\x82\x0a\x9e\x0f\x79\x75\x4a\xb8\x57\xc6\x63\x69\xce\x44\x2a\xe3\xe8\xa6\x39\x2b\xa4\x94\xe7\xc8\xee\x89\xae\x0d\x71\x7f\x2c\xe7\xf4\x66\x08\xc7\x85\x87\xf0\x45\xce\x51\x18\xd2\xbe\x29\x41\x5a\xe2\x64\x48\xea\xff\x0b\x6d\x99\xa7\xc0\xc8\x60\x6f\x1e\xe4\x5d\x73\x62\x32\x47\x33\xe4\x16\x9f\x0e\x87\x4b\x7c\x6b\x0c\x32\xb1\x71\x3d\x71\x21\x4b\x03\x3a\xe7\x4b\xec\x8c\x35\x99\x2d\xf2\xb2\xd4\x46\xae\x61\x4d\x95\xce\x68\x9e\xa3\xd2\x3f\x74\x5b\xe6\x1d\x40\xfb\x35\xe8\x8b\xf3\x50\xe7\xfe\xff\xb6\xdb\x06\xb2\x5e\xcf\x3d\x0a\x59\xc8\xad\xdd\x91\x07\xed\x3c\xbc\x3e\xfe\xeb\xd2\x67\x3d\x47\xd3\xc2\x76\x7f\xdf\xfe\x6d\x6e\xa0\xf0\xed\xfe\xde\xfb\xd8\xc9\xa9\xae\xe3\xe1\x6d\x08\x21\x47\x76\xea\x22\xbc\x7b\xbe\x86\x1d\x9d\x8b\x6e\x9b\xb0\x6d\xc0\xdd\xe6\x6b\x1f\x1c\xef\x44\x7b\x41\xac\x1e\xc4\x8a\xbc\x90\xc2\xe0\xad\x89\x93\x64\x5f\xda\x1f\xde\xaa\x34\xbd\xb1\x62\xdb\x16\x93\x61\x49\xfb\x0a\xa1\x3d\xaa\x6d\xef\x90\x32\x37\x97\xa0\x30\x6a\x7b\x77\xde\xeb\xc3\xe2\xf6\x6b\x89\x6a\x1b\x27\xe4\x7d\x86\x0a\xe3\xbb\x57\x7f\x42\x2e\x37\xa8\xac\xc9\xec\x3c\xb6\x83\x5d\x32\x28\x80\x9d\xcb\xd7\xbb\x4a\x3b\xab\x95\xb7\x3a\x70\x87\xfc\x4d\xb9\x50\xb2\x2c\x7a\x31\xba\x71\xd0\x05\xfa\xc2\x04\xb9\x72\x81\xfc\x0c\x79\x88\xb9\x7e\xa8\xc4\x6b\x9b\x9a\x8d\x5a\xd7\xd7\x0e\x4a\x4f\xda\x50\x81\x82\xea\x25\xcd\x2d\x9b\x93\xbe\x00\xf5\xc9\x77\x7c\xb5\xbf\x82\x8f\x1b\x1a\x5e\x93\xb7\x22\xdf\x7e\x23\x1a\x2a\xa4\xec\x9f\xe5\xe1\x1c\x15\xa7\x39\xff\x63\xa8\xd1\x3a\x41\xf6\x10\x3d\x88\x14\x9f\x9b\xa2\xe9\x0c\x15\x4f\x53\xf2\xda\x37\x98\xf8\xd1\x6e\xe1\x6d\xe1\xa2\x55\xde\xf9\x0c\x3e\x7c\xf4\x23\x5f\x35\x24\xf4\xbb\x5c\x06\xa1\x9d\x74\x09\xec\x4d\xdd\x37\xc9\x68\x55\xd7\xd1\x38\x80\xda\x6f\x3a\x5e\x36\xf7\xd7\xed\x13\xb5\xef\x98\x16\xf4\xca\xc1\xf1\x45\x8d\xab\xc7\x33\xe1\xbe\x3b\x5f\xae\x0b\xb3\xbd\xa4\xab\x33\x30\xaa\xc4\x7a\x0c\xf8\xf8\xef\x71\xc5\xfe\x74\xfa\x1c\x47\x1d\x65\x70\x3f\x66\xe7\x0d\x63\xc6\xe0\x54\x60\xc7\x2d\x1d\x30\xf6\x03\x9b\x63\xda\x37\x24\x55\x27\xf9\x5e\xb6\xad\x42\xee\xb2\xf4\x23\xe5\x90\x49\xc8\xab\x33\x5e\x86\x54\xdf\xfe\x1c\x32\xfb\x9c\x84\x8f\xc0\xe6\xd6\xfe\x15\x00\x00\xff\xff\xad\x44\xca\x63\x7f\x12\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 4735, mode: os.FileMode(420), modTime: time.Unix(1615384598, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_deleteTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x4f\xdc\x30\x10\xc5\xef\xfb\x29\x5e\x23\x0e\x09\xdd\x75\xee\x54\x9c\x58\x5a\x22\x51\x5a\x01\x15\x17\x24\x14\xf0\x24\xb1\x9a\x1d\x6f\x27\x0e\x7f\xe4\xfa\xbb\x57\xf9\x53\x64\xd8\xae\x54\x5f\x76\x3d\xb6\x7f\xf3\x66\xe6\xc5\x7b\x68\xaa\x0c\x13\x92\xa6\x64\xdd\x92\xe4\x9a\x5a\x72\x94\x8b\xed\x1d\x25\x08\xa1\x51\x5f\xfb\x67\xb5\x1e\xa3\x69\x92\x7b\xa3\xbd\x87\xa9\x70\xa0\x8a\xb5\x2a\xba\x82\x1d\x42\x38\xba\xbd\xd5\x1f\xbd\x07\xb1\x46\x08\x21\x59\xa2\x99\x9f\x64\xaf\xd1\xc5\x62\x6f\xb6\x21\xcf\x02\x00\xf2\x1c\xd7\x8d\xe9\x50\xf5\xfc\xe0\x8c\x65\x4c\xe7\x1d\x5c\x43\xf0\x1e\x07\xea\xa2\xdc\x10\x42\xc0\xc6\x6a\x6a\x61\x34\xb1\x33\x95\x21\x8d\xfb\x17\x94\xa8\xcd\x23\x31\x7a\x69\x57\xdb\x52\xca\x0d\x39\x12\x35\x82\x07\x60\xda\xbc\x41\x9c\x4d\x12\x32\xcc\xb5\x3d\xa1\x71\x6e\xab\x2e\xa9\xdb\x5a\xee\xe8\x46\x8c\x23\x59\x42\x70\x38\xc7\x7f\xf5\xd4\xb9\x0c\x7e\x04\x0e\xcb\xfb\xd5\x4e\x27\x5e\x0f\x87\x65\xf4\x12\x24\x82\xa3\x63\x34\xea\xc7\xe5\xf9\xf7\x41\x54\xc1\x2e\x7d\x5a\x42\x96\x48\x8c\x4e\xb2\x88\x06\x6a\x3b\xfa\x2f\xc6\x95\x13\xc3\xf5\x5e\x0c\x6b\xac\x22\x8c\xa9\x46\xc2\x87\x63\xb0\x69\x23\xfd\xc3\x12\x72\xbd\xf0\x6b\x28\x2c\x22\x50\x7e\x88\x87\xb2\x73\x70\x16\xb5\x5d\xb9\x97\x2d\x0d\x28\x26\xd2\xa4\x71\x98\x47\x19\xe2\x4e\x9c\x95\xdd\x17\x7b\x3d\x5c\x7e\x57\xc9\x9d\xd1\x43\x15\xe3\x0c\x8a\xb5\x9a\xaf\xa4\x46\xef\x88\x0f\x91\x8c\x59\xfc\x58\xfe\x49\x6b\x88\x9d\x8a\xa7\x38\xdb\xec\x1b\x53\xb1\x4e\x23\x67\xc6\x2a\xee\x46\xcf\xce\xcd\x9d\xfe\x8f\x49\x32\x75\xfa\x4c\x0f\xa9\xa8\x13\xcb\x8e\x9e\x5d\x9a\x65\x9f\xf6\x77\xaa\x51\xe7\xb6\xae\x49\xd4\x8d\x71\xcd\xa9\x88\x95\x94\x44\xb2\x71\xfb\xd9\x50\xab\xd3\xe4\x8d\xb0\xbf\x75\xce\xfb\x64\x09\xa3\x33\x35\x3d\x4c\x68\xf8\x99\xdc\x6d\xb8\x06\x5b\x4d\xa8\xc4\x6e\xa0\xef\xa3\x59\x4e\x03\x62\x4d\xa2\x0a\x76\x24\x5c\xb6\x57\x24\x8f\x24\x13\x65\x1a\x3f\x9b\xf6\xfd\x8b\x7d\x23\x7d\x53\xc2\x8e\xe6\xdf\xe8\xb8\xfc\x19\x69\x2d\xb8\xb2\xff\xbe\x30\x7f\x97\xb1\xef\x66\x9d\x17\x76\x6c\xe6\xe0\xf1\xe9\x2c\x2c\xbc\x27\xd6\x21\xfc\x09\x00\x00\xff\xff\x1e\xd0\x6b\x89\x6c\x04\x00\x00")

func handlerHandler_deleteTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_deleteTpl,
		"handler/handler_delete.tpl",
	)
}

func handlerHandler_deleteTpl() (*asset, error) {
	bytes, err := handlerHandler_deleteTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_delete.tpl", size: 1132, mode: os.FileMode(420), modTime: time.Unix(1615385498, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x51\x6f\xdb\x36\x10\x7e\xf7\xaf\xb8\x12\xc6\x2c\x15\x32\xbd\xbd\x76\x30\x86\xb4\xe9\xd2\x60\xde\x92\x25\x29\xf2\x30\xec\x81\x36\x4f\x12\x17\x9a\x94\x49\x2a\x69\xa6\xea\xbf\x0f\xa4\x24\x47\xb6\xe5\xa4\x05\xf2\x32\x01\x41\x2c\xf1\x78\xf7\xdd\xdd\xc7\xfb\x58\x55\xc0\x31\x15\x0a\x81\xe4\x4c\x71\x89\x66\x26\x85\x75\x33\xa3\x4b\x87\x04\xea\x3a\xa7\x67\xe8\x22\x32\x23\x09\xe4\x74\x21\xac\x8b\xab\x0a\x50\x71\xa8\xeb\xd1\xe8\xd8\xee\x4d\x89\xe6\x71\x9a\x0a\xe9\xd0\x78\x27\x23\x00\x80\xd9\x0c\x3e\x5b\x04\x97\x23\x84\x75\x28\x98\x61\x6b\x74\x68\x2c\x38\x0d\x8d\xf5\xd3\x32\x05\xa7\xb9\x86\x29\x28\xb4\x0e\x79\xbb\xfe\x4b\x70\x55\x55\x53\x30\x4c\x65\x08\xe3\x14\xde\xcd\x61\x4c\x7f\x15\x28\xb9\xed\x42\x75\x36\xe3\x7f\xac\x56\x7f\xb0\x35\x7a\x23\xa1\x38\x7e\x81\xc8\x16\x52\x38\x88\x1c\xcb\x16\x5a\xdf\x95\x05\x8c\x53\x7a\xed\x4c\xb9\x72\x37\x2c\x03\xe2\x77\x90\x18\x48\x42\x62\xf8\xb1\xef\x4f\xa4\x10\x62\x19\xfa\xf9\x6a\x41\xff\xf4\x10\xa3\xb8\x29\x4e\x55\xf5\x22\xd5\x35\x89\x7f\x86\x14\xde\xcc\x81\x10\xa8\xb6\xfb\x3b\x4c\x22\xf5\x11\x3f\x31\x7b\xa6\x6f\x1e\x0b\xec\x87\xe8\x9e\xd9\x2c\xe4\xbe\xb7\x15\xa5\xc5\x76\xf7\xb9\x7d\xaf\xb5\x1c\xda\x7a\xcf\x0c\x2c\x61\xa9\xb5\x3c\x58\x0a\x09\xcc\xe7\x40\x9c\x29\x71\x1f\x59\xf7\x2c\x61\x0e\x7e\xfd\x60\xb1\x86\x2e\x7e\xe3\x24\x65\xd2\x3e\xeb\x25\x18\x1c\x73\x33\xbc\x2d\xa7\x0b\x9d\x65\x68\xe8\xad\x70\xf9\x47\x63\xb4\x89\xd0\x98\x38\xbc\x86\x06\x1f\x96\x3a\x81\x34\xa6\xa7\xb8\x2c\xb3\x88\xac\x74\x29\x39\x28\xed\x3c\xb3\xec\x01\xcb\x48\x3c\x18\xd4\xa0\xe2\x68\xe8\x7b\xc6\xaf\x70\x53\xa2\x75\xd1\x43\x02\x26\x01\x32\xd9\x8b\x35\x81\x75\x69\x1d\x2c\x11\x26\xbe\x42\x13\xd0\x06\x26\x21\xcb\xc9\x51\xd7\xae\x34\xea\xb0\x06\x07\x5f\x36\xf4\x36\x47\x83\x91\x8f\x48\x2f\xd9\xea\x8e\x65\x3e\x22\xad\xaa\x2d\x39\x43\xfe\x75\x1d\x2d\xe3\x78\x8f\x17\xb0\x43\x8c\x73\xe5\x86\x78\x21\x12\x40\x63\x3c\x7f\xad\x33\x2b\xad\xee\xe9\x89\xd3\x22\x4a\x0f\x81\x8b\x34\x58\xbe\x99\x83\x12\xf2\x7f\xde\x28\xa6\x40\x28\x87\xd9\x33\x3e\x5f\xbf\x43\xe2\x85\x0e\x5d\x3b\x23\x54\x36\xd4\xa4\xef\x08\x92\xbe\x10\xe4\x46\xac\xbf\x63\xb4\x84\x81\x3e\xed\x99\xd7\xa3\xde\x42\x5d\x8f\x5e\x9e\xf9\xfd\x31\x7f\x93\x0b\x0b\x69\xa9\x56\x4e\x68\x15\xba\x2b\xd0\x42\xaa\x0d\x84\xcc\xda\x36\xc1\x5a\x73\x94\x96\xc2\x07\xa6\x7c\xb3\x9a\x01\x8f\x1c\x96\x8f\x07\x02\x41\x83\x6b\xef\x32\xca\x77\x9c\x7c\x6a\x20\xc4\xe0\xa5\x29\x7a\x80\xdc\xb9\x82\x5e\xa1\x2d\xb4\xb2\x78\x6b\x84\x43\x93\x80\x81\xb7\xed\xf7\xc0\x9b\xb8\xc7\xea\x8d\x3f\x12\x39\xfd\x20\x05\x2a\x47\xfb\x9e\xbb\x11\x3f\xea\x29\x4a\x28\x2f\xd7\x8d\xe4\x9c\x28\xa5\x1d\xf3\x29\x5a\xda\xc2\x38\x43\x45\x4f\x31\x65\xa5\x74\x1e\xcf\x85\xe1\x68\xf6\xbb\x20\xd2\x21\x09\xd1\xde\x94\xc4\x61\xb4\x0e\x4d\xd5\x0d\x0d\xce\xa2\x41\x16\xf7\xe4\xb0\xc1\xe6\x75\x73\xa0\xf9\xdd\xd3\xa6\xea\x4f\xfa\x06\xa2\xb1\x6e\x7c\xc3\x57\x90\xfa\xc1\xd7\x92\x70\xb4\x2b\xdf\xd0\x53\xb4\xab\x8e\x59\x75\x7d\xd2\xbc\x04\x1e\x34\x07\x5c\x37\xba\x1b\x34\x2f\x39\x0a\x6d\x9f\x5c\xdd\xb3\xcb\xe0\xbe\x72\x6f\xc9\xd6\x77\x33\x46\xb9\xf4\xd9\x21\xcb\xd0\x2c\x34\xe3\xef\x4b\x21\x3d\xee\x31\x10\x5f\xed\x33\xa3\xcb\xc2\x12\x20\x1b\x12\x46\x97\xff\xdb\xbb\x0f\xf8\xf6\x79\x2f\x75\xed\xd1\x6f\x7f\xed\x47\x9b\xcd\xe0\x92\x65\x42\x85\xe6\x6e\xbf\x16\x2c\xc3\x04\x84\xc3\xb5\xbd\x44\x73\x19\xde\xda\x99\x9a\xd3\x62\x6b\x7f\xae\x52\x1d\x26\x53\xdc\xbf\x3a\x1c\x1d\xa9\x7b\x13\xa8\x87\x62\x43\x17\x62\x2d\x5c\xd4\x8f\x18\xd3\x8b\x34\xb5\xe8\xa2\xc8\xa3\x81\x29\xfc\x14\xc3\xdb\x1d\x4c\xbb\x7c\x75\xb8\x2e\x24\x73\xcf\xdf\xcf\xc6\x3b\xc9\xa3\xdd\xa6\xb5\xa1\x27\x52\x46\x86\x7e\xd0\xca\xe1\x17\x17\xc5\xdf\x96\xd2\x31\x75\x68\x7e\x12\xf4\xff\x9a\x13\xee\xe7\x20\x67\x8e\x2d\x99\x45\x12\x77\xc3\x09\xa6\xb0\x44\xe7\x2f\x83\xc1\x74\xaf\x5c\x41\x04\xce\x95\x43\xa3\x98\xbc\x46\x73\x8f\xa6\x71\xdc\xa8\x81\x12\x32\xfe\xc6\x02\x7b\x0e\x64\x81\x34\xcf\x1e\xe8\x2b\x64\xbc\xe1\x56\x9f\x4e\xfc\x49\x50\x73\x34\x22\x4d\xe9\xef\xcc\xd8\x9c\xc9\xe8\x87\xee\xc3\x45\x11\x7c\x55\xcd\xe6\x77\xf0\xd7\xdf\x36\x8c\xfe\xe1\x3b\x61\x76\x10\xa2\x6f\xd1\x1e\xef\x2c\x20\x6d\x4c\xeb\x9a\x54\xd5\x38\xf3\xda\x3a\x30\xc1\xa1\x27\x0a\x43\x87\x8f\x3c\xcd\xba\xaf\x60\x15\xbb\x0b\x2a\x7d\x80\xec\x40\x18\x12\x38\x57\x2b\x59\x72\xfc\xb8\x2e\xdc\xe3\x0d\xcb\xde\x85\xfb\x62\x9d\x78\xe6\xbc\x0a\x3f\x2c\x1a\xc1\xa4\xf8\x37\x74\xa2\xa1\x00\xd9\x6f\xe9\xeb\x91\x60\x07\x4c\x7b\x77\x61\x6b\x5d\x2a\x47\x12\x90\xa8\x22\xb4\x71\x4c\xc3\xa1\x1e\x2c\x59\x0b\x06\x79\x0f\x63\x8b\xef\xe2\xb7\x16\x0e\x6f\x96\xbc\x8c\xa2\xe2\x75\xfd\x5f\x00\x00\x00\xff\xff\x23\x94\xe6\x0a\x75\x0d\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3445, mode: os.FileMode(420), modTime: time.Unix(1615240153, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x41\x6f\xf3\x36\x0c\xbd\xe7\x57\x70\x46\x30\xd8\x9d\xa3\xdc\x03\x7c\x87\xe1\x4b\x97\x1a\xeb\xd6\xad\xed\xd0\xc3\x3a\x14\x6a\x44\xdb\xc2\x1c\xd9\xa1\xe4\x76\x99\xa6\xff\x3e\x48\x76\x52\x25\x69\x3f\x54\x27\x9b\xa6\x1e\x1f\xc9\xf7\x6c\x2d\x08\x2c\xa5\x42\x48\x6a\xae\x44\x83\x34\x27\xe4\x62\x4e\x6d\x6f\x30\x01\xe7\x6a\xb6\x42\x93\x26\x73\x2b\x85\xb5\x20\x4b\x98\xb2\x62\xc9\x0a\x5d\x28\x03\xce\x2d\x1e\x1f\xc5\x0f\xd6\x02\x2a\x01\xce\xb9\x24\x87\x9a\xdd\x22\x17\xd9\x21\x36\x99\x7c\x50\xc2\x83\x4f\x00\x00\xe6\x73\xb8\xaf\xa5\x86\xb2\x57\x6b\x23\x5b\x05\x25\x9a\x75\x8d\x1a\x4c\x8d\x60\x2d\x4c\xd9\xaf\x7c\x83\xe0\x1c\x6c\x5a\x81\x0d\x48\x81\xca\xc8\x52\xa2\x80\xe7\x1d\x70\xa8\xe4\x0b\x42\x4f\xcd\xac\xe3\xc4\x37\x68\x90\xa0\xa4\x76\xb3\xc7\x16\xdc\xf0\x67\xae\x11\xb8\x12\x40\x68\x7a\x52\x1a\xa4\x01\xd3\x86\x02\xeb\x46\xa2\x32\x2c\x64\x7b\x06\x69\x7d\x54\xf3\x6a\x60\x9c\x81\xef\x2a\x7d\x85\xda\x98\x8e\xdd\xa2\xee\x5a\xa5\xf1\x81\xa4\x41\xca\x81\xe0\x62\x8c\x6f\x7b\xd4\x26\x03\x1b\xe0\xfc\xb1\x76\x76\x36\xb4\xc3\x47\x7f\xa4\xc8\x01\x89\x60\xf1\x05\x6a\xf6\xc7\xed\xf5\x6f\xbe\x89\x42\x99\xf4\x35\x07\xca\x21\x91\x22\xc9\x22\x34\xc0\x46\xe3\xa7\x30\xee\x0c\x49\x55\x7d\x08\xa3\x04\xcc\x22\x18\x59\x06\x84\xef\xbe\x80\x92\x4d\xc4\xdf\x9f\x61\x68\x87\x90\x9b\x44\x40\xf3\x0b\x58\x73\x1d\xa6\x59\xb5\x33\xb3\xeb\xd0\x43\x29\x44\x81\x02\x2e\xe6\x51\x85\x78\x12\x57\x5c\xaf\xda\x7b\x9f\x7c\xd2\xc9\x93\x14\xbe\x8b\xb0\x81\x62\xc9\xc6\x94\x54\x8a\x33\xf2\x2e\xa2\xb1\x1d\x3a\xff\x3a\xac\x32\x5e\x1f\xfb\xbd\x47\xda\xa5\x19\x7b\xa8\x91\x30\x7d\xfb\xf4\x1f\x34\xed\x2b\x92\x4f\x29\x96\x69\xa4\xec\x98\xda\x53\xd0\xfc\x38\xf1\xe1\x39\x54\xce\x8e\xd8\x18\xdc\x74\x0d\x37\x08\x49\x70\xce\xf6\x39\x81\x69\xdc\x17\x1e\x96\xb3\x65\x37\xaa\xd9\xa5\xc4\xbe\xb6\xca\xe0\x3f\x26\xfd\x26\x10\x12\xb5\x34\x0b\x96\x91\xaa\x1a\x41\xe3\xfc\x69\x45\x6d\xdf\x69\x8f\x3c\x65\x3f\x2a\xd5\x1a\xee\xfd\xa3\xd9\x28\xda\x15\xaa\x60\xc6\xd5\x90\x16\x51\x7a\xd3\x8b\xae\x91\x64\x59\xb2\x5f\x38\xe9\x9a\x37\xe9\xf7\xfb\xc0\x4d\x17\xb0\xec\x70\x79\x01\x7f\xfe\xa5\x83\xa0\x8e\xa5\xb1\x5f\x6a\x75\x56\x22\xce\x20\xae\x2a\x84\x69\x15\x98\x0e\xa9\xce\x25\xd6\x4e\x2b\xff\xcb\x78\x47\x8d\xb1\xd6\x4f\xe3\xfe\x24\xf1\x22\xb5\xe2\x7f\xfb\x05\x25\x67\xcc\x4e\x61\x5d\x0e\x85\x5a\x37\xbd\xc0\xcb\x4d\x67\x76\xf7\xbc\x5a\x80\xa1\x1e\x5d\x0e\x80\xd9\xa7\xbc\x50\xb3\xeb\xb6\xaa\x90\xd8\x83\x34\xf5\xa5\xdf\x50\x8a\x44\x59\x78\xfd\x49\x62\x23\xd2\xe4\x48\x7f\x7b\x25\x8f\xef\x49\x0e\x52\x64\x6c\xb8\x98\x68\x24\xc9\x1b\xf9\x6f\x58\x1b\x84\x7d\x47\x2e\x85\x60\x3d\x25\x90\x58\xa1\x0c\x92\xe2\xcd\x1d\xd2\x0b\xd2\x70\x7b\x30\xb6\x92\xcd\xe9\x8d\x8f\xcc\x7a\x44\xfd\x8c\x6b\x34\xc7\x1c\x90\x15\xcb\x8c\x15\xaa\x6c\xdf\x4f\x19\x79\x61\xfc\x53\x19\xa9\xde\xfc\x3c\x32\x1b\x2d\xeb\x26\xd6\xa2\x12\xce\xfd\x1f\x00\x00\xff\xff\xbb\x66\x02\x60\x6a\x06\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1642, mode: os.FileMode(420), modTime: time.Unix(1615367177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5f\x6f\xdb\x36\x10\x7f\xef\xa7\xb8\x11\xc6\x20\x65\x32\x85\xbd\x06\xc8\x43\x17\x67\x99\xb1\x6c\xce\x92\x14\x79\x58\x87\x81\xb1\x4e\x32\x51\x9a\x92\x49\x6a\x59\xa6\xf2\xbb\x0f\x24\xfd\x47\xae\x25\x39\x41\xb0\xa2\x03\x7a\x40\x00\x89\x3a\xde\xff\xfb\xdd\xc5\x4d\x03\x19\xe6\x5c\x22\x90\x05\x93\x99\x40\x95\xea\xfa\x41\xa1\x2e\x6b\x35\xc7\xb4\x40\x93\xaa\xb2\x36\x48\x60\x6c\xed\x1b\x00\x80\xa6\x01\xc5\x64\x81\x30\x42\x38\x3d\x83\x11\xbd\xc8\x0a\xd4\xdb\xcf\x81\x65\x0c\x3c\x07\x59\x1a\x18\x21\xbd\x7b\xaa\x90\xbe\x95\xb2\x34\xcc\xf0\x52\x6a\xfa\x53\x50\x74\x89\x92\xde\x7e\xe0\x15\xb4\x6e\x3a\x5a\xd0\x4b\x34\x11\x49\x1b\x9e\x35\x8d\x93\x33\xa2\xd3\x09\x9d\xea\xa9\x34\x60\xed\xe9\xfb\xf7\xd9\x77\x4d\x03\x28\x33\xb0\xd6\xa6\xce\x1c\xac\x04\x9b\x23\x44\x23\xa4\xbf\xb2\x25\xc2\x47\xd0\x92\x7d\xc0\x18\xc8\x9f\x04\xc8\x98\x80\xb5\x24\x81\x05\x6d\x1a\xd8\xb1\x54\x4c\xcf\x99\x00\x6b\xe3\x96\xdd\x5e\x6c\xcb\xd3\xcd\x6b\xeb\xf1\xcd\xf1\x90\x11\x18\x8e\xd5\x5e\xa8\x5e\x11\xa9\xa6\x49\x4f\xe0\x06\x59\x96\x5e\x71\x6d\xa0\xac\x50\x85\x8b\x50\x4a\x08\x36\x05\xa3\x34\x9c\xa4\x9f\xdc\xcd\x6b\x39\x8f\x16\x4e\xff\x28\x44\xc4\xda\xb5\xb6\x18\xba\xe3\x14\x3d\xc2\xc2\x98\x8a\xde\xa0\xae\x4a\xa9\xf1\x5e\x71\x83\x2a\x01\x05\x27\xeb\xf3\x55\x8d\xda\xc4\xd0\xec\x29\x6a\x15\xc4\x5e\x22\x0f\x98\x1c\xf1\x2c\x01\x54\xca\x05\x6b\x41\xdf\xdd\x5c\x5d\x33\xc5\x96\x53\x69\xa2\xc7\x04\x54\x02\x84\x67\x24\xee\x90\x0e\x28\x34\xbe\x48\xe6\xad\x51\x5c\x16\x47\xc5\xb6\xaa\x61\x4f\x64\xee\x25\x7e\x73\x06\x92\x8b\x0e\x7f\x1d\x29\x34\xb5\x92\x07\x9f\xec\x9b\x83\xa3\x55\x30\xed\x5c\x70\x94\x86\xb6\x33\x42\x7f\xab\x51\x3d\x45\x31\xbd\x5f\xa0\xc2\x68\xf7\xe9\x23\x88\xf2\x11\x95\x63\x99\x4e\x22\x9e\xc5\x71\x60\xed\xc9\x5c\x7c\xa8\x74\xdd\x5a\x48\xdf\x49\xbe\xaa\x7b\x83\xd7\x34\x60\x70\x59\x09\x66\x10\x88\x72\xa5\xb6\x7a\x20\x9b\x5a\xed\xbb\x84\xdb\x80\xaf\xe8\x4c\x8a\xa7\x48\xd1\xf3\x52\x1a\xfc\xdb\x44\xf1\x61\x9c\xbb\xd5\xa0\x52\xa5\x1a\xfb\x06\xe3\xb2\xd8\x53\xd9\x27\x61\x54\xa8\xb2\xae\xb4\xef\xb4\xe1\x66\x72\x3d\x73\x19\x98\x7b\x5c\xd8\xd5\x8c\x5e\xa0\xe2\x79\x4e\x7f\x61\x4a\x2f\x98\x88\xbe\xdd\x1c\xcc\x2a\x2f\xb7\x09\x82\x4e\xe1\xf7\x3f\xb4\x2f\xaa\xee\x72\x80\x56\x1b\x14\x83\xaa\xdb\xdc\x6b\xf4\x28\xbc\x4f\xe1\x9a\xb5\xa4\x69\x46\x85\x83\xb4\x81\x0a\x6d\x85\xc5\xf7\xc6\x10\x8f\x23\x12\x2a\xc7\x07\xad\x8d\xa1\x0e\x3a\x07\xfd\x19\x32\xc0\x26\x30\x95\x73\x51\x67\x78\xb1\xac\xcc\xd3\x1d\x2b\x4e\xc1\xa8\x1a\x6d\x02\x80\xdd\x85\xf0\x9c\xce\x02\x3f\x24\xae\xca\xa2\x40\x45\xef\xb9\x59\x5c\xb8\x5a\x89\x50\xa9\xd8\xbf\xfe\xc8\x51\x64\xd1\x81\x47\xd6\xd2\xd6\xd1\x74\xb2\x39\x25\x09\xf0\x2c\xa6\x41\x08\xd1\xa8\x38\x13\xfc\x1f\x5f\x34\xe0\xab\xb0\x03\x1b\x36\xa4\x50\x66\xa8\xe8\x54\x1a\x54\x92\x89\x5b\x54\x7f\xa1\x0a\x92\x02\xb4\x48\x2e\x86\x6e\x77\x42\x04\x74\xc3\xc4\x81\xdb\x3d\x7e\xb6\x32\x97\x80\x73\x34\xa6\x53\x99\x97\x43\x8c\x6b\x3f\xb0\x0b\x06\x5b\x6e\xce\x7e\x5e\x7b\x95\xbd\x18\x84\xd7\x70\x93\x95\xeb\xee\x6c\x37\xa6\x1b\x8a\xae\x2b\x27\x98\xb3\x5a\x98\x99\xca\x3c\xb2\xf5\x86\x8d\xe7\xa0\x1c\x90\x6f\xd1\xd1\xef\x0b\xa5\xbb\x46\x62\x38\x3b\x03\x42\x06\x2a\xc7\xd1\x8a\x7a\x25\xd1\x20\x13\xec\xf7\x60\xb0\x3c\x2b\x8f\xb6\xd2\x86\xd6\x60\xee\x2a\x7a\x05\xd1\xa8\x0c\x3a\x37\xd0\x1d\x03\xc9\x50\xcf\xdd\xaa\x30\x41\x3d\xdf\x85\xef\x6d\x78\xf1\xeb\x4d\xc8\x59\x49\x7d\xa6\x5d\x42\xe3\xe4\x59\x26\x1f\x43\x05\x47\xfd\x65\xd9\x9b\x41\x6f\xe1\x5e\x1a\x87\x40\x76\x9d\x4e\xb7\x9a\x7c\x4d\xe9\x17\x9b\x52\x6f\x54\xdf\x48\x1d\xc3\x08\xc5\x83\x8b\x12\xb2\x02\xd5\x55\xc9\xb2\x1f\x6a\x2e\x9c\xcf\x9b\x79\x4c\x5c\x7e\xc3\x08\x24\x40\x56\xc4\xe3\xb6\xfb\xeb\x05\x82\x30\x03\x9d\x5c\x6b\x3d\x24\x6d\x9e\x86\x6c\x49\x53\xb8\x66\x05\x97\xbe\xcc\x3a\x39\x2a\x56\x60\x02\xdc\xe0\x52\x5f\xa3\xba\xf6\x6f\xdb\xb5\xaf\xda\xde\xf5\x50\xe8\x50\xec\x75\xf3\xe7\xe5\xd0\xbd\xa2\x57\x7c\xc9\x4d\xd4\xb6\x30\xa6\xb3\x3c\xd7\x68\xa2\xc8\x59\x0f\x63\xf8\x3e\x86\x93\x3d\x1f\x3a\x36\x37\xf8\x74\x5f\xda\xfc\x17\x22\xb8\x36\xe9\xca\x35\xd0\x38\xe7\xc2\xa0\x3a\xbe\x35\xa1\x6e\xad\x6a\x6f\x85\x38\xbe\xa9\xbd\x76\x40\xaf\xc7\xac\x1f\xac\xe0\x8d\xe5\xb2\x80\x8c\x19\xf6\xc0\x34\x92\xd8\x65\xda\x94\xae\x27\xe1\x01\x8d\x41\x15\x66\xf0\x17\x33\x81\x5f\xb4\x67\xee\x7a\xe3\xeb\x9e\x19\xe8\xf3\xef\x99\xfa\x3f\xad\xe3\xff\xdf\xba\xc8\x96\x65\x2d\x0d\x49\x40\xa0\x8c\x50\xc7\x9f\x6d\x3b\x0c\xe8\xbe\x6f\xf5\xe1\xf7\xd6\x51\x7a\x02\x77\xb3\xc9\xec\x14\xce\x15\x3a\xa0\x7b\xd6\xef\x1b\x3b\x49\xdb\xa7\x7f\x03\x00\x00\xff\xff\x03\x12\x29\x96\xe4\x12\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 4836, mode: os.FileMode(420), modTime: time.Unix(1615367177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x6f\x6f\xdb\xb6\x13\x7e\x9f\x4f\x71\x3f\xc1\x28\xa4\xfc\x6c\x7a\xaf\x53\x14\x43\xdb\x74\xa9\xb1\xfe\x43\x93\xae\x2f\xda\xa2\xa5\xcd\x93\xc4\x46\x26\x55\x92\x72\x92\x69\xfa\xee\x03\xff\x58\x91\x6d\xda\xf5\x36\x6c\x40\xf5\x26\x31\x75\x77\x3c\xde\x73\xf7\xf0\x51\xdb\x02\xc3\x9c\x0b\x84\xa4\xa4\x82\x55\xa8\xa6\x4d\xcd\xa8\xc1\xa9\x92\x8d\xc1\x04\xba\xae\x24\x6f\xa8\x59\x94\x69\x32\x6d\x39\x6b\x5b\xe0\x39\x8c\xc8\xec\x9c\xcc\xf4\x4c\x18\xe8\xba\xb3\x8f\x1f\xd9\xff\xdb\x16\x50\x30\xe8\xba\x2e\x19\x43\x49\xde\xb9\x18\x59\xbf\x7a\x72\xb2\x77\x23\xbb\xc5\x09\x00\xc0\x74\x0a\xda\xa8\x66\x61\xc0\x48\x98\x73\xc1\xc0\x94\x08\xb5\xd4\x06\xe6\x92\xdd\x81\x91\xc4\xd9\x99\xbb\x1a\xa1\x6d\x61\x44\x5e\xd1\x25\x42\xd7\xf9\xcd\xde\xe2\xb7\x06\xb5\x59\xc7\x68\x9d\xad\x7d\xda\x76\x7a\x0a\x8f\x19\x03\x5a\x55\x90\x73\xac\x98\x06\x53\x52\x03\x54\x21\x08\x69\x00\x6f\x17\x55\xc3\x90\x11\x38\x9d\x86\x5c\xbc\x1f\x28\x2a\x0a\x84\x51\x0e\x67\x8f\x60\x44\x7e\xf1\xbe\x93\x81\x8d\xb7\x9b\xd8\x9a\xd8\x48\xa3\x9c\xcc\x96\xcb\xc6\xd0\x79\x85\xb0\x65\xb6\x36\x1d\x51\x17\x2d\x27\x8f\x85\x90\x86\x1a\x2e\x85\xf6\xa1\x2f\x50\xec\x73\x0a\xf1\x53\x2a\x98\x0d\x30\xa2\xe4\xf2\x9a\xd7\xa1\xca\x31\xa7\x70\x80\x51\x4e\x2e\x5d\x3d\xdc\x06\xd0\x75\x70\xea\x57\xaf\xee\x6a\xb4\xaf\xb8\x28\xec\xea\x97\xaf\x5a\x8a\xb3\xc4\xa2\x2b\x18\xde\x42\xaa\xeb\x8a\x1b\x48\x0d\x2d\x5e\x48\x79\xdd\xd4\xf7\x91\xae\x68\x01\x89\x35\x4f\x32\x48\xc6\x49\x06\x3f\x41\xd7\x25\xa1\x2f\x68\x40\xfe\x37\x5a\x71\xe6\xce\x66\xcd\xbb\xce\xe5\xb2\xef\x65\xdf\x25\x5f\xa2\x67\x0f\x1d\x74\xc4\xab\xf5\xd2\x64\x63\x6d\x80\x3e\xb2\x02\x8f\x05\x7f\xb2\x46\x1f\x3d\xfa\xcf\x9c\x6f\x0c\xfc\x80\x28\x1e\x85\x68\x40\xd3\x02\x99\xba\x96\x41\x8f\xc5\xd0\xf7\xb9\x1f\x90\x0b\x14\x0e\xe6\xcc\x5b\xc6\xc1\x8f\xa2\x6f\xab\x8d\xdb\xc8\x07\x88\x90\xbc\x13\xfc\x5b\x63\xfb\xd3\xf6\x02\x56\xda\xfe\xfb\xe1\x53\x8f\x82\x77\x76\x49\xcd\xce\xff\x46\xa3\xe0\x7f\xdd\x28\x71\xd8\x37\xba\xa3\x3b\x59\x53\xcc\x55\xc9\x35\xe4\x8d\x58\xd8\xb0\xe0\x29\x48\x03\x85\x82\xaf\x50\x6c\xd0\x0a\x2c\x25\xc3\xca\x21\xa5\xe9\xca\xf5\x0d\xc2\xa2\xb4\x4d\xa1\x81\x0b\xf7\x93\x51\x43\xe7\x54\xa3\x67\x26\x1b\x36\x2d\x37\x82\x04\x28\x33\xf0\x27\x4a\x6f\xa0\x34\xa6\x26\x6f\x51\xd7\x52\x68\x7c\xaf\xb8\x41\x35\x06\x05\xa7\x61\xdd\x91\x58\xb6\x41\x5f\x93\x1d\xca\xdd\x38\x3e\x67\x63\x40\xa5\x6c\x0f\x96\xe4\xdd\xdb\x17\x6f\xa8\xa2\xcb\x99\x30\xe9\xcd\x18\xd4\x18\x12\xce\x92\x6c\x48\x6a\x01\xf1\xef\xc7\xf0\xa8\xef\x0d\xb3\x55\x71\x9e\xbb\x08\xff\x7b\x04\x82\x57\x83\xfc\xed\xa3\xd0\x34\x4a\xf4\x4b\x01\x8d\x7e\x3c\x17\x54\x3b\xd2\x2f\xe4\xc4\x91\xbb\x65\x3b\x44\x86\x6c\x77\x26\xd7\x95\x78\x4e\xf5\x85\xb4\xbd\xb9\x7d\x92\xcf\x9c\xd9\x53\x38\x0c\x42\xfb\x42\xd7\xa5\x9c\xed\x24\xdf\x0d\xd2\x98\x4e\xe1\x02\xcd\xfd\x85\x63\x71\x25\xfd\xdb\xfb\x88\xb1\x1b\xa7\xed\xac\xbb\x91\x4c\xc2\xc4\xb2\x8c\xbc\x81\x5c\xaa\xe5\xa4\x51\xd5\x04\xc5\x42\x32\x64\xd3\xdb\x65\x35\xad\x95\x34\x72\xde\xe4\x5b\xc1\x43\xdd\xce\x1e\x81\x9d\x15\xf2\x0a\x6f\xce\xd1\x3a\xa9\x54\x91\x27\x92\xdd\x65\xc4\xff\x4e\x1f\xb0\xec\xe1\xfe\x12\x97\xe4\x85\x2c\x0a\x54\xe4\x3d\x37\xe5\x33\xa5\xa4\x4a\x51\xa9\x8c\xf8\x7f\x13\xb4\x7f\x80\xd9\x48\x76\x92\xfd\x58\x6e\x61\x24\x18\x2a\xf2\x84\xb2\x70\xae\x1e\x78\xb1\xb2\x73\xe8\x7c\xec\xed\xca\x45\xb1\xe3\xba\x0f\xde\xe9\x14\xc2\x10\x63\x3f\x2f\xb1\xa3\x97\x24\x98\x49\x15\xd8\x23\x3d\x78\x5a\xef\x39\x06\x79\x6d\xbd\x51\x29\x92\x9e\xae\xfa\x08\x33\x9f\xf1\x3d\x7d\xb8\x22\x64\x0f\xad\x79\xbb\x43\x96\x47\x55\x2e\x04\xb7\xb5\x53\x41\x68\xd8\xb3\x6c\x15\x62\x50\xc7\x99\x30\xa8\x04\xad\x2e\x51\xad\x50\xf9\x58\xbe\xa0\x82\x57\x31\xaf\x8d\x12\x6e\x95\xf1\x50\x9a\x33\x91\xcb\x34\x59\xf5\x67\x85\x9c\xf2\x0a\xd9\x91\xe8\xda\x10\xc7\x63\x79\x49\x57\x31\x1c\xe7\x1e\xc2\xa7\x15\x47\x61\xc8\x70\x50\x02\x91\xbf\x16\x38\x3b\x4f\x07\xda\x71\x38\xbe\x9f\x9d\xaa\x0c\xac\xe4\xff\x77\xd3\x99\xc5\x2e\xe3\x1f\x54\x8a\xf1\x1c\x18\x89\xea\xb1\x68\x7b\x0f\x9f\x39\xb9\x44\x13\x73\x4d\x4f\xe3\x21\x33\x4f\xaa\x81\x90\x6e\x9c\xd8\x99\xcb\xc6\x80\xae\xf8\x02\x37\x14\x70\x69\xf1\x5c\x34\xda\xc8\x25\x2c\xa9\xd2\x25\xad\x2a\x54\xfa\xe7\x4d\xde\x1d\x3e\xfb\x75\x58\x0c\x8b\x1d\x7d\x16\x53\x6c\x3f\xae\xcc\xea\x51\xdd\xd1\x5a\x07\x51\x5d\xdf\x63\x03\x25\x76\x00\x7d\x1f\xff\x65\xe3\xb3\xbe\x44\x33\x80\x7e\x7b\xdf\x5d\x5e\xe9\x91\x88\x5c\xfa\x87\xf6\xb1\x8a\xb9\xeb\xd2\xf8\x36\x84\x10\xdf\x64\xf7\xf7\x9e\xc2\xa5\x5c\x21\xf0\xed\x6f\x2b\x2f\xab\x82\x5a\xaa\xed\x77\xe4\xc4\x72\xc7\xde\xfe\x3a\x20\xf8\xe3\xed\x35\x89\xf6\xd7\x0e\x69\x71\xb1\xa5\xd5\xec\x83\xbd\xe8\x99\x13\x6b\x95\x2a\xf2\x54\x0a\x83\xb7\x26\xcd\xb2\xa3\x84\xcd\x51\x77\x87\xa6\x2b\x7b\x6f\x0c\x79\x31\xce\xce\x7f\xe1\xce\x38\x4c\xd3\xa8\x38\xad\xf8\xef\x31\xae\x76\x93\x54\x28\xd9\xd4\xda\x0f\xdc\x9e\x89\xf0\x7d\x7f\xe1\x0d\x07\x35\xfe\xda\xd7\x4c\x97\xa8\x78\x9e\x93\x97\x9e\x38\xd2\x07\xeb\x85\xd7\xb5\x8b\xd6\x7a\xe7\x33\xf8\xf0\xc9\xab\x86\x36\x36\xa1\xeb\x5c\xf6\xb0\x6d\x20\x87\xc2\xe5\xea\x4d\xdd\x47\xc4\xa8\xe8\xba\x64\x1c\x91\xa1\x30\x10\xb9\xdb\xeb\xf6\x49\xee\x61\xf8\x03\xb4\xa0\xd7\x0e\x8e\xef\xb6\x56\x37\x86\x99\x70\x5f\x8a\xcf\x96\xb5\xb9\xbb\xa2\xc5\x19\x18\xd5\x60\x37\x06\xc0\x7f\xd6\x2b\xf6\xa7\x9b\xac\x34\xd9\xb8\x3a\xd7\x12\x76\xdd\x32\x63\xb0\x1f\x64\x7d\x6f\xe9\x00\xb2\xbf\xf4\x5d\xa7\xfd\x8b\x5d\xb5\x91\xfc\x4e\xb6\x83\x4a\xae\xb3\xf4\xb2\x24\x66\x12\xf2\xda\x90\x28\x21\xd5\xd7\xbf\x86\xcc\xbe\x66\xe1\xb3\xad\x1f\xe9\x3f\x03\x00\x00\xff\xff\x87\xbd\x35\x97\xa9\x12\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 4777, mode: os.FileMode(420), modTime: time.Unix(1615472963, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xcb\x6e\xdb\x3a\x10\xdd\xe7\x2b\xce\x15\xbc\x90\x02\x5b\xde\x07\x08\x2e\x0a\xe4\x51\x03\x41\x16\x75\x81\xae\x69\x71\x44\x31\x55\x86\xf2\x68\x94\x20\x20\xf4\xef\x85\x24\xc7\x71\xec\xb6\xe8\xc6\x5a\x69\x38\x87\xe7\xc1\x21\x63\x84\xa5\xd2\x33\x21\x11\x32\x76\xb9\xdd\x24\xe8\xfb\x0b\x00\x88\x71\x79\x89\x55\x89\xc0\x84\x50\x42\x2b\x82\xf3\x2f\xc4\xa8\x0c\xdb\x9a\x04\x4e\x42\xd7\xb4\xf0\x2d\x5a\x52\x04\x1e\x21\x64\x1d\x81\x8c\x23\xc1\x53\xf0\x0c\xaf\xf9\xe5\xf2\x90\x51\x83\x0d\x58\x80\xa9\x55\xb2\x3b\x64\x1d\x8c\xf5\xec\xfe\xc7\x01\x14\x62\xd8\x11\x66\x84\xab\x6b\xcc\xf2\x5b\xeb\xa8\xc5\x62\xd7\xfe\x0c\x71\x13\xe4\x0b\x73\x50\xa3\x3e\x70\x9b\x7f\x9d\x3c\xde\x13\xe7\xdf\xc8\xd8\xfb\xc9\xea\xe1\xf6\x23\x95\x91\xa3\x6d\x6a\xaf\x48\xd5\xb8\x87\x10\x7e\x76\x0d\x66\x94\xaf\x55\xba\x42\xbf\x1b\x87\x64\x0a\x9c\x64\x48\xe6\xc9\x09\xd7\x8e\xcf\x97\xa0\xed\x60\x69\xa0\xec\xfb\x6d\xfe\xc3\x6b\x15\x23\x1a\xd3\x16\xa6\x1e\x08\x1f\xcd\x33\xa1\xef\xd3\x2c\x46\x10\x5b\x9c\x7a\x3a\x5a\xfd\xbc\xf2\x51\x7d\xfc\x5d\x1c\x8f\x91\x44\x82\x2c\xc6\x41\x79\x76\xfb\x91\x0e\xe6\x44\xf0\xdf\x35\xd8\xd7\x88\x7b\x85\xf6\xd5\x6b\x51\x0d\xbd\x3c\xd5\xb7\x86\xb2\x83\xde\xf0\x15\xa6\x25\x5c\x12\x6b\xfe\x18\xf4\x2e\x74\x6c\x6f\x07\x81\xab\x93\x03\xa8\xf2\x87\xe0\x1c\xc9\x98\x7a\xc4\xa4\x24\x92\x8d\xe5\x9d\xa7\xda\xa6\x49\x8c\x98\xbd\x9f\x41\x3e\x16\xab\x9b\xf7\x3a\x99\xc3\xdb\x2c\xbf\xa1\x4d\xe7\xd2\xe4\x29\x6c\xc0\x41\x51\x0e\x82\x49\x76\x22\x26\xc4\x96\x64\x6f\x29\x7d\x9d\x43\xe6\x43\x88\xdf\x41\xb5\x13\xfe\x73\xa6\xb5\x67\xd7\xd5\x46\xce\x1a\x6b\xda\x98\xd8\xae\xa9\x7d\x61\x94\x40\xac\xf2\x86\x32\x08\xfc\x5f\xf2\xad\x58\x49\xd8\xd4\x6b\x92\x17\x9a\x1c\xee\xa2\xb2\xaf\xff\x29\xaa\xa5\xd2\x74\xb5\x9e\x39\xd7\x78\xe7\x50\x92\x16\x95\x67\x07\x0e\x96\x50\x4a\x78\x86\xdd\x9c\x2b\xdc\x74\xab\x0f\x5f\xc2\xaf\x00\x00\x00\xff\xff\x5b\x29\x3b\x9a\xd0\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1232, mode: os.FileMode(420), modTime: time.Unix(1617786930, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xcd\x6d\xc3\x30\x10\x44\xe1\xbb\xaa\x18\xa8\x00\xb1\x8c\x14\x90\x34\x40\x85\xc3\x70\x21\xfe\x81\xbb\x08\x6c\x10\xec\xdd\x17\xd9\xe7\xf7\xf0\xcd\x89\xc0\x28\x95\xd8\x4b\x0b\xcc\x4e\x6d\x48\xfd\xe3\xd8\xb1\xd6\x06\x00\xce\xe1\x8b\x86\x21\x01\x2d\xc2\x12\x11\x8b\x1d\xdf\xf7\x06\x29\x3d\xb3\xb0\x9a\x37\x69\x15\x2a\xf5\x97\x10\xc3\x39\xe8\x2f\x45\x16\xe9\x4e\x13\x87\xc4\x78\xbc\xbd\x9f\x44\x25\xb2\x54\x2a\x92\xff\x27\xac\xe1\x24\x12\x07\x6f\xc0\x58\x7a\xf6\x46\x67\x7c\x18\x42\xa3\x42\x2f\xe9\x60\xe9\xf6\xfc\x54\x3d\xb6\x39\xc1\x1a\xb0\xd6\x2b\x00\x00\xff\xff\x9c\x86\xf3\x32\xc9\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 201, mode: os.FileMode(420), modTime: time.Unix(1615798596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/date_utc_converter.tpl":    flutterDate_utc_converterTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_delete.tpl":        handlerHandler_deleteTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":             &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl":    &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"date_utc_converter.tpl": &bintree{flutterDate_utc_converterTpl, map[string]*bintree{}},
		"model.tpl":              &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_delete.tpl":        &bintree{handlerHandler_deleteTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
