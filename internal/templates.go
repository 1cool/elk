// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/date_utc_converter.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdd\x6e\xdc\xb6\x12\xbe\xcf\x53\xcc\x59\x2c\xb0\x52\x60\x6b\xcf\xb5\x9d\x75\x72\x8e\x53\xb7\x29\x92\x22\xa8\xed\xab\x20\x30\x68\x71\xb4\x66\x2d\x91\x32\x49\x25\xd9\x2a\x7a\xf7\x82\xa4\xa4\xa5\x7e\xbd\x4d\x90\xb4\x05\xba\x37\x5e\x53\xa3\xf9\xf9\x66\xe6\xe3\xcc\x96\x25\x50\x4c\x18\x47\x58\xc4\x29\x43\xae\x17\x50\x55\x4f\x00\x00\xca\x12\x34\x66\x79\x4a\x34\xc2\xe2\x0e\x09\x45\xb9\x80\xe3\xfa\x21\xcb\x72\x21\x35\xac\x72\x12\xdf\x93\x2d\x9e\x50\x26\xd6\x94\x89\x88\x12\xa9\x57\xa7\xa3\x22\x49\x5a\x68\x8d\x72\xfd\x91\xd1\x2d\x6a\x35\x27\xfa\x9b\x12\xfc\x86\x70\x2e\x34\xd1\x4c\xf0\x75\xef\xff\xb9\x57\x73\x29\x3e\x30\x8a\x72\xdd\x7c\x69\x84\x3b\xd2\x51\xb4\xa6\x44\xe3\x4d\xa1\xe3\x9b\x58\xf0\x0f\x28\x75\x4f\xb2\x2c\xd7\x4f\xe1\x95\x13\xd7\x77\x08\x71\xa1\xb4\xc8\xc0\x88\x80\xde\xe5\xa8\x22\x78\xba\xde\x23\x25\x09\xdf\x22\x2c\xa3\xab\x5d\x8e\x6f\x48\x9e\x33\xbe\x55\x2d\x58\xbe\xe5\xb2\x84\xa8\x56\x5b\x55\x75\x0c\x4e\xc7\x31\xb0\x04\xa2\xf3\xc6\x1b\xa8\x2a\xff\x1d\xff\x7c\x75\x5a\x96\x80\x9c\xb6\x06\xea\x7f\xab\x6a\xdc\x77\x2e\x28\x02\xd3\x0a\xd3\x04\x08\xa7\x40\xd2\x14\x44\x62\x1f\x21\xdd\xa2\x02\x4d\xe4\x16\xb5\x95\x53\xb0\x06\x57\x08\x7e\x84\x1e\x6e\x99\xa0\x98\xae\xcb\x12\x96\xd1\x2f\x24\x43\xf8\x0c\x8a\x93\x7b\x84\xaa\xf2\xd3\xb2\x87\x04\xe1\x64\x03\xcb\xe8\x07\x6b\x68\x0c\x91\x8e\x4e\xb4\x08\xce\x69\xf6\xc0\x12\x12\x02\x2e\x74\xfb\xd6\xff\xda\x0a\x51\xd1\x4f\x84\xd3\x14\xe5\x8f\xc8\xc3\x43\x84\xa2\xcb\x7b\x96\x87\xe0\xb9\xd7\x73\xd1\x61\xf2\xa7\x7c\x7c\x34\x45\x3f\x2b\xc1\x2f\x51\x32\x92\xb2\xdf\xc9\x6d\x8a\x90\x17\x5a\xd9\xb4\x6c\x91\xa3\x24\x1a\x29\xc4\x36\x77\x1c\xf4\x1d\x53\x90\xb0\x14\xbd\xac\xe4\xa4\xae\x8e\x61\x2a\xb6\xc3\x62\x7e\x63\x1e\x19\xe5\x85\xac\xd3\xcf\x94\x2b\x0d\x12\xc7\xa8\x14\x33\x1e\x68\x01\x42\xdf\xa1\x74\x85\x6e\xec\xf9\x65\x10\x0b\xae\x34\x8c\x19\xbc\x96\x29\x6c\xac\x2f\x81\xc4\x3c\x25\x31\x42\xd0\x15\x0a\x61\x71\xb3\x80\xc5\xf1\x22\x84\xcf\x90\xa7\x85\x24\xa9\xeb\x80\xbd\x87\x57\xa6\xcf\x2c\xce\x90\x08\x09\x04\x6c\x5d\x44\x70\x2e\xb8\x2a\x32\xec\x43\x43\x72\xe6\xfb\x96\x12\xa5\x3c\xdf\xaa\xea\xdc\xa9\x2a\xfd\x94\xf4\x1e\x06\xe5\x0b\x89\x0f\x05\x93\x48\x2d\x1e\x11\x65\xa2\x0a\xe1\x04\x88\x52\x28\x75\x40\x99\x80\xff\x6c\x80\x17\x69\x1a\xd6\x9e\x9a\x4f\xc2\x38\x49\xe1\x25\x13\x40\x99\xf0\xce\x6d\x14\x17\xcc\xb4\x18\x28\xc6\xb7\x69\xdd\x7b\xb7\x3b\x60\xd4\xf3\xd5\x7c\x2e\x0a\x5d\x48\x7c\xe6\xfb\x74\x66\x14\xd3\xc0\x1e\xbd\x7a\x69\xab\x0c\x3e\xdb\x4c\xd8\xaf\x55\x05\x8c\x86\x40\xd4\x8e\xc7\x5e\x54\x7b\x87\x24\x6c\x80\x7c\x24\x4c\x1b\xb7\xa2\x2d\xea\x60\xb5\x5e\x4e\x64\x6b\xbd\x64\x74\x15\x9e\x76\xb4\x48\xd4\x85\xe4\x1d\x98\xa2\x44\x8a\xcc\xd4\x69\x60\xe8\x51\x13\xef\x8d\xaa\x17\xf7\x6b\xa6\x34\x64\x45\xaa\x59\x5e\xc7\x6d\x0b\x56\xa3\x01\xf7\x76\x07\x0f\x05\xca\x9d\xa9\x59\x92\xa9\x71\x2c\x8c\x86\x2e\x20\x67\x90\x32\xa5\x83\x6e\xb0\x8c\x6b\xc8\xc9\x16\x8f\x06\xa7\x4c\x63\xa6\xde\xa2\x7c\x3b\x78\x6a\x18\xa3\x26\xa4\xc4\x11\xd2\x05\xc3\x94\xaa\x7e\xc7\x37\xb2\x4b\x73\xe5\x58\x2f\x4e\x36\xc0\x38\xc5\x4f\x10\xa8\x3c\x65\x1a\x02\x4d\xb6\xaf\x85\xb8\x2f\x72\x58\x26\xd1\xa5\x96\x45\xac\xaf\xc8\x16\x16\xe6\x8d\x45\x08\x8b\xa3\x45\x08\xff\x1d\xd7\x6b\xde\x18\xc9\xaa\x79\xd0\xda\xab\xaa\xbe\xe7\x0d\x71\xb4\xc0\xcf\xd5\x80\xc3\x17\x36\x4d\xaf\x56\x5e\x79\x5a\x98\x12\x08\x0c\x78\x6d\x59\xf7\xb4\x80\xe3\x15\x92\xa9\x77\x2b\x23\xb7\x7a\x0f\x1b\x8b\x76\xb7\x54\xaa\xa1\x56\x1f\xfc\x43\xb4\xfb\xf2\xd6\x8a\x7f\x30\x6b\x6d\x7f\xb9\xfc\x65\xb9\x34\x01\xf7\xd2\x36\x17\xb3\x1f\x77\xef\x35\x1b\x7a\xef\xec\x74\xa0\xa0\x9a\xa8\x89\xaf\x64\x81\x55\x38\x52\x1e\xae\xd3\x61\x33\x1d\x4e\x4d\x14\xef\xde\xcf\xa6\xa9\x96\x6a\xf4\x11\x65\x29\x22\x8c\x32\x92\x07\x01\x0b\x61\x73\x36\x41\x35\x2c\x0c\x23\x2d\x8c\x70\x30\xc3\x37\xe7\x12\xcd\x68\x4a\x80\xe3\x47\x47\xb3\x82\xdb\x1b\x42\x62\x26\x34\x1e\x42\xb7\xb1\x55\x11\x74\xee\x05\x7b\xf4\x2b\x3e\x14\xa8\x34\x48\x7c\x38\x9c\x70\x73\xa1\x66\xb1\x3e\x02\x83\xc3\x89\x51\x1a\x69\x61\x23\x0d\xc7\x19\x38\x98\xa5\xe0\x19\x4c\xae\x73\x5a\x63\xf2\x45\x78\x14\xf6\xf5\x8e\x75\xa7\xf1\xcb\xf0\x20\x3a\xbe\x9b\xbd\x82\x4a\x03\x45\x73\xdd\xd5\x06\xab\xef\x81\xd3\x05\xea\xf8\xae\x9d\x8d\x95\x1b\x83\x7b\x08\x8d\x8f\xb0\xd5\xa0\x13\xbf\xc7\x20\xda\xcd\x18\x4b\x8c\x92\x6b\xce\x1e\x0a\x13\x78\x7f\x26\xb5\x27\x98\x2a\xf3\xad\xbd\x52\xbb\x02\x67\x2d\x83\xb8\x1e\x6c\xa7\xd9\x98\x64\x68\xe6\xb2\x0e\xb2\x80\xe3\x49\x9f\x4b\xfe\x63\xd3\x47\x89\x83\xc4\x3b\xe9\xf1\xe9\xba\xe6\xaa\x31\xeb\x7d\x40\x8e\x47\xb0\x1b\xab\x9b\x2e\x22\x73\xd5\xd3\xb3\x66\xa1\x3d\xc4\xca\x23\xc4\x37\xe5\xc0\x38\xfd\xf5\x9d\xf0\x76\x0b\xff\x33\x75\x51\x0c\x4f\xba\x1d\x51\x6f\x07\xfe\x4a\xd0\xec\x04\xb7\x3b\xdb\x29\x76\x23\x68\xb6\x6a\xa8\xf7\xed\x5e\xcf\x28\x53\xd0\xf1\xd8\x14\x2e\x92\xe0\xff\x05\x4b\xe9\xb9\xe0\x1a\x3f\x69\x33\x9e\x98\xbf\x16\x8c\xb7\xcd\xaa\x2e\x92\x67\xc3\x57\xcf\x82\x5a\xf6\xc8\x0e\x83\xc8\x4f\x20\x21\xa9\xc2\x1a\x9b\xea\x49\x6f\x83\xc8\x50\x29\x33\x82\x14\xca\x0c\xf5\xa2\x26\xf9\xfa\x9e\xb0\x1b\xc5\x24\x31\x1a\xe3\x34\x89\x4d\xbb\x9b\x68\xeb\xb1\xc2\x6d\xf5\xb0\x30\x9d\xe9\xae\x87\xf6\x37\x92\x17\xfd\x15\x2e\x70\xd6\x2e\x48\xac\x85\xdc\x35\x9e\x3a\xd9\x97\x44\xe3\xb5\x8e\xdb\x4d\x3e\x08\xa7\x16\x97\xce\x1d\x34\xb1\xbf\xf8\x32\xbd\x01\x79\xcf\x5c\x26\x98\xb1\x2a\xb1\xbb\x4e\x59\x42\x34\x37\x72\x1e\x77\x66\xce\xce\x9a\x33\xe1\x87\xad\x61\xff\xe9\x80\x46\x4e\x26\x1c\x65\x47\xcd\x30\x37\xe5\xb2\x9b\x9e\x1b\x55\x1b\xc0\x68\x74\xd8\x33\x54\x90\x44\xaf\x94\x21\x6b\xa8\x2a\x4b\xec\xcf\xa3\x99\x86\xe9\xe8\x3d\x44\xe5\xf3\xa1\xe1\xae\xa4\x91\x3b\x84\x8c\x9c\x65\x2b\x6d\x89\x60\x4f\x85\x93\x06\x1e\xa5\x1e\x4b\x31\x68\xbb\xca\x11\xec\xb8\x81\xf0\x79\xcb\x30\xd3\xb6\xa6\x01\x9b\x7e\x64\x31\x30\xb7\x5c\x80\x0f\xb0\x64\x10\x50\x8c\x21\x48\x91\xdb\xc4\x86\xa1\xb9\xd9\x8e\x86\xac\x34\x65\xb3\x5b\x74\x33\x45\xed\x2e\x81\xce\xaf\x64\xfd\x5f\xcd\x26\xfc\x36\x62\xde\x22\x16\x0d\x46\xf0\x11\xc6\x7c\x43\xf2\x67\x97\x5a\x32\xbe\x3d\x02\xba\xe3\x24\x63\xf1\x19\x34\xa3\x8a\xc1\xfe\x66\x39\xd9\x23\x57\x4e\xcc\x74\xe0\x9e\xc1\x60\x8e\xc0\x8a\x66\xa8\x3b\x84\xbc\x8a\x19\xf2\x72\xb3\xdc\x37\x26\xaf\xee\xc0\x38\x4e\x5e\x1d\x99\x1e\x79\x35\xd4\xe4\x8f\x06\x03\x7a\x6a\x2b\xa1\xf8\xc6\xf4\xd6\xf1\xf4\x0b\xe8\xcd\x8f\xc2\x92\x56\xef\xcc\xd5\x6d\xdd\x1f\xc5\x5c\x73\x8c\x31\xe5\x78\xf4\xff\x32\xe5\x3f\x9e\x29\x8b\xaf\x64\xca\xa9\xdf\x0f\x7b\xd5\x77\x3a\xca\xae\xc3\xaa\xfa\x5b\xb3\x6b\xa7\x45\xc7\xd8\x75\x6f\xe2\x8f\x00\x00\x00\xff\xff\xea\x18\x8a\xe8\xed\x1a\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 6893, mode: os.FileMode(420), modTime: time.Unix(1606894067, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4f\x6b\xdb\x4e\x10\xbd\xe7\x53\xbc\x5f\x08\xc4\x0a\x8e\x7c\x57\x7e\x09\x69\x53\x68\x4b\x69\x28\xf8\x90\x43\x29\x66\xab\x1d\xdb\x83\xd7\xbb\xea\xee\xc8\x89\x51\xf5\xdd\x8b\xfe\x58\x96\xec\x60\xd2\xee\x45\xec\xcc\xbc\xb7\xf3\x66\x9e\x8a\x02\x9a\xe6\x6c\x09\xe7\xa9\x61\xb2\x32\xc9\xbc\xdb\xb0\x26\x7f\x8e\xb2\x3c\x03\x80\xa2\x80\xd0\x3a\x33\x4a\x08\xe7\x4b\x52\x75\xee\xba\x4d\xf2\x3a\x73\x5e\x70\x99\xa9\x74\xa5\x16\x94\x68\x76\x13\xcd\x2e\xd6\xca\xcb\xe5\xcd\xab\x25\x73\x93\x8b\x90\x9f\x3c\xb3\x5e\x90\x84\x53\xa5\xbb\x5e\xba\xa6\xde\x54\x1c\xd8\x2e\x0c\xcd\xd2\x25\x1b\x3d\x6b\x5e\xd9\xe1\x5a\x41\x93\x2b\x7c\x6e\xd0\xb4\x21\xbf\x85\x75\x9a\x70\x35\xd9\x0b\xf6\xca\x2e\x08\x17\x16\xc9\x2d\x2e\xe2\x47\xa7\x29\x74\x92\x9b\x92\x6b\xf0\x1c\xd6\x09\x2e\x6c\xfc\xce\x5a\x27\x4a\xd8\xd9\x10\x7f\x52\x56\x1b\xf2\x1f\xc9\xc6\xd3\x15\x67\xe8\x81\xfa\x4d\x17\x45\x05\x7c\x54\x6b\xc2\x6f\x04\xab\x56\x84\xb2\xec\xab\x6b\x1b\x21\xab\xbb\x87\x7b\xd7\xbd\x8e\x6f\x8d\x6a\xc8\x92\xd0\x6c\x30\x40\xbb\x67\x5b\x07\x1a\xf1\x10\x4f\x14\xef\xf5\xa5\x46\x85\x80\x87\xba\xb8\x85\x7b\xd0\x8b\x90\xd5\x01\xd3\x7a\x78\x0f\xd5\xec\xa6\xa2\x84\x0c\x85\xf0\xd4\xd0\x14\x5d\x63\x43\xec\xa8\x18\x48\xfc\x42\x5b\xac\x68\x3b\x1e\x04\xef\x3d\xfd\xca\xd9\x93\x86\x2c\x39\xc4\x9a\xdd\x30\x5f\x47\xeb\x8d\xed\xe3\x65\x84\x04\x2a\x04\xf2\x32\xd2\xec\xf0\xdf\x2d\x6c\x6e\x4c\x34\x46\xc8\x33\xf2\xa3\x15\x6d\x93\xfa\x25\xd4\xc0\xa4\xf9\x44\xed\x96\xab\x33\x67\xab\x0c\x3e\xb0\x83\x66\x77\x73\x10\x6e\x55\xd5\xa0\x1e\xe6\xde\x6d\xc8\x7b\xd6\xd4\x45\xda\xc2\x9f\x39\x1b\xfd\xc4\xb2\xac\x87\x33\x7a\x5f\x5d\x1f\x9c\x15\x7a\x11\xa4\xcd\x77\x3c\x20\x8d\x30\x1c\x8c\x27\xc9\xbd\xc5\xd7\xdc\x08\x77\xb3\x1b\x54\x54\x67\x67\xe3\x90\xe0\xfb\x51\xf2\x8d\xf6\x3c\x86\xfc\xa3\x5d\x0f\xcf\xae\xed\xff\x7b\xfe\x2d\xcb\xc6\x0e\x77\xc7\x5a\x0e\x4f\xea\x49\x09\x25\x18\xcd\x22\xdc\xde\xe1\x15\x92\x6a\xd1\x49\xb5\xad\x68\x7c\x92\xed\x44\xfa\xe0\xaf\xf9\x8b\xf4\x8f\x63\xd2\xbe\xb3\x86\xd9\x68\xef\xa7\x86\xa9\x3c\x6b\xa9\xcb\xf2\x4f\x00\x00\x00\xff\xff\xe4\x64\xed\x6d\x56\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1366, mode: os.FileMode(420), modTime: time.Unix(1605565331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterDate_utc_converterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xc3\x30\x10\x86\xf7\x3c\xc5\xaf\x2e\x4d\x24\x14\x60\x41\x28\x90\x16\x09\x16\x58\xa1\x33\x32\xc9\xb5\x72\x49\xee\x22\xfb\xda\x25\xf2\xbb\x23\x3b\x6d\x24\x8a\x84\x17\x9f\xcf\xf7\x7f\x9f\x3d\x8e\x68\x69\x6b\x99\xb0\x68\x8d\xd2\x46\x9b\x67\xe1\x23\x39\x25\xb7\x40\x08\x19\x00\xd8\x7e\x10\xa7\x58\xb6\xc6\x69\x75\xb0\xcb\x87\xec\x57\x7b\x30\xcd\xb7\xd9\x51\xb5\xf7\xc2\x9f\x86\x59\xd4\xa8\x15\xbe\xbe\x38\x97\x31\x7e\xce\x36\x9d\xf1\x1e\x2f\x17\xc6\x88\xec\xa8\x27\x56\x8f\x37\x2f\x3c\x5f\x3c\xc6\xc9\x0f\xdb\xd3\x15\xde\xd5\x59\xde\xad\x30\x26\x4e\x62\x09\x7b\xfd\xc3\xca\x8b\x93\x2a\xae\x27\x39\x92\x73\xb6\xa5\xb9\x73\x06\x62\xeb\xa4\x8f\xae\x7c\x02\x23\xbe\xba\x40\xbd\x4a\x05\xea\x1a\x7c\xe8\x3a\xac\xa7\xad\x9a\x73\xe5\x60\x9c\xa7\x3c\x4d\xff\x2b\x3a\x61\x55\x92\x64\xd6\xca\xd7\x9e\x1a\x4d\xa2\xa9\x5c\x97\x2a\x1b\x6d\xf2\x22\x16\xaf\x5e\xee\xef\x6e\x6e\xa7\x6c\xfc\x49\x24\x85\x6c\x1c\x41\xdc\x22\x84\x9f\x00\x00\x00\xff\xff\x00\x01\xc1\x3b\xb6\x01\x00\x00")

func flutterDate_utc_converterTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterDate_utc_converterTpl,
		"flutter/date_utc_converter.tpl",
	)
}

func flutterDate_utc_converterTpl() (*asset, error) {
	bytes, err := flutterDate_utc_converterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/date_utc_converter.tpl", size: 438, mode: os.FileMode(420), modTime: time.Unix(1606432038, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x5d\x4f\xe3\x3a\x10\x7d\xe7\x57\x8c\xaa\x8a\x16\x74\x71\xdf\x81\x22\x24\x3e\xee\xe5\x6a\xd9\x7d\x00\x9e\x2b\x93\x4c\x12\x43\x62\x67\xed\x29\x52\xd7\xe4\xbf\xaf\xec\xb8\xa9\x93\x86\x65\xb5\xda\x37\xc7\xe3\x39\x67\x66\xce\x99\x58\x0b\x29\x66\x42\x22\x4c\x2a\x95\x62\x39\x81\xa6\x39\x00\x00\xb0\x16\x08\xab\xba\xe4\x84\x30\x29\x90\xa7\xa8\x27\x70\x12\x82\xa2\xaa\x95\x26\x98\xa5\x5c\xd3\x69\xa2\xe4\x1b\x6a\x9a\x9d\x1d\xf4\x62\x35\x4f\x5e\x79\x8e\xa7\x2f\x46\xc9\x15\x97\x52\x11\x27\xa1\xe4\x62\xf0\xcd\x1c\xc6\x30\x97\xb1\x45\xca\x09\x57\x6b\x4a\x56\x01\x1e\x75\xef\xa5\xb5\x8b\x63\xb8\x6b\x9f\x53\x81\x90\xac\x0d\xa9\x0a\xdc\x13\xa0\x4d\x8d\x86\xc1\xf1\x62\xd7\x8a\xe6\x32\x47\x98\xb2\xc7\x4d\x8d\xf7\xbc\xae\x85\xcc\x4d\xd7\x4d\xcc\x6c\x2d\xb0\x00\xdb\x34\xb3\xb3\x2e\x6e\xed\x09\x88\x0c\xd8\xd5\xb6\x1a\x68\x9a\x38\x27\xbe\x9f\x9d\x59\x0b\x28\xd3\x8e\x20\x7c\x36\x4d\x54\xfb\xad\xd2\x80\x6f\xa8\x37\x80\x69\x8e\x5b\x7e\xd7\x4a\x8e\x12\x35\x27\x4c\xc1\x2b\x32\xda\x08\xc2\xe9\x12\xa6\xec\x26\xcd\x71\xbc\x0f\xc6\x16\x3e\x7b\x61\x2d\x4c\xd1\xf7\xcd\xbe\xf2\x0a\xe1\x1d\x8c\xe4\xaf\x08\x4d\xb3\x9d\xe7\x47\x15\xfe\x6f\x94\x7c\x40\x2d\x78\x29\x7e\xf0\xe7\x12\xa1\x5e\x93\x19\x54\x98\xa8\x14\x41\x48\xa0\x42\x18\xc8\x44\x89\x51\xb5\x35\x0f\xc3\x99\xee\x31\xe7\x3d\x2d\x2f\x87\x4c\xf3\xa3\xf6\xfe\x9a\x13\x3e\x51\xd2\xcd\x36\xdc\x27\x25\x37\x06\x76\xc0\x4d\x03\x36\x12\x6a\x77\x3d\x3f\x0a\x0c\x5d\x4f\x8f\x05\x42\x26\xb0\x4c\x0d\xa8\xcc\xf7\x32\x9c\x71\x87\x71\x77\xed\xa7\x06\xef\xde\x54\xfe\xe8\x88\x42\x28\x30\xf4\x0d\x12\xc4\xc9\x5a\x71\x6e\x5b\x9e\x58\x9d\xc8\x49\xd3\x8c\xfd\xc7\xcd\xbf\x2a\x00\x5f\x3a\xe0\x6c\x84\x31\x6a\x7e\xe0\xaa\xb8\xda\xb1\xcc\x10\x18\xa9\xb4\xa7\x75\x6f\x36\xe8\x0d\xf5\xd9\x68\x02\x64\xeb\x3e\x9f\x12\xcd\xf9\x52\xbd\xa1\xd6\x22\xc5\x9d\x27\x25\x41\x8e\x04\x05\x37\xc5\x95\x33\xcc\xf2\x62\x38\x47\xb6\x8d\xfd\x12\xe8\x59\xa9\x12\x54\xed\xbc\xa7\x34\x2c\x97\xf3\x6f\xcf\x2f\x98\x10\x28\x2a\x50\x1f\x39\x58\x7f\x02\x31\x70\xc7\xe1\xe1\x90\x0f\x96\xcb\xf6\x2d\xdb\x13\xb4\x63\xcb\x78\x42\x4a\x6f\x7a\x50\x2c\xd3\xaa\x72\x76\x9d\xdf\xf3\xfa\xfc\x81\xb4\x90\xf9\x3f\x90\x6e\x24\xaf\x44\x72\x01\xee\xdf\xe6\xeb\x58\x4d\xe3\xac\xdb\x6d\x92\x8f\xef\x94\x18\xc5\x20\xe5\x9f\x8e\xc0\x3c\xb6\x11\xb7\x6b\xb1\xb1\x5b\x04\x20\xd5\x1e\xda\x4c\xc7\x74\x23\xdd\x7a\xce\xb7\x80\x81\x38\x5e\xf1\x4f\x25\xff\x68\x35\xf7\x57\xb0\x35\xc3\xf8\x1e\xfa\xd8\x60\x19\x3f\xfd\x93\x85\x67\x6e\x55\x90\x3d\x49\xf1\x7d\xed\xa0\x86\xbf\x33\x7f\x83\xa5\x71\xa7\x2f\xc2\xd0\xf9\xfe\x83\x8b\xce\xf0\xd0\x06\x7f\x67\x23\xc6\xc4\xf7\x35\xfe\x99\x03\x7c\xea\x5f\xb2\x81\xc7\xea\x7b\xa1\xd5\x75\xd7\xc6\xcf\x00\x00\x00\xff\xff\x97\x1d\x11\x3e\xd6\x07\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 2006, mode: os.FileMode(420), modTime: time.Unix(1606893710, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xd1\x8f\x9b\xb8\x13\x7e\xe7\xaf\x98\x1f\x8a\x5a\x92\x5f\x02\xdb\x9e\x74\x0f\x7b\xca\x43\xaf\xa7\x6b\x2b\xb5\xab\xbd\xdd\xf6\xfa\xec\xc5\x13\xb0\x16\x6c\xd7\x36\x49\x73\x11\xff\xfb\xc9\x36\x10\xd2\x40\xb4\xbb\x4d\xa5\x1e\x52\x24\x60\x66\xfc\xcd\x7c\xf3\x65\x6c\x76\x3b\x98\xc8\xfb\x0c\x2e\x97\x70\x47\x34\x42\x98\x13\x4e\x0b\x54\x21\xd4\x75\xb0\xdb\x2d\x60\xc3\x4c\x0e\xf8\xd5\x20\xa7\x30\x81\xf0\x9a\xa4\xf7\x24\xc3\xb0\xe7\xb8\xa8\xeb\x00\x00\x60\xb7\x03\x83\xa5\x2c\x88\xb1\xcb\x20\xa1\xd6\x18\xfb\x75\xc0\x86\xd7\x75\x10\xb0\x52\x0a\x65\x20\x72\x11\x21\x47\x93\xe4\xc6\xc8\xd0\x3f\x6a\xa3\x52\xc1\xd7\x61\xe0\x1f\x33\x66\xf2\xea\x2e\x4e\x45\x99\x64\x62\x91\xe6\x2c\x49\x73\x16\x0e\xd9\x64\x41\xb6\x99\x12\x15\xa7\xc9\x9a\x14\x8c\x12\x23\x54\xb2\x7e\x71\x71\xec\x5c\x30\x26\x13\x9d\xa3\x62\xab\xd5\xb1\xb5\x24\x5a\x23\x16\x69\x9e\x28\xe4\x36\xff\x23\x0f\xcd\x54\x25\x35\xf2\xa4\x10\x99\xaa\x74\x9b\xaa\xa5\x31\x7e\x2d\xf8\x8a\x65\x71\x43\x11\xd4\x75\xd8\xf0\x92\xcc\xe0\x9d\xaf\x9b\x14\x05\x98\xad\x44\x0d\x95\x46\x0a\x8c\x83\xc9\x11\x56\x0c\x0b\xaa\x61\x96\x74\x4c\x2e\x40\x11\x9e\x21\xc8\xfb\xcc\x47\x6a\x98\xd8\x05\x77\x3b\xc7\x68\xb8\x67\x74\x1a\x04\x49\x02\xb7\x39\x51\x48\xa1\xe9\x49\x1c\x58\x8c\xf6\x09\xb4\x51\x55\x6a\x60\xe7\xd6\x9e\xa5\x39\x8b\x3f\x54\x5f\x7d\xe2\x69\xc1\x90\x1b\xf7\x1e\xb9\x89\x5f\xbb\x47\x67\xe9\x78\x84\x59\x77\x1b\xff\xed\xef\xd0\x79\x14\x22\xcb\x50\xb9\x58\x4f\x46\xfc\xde\xbd\x09\xea\xc0\x76\xdc\x17\x30\xe1\x56\x5a\x93\xf8\x4a\x50\xd4\xb0\x57\x0a\x5b\x01\x17\x06\x26\x3c\x7e\xc5\xb9\x30\xc4\x30\xc1\x75\xfc\xd6\x67\xfc\x06\x79\x7c\x7b\xcf\xa4\x53\x0c\x34\x57\x92\xc0\xc7\x1c\x6d\xec\x84\xc7\x57\xa4\xb4\x04\xbf\x6d\xeb\x6d\x9d\x5c\xdd\x43\x2e\x87\x24\xb4\xd7\xac\xa1\xa8\x7b\x79\x88\xf7\x5a\xa1\x15\x33\x01\x8e\x9b\xc1\x55\x3b\xe7\x55\xc5\x53\xb8\xc2\xcd\x90\x53\x94\xf6\xc9\x9d\xc3\x7a\x88\xd1\xb9\xa5\xf3\x1b\x22\xa7\x30\x1b\x2c\xe5\xb0\x86\xdc\x12\xfc\x6c\xc8\xf1\xd0\xcf\x5e\xcf\xf2\x31\x8b\xbd\x3e\x54\x5f\x2f\xbb\x07\x2b\x93\x2b\xdc\xdc\x88\xca\xa0\x8a\xa6\xf3\xc1\x08\x2f\x1f\x17\x94\x0e\x7b\x74\x95\x5e\xc2\x7a\xd8\xc3\xcb\xe8\xb2\xb9\x3d\xf6\xa9\x0f\x5f\xf5\x3a\x04\x8f\x90\x52\xd3\xca\xba\x3e\x9c\x52\xde\x29\x49\x9d\x35\x51\xb6\xd8\xd0\x6a\xd6\xf9\x35\xff\xb0\xa7\xc0\xdd\x20\xa1\x63\x60\x0a\x09\x3d\x23\xd4\x27\x49\x4f\x54\x56\x39\xeb\x08\x9c\x9b\x4c\x4f\x80\xfc\x03\x0b\x1c\x87\xa4\xce\xda\x42\xf6\xf0\xba\xf9\xf6\x58\xbc\xf7\x4c\x9b\x31\xb4\x82\x69\x33\x52\xde\x37\x58\xc9\x0c\x8c\xa0\x02\x16\xa0\xed\x6c\x51\xa8\x45\xa5\x52\xec\xcd\xdd\x5e\x5e\xc7\x40\xba\xba\x6b\x43\x92\x0c\x0f\x31\x0f\xa1\x14\x9a\x4a\x71\xc8\x87\xa6\xca\x39\xf5\x3a\x2a\x9f\x73\xa9\xf4\xbb\x01\x1e\xa2\xcd\x93\xaa\x3c\xa7\x22\xc7\xb5\x78\x2e\x1d\x8e\x2b\xf0\xa1\xea\x7b\x88\xf2\x5a\xcd\x35\xfe\x1d\x6b\x1d\xa8\x03\xbb\x15\x25\x42\x8e\x85\x44\xd5\x60\xb8\x3d\x2a\xca\xdb\x63\xc1\x14\x2a\x55\x5c\x13\x45\xca\x5b\xa3\x18\xcf\xa2\x0d\xd8\xa3\x58\x7c\x83\x5a\x0a\xae\xf1\xb3\x62\x06\xd5\x1c\x14\xcc\x9a\xf7\x5f\x2a\xd4\x66\x0e\xd2\xc6\xd8\xfd\x94\xf1\x6c\x0a\x11\xa3\xcd\xfd\x1c\x50\x29\xfb\x13\x6a\xda\xec\x51\x8c\xc2\xd2\xed\x24\x9f\x6e\xde\x3b\xa8\x48\x35\xf1\x53\x6f\x5f\x39\x97\x25\x84\x61\x6f\x57\xb3\xcb\x2c\xfd\x42\xda\xee\x41\x51\x88\xa5\x34\x5b\x9b\xaf\x0f\x0e\xa7\x9d\x6f\x1e\xfb\xfd\x23\xfe\xcc\x4c\xfe\xa7\x3d\x47\x45\xa1\xf7\x69\x81\xe2\x77\x7c\x25\x4e\x2d\xe1\x8f\x7a\xf1\xef\x84\x36\x25\x46\x9b\x39\xb4\x79\xc2\xff\x21\x84\x94\x58\x4d\xc0\x1d\xc2\xf3\xe7\x4d\x60\xd3\x5b\xff\x57\x0f\x4e\x90\xfb\x8e\x9b\xef\x60\x96\xd9\x03\xc3\x11\xad\xd2\x6e\xf9\xa7\x69\x95\xff\x49\x56\x7b\x94\xf6\x48\x66\x74\xde\x64\xdf\x7c\x20\xc4\xaf\x8c\x60\x91\xec\x8a\xb5\xc6\xff\x2d\x81\xb3\xa2\x57\xef\x40\x0d\x0e\x7b\x0e\xb2\xcb\xde\x92\x61\x33\xd2\x8c\x67\xfb\x2a\xd0\xa0\x7a\x54\x25\x65\xa5\x5d\x1d\x04\xa4\xd0\xcc\xb0\x35\xda\xc6\xa1\x3d\x1d\x67\x6e\x52\x2b\xf8\x07\x95\x38\x59\x64\xa7\xa4\x71\x29\x7d\x64\x25\x3e\x55\x4b\x6e\x0e\x1b\x56\x62\x6c\x57\x39\x97\xa6\x7e\x2e\x9d\xf8\x73\xb4\x57\x8a\x2b\xf5\x9a\x28\x8d\x51\xf8\xf2\xe2\xe2\xd7\xc5\xc5\x8b\xc5\xc5\x4b\x9b\xd6\x4f\xa8\x1a\x77\x48\x76\xe9\xdb\x2f\xc2\xed\x76\xbb\x5d\x94\xe5\x82\x52\x58\x09\x55\x12\xf3\x54\xdd\x48\x92\x31\xee\x76\x32\x97\xf8\xc3\x94\x33\x85\x48\xda\xaf\x57\x37\x79\x98\xc1\x52\x5f\xa3\xba\xee\xde\x1c\xeb\xc6\x9a\x96\xf0\xc2\xb3\xda\xf7\x5f\xc2\x2f\x17\x41\x4b\x36\xb5\xf2\x52\x56\x5c\xf1\x5f\x15\xaa\x6d\x34\x8d\xdf\xa0\x89\xc2\x7e\x44\x38\xfd\x0d\xa8\x6d\xc9\x81\xc6\xfa\x1e\x83\x73\x80\xee\xe9\x19\xeb\xea\x98\x56\x0f\xd0\xe7\x40\x87\x5b\xfc\xc5\x26\xbc\x6f\x32\x3c\xef\x87\xf5\x25\x79\xaa\xef\x07\x58\x4f\x98\x18\xdf\x74\xdf\x2b\xa0\x3f\x24\xc7\x39\x96\xa3\xdc\xca\x1f\xc0\xa9\x7c\x1c\x97\xf2\x31\x1c\xca\x1f\xc3\xdd\xfe\x3f\xf4\x6f\x00\x00\x00\xff\xff\x10\xae\x3c\x3a\x0f\x13\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 4879, mode: os.FileMode(420), modTime: time.Unix(1606996511, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x13\x8c\x42\x0a\x6c\x1a\x7d\x4d\xd1\x87\xb4\xe9\x32\x63\x5b\xb3\xc5\xd9\xf2\x50\x14\x28\x6d\x9e\x2c\x26\x0a\x29\x93\x94\x13\x4f\xd3\xff\x3e\xf0\x87\x6d\xc9\x92\x53\xb7\x43\x3b\x4c\x2f\x89\xa8\xbb\xe3\xf1\xbe\xef\xbe\xa3\xab\x0a\x18\xa6\x5c\x20\x44\x19\x15\x2c\x47\x35\x9e\x2b\xa4\x06\xc7\x4a\x96\x06\x23\xa8\xeb\x8c\xfc\x26\xb5\x89\xa3\x71\x34\x84\x8c\xbc\x75\x5f\x93\xaa\x02\x14\x0c\xea\xfa\xe4\xe4\x60\x08\xeb\x7c\x02\x00\x30\x1e\x83\x36\xaa\x9c\x1b\x30\x12\x66\x5c\x30\x30\x19\x42\x21\xb5\x81\x99\x64\x6b\x30\x92\x38\x3b\xb3\x2e\x10\xaa\x0a\x06\xe4\x3d\x7d\x40\xf8\x1b\xe6\xf4\x01\x73\xa8\x6b\xbf\xe9\x35\x2e\x4b\xd4\x66\x13\xab\x72\x3e\xf6\xa9\xaa\xf1\x29\x9c\x33\x06\x34\xcf\x21\xe5\x98\x33\x0d\x26\xa3\x06\xa8\x42\x10\xd2\x00\x3e\xcd\xf3\x92\x21\x23\x70\x3a\x0e\x39\x79\x3f\x50\x54\x2c\x10\x06\x29\x9c\xbd\x86\x01\xf9\xd1\xfb\x8e\x1a\x36\xde\x6e\x04\x03\xea\x4c\x52\x72\x2e\x84\x34\xd4\x70\x29\xb4\xb7\xbf\x44\x01\x3d\x0e\x3c\x75\x5b\xc7\x54\x30\xeb\x3c\xa0\x64\x7a\xcf\x8b\x50\xbe\x7d\x87\x90\xcd\x20\x25\x53\x77\x38\x17\x18\xea\x3a\x2c\xde\xac\x0b\xb4\x5f\xb8\x58\xd8\xc5\x4f\x77\x5a\x8a\xb3\xa8\xaa\xc0\xd0\xc5\x2f\x52\xde\x97\xc5\xce\xf5\x86\x2e\x20\xb2\x06\xb6\xfc\xd6\x86\xa7\x76\x73\xbf\xf1\x9f\x34\xe7\xcc\x25\x6f\xcd\x42\xfc\x43\x1f\xb7\x18\x7f\xea\x1c\x2e\x60\xbf\xbf\x34\x6a\xad\x35\x40\x41\xb6\xc0\x63\x31\x19\x6d\x40\x41\x0f\xca\x3b\xe7\xfb\x0c\x26\xf8\x25\x98\x58\x38\x62\xbb\xff\x00\x7d\x59\x9b\xbe\x3f\x79\xfe\x5e\xa2\x70\x60\x25\xde\xb2\x1f\xc2\x83\x18\x62\x0f\x86\x81\x0c\x03\x24\x7f\x08\xbe\x2c\x11\xea\xfa\xc3\xc7\x6d\x7d\xbd\x97\xcb\x66\x72\x71\x14\xd8\xf8\xbd\xc1\x1e\xf5\xa0\x1d\x96\xea\x93\x4d\x93\xdf\x64\x5c\x43\x5a\x8a\xb9\x0d\x0b\x5e\x04\x34\x50\x10\xf8\xd8\x68\xeb\xba\x86\x07\xc9\x30\x77\x50\x68\x23\x15\x6a\xe0\x06\xb8\x70\xaa\xc0\xa8\xa1\x33\xaa\xd1\x2b\x82\x0d\x16\x67\x2d\xe7\x80\x51\x02\xfe\x1c\xf1\x23\x64\xc6\x14\xe4\x1a\x75\x21\x85\xc6\x5b\xc5\x0d\xaa\x21\x28\x38\x0d\xeb\x4e\x34\x92\x86\x5c\x8c\xc7\x70\x89\x66\xa7\x41\x76\x4b\xb2\xfd\xca\x2c\xa7\x9a\x22\xa4\x05\xbd\xc7\x7d\x11\xaa\x6a\x1b\xc6\x48\x26\x61\x64\x19\x2e\x1f\x21\x95\xea\x61\x54\xaa\x7c\x84\x62\xce\x24\x43\x36\x7e\x7a\xc8\xc7\x85\x92\x46\xce\xca\x74\x6f\x17\x9e\x02\x2a\x65\xb7\xb2\xe8\x91\xf7\xf8\x78\x81\x73\xc9\x50\xc5\x8a\xbc\x91\x6c\x9d\x10\xff\x1e\xbf\x60\xc9\x2b\x67\xfa\xc3\x6b\x10\x3c\x6f\x1c\xc3\x3e\x19\xc9\xe5\x62\x81\x8a\xdc\x72\x93\xbd\x53\x4a\xaa\x18\x95\x4a\x88\xff\x37\x42\xfb\x07\x98\x8d\x64\xd9\xe4\x88\x92\xb4\x02\x28\x14\x0c\x15\x79\x43\x59\x38\x58\xfc\x38\x04\x35\x84\x88\x8b\x95\x65\x88\xf3\xb1\x8a\xcb\xc5\xa2\xe3\x6a\x4a\x25\xb6\x4b\x81\x06\xa1\xc0\x81\x5e\xb8\xc5\xb4\xef\xe8\x19\x59\x79\x33\xa9\x02\x9f\xe3\x67\x4f\xeb\x3d\x87\x20\xef\xad\x37\x2a\x45\xe2\xd3\x5d\x84\x89\xcf\x78\x47\x6c\x57\x84\xe4\x95\x35\xaf\x3a\x9d\x7a\x54\xe5\x42\x70\x5b\x3b\x15\x86\x8f\x3d\xcb\x5e\x21\x1a\x75\x9c\x08\x83\x4a\xd0\x7c\x8a\x6a\x85\xca\xc7\xf2\x05\x15\x3c\xef\xf3\x6a\x95\x70\xaf\x8c\xcf\xa5\x39\x11\xa9\x8c\xa3\xd5\xf6\xac\x90\x52\x9e\x23\x3b\x12\x5d\x1b\xe2\x78\x2c\xa7\x74\xd5\x87\xe3\xcc\x43\x38\xcf\x39\x0a\x43\x9a\x2d\x1a\x24\x26\x4e\xfa\x54\xfd\x3f\x18\xb5\xa4\x53\xf8\x29\x9a\xbe\x71\x1b\x33\xd2\xb7\x9c\x1c\x21\x89\x7d\x23\xf1\x7f\x33\xc7\xba\x05\x0a\xbb\x34\x07\x56\xc7\xa6\x51\xc8\x90\x43\xc0\x7f\x72\x11\x0a\xb9\x3f\x0a\xbb\x1d\xe0\x8a\x99\xeb\x83\xf1\xcf\x19\xeb\x8b\xaf\x0f\x6c\x40\x08\x39\xb0\x47\x1b\x9d\xcf\xe3\xd8\x6a\x00\x3b\xa4\xec\x80\x6a\x0f\x27\xfb\xe0\x70\x23\x66\x33\x62\xfb\x24\x56\xe4\xad\x14\x06\x9f\x4c\x9c\x24\xfb\x92\xf7\xf5\x12\xae\xe9\xca\x8a\x50\xb3\xc9\xfa\x5b\xfd\x0b\x04\xe8\xd9\x9e\xbf\x46\xca\xdc\xdc\x46\x61\xd4\x7a\x77\xde\xe5\xe1\xa6\xff\xbd\x44\xb5\x8e\x13\x72\x9b\xa1\xc2\xb8\x6f\x82\x92\xc9\x45\x6c\xaf\x38\x49\xaf\x30\xb4\xda\xa4\x83\xd5\xc6\x6a\xe1\xad\x0e\xb0\xdd\x73\xfa\x52\xc9\xb2\xe8\xc4\x68\xc7\x41\x17\x48\x17\x39\x37\x10\x1f\xba\x59\x2d\x5c\xa0\x28\x81\x68\x18\x1d\x62\xa8\xbf\x74\xe1\xd2\xa6\x66\xa3\xd6\xf5\xd2\x41\x59\x55\x50\x50\x3d\xa7\xb9\x8d\x19\x6a\x14\x27\x5d\xa1\xe8\x52\xef\xf9\xd5\xee\x0a\xbe\xdc\x92\x70\x49\xae\x44\xbe\xfe\x46\x24\x54\x48\xd9\xf7\x65\xe1\x14\x15\xa7\x39\xff\xab\x6f\xfc\x38\xe1\xf4\x00\x7d\x15\x25\xee\xb6\x45\xd3\x19\x2a\x9e\xa6\xe4\x57\xaa\x74\x46\xf3\xf8\xc5\x66\xe1\xaa\x70\xd1\x2a\xef\x7c\x06\x1f\x3e\xfa\x8b\x50\xd5\x27\xc8\x9b\x5c\x7a\xa1\x1d\xb5\xe9\xeb\x4d\xdd\x8d\x7d\xb0\xa8\xeb\x68\x18\x40\xed\x0e\x07\x2f\x8e\xfb\xeb\xf6\x89\xfa\x3a\xec\xcc\x62\x14\x7d\x56\xe6\xea\x7a\x08\xf8\xf2\xdf\x51\xc3\xbe\x3a\xd9\x8d\xa3\x96\x0c\xb8\x97\xc9\xc5\x96\x20\x43\x70\x2d\xbf\xa1\x92\x0e\x90\xfa\x5b\x8b\x23\xd6\x37\xe4\x50\x2b\xf9\x4e\xb6\xbb\xba\x6d\xb3\xf4\xf7\xaa\x3e\x93\x90\x57\xeb\x8e\x15\x52\xbd\xfa\x39\x64\x76\x97\x84\x5f\x44\xdb\x26\xfd\x27\x00\x00\xff\xff\x06\xc1\x56\x13\x60\x11\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 4448, mode: os.FileMode(420), modTime: time.Unix(1606434865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\x12\x46\x2d\x2d\x6c\xba\xbd\xa6\x30\x8a\xec\x26\xcd\x06\x4d\x9b\x34\xc9\x22\x87\xa2\x07\xda\x1c\x49\x6c\x68\x52\x26\xa9\x64\x53\xad\xfe\x7b\x41\x4a\x72\x64\x59\x4e\x76\x81\x5c\xaa\x8b\x2d\x71\xf8\xe6\xeb\x71\x1e\xcb\x12\x38\x26\x42\x21\x90\x8c\x29\x2e\xd1\xcc\xa5\xb0\x6e\x6e\x74\xe1\x90\x40\x55\x65\xf4\x0c\x5d\x44\xe6\x64\x0a\x19\xbd\x10\xd6\xc5\x65\x09\xa8\x38\x54\xd5\x68\x74\x68\xf7\xa6\x40\xf3\x34\x4b\x84\x74\x68\x3c\xc8\x08\x00\x60\x3e\x87\xcf\x16\xc1\x65\x08\x61\x1d\x72\x66\xd8\x1a\x1d\x1a\x0b\x4e\x43\x6d\xfd\xbc\x4c\xc1\x69\xae\x61\x06\x0a\xad\x43\xde\xac\xff\x12\xa0\xca\x72\x06\x86\xa9\x14\x61\x9c\xc0\xd1\x02\xc6\xf4\x57\x81\x92\xdb\xd6\x55\x6b\x33\xfe\xc7\x6a\xf5\x07\x5b\xa3\x37\x12\x8a\xe3\x17\x88\x6c\x2e\x85\x83\xc8\xb1\xf4\x42\xeb\xfb\x22\x87\x71\x42\x6f\x9c\x29\x56\xee\x96\xa5\x40\xfc\x0e\x12\x03\x99\x92\x18\x7e\xec\xe2\x89\x04\x82\x2f\x43\x3f\x5f\x5f\xd0\x3f\x7d\x88\x51\x5c\x17\xa7\x2c\x3b\x9e\xaa\x8a\xc4\x3f\x43\x02\xef\x16\x40\x08\x94\xdb\xfd\x6d\x4c\x22\xf1\x1e\x3f\x31\x7b\xa6\x6f\x9f\x72\xec\xba\x68\x9f\xf9\x3c\xe4\xde\xdb\x8a\xd2\x62\xb3\xfb\xdc\x7e\xd0\x5a\x0e\x6d\x7d\x60\x06\x96\xb0\xd4\x5a\xee\x2d\x85\x04\x16\x0b\x20\xce\x14\xd8\x8f\xac\x7d\x96\xb0\x00\xbf\xbe\xb7\x58\x41\xeb\xbf\x06\x49\x98\xb4\x2f\xa2\x04\x83\x43\x30\xc3\xdb\x32\x2a\x75\x9a\xa2\xa1\x77\xc2\x65\xa7\xc6\x68\x13\xa1\x31\x71\x78\x0d\x0d\xde\x2f\xf5\x14\x92\x98\x9e\xe0\xb2\x48\x23\xb2\xd2\x85\xe4\xa0\xb4\xf3\xcc\xb2\x7b\x2c\x23\xf1\xa0\x53\x83\x8a\xa3\xa1\x1f\x18\xbf\xc6\x4d\x81\xd6\x45\x8f\x53\x30\x53\x20\x93\x9e\xaf\x09\xac\x0b\xeb\x60\x89\x30\xf1\x15\x9a\x80\x36\x30\x09\x59\x4e\x0e\x42\xbb\xc2\xa8\xfd\x1a\xec\x7d\xd9\xd0\xbb\x0c\x0d\x46\xde\x23\xbd\x62\xab\x7b\x96\x7a\x8f\xb4\x2c\xb7\xe4\x0c\xf9\x57\x55\xb4\x8c\xe3\x1e\x2f\x60\x87\x18\xe7\xca\x0d\xf1\x42\x4c\x01\x8d\xf1\xfc\xb5\xce\xac\xb4\x7a\xa0\xc7\x4e\x8b\x28\xd9\x0f\x5c\x24\xc1\xf2\xdd\x02\x94\x90\xff\xf3\x46\x31\x05\x42\x39\x4c\x5f\xc0\x7c\xfb\x0e\x89\x57\x3a\x74\xe3\x8c\x50\xe9\x50\x93\xbe\xc3\x49\xf2\x8a\x93\x5b\xb1\xfe\x8e\xd1\x12\x06\xfa\xac\x63\x5e\x8d\x3a\x0b\x55\x35\x7a\x7d\xe6\x77\xc7\xfc\x6d\x26\x2c\x24\x85\x5a\x39\xa1\x55\xe8\xae\x40\x0b\x89\x36\x10\x32\x6b\xda\x04\x6b\xcd\x51\x5a\x0a\x1f\x99\xf2\xcd\xaa\x07\x3c\x72\x58\x3e\xed\x09\x04\x0d\xd0\x1e\x32\xca\x76\x40\x3e\xd5\x21\xc4\xe0\xa5\x29\x7a\x84\xcc\xb9\x9c\x5e\xa3\xcd\xb5\xb2\x78\x67\x84\x43\x33\x05\x03\xef\x9b\xef\x81\x37\x71\x87\xd5\x1b\x7f\x24\x32\xba\x92\x02\x95\xa3\x5d\xe4\x76\xc4\x8f\x3a\x8a\x12\xca\xcb\x75\x2d\x39\xc7\x4a\x69\xc7\x7c\x8a\x96\x36\x61\x9c\xa1\xa2\x27\x98\xb0\x42\x3a\x1f\xcf\xa5\xe1\x68\xfa\x5d\x10\xc9\x90\x84\x68\x6f\x4a\xe2\x30\x5a\x87\xa6\xea\x86\x06\xb0\x68\x90\xc5\x1d\x39\xac\x63\xf3\xba\x39\xd0\xfc\xf6\x69\x52\xf5\x27\x7d\x03\xd1\x58\xd7\xd8\xf0\x15\xa4\x7e\xf4\xb5\x24\x1c\xed\xca\x37\xf4\x04\xed\xaa\x65\x56\x55\x1d\xd7\x2f\x81\x07\xf5\x01\xd7\xb5\xee\x06\xcd\x9b\x1e\x0c\xad\x4f\xae\xf6\xd9\x65\x70\x57\xb9\xb7\x64\xeb\xc2\x8c\xd1\xfa\xe4\x90\xa5\x68\x2e\x34\xe3\xc8\x4f\x79\x8a\x16\xc6\x40\x7c\xb1\xcf\x8c\x2e\x72\x4b\x76\xaf\x00\xa1\x61\x68\xfb\x3d\x98\xcf\xe1\xd4\xc3\x80\xd4\x8c\x03\x7a\x18\xba\x63\xb0\xd9\x93\xed\xa6\xbe\xe1\x26\xe1\x11\x87\x12\x0a\xf3\xaf\x2c\x21\x67\x76\xc5\x24\x8c\xb1\xe5\x52\xd4\x3f\xac\xb3\x36\xc3\x17\x72\x9e\xcf\xe1\x8a\xa5\x42\x05\x8a\x6d\xbf\xe6\x2c\xc5\x29\x08\x87\x6b\x7b\x85\xe6\x2a\xbc\x35\x93\x3d\xa3\xf9\xd6\xfe\x5c\x25\x3a\xcc\xc7\xb8\x7b\x81\x39\x38\xd8\x7b\x73\xb0\x13\xc5\x86\x5e\x88\xb5\x70\x51\xd7\x63\x4c\x2f\x93\xc4\xa2\x8b\x22\x1f\x0d\xcc\xe0\xa7\x18\xde\xef\xc4\xb4\x7b\x6a\x1c\xae\x73\xc9\xdc\xcb\xb7\xc4\xf1\x4e\xf2\x68\xb7\x69\x6d\xe8\xb1\x94\x91\xa1\x1f\xb5\x72\xf8\xc5\x45\xf1\xb7\xa5\x74\x48\xa3\xea\xbf\x04\xfd\x4f\x3d\x67\xfc\x34\xe6\xcc\xb1\x25\xb3\x48\xe2\x76\x44\xc2\x0c\x96\xe8\xfc\x95\x34\x98\xf6\xca\x15\xa4\xe8\x5c\x39\x34\x8a\xc9\x1b\x34\x0f\x68\x6a\xe0\x5a\x93\x94\x90\xf1\x37\x16\xd8\x9f\xa3\x34\x70\xf7\xc5\xb1\x72\x8d\x8c\xd7\x14\xef\xd2\x86\x3f\xcb\x7a\x86\x46\x24\x09\xfd\x9d\x19\x9b\x31\x19\xfd\xd0\x7e\xb8\xcc\x03\x56\x59\x6f\x3e\x82\xbf\xfe\xb6\x41\x80\x86\x6f\xa6\xe9\x9e\x8b\xae\x45\x73\x08\xd2\x10\x69\x6d\x5a\x55\xa4\x2c\xc7\xa9\x57\xf8\x01\x1d\x81\x8e\x34\x0d\x9d\x18\xf2\x3c\x71\xbf\x82\x55\xec\xde\x9f\x96\xa3\xa0\x27\x83\x27\x66\x47\xa3\xaa\x29\xa0\x7d\x13\x32\x58\x34\x82\x49\xf1\x6f\x28\x7b\xdd\x6f\xd2\xef\xdf\xdb\x75\x7c\x27\x98\xe6\xba\xc4\xd6\xba\x50\x8e\x4c\x41\xa2\x8a\xd0\xc6\x31\x0d\x27\x78\xb0\x3e\x4d\x30\xc8\x3b\x31\x36\xf1\x5d\xfe\xd6\x84\xc3\xeb\x25\xaf\xdc\xa8\x78\x55\xfd\x17\x00\x00\xff\xff\xeb\x5e\xb7\x44\xe8\x0d\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3560, mode: os.FileMode(420), modTime: time.Unix(1606260203, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6f\xdb\x3c\x0c\xbd\xe7\x57\xf0\x33\x82\x0f\xf6\xe6\x28\xf7\x00\x3d\x0c\xcb\xd6\x19\xc3\xd6\xad\x1d\xd0\xc3\xba\x83\x5a\xd1\x96\x30\x85\x4e\x28\xb9\x5d\xa7\xe9\xbf\x0f\x96\x93\xd4\x69\xda\xa1\x3c\xd9\x14\xf9\xf8\x48\x3e\x86\x00\x0a\x6b\x43\x08\x99\x96\xa4\x2c\xf2\x9c\x51\xaa\x39\xb7\x9d\xc7\x0c\x62\xd4\xe2\x14\x7d\x9e\xcd\x83\x51\x21\x80\xa9\x61\x2a\xaa\xa5\xa8\x5c\x45\x1e\x62\x5c\x5c\x5d\xa9\xd7\x21\x00\x92\x82\x18\x63\x56\x82\x16\xe7\x28\x55\xb1\xf7\x4d\x26\xcf\x94\xe8\xc1\x27\x00\x00\xf3\x39\x7c\xd3\xc6\x41\xdd\xd1\x8d\x37\x2d\x41\x8d\xfe\x46\xa3\x03\xaf\x11\x42\x80\xa9\xf8\x2c\x57\x08\x31\xc2\xaa\x55\x68\xc1\x28\x24\x6f\x6a\x83\x0a\xae\xef\x41\x42\x63\x6e\x11\x3a\xb6\xb3\xb5\x64\xb9\x42\x8f\x0c\x35\xb7\xab\x1d\xb6\x92\x5e\x5e\x4b\x87\x20\x49\x01\xa3\xef\x98\x1c\x18\x0f\xbe\x4d\x05\x6e\xac\x41\xf2\x22\x45\xf7\x0c\x72\x7d\x50\xf3\xc3\xc0\xb8\x80\xbe\xab\xfc\x0e\xb4\xf7\x6b\x71\x8e\x6e\xdd\x92\xc3\x4b\x36\x1e\xb9\x04\x86\x57\x5b\xff\xa6\x43\xe7\x0b\x08\x09\xae\xb7\x10\x66\x47\x43\xdb\x3f\xf6\x66\x54\x09\xc8\x0c\x8b\x13\xd0\xa2\x63\xfb\xa5\x6f\xa2\x22\x9f\xdf\x95\xc0\x25\x64\x46\x65\xc5\x08\x0d\xd0\x3a\x7c\x11\xc6\x85\x67\x43\xcd\xb3\x30\xa4\x60\x36\x82\x31\x75\x42\xf8\xef\x04\xc8\xd8\x11\xff\xde\x86\xa1\xed\x5d\x71\xb2\xff\xdc\x0c\x25\xb7\x33\x1c\xcf\x4d\x7c\xed\x90\xef\xf3\x42\x5c\x6a\x64\xcc\x1f\x9e\xfe\x80\x23\xf9\x33\x85\x54\xcb\xdc\xa8\xe2\x80\x96\xc7\xd5\xda\x4a\x8f\x90\x25\x15\x6e\xae\x33\x98\x8e\xbb\xc5\x7d\xa3\x1b\x71\x46\xf6\x3e\x67\xf1\xb6\x25\x8f\xbf\x7c\xfe\x4f\x20\x64\x6e\x79\x96\xe4\x67\xa8\xd9\x82\x8e\xe3\xa7\x0d\xb7\xdd\xda\xf5\xc8\x53\xf1\x86\xa8\xf5\xb2\xd7\xa2\x13\x5b\x01\x9c\x22\x25\x61\x9f\x0e\x61\x23\x4a\x0f\xb3\x77\x1a\xd9\xd4\xb5\xf8\x24\xd9\x69\x69\xf3\xff\x77\x8e\xb3\x75\xc2\x0a\x43\xf2\x02\xbe\xff\x70\x69\x39\x87\x63\xde\x49\xa5\x39\x2a\x31\x8e\x60\x49\x0d\xc2\xb4\x49\x4c\x87\xd0\x18\xb3\x10\xa6\x4d\x7f\x7e\x4f\x6c\x76\xac\x9b\xc7\xfe\xde\xb2\xa7\x76\xb3\x48\x17\x7a\x44\xef\x31\x76\x8c\x25\x60\xf1\x22\x11\x69\x61\xdb\xa6\x41\x16\x97\xc6\xeb\x77\xfd\x3a\x72\x64\x2e\xd2\xef\x7b\x83\x56\xe5\xd9\x81\x7e\xd2\x4f\xb5\xdc\xfd\x67\x25\x18\x55\x88\x21\x31\x73\xc8\x46\x5a\xf3\x3b\xed\x08\xd2\x72\x47\xf2\x1e\x34\x4b\x0a\x59\x54\xe4\x91\x49\xda\x0b\xe4\x5b\xe4\x21\x7b\xb8\x08\x32\xf6\x71\xc6\x73\x2a\x3f\xa0\x7e\xc4\xf5\x61\x68\x59\x09\x28\xaa\x65\x21\x2a\xaa\xdb\xa7\x43\xb6\xbc\x70\x7c\x8d\x5b\xaa\x67\x1f\xb7\xcc\xd4\xf0\x14\x27\x21\x20\xa9\x18\xff\x06\x00\x00\xff\xff\x12\x11\x53\xd7\xa3\x05\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1443, mode: os.FileMode(420), modTime: time.Unix(1606996391, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x4c\x09\xa1\x90\x52\x9b\x42\xaf\x01\x72\x58\x6c\xd2\xd4\x68\xda\xa4\x49\x17\x39\x74\x8b\x82\xb1\x46\x32\x11\x99\x94\x48\xaa\x69\xaa\xd5\xbb\x17\x24\x65\x5b\xb6\x25\xd9\xd9\xa0\xed\x16\xd8\x39\x59\x32\x39\xff\xdf\xfc\xa8\xae\x21\xc1\x94\x0b\x04\xb2\x60\x22\xc9\x51\xc5\xba\x7a\x50\xa8\x65\xa5\xe6\x18\x67\x68\x62\x25\x2b\x83\x04\xa6\x4d\xf3\x06\x00\xa0\xae\x41\x31\x91\x21\x04\x08\xa7\x67\x10\xd0\x8b\x24\x43\xbd\xfe\xdb\x1f\x99\x02\x4f\x41\x48\x03\x01\xd2\x5f\x9e\x0b\xa4\x6f\x85\x90\x86\x19\x2e\x85\xa6\xdf\x7b\x41\x97\x28\xe8\xdd\x23\x2f\xa0\x73\xd3\xd2\x82\x5e\xa2\x09\x49\x5c\xf3\xa4\xae\x2d\x9f\x80\xce\xce\xe9\x4c\xcf\x84\x81\xa6\x39\xfd\xf0\x21\xf9\xa6\xae\x01\x45\x02\x4d\xd3\xc4\x56\x1d\x2c\x72\x36\x47\x08\x03\xa4\x3f\xb1\x25\xc2\x47\xd0\x82\x3d\x62\x04\xe4\x77\x02\x64\x4a\xa0\x69\xc8\x04\x16\xb4\xae\x61\x73\xa4\x60\x7a\xce\x72\x68\x9a\xa8\xa3\xb7\x63\xdb\xb1\x74\xf5\xd8\xf9\xf9\xe6\xb0\xcb\x08\x8c\xfb\x6a\xcb\x55\xaf\xf0\x54\x5d\xc7\x27\x70\x8b\x2c\x89\xaf\xb8\x36\x20\x0b\x54\xfe\x22\x48\x01\x5e\x27\xaf\x94\x86\x93\x78\xe7\x6e\x5a\x89\x79\xb8\xb0\xf2\x03\xef\x91\xa6\x69\xa5\x45\xd0\xef\xa7\xf0\x09\x16\xc6\x14\xf4\x16\x75\x21\x85\xc6\x7b\xc5\x0d\xaa\x09\x28\x38\x69\xdf\x97\x15\x6a\x13\x41\xbd\x25\xa8\x93\x10\x5b\x81\xdc\x3b\x64\x89\x27\x13\x40\xa5\xac\xb3\x16\xb4\x52\xf9\x0d\x53\x6c\x39\x13\x26\x7c\x9a\x80\x9a\x00\xe1\x09\x89\x7a\xb8\x03\xe6\x1a\x5f\xc4\xf3\xce\x28\x2e\xb2\x83\x6c\x3b\xd9\xb0\xc5\x32\x75\x1c\xbf\x3a\x03\xc1\xf3\x1e\x7b\x2d\x29\x34\x95\x12\x7b\x7f\x35\x6f\xf6\x5e\x95\x5e\xb5\x79\xce\x51\x18\xda\x8d\x08\xfd\xb9\x42\xf5\x1c\x46\xf4\x7e\x81\x0a\xc3\xcd\x5f\x6d\x86\xdb\x23\xb3\xf3\x90\x27\x51\xe4\x8f\x0e\x44\x2e\xda\x17\xda\x42\x0b\xe9\x7b\xc1\xcb\x6a\xd0\x79\x75\x0d\x06\x97\x45\xce\x0c\x02\x51\x36\xd5\xca\x07\xb2\xca\xd5\xa1\x4b\xb8\x76\x78\x49\xaf\x45\xfe\x1c\x2a\xfa\x4e\x0a\x83\x7f\x9a\x30\xda\xf7\x73\xbf\x18\x54\x4a\xaa\xa9\x03\x18\x17\xd9\x96\xc8\x21\x0e\x41\xa6\x64\x55\x68\x87\xb4\x71\x30\x59\xcc\x5c\xfa\xc3\x03\x26\x6c\x72\x46\x2f\x50\xf1\x34\xa5\x3f\x32\xa5\x17\x2c\x0f\xbf\x5e\xbd\xb8\x2e\x1c\xdf\xda\x33\x3a\x85\x5f\x7f\xd3\x2e\xa9\xfa\xd3\x01\x3a\x30\xc8\x46\x45\x77\x4f\xb7\xd5\x23\x73\x36\xf9\x6b\x4d\x43\xea\x3a\xc8\x6c\x49\x1b\xc9\xd0\x8e\x5b\x1c\x36\xc6\xce\x58\x22\x3e\x73\x9c\xd3\x76\x32\xec\xd4\xc6\x83\x8c\x1a\x35\xa6\x45\xd3\x4c\x00\xfb\xa3\x7e\x0c\x8c\xc0\x75\x84\x5c\x66\x19\x2a\x7a\xcf\xcd\xe2\xc2\x26\x46\x88\x4a\x45\xee\xf1\x3b\x8e\x79\x12\xee\xa9\xdf\x34\xb4\xf3\x6a\x76\xbe\x7a\x4b\x26\xc0\x93\x88\x7a\x26\x44\xa3\xe2\x2c\xe7\x7f\xb9\x0c\x01\x97\x72\x3d\x85\x60\x45\x0a\x45\x82\x8a\xce\x84\x41\x25\x58\x7e\x87\xea\x0f\x54\x9e\x93\xaf\x23\x82\xe7\x63\xb7\x7b\xeb\x01\xf4\xd7\x84\x3d\xb3\x07\xec\xdc\x84\x89\x4c\xc0\x1a\x1a\xd1\x99\x48\xe5\xd8\xc1\xd6\x0e\xec\xab\x79\x1d\x33\xaf\x7f\x68\xad\x4a\x5e\x5c\x71\xdb\xda\x92\xc8\x16\x8a\x5d\x14\xda\x0e\x68\x21\x78\x8e\x29\xab\x72\x73\xad\x12\x54\x63\x48\xe0\x29\x28\xfa\xfe\xf6\x6a\x5d\x0a\xdd\x70\x20\xed\x35\x12\xc1\xd9\x19\x10\x32\x92\x39\x96\x4a\xea\x84\x84\xa3\x87\x60\x1b\x70\x5e\xf3\x44\x1e\xc4\xcd\x8a\xda\xca\x6d\x33\xba\x84\x30\x90\x5e\x26\x7c\x84\x5c\x3e\xd9\x96\x4a\x12\xd4\x73\x3b\x17\x9c\xa3\x9e\x6f\xdc\xf7\xd6\x3f\xb8\x59\xc6\xc7\x4c\x52\x17\x69\x1b\xd0\x68\x72\x94\xca\x87\x4a\x80\xa5\xe1\xb4\x1c\x8c\xa0\xd3\x70\x2b\x8c\x63\x15\xb5\x0d\xa7\x9d\x43\xbe\x84\xf4\xb3\x0d\xa9\x53\x6a\xa8\x7f\x4e\x21\x40\xd7\x3c\x91\x65\xa8\xae\x24\x4b\x30\xf1\xf3\xea\xaa\xf7\x12\x1b\x5e\xdf\xee\xc8\x01\xec\xe3\x68\x7b\x8b\x63\xb8\xb0\x42\x20\x97\x2c\x01\xb4\x42\xe8\xe0\xe1\x72\xb4\xf5\x6c\xcd\xd7\x3b\x7b\xc8\xb0\x7e\x76\xe0\x0e\xb1\x5c\x5b\x16\x44\xb6\x63\xd8\x3a\x5b\xd7\xab\xb9\x29\x58\xb7\x92\xe3\xf2\xec\xd3\xb1\x72\x6c\x46\xba\x99\xbd\x84\x13\x37\x07\xbe\x93\x22\xe5\x19\xbd\x61\xf3\x47\x96\xd9\xfa\xfe\xc0\xf4\x6e\xdf\x6b\xf5\x77\x38\xeb\x9b\xcb\x87\xe8\x68\x7c\xed\xfa\xe0\x53\xb1\xd6\xa5\xff\x08\x77\xbb\xa6\x1c\x83\xc1\x2e\x0d\xe3\xb1\x4b\x87\xf9\x1d\x8d\xff\x0d\xa0\x0f\xb1\x1a\x86\xea\x58\x45\x88\x63\xb8\x61\x19\x17\x2e\x81\x7b\x4f\x14\x2c\xc3\x09\x70\x83\x4b\x7d\x83\xea\xc6\x3d\xad\x37\xad\x62\x7d\xd7\x0d\x24\x76\x96\x78\xdd\x14\xf8\xf2\x01\xaa\xa4\x57\x7c\xc9\x4d\xd8\xd5\x30\xa2\xd7\x69\xaa\xd1\x84\xa1\xd5\x1e\xa6\xf0\x6d\x04\x27\x5b\x36\xf4\x2c\x4b\xb0\xbb\xa2\xac\x16\xff\x9c\x6b\x13\x97\x16\x5e\xd3\x94\xe7\x06\xd5\xe1\x45\x05\x75\x67\x3b\x7a\x9b\xe7\x87\x97\xa3\xd7\x8e\xc9\xed\xb0\xeb\xc6\x5b\x70\xca\x72\x91\x41\xc2\x0c\xb3\x25\x83\x44\x36\xd2\x46\x5a\xb4\xc2\x03\x1a\x83\xca\x4f\xc2\x9f\xcd\x1c\xfc\xa2\xd5\x6e\xd3\xa2\xbe\xac\x76\x9e\xc6\x56\x3b\x9b\xbf\xaf\x5c\xed\xf4\x3f\x9a\xb4\xff\xbf\x0d\x8d\x2d\x65\x25\x0c\x99\x40\x8e\x22\x44\x1d\xfd\x6b\x0b\xd9\x7e\xa1\x6f\x76\xbf\x6c\x76\x6b\x92\xfb\x78\xf8\x4e\xa1\xad\x67\x47\x7d\x39\xdc\xf0\x58\xff\xfa\x3b\x00\x00\xff\xff\x95\x93\x9f\xb4\x3e\x16\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 5694, mode: os.FileMode(420), modTime: time.Unix(1606996556, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\xb8\x09\x46\x21\x65\x36\xfd\xee\x22\x0f\xe9\xdc\x65\xc6\xb6\xa6\x68\xd2\xf5\xa1\x2d\x50\xda\x3c\x49\x4c\x64\x52\x25\x29\x27\x99\xa6\xef\x3e\xf0\x8f\x65\x59\x96\x33\x17\xc3\x36\x4c\x2f\x89\x4e\x77\xc7\xe3\xef\x77\xff\x5c\xd7\xc0\x30\xe5\x02\x21\xca\xa9\x60\x05\xaa\x69\x55\x32\x6a\x70\xaa\x64\x65\x30\x82\xa6\xc9\xc9\x5b\x6a\x56\x79\x1c\x4d\x6b\xce\xea\x1a\x78\x0a\x23\xb2\x98\x93\x85\x5e\x08\x03\x4d\x33\xfb\xf4\x89\x7d\x5f\xd7\x80\x82\x41\xd3\x34\xd1\x18\x72\xf2\xde\xf9\x48\x5a\xe9\xd9\xd9\xd1\x83\xec\x11\x67\x00\x00\xd3\x29\x68\xa3\xaa\x95\x01\x23\x61\xc9\x05\x03\x93\x23\x94\x52\x1b\x58\x4a\xf6\x04\x46\x12\xa7\x67\x9e\x4a\x84\xba\x86\x11\x79\x43\xd7\x08\x7f\xc0\x8a\xae\xb1\x80\xa6\xf1\x87\xbe\xc3\xaf\x15\x6a\xb3\xf5\x55\x3b\x1b\xfb\xd4\xf5\xf4\x1c\x2e\x19\x03\x5a\x14\x90\x72\x2c\x98\x06\x93\x53\x03\x54\x21\x08\x69\x00\x1f\x57\x45\xc5\x90\x11\x38\x9f\x86\x98\xbc\x1d\x28\x2a\x32\x84\x51\x0a\xb3\x0b\x18\x91\x1f\xbd\xed\xa4\xa3\xe3\xf5\x26\x30\xa2\x4e\x25\x25\x97\x42\x48\x43\x0d\x97\x42\x7b\xfd\x2b\x14\x30\x60\xc0\x53\x77\x74\x4c\x05\xb3\xc6\x23\x4a\x6e\xee\x79\x19\xe0\xeb\x1b\x84\x68\x46\x29\xb9\x71\x97\x73\x8e\xa1\x69\x82\xf0\xf6\xa9\x44\xfb\x85\x8b\xcc\x0a\xbf\xdc\x69\x29\x66\x51\x5d\x83\xa1\xd9\x2f\x52\xde\x57\xe5\xce\xf4\x96\x66\x10\x59\x05\x0b\x7f\x14\x58\xa5\x81\xb7\xdf\x68\xc1\x99\x0b\xde\xaa\x05\xff\xc7\x3e\xb6\x1c\x7f\x39\xb8\x5c\xe0\xbe\x2f\x9a\xec\xc9\x3a\xa4\x20\xcb\xf0\x54\x4e\x26\x5b\x52\xd0\x93\xf2\xda\xd9\x3e\xc3\x09\x7e\x0b\x27\x96\x8e\xd8\x9e\x3f\x42\x0f\x6b\xd7\xf6\x27\x9f\xbf\x57\x28\x1c\x59\x89\xd7\x1c\xa6\xf0\x28\x87\x38\xc0\x61\x48\x86\x11\x92\xf7\x82\x7f\xad\x10\x9a\xe6\xe3\xe7\x16\x5f\x6f\xe5\xa2\x59\xcc\x4f\x22\x1b\xff\x6d\xb2\x27\x03\x6c\x07\x51\x73\xb6\x2d\xf2\xdb\x9c\x6b\x48\x2b\xb1\xb2\x6e\xc1\x37\x01\x0d\x14\x32\xbe\x41\xd1\x29\xec\xa6\x81\xb5\x64\x58\x38\x32\x34\xdd\xb8\xd4\x40\x58\xe5\x96\x77\x0d\x5c\xb8\x57\x46\x0d\x5d\x52\x8d\xbe\x37\x58\xb7\x71\xbe\xe7\x24\xb0\x95\x80\xbf\x51\xfc\x00\xb9\x31\x25\x79\x87\xba\x94\x42\xe3\x07\xc5\x0d\xaa\x31\x28\x38\x0f\x72\xd7\x3e\x92\xbd\xc6\x31\x39\x68\x7a\x7b\xd7\xe7\x6c\x0c\xa8\x94\x4d\xb3\x9c\x54\xaa\x78\x4b\x15\x5d\x2f\x84\x89\x1f\xc6\xa0\xc6\x10\x71\x16\x25\xdd\x76\x82\x85\xc6\x93\x7c\x78\x7e\x8f\xba\xe9\x21\xce\x53\xe7\xe1\xbb\x0b\x10\xbc\xe8\xc4\x6f\x1f\x85\xa6\x52\xa2\x15\x05\x36\x02\x23\x57\x68\x76\xbd\xd6\x02\x4a\xda\xaf\xcc\x06\xd4\x6d\xb6\x5a\xd0\x7b\xec\x37\xdb\xba\xb1\x6e\x8c\x64\x12\x26\xb6\x92\xe5\x03\xa4\x52\xad\x27\x95\x2a\x26\x28\x56\x92\x21\x9b\x3e\xae\x8b\x69\xa9\xa4\x91\xcb\x2a\xed\x1d\x12\x02\x9f\x5d\x80\x4d\x52\xf2\x06\x1f\xe6\x68\x8d\x54\xac\xc8\x2b\xc9\x9e\x12\xe2\xdf\xe3\x17\x2c\x79\x79\xfc\x8e\x39\x29\x64\x96\xa1\x22\x1f\xb8\xc9\x5f\x2b\x25\x55\x8c\x4a\x25\xc4\xff\x1b\xa1\xfd\x03\xcc\x7a\xb2\x45\xe3\xea\x21\xe9\x81\x24\x18\x2a\xf2\x8a\xb2\x70\xaf\x16\x79\xb1\xb1\x85\xe0\x6c\xec\x60\xe1\x22\x3b\x30\x7d\x06\xdf\x50\x45\xd8\x26\xec\xd0\xd5\x73\xb2\xf1\x6a\x52\x85\xb2\x8d\x9f\xbd\xad\xb7\x1c\x83\xbc\xb7\xd6\xa8\x14\x89\xcf\x77\x1e\x16\x3e\xe2\x5d\xfd\x3a\x10\x92\x97\x56\xbd\x3e\x68\x48\x27\x21\x17\x9c\x5b\xec\x54\x98\xb1\xf6\x2e\x3d\x20\x3a\x38\x2e\x84\x41\x25\x68\x71\x83\x6a\x83\xca\xfb\xf2\x80\x0a\x5e\x0c\x59\xed\x41\xd8\x83\xf1\xb9\x30\x17\x22\x95\x71\xb4\x69\xef\x0a\x29\xe5\x05\xb2\x13\xd9\xb5\x2e\x4e\xe7\xf2\x86\x6e\x86\x78\x5c\x7a\x0a\x57\x05\x47\x61\x48\xb7\xff\x84\x4e\x7a\x2d\x70\x31\x8f\x39\x4b\x86\x66\xd8\x7f\xb0\x58\x90\x03\xfc\x6f\xd0\x0c\x2d\x17\x31\x23\x43\xe2\xe4\x84\x01\x30\xb4\x00\xfc\x6f\xa6\xf6\x21\x40\xdb\x39\xd0\x19\xcf\x07\x3a\x1d\x20\x43\x0c\x21\x0d\x16\xf3\x00\x64\x7f\xf0\x1f\x16\x82\x03\x73\x60\x44\x6c\x9f\x4b\xc6\x86\xfc\xeb\x23\x07\x10\x42\x12\xb7\x67\xed\x5a\xb4\xc2\xb5\xdc\x20\xf0\xfe\x06\xec\x47\x70\x98\xac\xa5\xdd\xfa\x27\x36\xcd\xf7\x56\xaf\x3e\xe5\x03\x54\x1c\xcf\x84\x83\x4a\xe2\xa2\x37\xc1\xed\x83\xed\x28\x5c\x12\xab\x15\x2b\xf2\x83\x14\x06\x1f\x4d\x9c\x24\x27\x8d\xbb\x93\x1a\x9a\xa6\x1b\xdb\xcc\xba\xc5\x3a\xdc\x32\xbe\xa1\x91\x3d\xdf\x3b\x50\x71\x5a\xf0\xdf\x87\x1a\x88\xcb\xf9\x4c\xc9\xaa\xd4\xbe\x34\x8e\xe4\xae\xcf\xd0\x2b\xaf\xd8\xc1\xf8\xae\xc5\x4c\xe7\xa8\x78\x9a\x92\x5f\xa9\xd2\x39\x2d\xe2\x17\x5b\xc1\x75\xe9\xbc\xd5\xde\x78\x06\x1f\x3f\xfb\x51\x56\x0f\xd5\xd2\x36\x96\x23\xcc\x87\x32\xce\x5c\xac\x5e\xd5\xad\x96\xa3\xcc\xfe\x02\x1c\x58\x4e\xa0\xb3\xfa\xf4\xe5\xf6\x89\x86\x96\x8c\x99\x42\xca\xa2\xbf\xcc\xaf\xa6\x19\x03\xfe\xbd\xc4\xb0\xaf\xae\x60\xe2\x68\xaf\x79\xbb\x97\xc5\xbc\xcd\x8f\x31\xd8\xed\xbb\x4d\x24\x1d\x18\xf5\x63\xc7\xa5\xd5\x3f\x98\x42\x7b\xc1\x1f\x44\xbb\x83\xad\x8d\xd2\x0f\xc6\x21\x95\x10\xd7\xde\x90\x0c\xa1\x5e\xff\x1c\x22\xbb\x4b\xc2\xe6\xde\xd6\xef\x9f\x01\x00\x00\xff\xff\x6c\x68\xf9\x7b\x2e\x10\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 4142, mode: os.FileMode(420), modTime: time.Unix(1606999905, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\xcf\x6e\xdb\x3c\x10\xc4\xef\x79\x8a\xf9\x04\x1f\xa4\xc0\x96\xef\x01\x82\x0f\x05\xf2\xa7\x06\x8a\x1c\xea\x02\x3d\xd3\xe2\x8a\x62\xca\x2c\xe5\xd5\x2a\x41\x20\xe8\xdd\x0b\x49\xb6\x21\x38\x69\xd1\x8b\x75\x5b\x72\x38\x3b\x3f\x72\xd5\x75\xb0\x54\x7a\x26\x24\x42\xc6\xae\xf7\xbb\x04\x7d\x7f\x05\x00\x5d\xb7\xbe\xc6\xa6\x44\x64\x42\x2c\xa1\x15\xc1\xf9\x57\x62\x54\x86\x6d\x20\x81\x93\xd8\xd6\x0d\x7c\x83\x86\x14\x91\x47\x09\x59\x47\x20\xe3\x48\xf0\x1c\x3d\xc3\x6b\x7e\xbd\x9e\x3b\x6a\xb4\x11\x2b\x30\x35\x4a\xf6\xa0\x0c\xd1\x58\xcf\xee\x7f\xcc\xa4\x2b\x88\x61\x47\x58\x10\x6e\x6e\xb1\xc8\xef\xad\xa3\xe6\x98\xed\x4c\xe2\x26\xc9\x17\xe6\xa8\x46\x7d\xe4\x26\xff\x3a\x85\x7c\x24\xce\xbf\x93\xb1\x8f\x53\xd6\xd9\xf1\xf3\x2e\xa3\x47\x53\x07\xaf\x48\xd5\xb8\x6f\x31\xfe\x6a\x6b\x2c\x28\xdf\xaa\xb4\x85\xfe\x30\x0e\xc9\x44\x9c\x64\x48\x96\xc9\xb9\xd7\xd1\xcf\x97\xa0\xfd\x10\x69\xb0\xec\xfb\x7d\xfe\xd3\x6b\xd5\x75\xa8\x4d\x53\x98\x30\x18\x3e\x99\x17\x42\xdf\xa7\x59\xd7\x81\xd8\x62\xf5\x49\xaa\x61\xfd\x8c\x75\xb6\x34\x2b\x0f\x1e\x7d\x7f\x75\x75\xfe\x96\x24\x12\x65\x35\xbe\x96\x67\x77\x0a\x3c\x04\x14\xc1\x7f\xb7\x60\x1f\xd0\x9d\x7a\x34\x6f\x5e\x8b\x6a\xd8\xcb\x53\x7d\xaf\x29\x9b\xed\x0d\x5f\x61\x1a\xc2\x35\xb1\xe6\x4f\x51\x1f\x62\xcb\xf6\x7e\x68\x70\xf3\xe1\x16\xaa\x3c\x44\xe7\x48\x46\xf2\x51\x93\x92\x48\x36\x96\x0f\x9e\x82\x4d\x93\xae\xc3\xe2\x78\x0f\xf9\x58\x6c\xee\x8e\x75\xb2\x84\xb7\x59\x7e\x47\xbb\xd6\xa5\xc9\x73\xdc\x81\xa3\xa2\x1c\x1a\x26\xd9\x87\x66\x42\x6c\x49\x4e\x91\xd2\xb7\x25\x64\x39\x40\x7c\x26\xd5\x56\xf8\xcf\x4c\x5b\xcf\xae\x0d\x46\x2e\x8a\x35\x1d\x4c\x6c\x5b\x07\x5f\x18\x25\x10\xab\xbc\xa3\x8c\x02\xff\x17\xbe\x0d\x2b\x09\x9b\xb0\x25\x79\xa5\x29\xe1\x01\x95\x7d\xf8\x27\x54\x4b\xa5\x69\x83\x5e\x98\x6b\x9c\x39\x94\xa4\x45\xe5\xd9\x81\xa3\x25\x94\x12\x5f\x60\x77\x97\x82\x9b\xa6\x7a\xfe\x27\xfc\x0e\x00\x00\xff\xff\x86\x5e\x99\x66\xd5\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1237, mode: os.FileMode(420), modTime: time.Unix(1605509907, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/date_utc_converter.tpl":    flutterDate_utc_converterTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":             &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl":    &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"date_utc_converter.tpl": &bintree{flutterDate_utc_converterTpl, map[string]*bintree{}},
		"model.tpl":              &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
