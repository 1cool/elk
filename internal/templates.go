// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x14\x7d\xef\xaf\x38\x13\x0c\x58\x2a\x12\x79\xcf\x6e\x1d\x0c\x4b\x17\xa0\x43\x37\x04\x58\xf3\x54\x14\x03\x23\x5e\x39\x5c\x28\x52\x21\xa9\xa5\x86\xa2\xff\x3e\x90\x92\x1c\x59\x96\x95\xa0\x7b\xa8\x5f\x2c\x90\xf7\xeb\x9c\xfb\xa1\xab\xba\x06\xa7\x5c\x28\x42\x94\x49\x41\xca\x45\x68\x9a\x37\x00\x50\xd7\x70\x54\x94\x92\x39\x42\x74\x47\x8c\x93\x89\x70\xde\x5d\x8a\xa2\xd4\xc6\x61\x59\xb2\xec\x9e\x6d\x69\xcd\x85\x5e\x71\xa1\x53\xce\x8c\x5b\xbe\x9b\x14\xc9\x65\xe5\x1c\x99\xd5\xa3\xe0\x5b\x72\x76\x4e\xb4\x34\xfa\x5f\xc1\xc9\xac\xfa\x87\x5e\xb8\x0b\x6c\xf5\x16\x1f\x5b\x15\x77\x47\x50\x9a\x13\x84\xb3\x24\x73\x30\xc5\xc1\xa4\x84\xce\xc3\x15\xf1\x2d\x59\x38\x66\xb6\xe4\x82\x9c\xc5\x0a\x2d\x4e\x9b\xe2\xed\x6a\x84\x26\x4d\x57\x85\xe6\x24\x57\x75\x8d\x45\xfa\x27\x2b\x08\x4f\xb0\x8a\xdd\x13\x9a\x66\x18\x70\x5d\xc3\x30\xb5\x25\x2c\x08\xeb\x0d\x16\xe9\x6f\xc1\x51\xcf\xce\x49\x9b\x94\x7e\xde\x95\x34\x67\x79\xa4\xda\xc6\xfa\x4a\xdd\xba\x06\x29\xee\xf3\xf7\xcc\xd3\x1f\x5e\xcc\x53\x51\x99\x8e\x15\x61\x5b\xc6\x58\x96\x91\xb5\xe2\x56\x12\x9c\x86\x76\x77\x64\xe0\x8d\x21\x17\x92\x86\xec\x64\x5a\x59\x87\x29\x4a\x6e\x8c\xc4\x06\xcb\xba\x46\x6c\xa8\x94\x2c\x23\xc4\x87\x42\x09\xa2\xbf\x23\x44\xe7\x51\x82\x27\x94\xb2\x32\x4c\xa2\x69\xfa\x4c\x66\x92\x59\x3b\xb0\xdc\x34\x97\x01\x2f\xea\x3d\x17\xc7\x97\x71\xfd\x8b\xa1\x87\x4a\x18\xe2\x01\x4d\xca\x85\x6e\x12\xac\xc1\xac\x25\xe3\x62\x2e\x34\x7e\xda\x40\x55\x52\x26\x9d\x1f\xff\xcb\x85\x62\x12\x1f\x84\x06\x17\x7a\x70\x1e\x58\xba\x12\xbe\x6e\x60\x85\xda\xca\xae\xa0\x6e\x77\x10\x7c\xc0\x82\xff\x5d\x55\xae\x32\xf4\x7e\x18\xd3\x85\x37\xcc\xe3\x70\xf4\xf1\x43\x48\x11\x9e\x02\x8f\xe1\xb1\x69\x20\x78\x02\x66\x77\x2a\x1b\xa0\x7a\x0e\xc8\x60\x03\xf6\xc8\x84\xf3\x61\xa5\x5b\x72\xf1\x72\xb5\x38\xc1\xf5\x6a\x21\xf8\x32\x79\x77\x60\xc5\x90\xab\x8c\x3a\xa0\x29\xcd\x8d\x2e\x7e\xb7\x5a\xc5\xbe\x6f\x1c\x1b\x68\x34\x23\xdc\x9f\x84\x75\x28\x2a\xe9\x44\xd9\xe1\xb6\x3e\xfd\x8e\x3c\xb9\xb7\x3b\x3c\x54\x64\x76\x28\x99\x61\x85\x9d\xe6\xc2\x5b\x38\x24\xe4\x02\x52\x58\x17\x1f\x82\x15\xca\xa1\x64\x5b\x3a\x3b\x3a\x15\x8e\x0a\x7b\x4d\xe6\xfa\xe8\xb6\xae\xcf\xfb\x2e\xcb\xdb\x2e\xbb\x12\x24\xb9\xc5\x20\x8a\xa1\xec\xe2\x1f\xab\x55\x88\x62\xbd\x81\x50\x9c\xbe\x21\xb6\xa5\x14\x0e\xb1\x63\xdb\x4f\x5a\xdf\x57\x25\x16\x79\xfa\x97\x33\x55\xe6\x3e\xb3\x2d\x22\xaf\x11\x25\x88\xce\xa2\x04\x3f\x4f\xdb\xf5\x1a\x13\x59\xf5\x17\x7b\x7f\x4d\x33\x8e\xbc\x6f\xc4\x3d\xf1\x73\x35\xd0\xf2\x8b\x4d\xdf\x69\xcd\xa0\x3c\x03\x4d\x39\x62\x4f\xde\xbe\xac\x47\x56\xfc\xaf\xb5\xf1\x65\xe9\xe5\x96\x5f\xb1\x09\x6c\x1f\x96\x4a\x73\x6c\x75\x48\xfe\x6b\xac\x0f\xe5\x83\x97\xe1\xc1\xac\xb7\xe7\x89\xf9\xc3\x72\xe9\x01\x8f\xd2\x36\x87\x79\x88\x7b\xa4\x16\xa0\x8f\xce\xde\x1d\x19\x68\x4e\xd4\xc4\xff\x9c\x02\xcb\x64\xa2\x3c\xda\x4e\xc7\xe6\x34\x9c\x6e\x50\x7c\xf9\x3a\x9b\xa6\x4e\xaa\xb7\xc7\x6c\x18\x11\x49\x5a\xb0\x32\x8e\x45\x82\xcd\xc5\x89\x51\x23\x92\x24\x75\xda\x0b\xc7\x33\xf3\xe6\xd2\x90\x5f\x27\x18\x14\x3d\xb6\x63\x56\xab\xf0\x76\x32\x54\x68\x47\xaf\x19\xb7\x59\x30\x11\x0f\x0f\x41\xaf\x9f\xb0\xa5\xb6\xb3\xe4\x9e\xc1\x03\x5f\x83\x52\xa7\x03\xb0\x64\x7a\xe0\xc6\xb3\x13\x77\x86\x82\x9b\x92\x77\x14\x7c\x17\xfc\x2a\xa8\x7f\x3f\x7c\xe6\xb2\xbb\x1f\x8a\xff\x8a\x5c\x76\xb7\xdf\xdb\x6c\xbb\xa2\x8d\x90\x4f\xaf\x57\xa3\x96\x7e\xa6\x47\xe4\x7e\x3b\xba\x51\xe2\xa1\xf2\xd1\x8c\x97\xa5\x70\x42\xd2\xfa\xa7\xfd\xeb\xea\x50\xe0\x62\xdf\x9d\x6d\x7d\xef\xd7\xac\x8c\x15\xe4\x37\x96\x57\x11\x7e\x8a\xf4\x97\xde\xea\x35\xa5\xfd\xfe\xd0\x79\x68\x5a\xe9\xe9\x95\xaf\x9b\x01\x63\xcf\x63\x22\xce\x27\x46\xe0\x38\x81\x87\x2c\xcc\xa5\x71\xe0\x25\x50\xf9\x92\xf5\x17\x06\xc8\x29\xc7\xd3\x63\x64\xe8\x5c\xf1\x23\xdf\x07\x85\x33\x1e\xb2\xc3\x2d\x78\xb8\xfa\xf6\xbb\xef\xed\x2e\x14\x63\xd8\x7c\xfb\xcf\x0d\x74\x1f\x22\xa3\xb2\xb4\x8e\x39\x91\x4d\xed\xab\x3a\x8f\x7f\xad\x84\xe4\x97\x5a\x39\xfa\xe6\xfc\x8b\xdc\xff\x07\xb8\xd7\xfd\x37\x8c\xce\xdf\x1f\xab\x5e\xc4\x9d\xec\x59\x58\x9b\x48\xad\x91\x33\x69\xa9\x43\xdf\xbc\x19\x40\xfa\x2f\x00\x00\xff\xff\x87\xbb\x7b\x8c\xac\x0d\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 3500, mode: os.FileMode(420), modTime: time.Unix(1605473089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4f\x6b\xdb\x4e\x10\xbd\xe7\x53\xbc\x5f\x08\xc4\x0a\x8e\x7c\x57\x7e\x09\x69\x53\x68\x4b\x69\x28\xf8\x90\x43\x29\x66\xab\x1d\xdb\x83\xd7\xbb\xea\xee\xc8\x89\x51\xf5\xdd\x8b\xfe\x58\x96\xec\x60\xd2\xee\x45\xec\xcc\xbc\xb7\xf3\x66\x9e\x8a\x02\x9a\xe6\x6c\x09\xe7\xa9\x61\xb2\x32\xc9\xbc\xdb\xb0\x26\x7f\x8e\xb2\x3c\x03\x80\xa2\x80\xd0\x3a\x33\x4a\x08\xe7\x4b\x52\x75\xee\xba\x4d\xf2\x3a\x73\x5e\x70\x99\xa9\x74\xa5\x16\x94\x68\x76\x13\xcd\x2e\xd6\xca\xcb\xe5\xcd\xab\x25\x73\x93\x8b\x90\x9f\x3c\xb3\x5e\x90\x84\x53\xa5\xbb\x5e\xba\xa6\xde\x54\x1c\xd8\x2e\x0c\xcd\xd2\x25\x1b\x3d\x6b\x5e\xd9\xe1\x5a\x41\x93\x2b\x7c\x6e\xd0\xb4\x21\xbf\x85\x75\x9a\x70\x35\xd9\x0b\xf6\xca\x2e\x08\x17\x16\xc9\x2d\x2e\xe2\x47\xa7\x29\x74\x92\x9b\x92\x6b\xf0\x1c\xd6\x09\x2e\x6c\xfc\xce\x5a\x27\x4a\xd8\xd9\x10\x7f\x52\x56\x1b\xf2\x1f\xc9\xc6\xd3\x15\x67\xe8\x81\xfa\x4d\x17\x45\x05\x7c\x54\x6b\xc2\x6f\x04\xab\x56\x84\xb2\xec\xab\x6b\x1b\x21\xab\xbb\x87\x7b\xd7\xbd\x8e\x6f\x8d\x6a\xc8\x92\xd0\x6c\x30\x40\xbb\x67\x5b\x07\x1a\xf1\x10\x4f\x14\xef\xf5\xa5\x46\x85\x80\x87\xba\xb8\x85\x7b\xd0\x8b\x90\xd5\x01\xd3\x7a\x78\x0f\xd5\xec\xa6\xa2\x84\x0c\x85\xf0\xd4\xd0\x14\x5d\x63\x43\xec\xa8\x18\x48\xfc\x42\x5b\xac\x68\x3b\x1e\x04\xef\x3d\xfd\xca\xd9\x93\x86\x2c\x39\xc4\x9a\xdd\x30\x5f\x47\xeb\x8d\xed\xe3\x65\x84\x04\x2a\x04\xf2\x32\xd2\xec\xf0\xdf\x2d\x6c\x6e\x4c\x34\x46\xc8\x33\xf2\xa3\x15\x6d\x93\xfa\x25\xd4\xc0\xa4\xf9\x44\xed\x96\xab\x33\x67\xab\x0c\x3e\xb0\x83\x66\x77\x73\x10\x6e\x55\xd5\xa0\x1e\xe6\xde\x6d\xc8\x7b\xd6\xd4\x45\xda\xc2\x9f\x39\x1b\xfd\xc4\xb2\xac\x87\x33\x7a\x5f\x5d\x1f\x9c\x15\x7a\x11\xa4\xcd\x77\x3c\x20\x8d\x30\x1c\x8c\x27\xc9\xbd\xc5\xd7\xdc\x08\x77\xb3\x1b\x54\x54\x67\x67\xe3\x90\xe0\xfb\x51\xf2\x8d\xf6\x3c\x86\xfc\xa3\x5d\x0f\xcf\xae\xed\xff\x7b\xfe\x2d\xcb\xc6\x0e\x77\xc7\x5a\x0e\x4f\xea\x49\x09\x25\x18\xcd\x22\xdc\xde\xe1\x15\x92\x6a\xd1\x49\xb5\xad\x68\x7c\x92\xed\x44\xfa\xe0\xaf\xf9\x8b\xf4\x8f\x63\xd2\xbe\xb3\x86\xd9\x68\xef\xa7\x86\xa9\x3c\x6b\xa9\xcb\xf2\x4f\x00\x00\x00\xff\xff\xe4\x64\xed\x6d\x56\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1366, mode: os.FileMode(420), modTime: time.Unix(1605565331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x4f\x6f\xdb\x30\x0c\xc5\xef\xfd\x14\x0f\x41\x80\x26\xc5\xe2\xdc\xfb\x27\xd8\x61\x0b\xb0\x61\xdb\xa5\xd9\xb9\xe0\x2c\xca\xd1\x6a\x4b\x9e\xa4\x0e\xc8\x5c\x7f\xf7\x41\xb2\x1d\x3b\xae\x87\x14\x43\x6f\xb6\x28\xfe\xf8\xc8\x47\x55\x15\x04\x4b\xa5\x19\xb3\xc2\x08\xce\x67\xa8\xeb\x0b\x00\xa8\x2a\x78\x2e\xca\x9c\x3c\x63\xb6\x67\x12\x6c\x67\x58\xb5\x41\x55\x94\xc6\x7a\x5c\x96\x94\x3e\x52\xc6\xd7\x3f\x9d\xd1\x0f\xa4\xb5\xf1\xe4\x95\xd1\xeb\xd1\x7f\x22\xc8\xfa\xcb\x9b\x8b\x16\xbc\xbe\xc2\xd6\x58\xf0\x6f\xb6\x07\xb0\xc8\xb8\xe3\xf9\x3d\x23\x63\xcd\x96\x3c\x0b\x44\x3d\x09\xae\xd6\xbd\x22\x4b\x3a\x63\xcc\x19\xd7\x77\x98\x27\x1f\x45\xc6\xae\xd3\x3b\x94\x95\x24\xeb\x98\xbc\xae\x2a\xcc\x39\xd9\x1d\x4a\x4e\xbe\x51\xc1\x78\x86\xd3\xf4\xc8\xa8\xeb\x4e\x52\x0b\x66\x2d\x02\xa8\x17\xf8\xd9\x19\x7d\xcf\x56\x51\xae\xfe\xd0\x8f\x9c\x51\x3e\x79\x37\x12\x98\x1a\xc1\x50\x1a\x7e\xaf\x1c\xa4\xca\x79\x20\xb6\xa4\x20\x24\xd4\x7f\x51\x39\x3b\x19\xc7\xfb\x71\xa5\xc5\x32\x9e\xa7\x39\x39\x87\x1e\x50\xd7\xa8\x8e\x8d\x0e\x8f\x17\xcb\x96\x74\xd4\xbe\xdb\x33\xa4\xe2\x5c\x38\x18\x19\x35\x8f\x47\x79\x64\x7c\xfa\x10\xa7\x83\x67\x04\x4d\xf1\x33\x14\x6a\x43\x6d\x85\x9b\x41\xce\xaa\xf3\x40\x36\x1e\x6c\x9b\x3a\xab\x01\xb8\x83\xcb\x7f\xa1\xe5\x14\xf8\xc4\x82\x93\x56\x38\xda\x7c\xae\x93\x16\xd9\xec\x44\x4c\x19\x8c\x45\x52\xea\x8d\x3d\x9c\xdc\x4c\xa4\x35\x45\x18\xfe\xe2\x2b\x95\xb7\xf7\xde\x2a\x9d\xbd\x83\x38\x68\x2a\x54\xba\x41\x58\xe1\x25\xee\x36\x78\x98\x0f\xb3\xb6\x5d\x52\x8c\xf7\x0d\x4c\x32\xbc\x89\x57\x27\x30\xbb\x26\x12\x36\xa7\x85\x0c\x97\xef\x6c\xd7\xaf\x5f\x9a\x66\x1e\xd3\x9b\x13\x63\xa3\xf5\x39\xf7\xc4\xda\x5b\x4a\x86\x87\xf5\x5d\xab\x5f\x4f\x81\x34\x7e\x67\xf1\x84\x73\x17\xbe\xbe\x28\xe7\x6f\x5f\x5e\xd8\x1c\x2d\x47\x13\x7c\xcd\x4e\x4c\xf9\x18\x25\xfe\x9f\x99\x31\xf5\x8d\x1c\x8d\xac\x29\x5b\xfb\x36\xfe\x06\x00\x00\xff\xff\x3b\xa8\x13\xcd\x6c\x05\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 1388, mode: os.FileMode(420), modTime: time.Unix(1605530268, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x6f\x6f\xdb\xb6\x13\x7e\xaf\x4f\x71\x3f\xc1\x68\x65\xff\x6c\xca\xe9\x80\xbd\xc8\xe0\x17\x5d\x86\xb5\x05\xd2\x20\x4b\xda\xf5\x35\x23\x9e\x25\x22\x12\xc9\x92\x94\x1d\xcf\xd0\x77\x1f\x48\xfd\xb1\x1c\xcb\x41\xe2\xa5\xc0\x30\x01\x01\x2c\xde\x1d\x9f\xbb\xe7\x1e\x1d\x99\xed\x16\x46\xea\x3e\x85\xf3\x05\xdc\x51\x83\x10\x66\x54\xb0\x1c\x75\x08\x55\x15\x6c\xb7\x33\x58\x73\x9b\x01\x3e\x58\x14\x0c\x46\x10\x5e\xd3\xe4\x9e\xa6\x18\xf6\x1c\x67\x55\x15\x00\x00\x6c\xb7\x60\xb1\x50\x39\xb5\x6e\x1b\xa4\xcc\x19\x49\xbd\x0f\xb8\xf0\xaa\x0a\x02\x5e\x28\xa9\x2d\x44\x3e\x22\x14\x68\xe3\xcc\x5a\x15\xd6\xaf\xc6\xea\x44\x8a\x55\x18\xd4\xaf\x29\xb7\x59\x79\x47\x12\x59\xc4\xa9\x9c\x25\x19\x8f\x93\x8c\x87\x43\x36\x95\xd3\x4d\xaa\x65\x29\x58\xbc\xa2\x39\x67\xd4\x4a\x1d\xaf\xce\xe6\x87\xce\x39\xe7\x2a\x36\x19\x6a\xbe\x5c\x1e\x5a\x0b\x6a\x0c\x62\x9e\x64\xb1\x46\xe1\xf2\x3f\xf0\x30\x5c\x97\xca\xa0\x88\x73\x99\xea\xd2\xb4\xa9\x3a\x1a\xc9\x85\x14\x4b\x9e\x92\x86\x22\xa8\xaa\x30\x18\x07\x41\x1c\xc3\x6d\x46\x35\x32\x68\x18\x23\x81\xdd\x28\x6c\xdf\xc0\x58\x5d\x26\x16\xb6\x7e\xa3\x49\x92\x71\xf2\xb9\x7c\xa8\xb7\x4d\x72\x8e\xc2\xfa\x75\x14\x96\x5c\xf8\x57\x6f\xe9\xaa\x84\x49\xf7\x93\xfc\x59\xff\x42\xef\x91\xcb\x34\x45\xed\x63\xeb\x54\xc9\xa5\x5f\x09\xaa\xc0\xf5\x43\x53\x91\x22\x8c\x84\x6b\xfc\x88\x5c\x49\x86\x06\x76\x7d\xe4\x4b\x10\xd2\xc2\x48\x90\xf7\x42\x48\x4b\x2d\x97\xc2\x90\x8f\x75\xc6\x1f\x50\x90\xdb\x7b\xae\x7c\x3f\xa1\x79\xe2\x18\xbe\x64\xe8\x62\x47\x82\x5c\xd1\xc2\x95\xff\xb1\xad\xb7\x75\xf2\x75\x0f\xb9\xec\x93\xd0\x3e\x93\x86\xa2\x6e\x71\x1f\xef\x42\xa3\x93\x1a\x05\x81\xeb\xc1\x5d\x3b\xe7\x65\x29\x12\xb8\xc2\xf5\x90\x53\x94\xf4\xc9\x9d\xc2\x6a\x88\xd1\xa9\xa3\xf3\x11\x91\x63\x98\x0c\x96\xb2\x5f\x43\xe6\x08\x7e\x33\xe4\xb8\xef\xe7\x9e\x37\xd9\x31\x8b\x7b\x3e\x97\x0f\xe7\xdd\x8b\x93\xc9\x15\xae\x6f\x64\x69\x51\x47\xe3\xe9\x60\x44\x2d\x1f\x1f\x94\x0c\x7b\x74\x95\x9e\xc3\x6a\xd8\xa3\x96\xd1\x79\xf3\xf3\xd0\xa7\xda\x5f\xea\x75\x08\x5e\x20\xa5\xa6\x95\x55\xb5\x3f\x43\x6a\xa7\x38\xf1\xd6\x58\xbb\x62\xc3\xda\xa9\x19\x27\xa7\x60\xdd\x20\x65\xc7\x90\x34\x52\xf6\x5a\x38\x5f\x15\x7b\xa2\xa6\xd2\x5b\x87\xb0\xb6\xdb\x78\x72\x0a\xde\x6f\x98\xe3\x71\x3c\xe6\xad\x03\x78\x93\xf8\xc4\xfa\x2e\xb9\xb1\xc7\xd0\x72\x6e\xec\x50\x6d\x8f\x80\xe2\x09\x58\xc9\x24\xcc\xc0\xb8\x79\xa2\xd1\xc8\x52\x27\x68\x60\x28\xa9\x43\x14\x53\xde\xb5\x21\x71\x8a\x1d\xe0\x48\x1c\x40\x69\xb4\xa5\x16\x90\x0d\x4d\x92\xd7\xd4\x68\x03\x7e\x28\x9c\xd7\x12\xe7\x3f\x06\x78\x8e\x2a\x0f\x40\xfa\x92\x7c\x4d\x39\x1e\x17\xe2\x6b\x89\xf0\xa0\x94\xe0\xa5\xea\x7b\x8e\xf2\x5a\xcd\x35\xfe\x1d\x6b\x1d\xa8\x07\xbb\x95\x05\x42\x86\xb9\x42\xdd\x60\xf8\x73\x29\xca\xda\xab\xc0\x18\x4a\x9d\x5f\x53\x4d\x8b\x4f\xc2\x46\x6b\x70\x37\x23\x72\x83\x46\x49\x61\xf0\x9b\xe6\x16\xf5\x14\x34\x4c\x9a\xf5\xef\x25\x1a\x3b\x05\xe5\x02\xdc\x01\xca\x45\x3a\x86\x88\x33\xe0\xee\x1c\x43\xad\xdd\x9f\xd4\xe3\xe6\x44\x52\xee\x24\x72\xe7\xc6\xd7\x9b\x4b\x0f\x12\xe9\x26\x78\xec\xed\x7c\x09\x0a\x16\x0b\x08\xc3\xde\x11\x96\x91\xfa\x00\x20\xdf\xb8\xcd\x7e\xe7\x98\xb3\x28\xf4\x31\x61\x1b\x4b\x3e\x89\xa5\x8c\x42\x2c\x94\xdd\xb8\xfc\xeb\xe5\x70\x1c\xec\xbe\x3d\x77\x93\x22\xbf\x52\xd6\xa4\x1c\xad\xa7\xd0\x42\xc3\xff\x21\x84\x84\xba\x06\xc3\x1d\xc2\xdb\xb7\x7b\x81\xee\xa3\x0d\x7a\x9f\x2b\x67\x75\x5d\x0b\x68\x6e\x8a\xe4\xbd\x95\x3c\x52\x5d\x01\xce\xf8\xbf\x05\x08\x9e\x3f\x5d\x83\xc7\x9e\x82\xea\xb2\x77\x44\xb9\x8c\x0c\x17\xe9\xae\x0a\xb4\xa8\x5f\x54\x49\x51\x1a\x5f\x07\x05\x25\x0d\xb7\x7c\x85\xae\x19\xe8\x2e\x62\xa9\x1f\x10\x1a\xfe\x42\x2d\x9f\x2c\xb2\x59\xa9\x82\xe3\xf2\xf8\xc2\x0b\x3c\x55\x1f\xfe\xf3\xb7\xbc\x40\xe2\x76\xf9\x6f\xea\xa4\xbe\xb2\xd5\x4a\xf1\xa5\x5e\x53\x6d\x30\x0a\xdf\xcd\xe7\x3f\xcf\xe6\x67\xb3\xf9\x3b\x97\xd6\xbf\x50\x35\xfe\x3e\xe6\xd3\x07\x2e\x60\xb3\xd9\x6c\x66\x45\x31\x63\x0c\x96\x52\x17\xd4\x9e\xaa\x1b\x45\x53\x2e\xfc\x00\xf5\x89\x3f\x4f\x39\x63\x88\x94\xfb\x37\xc6\x4f\x13\x6e\xb1\x30\xd7\xa8\xaf\xbb\x95\x43\xdd\x38\xd3\x02\xce\x6a\x56\xfb\xfe\x0b\xf8\x69\x1e\xb4\x64\x33\x27\x2f\xed\xc4\x45\xfe\x28\x51\x6f\xa2\x31\xf9\x80\x36\x0a\xfb\x11\xe1\xf8\x17\x60\xae\x25\x7b\x1a\xeb\x7b\x0c\xce\x01\xb6\xa3\xe7\x58\x57\x8f\x69\x75\x0f\x7d\x0a\x6c\xb8\xc5\xdf\x5d\xc2\xbb\x26\xc3\xdb\x7e\x58\x5f\x92\x4f\xf5\x7d\x0f\xeb\x84\x89\xf1\xa8\xfb\xb5\x02\xfa\x43\xf2\x38\xc7\xea\x28\xb7\xea\x07\x70\xaa\x5e\xc6\xa5\x7a\x09\x87\xea\xc7\x70\xb7\xfb\x86\xfe\x0e\x00\x00\xff\xff\xd0\xc1\x4f\x3d\x18\x11\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 4376, mode: os.FileMode(420), modTime: time.Unix(1605566705, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4b\x6f\xdb\x46\x10\xbe\xfb\x57\x4c\x09\x21\x20\x0d\x69\x79\x77\x90\x43\x12\xa7\xae\xd0\x36\x29\x62\xb7\x39\x04\x01\xb2\xd2\x0e\xc9\xb5\xe9\x5d\x65\x76\xe9\x47\x59\xfe\xf7\x62\x1f\xa2\x28\x89\x72\x94\x16\x6d\x51\x5e\x6c\xae\xe6\xb5\xdf\xf7\xcd\x0c\xdb\x16\x04\x16\x52\x21\x24\x15\x57\xa2\x46\xca\x97\x84\xdc\x62\x4e\xba\xb1\x98\x40\xd7\x55\xec\x17\x6d\x6c\x9a\xe4\xc9\x14\x2a\xf6\xda\xff\x9a\xb5\x2d\xa0\x12\xd0\x75\x27\x27\x07\x43\x38\xe7\x13\x00\x80\x3c\x07\x63\xa9\x59\x5a\xb0\x1a\x16\x52\x09\xb0\x15\xc2\x4a\x1b\x0b\x0b\x2d\x1e\xc1\x6a\xe6\xed\xec\xe3\x0a\xa1\x6d\x61\xc2\xde\xf2\x5b\x84\x3f\x60\xc9\x6f\xb1\x86\xae\x0b\x49\xdf\xe3\x97\x06\x8d\x5d\xc7\x6a\xbd\x8f\x7b\xda\x36\x3f\x85\x97\x42\x00\xaf\x6b\x28\x24\xd6\xc2\x80\xad\xb8\x05\x4e\x08\x4a\x5b\xc0\x87\x65\xdd\x08\x14\x0c\x4e\xf3\x58\x53\xf0\x03\xe2\xaa\x44\x98\x14\x70\xf6\x02\x26\xec\xfb\xe0\x3b\x1b\xd8\x04\xbb\x19\x4c\xb8\x37\x29\xd8\x4b\xa5\xb4\xe5\x56\x6a\x65\x82\xfd\x05\x2a\x18\x71\x90\x05\x68\x82\xd4\xa5\x9f\xf0\x0c\x26\x3c\x42\xb7\x6b\x1b\x0b\x99\x14\xec\xd2\xdf\xcb\xc7\x84\xae\x8b\x87\x57\x8f\x2b\x74\xbf\x48\x55\xba\xc3\xcf\xd7\x46\xab\xb3\xa4\x6d\xc1\xf2\xf2\x27\xad\x6f\x9a\xd5\xc6\xf5\x8a\x97\x90\x38\x03\x87\x7c\xe2\x02\xc8\x62\x93\xf8\x37\x5e\x4b\xe1\x0b\x77\x76\x5d\x77\x17\xde\xd1\x47\x3b\x68\x95\xf4\x4c\x7f\xde\xbb\x62\x54\xc0\xee\xd1\x6c\xeb\x6c\x40\x0d\x8a\x12\x8f\x65\x66\xb6\xa6\x06\x03\x35\x6f\xbc\xef\x13\xcc\xe0\xb7\x30\xc3\x95\x88\xd4\x60\x40\x78\xe8\xfb\x43\x50\xf1\x05\x2a\x76\x79\x23\x57\x19\xa4\xa3\x44\x66\x87\x98\xc4\x11\x26\x65\x01\x31\xdd\xaf\x4a\x7e\x69\x9c\x0a\x3e\x7e\xea\xa1\x0d\x5e\xbe\x90\xf9\xf9\x51\x94\xe3\x7f\x48\xf9\x6c\x84\xf3\x78\xd4\x9d\xac\x1b\xfe\xaa\x92\x06\x8a\x46\x2d\x5d\x5c\x08\x03\xc1\x00\x07\x85\xf7\x83\x16\xef\x3a\xb8\xd5\x02\x6b\x4f\x88\xb1\x9a\xd0\x80\xb4\x20\x95\x9f\x10\x82\x5b\xbe\xe0\x06\xc3\x74\x70\xc1\xd2\x6a\xcb\x39\x32\x95\x41\xb8\x48\x7a\x0f\x95\xb5\x2b\xf6\x1e\xcd\x4a\x2b\x83\x1f\x48\x5a\xa4\x29\x10\x9c\xc6\x73\x3f\x40\xb2\xc1\xe8\xc8\x73\xb8\x40\xbb\x99\x47\x2e\x25\xeb\x7f\x15\x4e\x59\xc3\x81\x64\x14\xbf\xc1\xdd\x81\xd4\x76\x2e\x8c\xd5\x42\xc3\xcc\xe9\x5c\xdf\x43\xa1\xe9\x76\xd6\x50\x3d\x43\xb5\x14\x5a\xa0\xc8\x1f\x6e\xeb\x7c\x45\xda\xea\x45\x53\xec\x64\x91\x05\x20\x91\x4b\xe5\x88\x64\x6f\xf1\xfe\x1c\x97\x5a\x20\xa5\xc4\x5e\x69\xf1\x98\xb1\xf0\x9e\x3e\x13\xd9\x73\x6f\xfa\xdd\x0b\x50\xb2\x1e\x5c\xc3\x3d\x15\xab\x75\x59\x22\xb1\x0f\xd2\x56\x6f\x88\x34\xa5\x48\x94\xb1\xf0\x6f\x82\xee\x0f\x08\x17\xc9\x09\xcb\x6b\x26\xdb\x0a\x40\xa8\x04\x12\x7b\xc5\x45\xbc\x58\x7a\x3f\x05\x9a\x42\x22\x95\x17\x8e\xf7\x71\xd3\x57\xaa\x72\xcf\xd5\x36\xa4\xfa\xa3\x28\x83\x08\x70\xd4\x17\xf6\x9c\x8e\x5d\xbd\x62\x51\x9c\x9a\xa2\xb4\xd3\x27\x6f\x1b\x3c\xa7\xa0\x6f\x9c\x37\x12\xb1\xf4\x74\x13\x61\x1e\x2a\xde\x28\xdb\x83\x90\x3d\x77\xe6\xed\x5e\xd3\x1e\x85\x5c\x0c\xee\xb0\xa3\xb8\x88\xdc\x5d\x76\x80\x18\xe0\x38\x57\x16\x49\xf1\xfa\x12\xe9\x0e\x29\xc4\x0a\x80\x2a\x59\x8f\x79\x6d\x41\xb8\x03\xe3\x53\x65\xce\x55\xa1\xd3\xe4\xae\xbf\x2b\x14\x5c\xd6\x28\x8e\x64\xd7\x85\x38\x9e\xcb\x4b\x7e\x37\xc6\xe3\x22\x50\xb8\xac\x25\x2a\xcb\x86\x2d\x1a\x67\x4c\x9a\x8d\xcd\xf6\x7f\x77\xed\xb2\x3d\xcc\x2f\xd1\x8e\xad\xde\x54\xb0\xb1\xe3\xec\x88\x69\x38\xb6\x13\xff\x0f\x8b\x6c\x1f\x9b\x98\x60\xb8\xb1\xf6\x6c\x06\x18\xc6\xf4\x91\xf5\xf9\x79\xc4\x70\x77\x17\xee\xeb\xde\xe3\x58\x9b\x83\xf1\x5f\x0a\x31\x16\xdf\x1c\x48\xc0\x18\x3b\x90\x63\x9b\x98\xaf\x53\xb8\x25\x7b\xb7\x9a\xdc\x5a\xda\x5e\x49\xee\xc1\xe9\x7a\x84\x2d\x98\xeb\x8e\x94\xd8\x6b\xad\x2c\x3e\xd8\x34\xcb\x76\x07\xdd\x5f\x1f\xdc\x86\xdf\xb9\xd1\x33\x6c\xad\xf1\x06\xff\x86\xb1\xf3\x74\xa7\x23\x49\x5e\xcb\xdf\xc7\xda\xdd\xab\xb5\x24\xdd\xac\x4c\x10\xf5\x01\xd5\x05\x7d\x5d\x04\xc3\x01\xc8\xd7\x3d\x66\xa6\x42\x92\x45\xc1\x7e\xe6\x64\x2a\x5e\xa7\xcf\xd6\x07\xef\x56\x3e\x5a\x1b\x9c\xcf\xe0\xe3\xa7\xb0\x78\xda\xb1\x2e\x58\xd7\x32\xfa\x41\xd6\x37\x60\xe9\x6b\x0d\xa6\xfe\x2b\x67\x52\x76\x5d\x32\x8d\x8c\xef\x77\x64\x90\xe5\xee\xb9\x7b\x92\xb1\x6f\x82\x33\x42\x2e\x92\xaf\x0a\xac\xeb\xa6\x80\x7f\x4f\x18\xee\xd5\xeb\x3d\x4d\xb6\x46\xad\x7f\x99\x9f\xf7\xfa\x98\x82\xfb\x9e\xec\x85\x64\x22\xa3\x61\x49\x78\x59\xfd\x83\x12\xda\x2a\x7e\xaf\xda\x0d\x6c\x7d\x95\x61\x8d\x8d\x99\xc4\xba\xb6\x56\x5a\x2c\xf5\xdd\x8f\xb1\xb2\xeb\x2c\x7e\x80\xf6\x0d\xfc\x67\x00\x00\x00\xff\xff\x70\x81\xfd\xb7\xdb\x0e\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 3803, mode: os.FileMode(420), modTime: time.Unix(1605565331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\x12\x46\x4d\x2d\x6c\xba\xbd\x6e\x61\x14\xd9\xdd\x34\x0d\x9a\x36\x69\x92\x45\x0e\x45\x0f\xb4\x39\x92\xd8\xd0\xa4\x4d\x52\xc9\x6e\xb5\xfa\xef\x05\x29\xc9\x91\x2d\x39\xd9\x02\xb9\x54\x97\xc4\xe2\xe8\xcd\xd7\x9b\x79\x2c\x4b\x10\x98\x4a\x8d\x40\x72\xae\x85\x42\x3b\x57\xd2\xf9\xb9\x35\x85\x47\x02\x55\x95\xb3\x33\xf4\x94\xcc\xc9\x14\x72\x76\x21\x9d\x4f\xca\x12\x50\x0b\xa8\xaa\xd1\xe8\xd8\xd7\xdb\x02\xed\x97\x59\x2a\x95\x47\x1b\x40\x46\x00\x00\xf3\x39\x7c\x72\x08\x3e\x47\x88\xe7\xb0\xe1\x96\xaf\xd1\xa3\x75\xe0\x0d\xd4\xd6\x4f\xc7\x0c\xbc\x11\x06\x66\xa0\xd1\x79\x14\xcd\xf9\x4f\x11\xaa\x2c\x67\x60\xb9\xce\x10\xc6\x29\xbc\x5b\xc0\x98\xfd\x2c\x51\x09\xd7\xba\x6a\x6d\xc6\x7f\x3b\xa3\x7f\xe7\x6b\x0c\x46\x52\x0b\xfc\x0c\xd4\x6d\x94\xf4\x40\x3d\xcf\x2e\x8c\xb9\x2f\x36\x30\x4e\xd9\x8d\xb7\xc5\xca\xdf\xf2\x0c\x48\xf8\x82\x24\x40\xa6\x24\x81\xef\xbb\x78\x32\x85\xe8\xcb\xb2\x4f\xd7\x17\xec\x8f\x10\x22\x4d\xea\xe2\x94\x65\xc7\x53\x55\x91\xe4\x47\x48\xe1\xcd\x02\x08\x81\x72\xf7\x7d\x1b\x93\x4c\x83\xc7\x73\xf7\xde\x18\xd5\xc5\x6f\x9f\x07\x6e\x61\x09\x4b\x63\x54\xef\x28\x86\xb0\x58\x00\xf1\xb6\xc0\x43\xec\xf6\x59\xc2\x02\xc2\x79\xef\xb0\x02\x54\x0e\x9f\x40\x52\xae\xdc\xb3\x28\xd1\xe0\x18\xcc\xf0\x67\x39\x53\x26\xcb\xd0\xb2\x3b\xe9\xf3\x53\x6b\x8d\xa5\x68\x6d\x12\x7f\xc6\x16\xf5\x8b\x35\x85\x34\x61\x1f\x71\x59\x64\x94\xac\x4c\xa1\x04\x68\xe3\x03\x37\x5c\x8f\x27\x24\x19\x74\x6a\x51\x0b\xb4\xec\x3d\x17\xd7\xb8\x2d\xd0\x79\xfa\x38\x05\x3b\x05\x32\x39\xf0\x35\x81\x75\xe1\x3c\x2c\x11\x26\xa1\x42\x13\x30\x16\x26\x31\xcb\xc9\x51\x68\x5f\x58\xdd\xaf\x41\xef\xcd\x96\xdd\xe5\x68\x91\x06\x8f\xec\x8a\xaf\xee\x79\x16\x3c\xb2\xb2\xdc\xd1\x2b\xe6\x5f\x55\x74\x99\x24\x07\xa4\xd8\x35\x26\x12\xe3\x5c\xfb\x21\x5e\xc8\x29\xa0\xb5\x81\x81\xce\xdb\x95\xd1\x0f\xec\xc4\x1b\x49\xd3\x7e\xe0\x32\x8d\x96\x6f\x16\xa0\xa5\xfa\x9f\x37\x8a\x6b\x90\xda\x63\xf6\x0c\xe6\xeb\x77\x48\xbe\xd0\xa1\x1b\x6f\xa5\xce\x86\x9a\xf4\x1f\x9c\xa4\x2f\x38\xb9\x95\xb1\x14\x3d\x17\xf3\x79\x5c\x8c\xbd\x6f\xb5\x80\x59\xc7\xbc\x1a\x75\x0e\xaa\x6a\xf4\xf2\xd6\xee\x2e\xea\xdb\x5c\x3a\x48\x0b\xbd\xf2\xd2\xe8\xd8\x5d\x89\x0e\x52\x63\x21\x66\xd6\xb4\x09\xd6\x46\xa0\x72\x0c\x3e\x70\x1d\x9a\x55\xaf\x68\x14\xb0\xfc\xd2\x5b\xf1\x2c\x42\x07\x48\x9a\xef\x81\xfc\x52\x87\x90\x40\x10\x17\xfa\x08\xb9\xf7\x1b\x76\x8d\x6e\x63\xb4\xc3\x3b\x2b\x3d\xda\x29\x58\x78\xdb\xbc\x8f\xbc\x49\x3a\xac\xde\x86\x91\xc8\xd9\x4a\x49\xd4\x9e\x75\x91\xdb\x25\x3d\xea\x68\x42\x2c\xaf\x30\xb5\x68\x9c\x68\x6d\x3c\x0f\x29\x3a\xd6\x84\x71\x86\x9a\x7d\xc4\x94\x17\xca\x87\x78\x2e\xad\x40\x7b\xd8\x05\x99\x0e\x89\x80\x09\xa6\x24\x89\xab\x75\x68\xab\x6e\x59\x04\xa3\x83\x2c\xee\x08\x5a\x1d\x5b\x50\xbe\x81\xe6\xb7\x4f\x93\x6a\x98\xf4\x2d\xd0\xb1\xa9\xb1\xe1\x2b\x28\xf3\x18\x6a\x49\x04\xba\x55\x68\xe8\x47\x74\xab\x96\x59\x55\x75\x52\xff\x88\x3c\xa8\x07\xdc\xd4\xca\x19\x55\x6b\x7a\x34\xb4\x43\x72\xb5\xcf\x3e\x83\xbb\xda\xbb\x23\x5b\x17\x66\x8c\x2e\x24\x87\x3c\x43\x7b\x61\xb8\x40\x71\x2a\x32\x74\x30\x06\x12\x8a\x7d\x66\x4d\xb1\x71\x64\x5f\xc4\x63\xc3\xd0\x1d\xf6\x60\x3e\x87\xd3\x00\x03\xca\x70\x01\x18\x60\xd8\x9e\xc1\xb6\x27\xbc\x4d\x7d\xe3\x5d\x20\x20\x0e\x25\x14\xf7\x5f\x59\xc2\x86\xbb\x15\x57\x30\xc6\x96\x4b\xf4\x70\x58\x67\x6d\x86\xcf\xe4\x3c\x9f\xc3\x15\xcf\xa4\x8e\x14\xdb\xbd\xdd\xf0\x0c\xa7\x20\x3d\xae\xdd\x15\xda\xab\xf8\xab\xd9\xec\x39\xdb\xec\xec\xcf\x75\x6a\xe2\x7e\x4c\xba\x57\x90\xa3\x8b\xfd\x60\x0f\x76\xa2\xd8\xb2\x0b\xb9\x96\x9e\x76\x3d\x26\xec\x32\x4d\x1d\x7a\x4a\x43\x34\x30\x83\x1f\x12\x78\xbb\x17\xd3\xfe\xd4\x78\x5c\x6f\x14\xf7\xcf\xdf\xf3\xc6\x7b\xc9\xa3\xdb\xa5\xb5\x65\x27\x4a\x51\xcb\x3e\x18\xed\xf1\xb3\xa7\xc9\xb7\xa5\x74\x4c\xa3\xea\x7f\x09\x86\x3f\xf5\x9e\x09\xdb\x58\x70\xcf\x97\xdc\x21\x49\xda\x15\x09\x33\x58\xa2\x0f\x97\xca\x68\x7a\x50\xae\x28\x45\xe7\xda\xa3\xd5\x5c\xdd\xa0\x7d\x40\x5b\x03\xd7\x9a\xa4\xa5\x4a\xbe\xb1\xc0\x61\x8e\xb2\xc8\xdd\x67\xd7\xca\x35\x72\x51\x53\xbc\x4b\x1b\xf1\x24\xeb\x39\x5a\x99\xa6\xec\x37\x6e\x5d\xce\x15\xfd\xae\x7d\x71\xb9\x89\x58\x65\xfd\xf1\x3b\xf8\xf3\x2f\x17\x05\x68\xf8\x6e\x99\xf5\x5c\x74\x2d\x9a\x21\xc8\x62\xa4\xb5\x69\x55\x91\xb2\x1c\x67\x41\xe1\x07\x74\x04\x3a\xd2\x34\x34\x31\xe4\x69\xe3\x7e\x05\xa7\xf9\x7d\x98\x96\x77\x51\x4f\x06\x27\x66\x4f\xa3\xaa\x29\xa0\x7b\x15\x32\x38\xb4\x92\x2b\xf9\x4f\x2c\x7b\xdd\x6f\x72\xd8\xbf\xd7\xeb\xf8\x5e\x30\xcd\x75\x89\xaf\x4d\xa1\x3d\x99\x82\x42\x4d\xd1\x25\x09\x8b\x13\x3c\x58\x9f\x26\x18\x14\x9d\x18\x9b\xf8\x2e\x7f\x6d\xc2\x11\xf5\x51\x50\x6e\xd4\xa2\xaa\xfe\x0d\x00\x00\xff\xff\x63\x89\xc7\x35\xaa\x0d\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3498, mode: os.FileMode(420), modTime: time.Unix(1605566989, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\xcc\x12\xc6\x42\xda\x95\xe9\xbb\x81\x1c\x16\x9b\x36\x35\x8a\x36\x6d\x5a\x20\x87\xa6\x07\x26\x1c\x89\x44\xe9\x91\x3d\xa4\x92\xa6\x2c\xff\x7b\x21\x4a\x8e\xe5\x7c\x14\x9d\x93\x38\x7a\xf3\xf8\xc8\xf7\x18\x23\x68\xac\x2d\x21\x08\xa3\x48\x3b\xe4\x25\xa3\xd2\x4b\x6e\xbb\x80\x02\x52\x32\xf2\x0c\x43\x21\x96\xd1\xea\xd5\xd5\x95\xfe\x37\x89\x0a\x8c\xbc\x40\xa5\xcb\x18\x01\x49\x43\x4a\xb3\xd9\x0b\x34\x3d\xc1\x0c\x00\x60\xb9\x84\xcf\xc6\x7a\xa8\x3b\xba\x09\xb6\x25\xa8\x31\xdc\x18\xf4\x10\x0c\x42\x8c\x30\x97\xef\xd5\x06\x21\x25\xd8\xb4\x1a\x1d\x58\x8d\x14\x6c\x6d\x51\xc3\xf5\x3d\x28\x68\xec\x2d\x42\xc7\x6e\xb1\x55\xac\x36\x18\x90\xa1\xe6\x76\xb3\xe7\xd6\x2a\xa8\x6b\xe5\x11\x14\x69\x60\x0c\x1d\x93\x07\x1b\x20\xb4\x79\x83\x1b\x67\x91\x82\xcc\xe8\x5e\x41\x61\x8e\xf6\x7c\x33\x28\x2e\xa1\x3f\x55\x71\x07\x26\x84\xad\xbc\x40\xbf\x6d\xc9\xe3\x25\xdb\x80\x5c\x01\xc3\x3f\x63\x7f\xd7\xa1\x0f\x25\xc4\x4c\xd7\x97\xd5\x15\x20\x33\xac\x4e\xc0\xc8\x8e\xdd\x87\x5e\xe3\x9a\x42\x71\x57\x01\x57\x20\xac\x16\xe5\x01\x5c\x67\xec\x5f\x27\x40\xd6\x4d\x48\xfa\x1a\x94\x3f\xb4\xd2\xec\xe1\x73\x37\x90\x8f\x07\x99\x8a\x97\x1f\x3b\xe4\xfb\xa2\x94\x97\x06\x19\x8b\xc3\xaf\x9f\xe0\x49\x7d\xcb\x90\xf5\x69\x61\x75\x79\xd0\x10\x23\x04\xdc\x6c\x9d\x0a\x08\x22\xdb\xbd\xbb\x16\x30\xdf\x9b\xd5\x17\x3e\x1c\x69\x27\xcf\xc9\xdd\x17\x2c\xff\x6f\x29\xe0\xf7\x50\xfc\x96\x08\x99\x5b\x5e\xe4\x0c\x58\x6a\x46\xd2\x29\x7e\xde\x70\xdb\x6d\x7d\xcf\x3c\x97\xff\x11\xb5\x41\xf5\x81\xf0\x72\x74\xe1\x0c\x29\xa7\xeb\x6c\x80\x4d\x24\x1d\x6e\xd9\x1b\x64\x5b\xd7\xf2\x9d\x62\x6f\x94\x2b\xfe\xde\x37\xce\xb7\x99\x2b\x0e\xc3\x2b\xf8\xf2\xd5\x07\xb6\xd4\x1c\x5f\x73\x8c\x8b\xde\x86\xbd\x92\xc9\x16\x53\x04\x2b\x6a\x10\xe6\x4d\x56\x3a\x40\x53\x12\x31\xce\x9b\x94\x44\x35\x66\x7f\xf1\x68\xb8\x6f\x3b\x8f\x4f\xfa\x7d\x89\xe7\xbc\x59\xe5\x67\xf2\x44\xde\x63\xee\x94\x2a\xc0\x3f\x0b\x91\x91\xae\x6d\x1a\x64\x79\x69\x83\x79\xd5\xdb\x51\x20\x73\x99\x97\xaf\x2d\x3a\x5d\x88\xa3\xfc\xe4\xc5\xfa\x74\xbf\x16\x15\x58\x5d\xca\x61\x50\x78\x64\xab\x9c\xfd\x91\x3d\x82\x6c\xee\x24\xcb\x43\x66\x49\x23\xcb\x35\x05\x64\x52\xee\x13\xf2\x2d\xf2\x30\x3d\xc4\x9f\xac\x7b\x3c\xf1\x52\xca\x8f\xa4\x3f\xd1\x7a\xb8\x34\x51\x01\xca\xf5\x69\x29\xd7\x54\xb7\xcf\x43\x46\x5d\x38\x7d\x7a\xa3\xd4\xf3\xb7\xa3\x32\x3d\xfc\x4a\xb3\x18\x91\x74\x4a\xbf\x02\x00\x00\xff\xff\x7e\x50\x39\x7d\x0c\x05\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1292, mode: os.FileMode(420), modTime: time.Unix(1605509907, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xc1\x6e\xe3\x36\x13\xbe\xef\x53\xcc\x4f\x18\x3f\xa4\xd4\xa6\xd0\x6b\x80\x1c\x82\x24\x4d\x83\xa6\x4d\x9a\x76\x91\x43\xb7\x28\x18\x73\x24\x13\x4b\x93\x16\x49\x35\x4d\xb5\x7a\xf7\x82\xa4\x6c\x4b\xb6\xe4\x64\x53\x2c\xd2\xc3\xce\xc9\x92\x38\xc3\x19\xce\xf7\xcd\x0c\x5d\xd7\xc0\x31\x17\x0a\x81\x2c\x98\xe2\x12\x4d\x66\xab\x07\x83\x56\x57\x66\x8e\x59\x81\x2e\x33\xba\x72\x48\x60\xd6\x34\xef\x00\x00\xea\x1a\x0c\x53\x05\xc2\x04\xe1\xf8\x04\x26\xf4\x82\x17\x68\x37\x9f\xbd\x2c\xe8\x25\xba\x84\x64\xb5\xe0\xc7\x1f\x3e\xf0\x6f\x9a\xcc\x2b\xe1\x4a\xb2\x39\x42\x32\x41\xfa\x13\x5b\x22\x7c\x02\xab\xd8\x47\x4c\x81\xfc\x41\x80\xcc\x08\x34\x0d\x99\xc2\x82\xd6\x35\x6c\x97\xac\x98\x9d\x33\x09\x4d\x93\xae\x37\x47\xc5\xc3\x66\x9d\x9f\xef\x9e\x8f\xc2\x5b\x3f\xe4\x7e\xc7\xfb\xba\xce\x8e\xe0\x0e\x19\xcf\xae\x85\x75\xa0\x57\x68\x98\x13\x5a\x59\xd0\x0a\xa2\xd9\x68\xd7\xc2\x51\xd6\xd1\xcb\x2b\x35\x4f\x16\x7e\x83\x49\xf4\xbe\x69\xbe\x8f\xce\xa4\x30\x1c\x53\xf2\x08\x0b\xe7\x56\xf4\x0e\xed\x4a\x2b\x8b\xf7\x46\x38\x34\x53\x30\x70\xd4\xbe\x2f\x2b\xb4\x2e\x85\x7a\xb3\x89\x17\xc1\xa7\x80\xc6\x78\xf7\x17\xb4\x32\xf2\x96\x19\xb6\xbc\x52\x2e\x79\x9c\x82\x99\x02\x11\x9c\xa4\x3d\x85\xa0\x94\x07\x9d\xff\x9d\x80\x12\x72\xc7\xa0\x17\x83\xae\x32\xaa\xf7\xba\xe9\x3d\x95\x71\xbf\xb9\x14\xa8\x1c\xed\x46\x49\x7f\xae\xd0\x3c\x25\x29\xbd\x5f\xa0\xc1\x64\xfb\xa9\xcd\xb0\x5f\x72\x75\x9e\x08\x9e\xa6\x71\xe9\xc8\x69\xa4\xef\x7a\x1b\xd6\xb5\x77\x7a\x82\xf4\xbd\x12\x65\x85\xdd\x14\x75\x96\x38\x5c\xae\x24\x73\x08\xc4\xf8\x94\x95\x0f\xc4\xab\xfc\xfa\xb4\x1a\x54\xc0\xcd\xc9\x95\xf4\x46\xc9\xa7\xc4\xd0\x33\xad\x1c\xfe\xe5\x92\x74\xff\xcc\xf6\xcd\xa3\x31\xda\xcc\x02\xc6\x84\x2a\x7a\x5b\x0d\x69\x4f\x0a\xa3\xab\x95\x0d\x40\x8b\x2b\xe9\xa9\x52\xda\x45\x3c\xd1\x16\x1e\x97\xa8\xa8\xc7\xdb\x65\x5c\x3c\xe0\xf6\x36\xe1\x76\x81\x46\xe4\x39\xfd\x91\x19\xbb\x60\x32\xf9\xff\xfa\xc5\xcd\x2a\xd8\xac\xa3\x91\x63\xf8\xed\x77\xeb\x8c\x50\xc5\x7e\xa6\xa3\x6f\xb3\x70\xb8\xc5\xe8\x96\xdd\x95\x2d\x61\x8a\x10\x47\x54\x69\x1a\x52\xd7\x93\xc2\x53\xb6\x43\xc4\x61\x03\x80\xd2\xe2\xe8\x77\x2f\x24\x22\x22\x1c\xd0\x0e\x72\x8e\xfd\xb9\x93\xd1\x20\xc6\x76\x6e\x9a\x29\xe0\xe7\xb3\x00\x42\xf5\x92\xba\x28\xd0\xd0\x7b\xe1\x16\x17\x3e\xe1\x09\x1a\x93\x86\xc7\xef\x04\x4a\x9e\xec\xb9\xdb\x34\xb4\xf3\xea\xea\x7c\xfd\x96\x4c\x41\xf0\x94\x46\x23\xc4\xa2\x11\x4c\x8a\xbf\x43\xf6\x21\x40\x69\x80\xa8\x10\xc8\xa8\x38\x1a\x7a\xa5\x1c\x1a\xc5\xe4\x2f\x68\xfe\x44\x13\xad\x44\x8e\x2b\x21\xc7\x34\xf7\x68\x1c\x8e\x63\x1f\x9e\xbd\x30\x47\xe2\xda\xa6\x81\x4c\xc1\x07\x96\xd2\x2b\x95\xeb\x43\x0b\x5b\xdf\x71\xa8\x06\xb5\x61\xdd\xfc\xd0\x46\xc1\xd3\x5d\xc2\x07\xa4\x0c\x13\xdd\xc3\x95\xeb\x96\x4a\x5d\x16\xf9\x02\xee\x29\x74\x8e\x39\xab\xa4\xbb\x31\x1c\xcd\x18\xa2\x45\x0e\x86\xbe\xbf\xbb\xde\x94\xac\xd0\xa8\xb4\x57\x21\x29\x9c\x9c\x00\x21\x23\xa8\xf0\x52\xd2\x60\x3c\x19\x5d\x00\x7d\xc2\x44\x6f\xb9\x3e\x88\xfd\xb5\xb4\x55\xd5\x23\xb4\x84\x64\xa2\xe3\x5e\xf0\x09\xa4\x7e\xf4\x2d\x84\x70\xb4\x73\xdf\xc6\xce\xd1\xce\xb7\x47\x75\x1a\x1f\x14\xf7\x15\x34\xe4\x45\xd3\x90\x4d\x9f\xb4\x74\xfa\xac\xab\x87\xa8\xeb\x65\x18\x66\x83\x19\x0a\x1e\xf5\xd2\x74\xa8\xe2\xb5\xe9\xf2\x3d\xf6\x6b\xca\xde\x2c\x65\xc1\x89\xa1\xde\x35\x83\x09\x86\xc6\x85\xac\x40\x73\xad\x19\x47\x1e\x47\xa5\x75\xcf\x23\x3e\x75\xb1\xdd\x90\x03\x9c\xc5\xd1\xf6\x92\x65\x70\xe1\x8d\x83\xd4\x8c\x03\x7a\xe3\x74\x70\x61\x39\x5a\xfe\x7b\xa3\xdc\xce\x14\x3a\xec\x8f\xd2\x0e\x12\x2c\x37\x51\x4c\x52\x5f\xbd\x7d\x0d\xac\xeb\xf5\x2c\x32\xd9\x94\xf5\xe7\x71\xf3\x7a\xbc\xbf\x04\x61\x61\xa6\x2c\xe1\x28\xcc\x54\x67\x5a\xe5\xa2\xa0\xb7\x6c\xfe\x91\x15\xbe\xe6\x3e\x30\xbb\xdb\x7b\x5a\xbf\x03\x57\x76\xe7\xc6\x31\x79\x11\x47\x76\xe3\x7e\x0d\x5f\xba\xf2\x06\xdc\xd9\x0d\xe1\x39\x1e\x75\x65\x98\x53\x5d\x39\x6c\xe7\x45\xbc\xdd\x12\xf2\x90\x89\x61\xaa\x8d\x31\x39\xcb\xe0\x96\x15\x42\x05\x40\xee\x7d\x5d\xb1\x02\xa7\x20\x1c\x2e\xed\x2d\x9a\xdb\xf0\xb4\xb9\x5a\xac\x36\x7a\xa1\xe9\xfb\x9e\xfd\xba\x89\xea\xe5\x43\x49\x49\xaf\xc5\x52\xb8\xa4\xeb\x51\x4a\x6f\xf2\xdc\xa2\x4b\x12\xef\x2d\xcc\xe0\xdb\x14\x8e\x7a\x3e\xa7\x83\xc3\xf7\x76\x74\x5f\xdf\x09\xa5\xb0\x2e\x2b\x3d\x35\x66\xb9\x90\x0e\xcd\xe1\x01\x1e\x6d\xe7\xb6\x70\x2a\xe5\xe1\xcb\xc2\xbf\x19\x2d\xdb\x01\x31\x8c\x84\x10\x1c\x14\xaa\x00\xce\x1c\xf3\x14\x27\xa9\xcf\xa2\xd3\x9e\x65\xf0\x80\xce\xa1\x89\xd3\xe3\x9b\xcd\x8e\x9f\x75\xb5\xd9\xb6\x89\xaf\x57\x9b\xfe\xd5\xc6\xe3\xf1\x95\x57\x1b\xfb\x45\x00\xf8\xdf\xbf\xa1\xb0\xa5\xae\x94\x23\x53\x90\xa8\x12\xb4\xe9\x17\xbf\x90\xf4\x0b\x6e\xc7\xcb\xf0\x37\xd1\x99\x41\x5f\x61\x5e\xf4\x1f\xd1\xd6\xda\xe6\xd7\x3f\x01\x00\x00\xff\xff\x7f\x26\x34\x51\x7e\x13\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 4990, mode: os.FileMode(420), modTime: time.Unix(1605568036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x73\xdb\x36\x10\xbd\xfb\x57\x6c\x39\x9a\x0c\xe9\x4a\xd0\x5d\x99\x1c\x92\x38\x75\x35\x6d\x93\x4e\x9c\x34\x87\x24\x33\x81\x84\x25\x09\x9b\x02\x98\x25\x28\xdb\x65\xf9\xdf\x3b\xf8\x30\x45\x51\x94\xab\x4c\xa7\x1f\xbc\xd8\x80\x76\x17\x8b\xf7\xde\xee\xa2\x69\x40\x60\x2a\x15\x42\x94\x73\x25\x0a\xa4\x79\x5d\x0a\x6e\x70\x4e\xba\x36\x18\x41\xdb\xe6\xec\x12\x4d\x1c\xcd\x1b\x29\x16\x9f\x3e\x89\xef\xdb\x68\x0a\x39\x7b\xef\xac\x92\xa6\x01\x54\x02\xda\xf6\xec\xec\x68\x28\x1b\xe4\x0c\x00\x60\x3e\x87\xca\x50\xbd\x36\x60\x34\xac\xa4\x12\x60\x72\x84\x52\x57\x06\x56\x5a\xdc\x83\xd1\xcc\xd9\x99\xfb\x12\xa1\x69\x60\xc2\x5e\xf3\x0d\xc2\x1f\xb0\xe6\x1b\x2c\xa0\x6d\xfd\xa1\x6f\xf1\x6b\x8d\x95\x79\x88\xd5\x38\x1f\xfb\x35\xcd\xfc\x1c\x9e\x0b\x01\xbc\x28\x20\x95\x58\x88\x0a\x4c\xce\x0d\x70\x42\x50\xda\x00\xde\xad\x8b\x5a\xa0\x60\x70\x3e\x0f\x39\x79\x3f\x20\xae\x32\x84\x49\x0a\x8b\x67\x30\x61\x3f\x78\xdf\x59\xcf\xc6\xdb\xcd\x60\xc2\x9d\x49\xca\x9e\x2b\xa5\x0d\x37\x52\xab\xca\xdb\x5f\xa2\x82\x11\x07\x99\x82\x26\x88\xed\xf1\x13\x9e\xc0\x84\x07\xe8\x86\xb6\x21\x91\x49\xca\xae\xdc\xbd\x5c\x4c\x68\xdb\xb0\xf9\xee\xbe\x44\xfb\x8b\x54\x99\xdd\xfc\x72\x5d\x69\xb5\x88\x9a\x06\x0c\xcf\x7e\xd6\xfa\xa6\x2e\x77\xae\xef\x78\x06\x91\x35\xb0\xc8\x47\x36\x80\x4c\xed\xc1\x2f\x09\xb9\xc1\xdf\x78\x21\x85\x4b\xdc\xda\xb5\xed\xd6\xaf\xd1\x45\x3b\x6a\x15\x75\x4c\x7f\x39\xb8\x62\x50\xc0\x70\x6b\xb6\xb7\xd7\xa3\x06\x45\x86\xa7\x32\x33\x7b\xa0\x06\x3d\x35\xaf\x9c\xef\x23\xcc\xe0\xb7\x30\xc3\x95\x08\xd4\xa0\x47\xb8\xef\xfb\xa3\x57\xf1\x25\x2a\x76\x75\x23\xcb\x04\xe2\x01\x91\x1e\xa9\xe4\x18\x93\x38\xc2\xa4\x4c\x21\x1c\xf7\x5e\xc9\xaf\xb5\x55\xc1\xc7\xcf\x1d\xb4\xde\xcb\x25\xb2\xbc\x38\x89\x72\xfc\x0f\x29\x9f\x8d\x70\x1e\xb6\xda\xb3\x87\x82\x7f\x97\xcb\x0a\xd2\x5a\xad\x6d\x5c\xf0\x0d\xa1\x02\x0e\x99\xdc\xa2\xea\x15\x79\xdb\xc2\x46\x0b\x2c\x1c\x25\x15\xdf\x3a\x81\x20\xac\x73\xcb\x7e\x05\x52\xb9\xa5\xe0\x86\xaf\x78\x85\xbe\x4f\xd8\xb0\x71\xbe\x17\x24\x70\x96\x80\x2f\xb2\xf8\x16\x72\x63\x4a\xf6\x16\xab\x52\xab\x0a\x3f\x90\x34\x48\x53\x20\x38\x0f\xfb\xae\x95\x24\xbd\x26\x22\xc5\x14\x90\xc8\x6a\x29\x67\x35\x15\xbf\x72\xe2\x9b\xa5\x32\xf1\xed\x14\x68\x0a\x91\x14\x51\xb2\x33\x4e\x9d\xed\x77\xcf\x40\xc9\xa2\x17\xc4\x7e\x84\xa6\x26\xd5\x6d\x05\x48\x02\x2c\x97\x68\x76\xcd\xcf\xde\x8a\x75\xbf\x0a\x7b\x74\xbf\xfb\x55\x8a\xdf\xe0\xb0\xfb\x35\xad\x0d\x63\xb4\xd0\x30\xb3\x45\xa5\x6f\x21\xd5\xb4\x99\xd5\x54\xcc\x50\xad\xb5\x40\x31\xbf\xdb\x14\xf3\x92\xb4\xd1\xab\x3a\x1d\x1c\x12\x12\x5f\x3c\x03\x2b\x1a\xf6\x1a\x6f\x2f\xd0\x3a\x51\x4c\xec\x85\x16\xf7\x09\xf3\xeb\xf8\x89\x48\x9e\x1e\xbf\x63\xce\x0a\x9d\x65\x48\xec\x83\x34\xf9\x2b\x22\x4d\x31\x12\x25\xcc\xff\x1b\xa1\xfd\x03\xc2\x46\xb2\x22\x76\xfa\x4c\x06\x20\x29\x81\xc4\x5e\x70\x11\xee\xd5\xc1\xac\x9c\x48\x9d\x8f\xed\xf4\x52\x65\x07\xae\x8f\xe0\x1b\xb4\x8c\x9d\x6a\xc6\xae\x9e\xb3\x50\x08\x9a\x42\x19\xc5\x8f\xde\xd6\x7b\x4e\x41\xdf\x58\x6f\x24\x62\xf1\xf9\x2e\xc2\xd2\x67\xbc\xab\x22\x07\x42\xf2\xd4\x9a\x37\x07\x0d\xe2\x24\xe4\x42\x70\x8b\x1d\x85\xa1\x67\xef\x32\x00\xa2\x87\xe3\x52\x19\x24\xc5\x8b\x2b\xa4\x2d\x92\x8f\xe5\x01\x55\xb2\x18\xf3\xda\x83\x70\x00\xe3\x63\x69\x2e\x55\xaa\xe3\x68\xdb\xdd\x15\x52\x2e\x0b\x14\x27\xb2\x6b\x43\x9c\xce\xe5\x15\xdf\x8e\xf1\xb8\xf2\x14\xae\x0b\x89\xca\xb0\x7e\x13\x08\x13\xf6\x8d\xc2\xe5\x45\x2c\x45\x32\x36\x4e\xfe\x95\x49\xef\xfb\xaa\xcd\xe8\x00\xfa\x2b\x34\x63\xd3\x3e\x16\x6c\x6c\x3b\x39\xa1\x01\x8f\x8d\xe1\xff\xef\xec\x0c\xef\xc7\x51\x6c\xc2\x01\xfd\x21\x79\x60\xd3\xc3\x30\x1c\x1f\xc8\x5f\x5e\x04\x0c\x87\xe3\xf7\x50\xfe\x0e\xc7\xa2\x3a\x1a\xff\xb9\x10\x63\xf1\xab\x23\x07\x30\xc6\x12\xf7\xd0\xd9\x35\x66\xc2\x8d\xde\x22\xc8\xe1\x43\xd4\x4f\xbf\x30\xd4\x4a\x6e\xd6\xf9\xcc\x8a\x7b\xef\xed\x33\x64\x7b\x84\x85\xe3\x22\x38\xa8\x1f\xa9\x06\xc3\xd3\x7e\xd8\x8d\xba\x15\xb3\x56\x31\xb1\x97\x5a\x19\xbc\x33\x71\x72\xda\x90\x3b\xa9\x8d\x55\x7c\x6b\x5b\x58\xbf\x44\xc7\x1b\xc5\x37\xb4\xaf\xc7\x3b\x06\x92\xe4\x85\xfc\x7d\xac\x6d\x38\xb9\x67\xa4\xeb\xb2\xf2\x55\x71\x44\xb6\x5e\xa0\x97\xde\xb0\x87\xf1\x75\x87\x59\x95\x23\xc9\x34\x65\xbf\x70\xaa\x72\x5e\xc4\x4f\x1e\x36\xde\x94\x2e\x5a\xe3\x9d\x17\xf0\xf1\xb3\x1f\x60\xcd\x58\x19\x3d\xe4\x72\x84\xf9\x50\xc1\x99\xcb\xd5\x9b\xba\x97\xd9\x24\x6b\xdb\x68\x1a\x08\x3f\x2c\x69\xaf\xeb\xe1\xbe\xfd\xa2\xb1\xa7\xc5\x82\x90\x8b\xe8\x2f\xf5\xd5\xb6\x53\xc0\xbf\x27\x0c\xbb\x74\x05\x13\x47\x7b\x2d\xdb\x2d\x96\x17\x9d\x3e\xa6\x60\xdf\xc0\x9d\x90\xaa\xc0\xa8\x1f\x36\x4e\x56\xff\xa0\x84\xf6\x92\x3f\xc8\x76\x07\x5b\x97\xa5\x1f\x87\x63\x26\x21\xaf\xbd\xd1\x18\x52\x7d\xf3\x53\xc8\xec\x3a\x09\x8f\xe6\xae\x7e\xff\x0c\x00\x00\xff\xff\xb4\x98\xb7\xb8\x97\x0f\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 3991, mode: os.FileMode(420), modTime: time.Unix(1605565331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\xcf\x6e\xdb\x3c\x10\xc4\xef\x79\x8a\xf9\x04\x1f\xa4\xc0\x96\xef\x01\x82\x0f\x05\xf2\xa7\x06\x8a\x1c\xea\x02\x3d\xd3\xe2\x8a\x62\xca\x2c\xe5\xd5\x2a\x41\x20\xe8\xdd\x0b\x49\xb6\x21\x38\x69\xd1\x8b\x75\x5b\x72\x38\x3b\x3f\x72\xd5\x75\xb0\x54\x7a\x26\x24\x42\xc6\xae\xf7\xbb\x04\x7d\x7f\x05\x00\x5d\xb7\xbe\xc6\xa6\x44\x64\x42\x2c\xa1\x15\xc1\xf9\x57\x62\x54\x86\x6d\x20\x81\x93\xd8\xd6\x0d\x7c\x83\x86\x14\x91\x47\x09\x59\x47\x20\xe3\x48\xf0\x1c\x3d\xc3\x6b\x7e\xbd\x9e\x3b\x6a\xb4\x11\x2b\x30\x35\x4a\xf6\xa0\x0c\xd1\x58\xcf\xee\x7f\xcc\xa4\x2b\x88\x61\x47\x58\x10\x6e\x6e\xb1\xc8\xef\xad\xa3\xe6\x98\xed\x4c\xe2\x26\xc9\x17\xe6\xa8\x46\x7d\xe4\x26\xff\x3a\x85\x7c\x24\xce\xbf\x93\xb1\x8f\x53\xd6\xd9\xf1\xf3\x2e\xa3\x47\x53\x07\xaf\x48\xd5\xb8\x6f\x31\xfe\x6a\x6b\x2c\x28\xdf\xaa\xb4\x85\xfe\x30\x0e\xc9\x44\x9c\x64\x48\x96\xc9\xb9\xd7\xd1\xcf\x97\xa0\xfd\x10\x69\xb0\xec\xfb\x7d\xfe\xd3\x6b\xd5\x75\xa8\x4d\x53\x98\x30\x18\x3e\x99\x17\x42\xdf\xa7\x59\xd7\x81\xd8\x62\xf5\x49\xaa\x61\xfd\x8c\x75\xb6\x34\x2b\x0f\x1e\x7d\x7f\x75\x75\xfe\x96\x24\x12\x65\x35\xbe\x96\x67\x77\x0a\x3c\x04\x14\xc1\x7f\xb7\x60\x1f\xd0\x9d\x7a\x34\x6f\x5e\x8b\x6a\xd8\xcb\x53\x7d\xaf\x29\x9b\xed\x0d\x5f\x61\x1a\xc2\x35\xb1\xe6\x4f\x51\x1f\x62\xcb\xf6\x7e\x68\x70\xf3\xe1\x16\xaa\x3c\x44\xe7\x48\x46\xf2\x51\x93\x92\x48\x36\x96\x0f\x9e\x82\x4d\x93\xae\xc3\xe2\x78\x0f\xf9\x58\x6c\xee\x8e\x75\xb2\x84\xb7\x59\x7e\x47\xbb\xd6\xa5\xc9\x73\xdc\x81\xa3\xa2\x1c\x1a\x26\xd9\x87\x66\x42\x6c\x49\x4e\x91\xd2\xb7\x25\x64\x39\x40\x7c\x26\xd5\x56\xf8\xcf\x4c\x5b\xcf\xae\x0d\x46\x2e\x8a\x35\x1d\x4c\x6c\x5b\x07\x5f\x18\x25\x10\xab\xbc\xa3\x8c\x02\xff\x17\xbe\x0d\x2b\x09\x9b\xb0\x25\x79\xa5\x29\xe1\x01\x95\x7d\xf8\x27\x54\x4b\xa5\x69\x83\x5e\x98\x6b\x9c\x39\x94\xa4\x45\xe5\xd9\x81\xa3\x25\x94\x12\x5f\x60\x77\x97\x82\x9b\xa6\x7a\xfe\x27\xfc\x0e\x00\x00\xff\xff\x86\x5e\x99\x66\xd5\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1237, mode: os.FileMode(420), modTime: time.Unix(1605509907, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":          &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl": &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"model.tpl":           &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
