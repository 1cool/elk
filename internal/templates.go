// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xdd\x6e\xdb\x36\x14\xbe\xef\x53\x9c\x09\x06\x2c\x01\x8e\xbc\x6b\x25\x0e\x8a\xa5\x2b\xb0\xad\x2b\x02\xa4\x43\x2f\x82\x20\xe0\xc4\x23\x87\x0b\x4d\xaa\x24\xd5\x26\x50\xf4\xee\x03\x69\x49\x26\x25\x59\x71\x31\x60\xe5\x8d\xe5\xc3\xf3\xff\xc7\xaf\xae\x81\x62\xc1\x04\x42\x94\x73\x86\xc2\x44\xd0\x34\x6f\x00\x00\xea\x1a\x0c\xee\x4a\x4e\x0c\x42\xf4\x80\x84\xa2\x8a\xe0\xec\x70\xb9\xa8\x14\x87\x6c\x03\xb1\xc2\x92\x93\x1c\x21\x5e\xa4\x1f\xc9\x0e\xe1\x05\xb4\x20\x8f\x98\x40\x74\x1f\x41\x74\x16\x25\xf0\x02\x25\xaf\x14\xe1\x9d\x6a\xb6\x2b\xa5\x32\xb0\x2c\x49\xfe\x48\xb6\x98\x51\x26\xd7\x94\xc9\x94\x12\x65\x96\xe7\x93\x2c\x05\xaf\x8c\x41\xb5\xfe\xc6\xe8\x16\x8d\x9e\x63\x2d\x95\xfc\xca\x28\xaa\x75\xf7\xd1\x31\x07\xdc\x69\xba\xde\x49\x8a\x7c\x6d\x43\x09\x1c\x87\xa6\xf1\xd5\xd7\x35\x28\x22\xb6\x08\x0b\xb4\xe1\x2e\xd2\x5f\xe9\x16\x75\x9f\x89\xa3\x3a\x31\xfd\xf4\x5c\xe2\x2b\x9a\x51\x50\x9b\x14\xf7\x37\xe7\x44\x6b\x38\xb8\xd3\x34\x57\xae\x22\x50\xf7\x86\xc6\x97\x71\xfd\x56\xe1\x97\x8a\x29\xa4\x60\x1e\x98\x4e\x29\x93\x4d\x02\x19\x10\xad\x51\x99\x98\x32\x09\x3f\x6d\x40\x54\x9c\x27\x6d\x06\xec\x29\x98\x20\x1c\xde\x31\x09\x94\x49\x8f\xfe\xbe\x32\x95\xc2\x0b\xdf\xce\xa5\x65\xa6\xb1\x23\xfd\xf6\xce\x05\x05\x2f\x60\xc3\x70\x9f\x4d\x03\x8c\x26\x40\xf4\xb3\xc8\x3d\x4f\x0f\x46\x14\x6c\x80\x7c\x23\xcc\x58\x53\xe9\x16\x4d\xbc\x5c\x77\xed\xd3\x34\xeb\x05\xa3\xcb\xe4\x3c\x90\x53\x68\x2a\x25\x82\x60\xd3\x42\xc9\xdd\xef\x5a\x8a\xd8\x56\xd3\x10\x4f\xa2\x19\x79\xff\x81\x69\x13\x86\x70\x09\x9c\x69\x13\x87\xee\x31\x61\xa0\x24\x5b\x5c\x8d\xa8\xcc\xe0\x4e\x5f\xa3\xba\x1e\xdd\xd6\xf5\x59\xd7\x0d\xc5\xbe\x1b\xde\x33\xe4\x54\x83\xd7\x0d\x3e\xef\xe2\x1f\x2d\x85\xf3\x22\xdb\x00\x13\x14\x9f\x20\xd6\x25\x67\x06\x62\x43\xb6\x1f\xa4\x7c\xac\x4a\x58\x14\xe9\x8d\x51\x55\x6e\x3e\x91\x2d\x44\x56\x22\x4a\x20\x5a\x45\x09\xfc\x3c\xad\xd7\x4a\x4c\xd4\xc1\x5e\xf4\xf6\x9a\x66\xe8\x79\xd7\x6c\x7d\xe2\xe6\xaa\x56\x12\x45\x76\x1a\x36\x90\x4b\xa1\x0d\xd4\x8d\xd7\x24\x2e\x4d\x05\xc4\x36\x79\x7d\x73\x0d\xb4\xd8\xb3\xd7\x71\xbb\xb4\x7c\xcb\x3b\xd8\xb8\x6c\x87\xa5\x6e\xc6\x5a\xfd\xe4\x9f\xa2\xdd\xe7\x77\x56\x7c\xc2\xac\xb5\xc3\x64\xff\xb0\x5a\xda\x80\x07\x65\x9b\x8b\xd9\x8f\x7b\x20\xe6\x42\x1f\xd0\xce\x47\x0a\x9a\x23\x3d\xf1\xdd\x73\xbb\x4c\x26\x1a\x62\x3f\x9b\xb0\x39\x1e\x40\x3b\xda\xb7\x77\xb3\x85\x69\xb9\x3a\x7d\x44\x83\x1d\xe9\x24\xdd\x91\x32\x8e\x59\x02\x9b\xcb\x23\xcb\x81\x25\x49\x6a\xa4\x65\x8e\x67\x37\x44\xb8\xdf\x72\x85\xc4\x60\xec\x13\x01\x4f\x5f\x69\xa5\xd4\x83\xdc\xac\xc0\xfa\x9d\x01\xa6\x46\x3a\xbf\x92\xe9\x0d\x17\xcf\xae\xb8\xef\x88\xa0\x2a\xe9\x7f\x8a\x80\x98\xfc\xe1\xff\x0b\x61\xfa\x45\x1d\x4c\xc7\x21\x4e\x56\xd8\xc7\xf4\x2f\xc1\xbe\x54\xd6\xc8\xf0\x6d\x75\x14\xe4\xda\x7e\xf5\x9b\x3f\x64\xb8\xec\x1b\x7d\xdf\x38\xfd\xab\x9c\x93\x1d\xda\x70\x4f\xca\xdc\xa9\xa3\xb1\x5e\xd4\x98\x76\xcf\x65\xab\xb3\xb1\xf7\x07\xa0\x84\xd3\x48\xa9\x9d\xab\xa1\xd1\x61\x0e\xce\x26\x16\xc9\xb0\x24\x61\x02\xe6\x0a\xe3\x59\x71\x59\x7c\x4d\xfb\x2b\x43\x79\xcc\xf0\xf4\x68\xfa\xc6\x05\x1d\xd9\x6e\xde\x0c\x18\xfc\x55\xa5\x0d\x31\x2c\x9f\x02\x4c\xb2\x88\x7f\xa9\x18\xa7\x57\x52\x18\x7c\x32\xf6\x0d\xb3\xbf\xce\xc7\xeb\x0e\x14\xca\xe2\x62\x2c\x7a\x19\xb7\xbc\x2b\x87\x18\x50\x64\x50\x10\xae\xb1\x75\xb9\x79\xe3\xf9\x31\x82\xce\x3d\xe0\x3c\x0d\x43\xff\x20\x14\x3c\xcb\xac\x99\xd8\x72\xbc\xcf\x1f\x18\xa7\xf7\x7b\x2b\x01\x7a\x3e\x8c\xae\xd8\x8f\xee\x47\x49\x8f\x80\x61\x9b\x5c\x71\x02\xfc\x3d\x0b\xf1\xef\xbe\x0e\x5d\x95\x00\x9f\x0c\x0a\xaa\xe1\xc6\x39\x76\x65\xfd\xba\x31\xc4\x20\x47\xad\x3f\x3b\xff\xbc\x29\x0d\x65\x07\x70\xef\x0f\x7c\x86\x47\x7c\x0e\x51\xd1\x18\x3c\x87\xf7\x8e\xea\xb2\xb1\xf2\x71\xd3\x24\xbc\x5e\x81\xae\x4a\x54\xf1\x23\x3e\x67\xce\x12\x38\xc1\x6c\xff\x33\x83\xbe\x43\x72\x1b\x95\x13\xf2\x64\xde\xca\xaf\xa8\x14\xa3\xd8\x53\x5a\xc6\xbf\x6d\xa7\x7f\x66\xe6\xc1\x25\x67\xb2\xf1\x57\x81\xd2\xe1\xbb\xdc\x0e\xf6\x9f\x15\x37\xac\xcf\xdd\x18\x6e\xb5\x37\x3a\x83\xdb\xc9\xfd\x70\x42\x6b\x0c\x4f\x67\xed\xc2\xeb\x95\xc3\x24\x1e\x15\xb3\x67\xff\x66\x67\x10\xdf\xf7\x9b\x67\xa0\xc0\xd6\x26\xb3\x09\x4e\x56\x47\x35\x1d\xb9\x3a\xb2\x8d\xec\xb9\x1b\x4b\xf8\x55\x0e\x6f\x83\xe7\x0f\xc2\xfd\xf1\x6f\x00\x00\x00\xff\xff\x3a\xee\x57\x3d\x79\x0f\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 3961, mode: os.FileMode(420), modTime: time.Unix(1605186149, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcd\x6e\xea\x30\x10\x85\xf7\x3c\xc5\x51\x14\x09\x90\x2e\xb9\x7b\x28\xa8\x8b\x0a\xa9\x95\xda\x0d\xec\xd1\x34\x9e\x04\x97\xc4\x8e\x6c\x6f\xa8\xeb\x77\xaf\xec\x9a\xbf\x8a\xee\xec\x39\xf3\x7d\x33\x1a\xef\x21\xb8\x91\x8a\x51\xf4\x5a\x70\x57\x20\x84\x11\x00\x78\x0f\xc7\xfd\xd0\x91\x63\x14\x7b\x26\xc1\xa6\xc0\x2c\x87\xb2\x1f\xb4\x71\x18\x0f\x54\x1f\xa8\xe5\xf9\x87\xd5\x6a\x47\x4a\x69\x47\x4e\x6a\xf5\xff\xd7\xbf\x12\x64\xdc\x78\x31\x4a\xec\x40\x91\xf4\x1e\x65\xf5\x46\x3d\xe3\x0b\x56\xd1\x81\x11\x42\xd5\xde\x34\x3e\xbe\x58\xad\x36\x6c\x24\x75\xf2\x93\xde\x3b\x9e\x4c\x53\xbd\xee\xc8\x5a\x5c\x04\x21\xc0\xa7\x20\xaf\x7d\x2e\x4f\xa6\xd9\x74\x0e\x9e\x9f\xaa\xed\x71\x88\x33\xe3\xa0\xf4\x8c\x74\x8e\x32\xb6\xb8\x62\x66\x30\xa4\x5a\x46\xd9\x60\xbe\x44\x59\xad\x25\x77\xc2\x9e\x6e\x74\xed\x6e\xfe\x32\x37\xf7\xbc\x60\x25\xa2\xe5\x5c\x6a\xa8\x76\xda\x1c\x6f\xf6\xaf\x1a\xa3\xfb\x78\x84\xc9\x2b\x0d\x0f\x1b\x67\xa4\x6a\xff\x41\x1c\x15\xf5\xb2\x5e\x21\x1e\x79\x8a\xe5\x0a\xbb\xf2\x9a\x5a\x9f\xa0\x94\x5f\x86\xde\x75\x38\x9d\x5a\xef\x68\xb6\x3f\x89\xdb\x4b\x9b\x25\x61\x74\xd9\xfb\x3b\x00\x00\xff\xff\x91\x4f\xc8\xc5\x37\x02\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 567, mode: os.FileMode(420), modTime: time.Unix(1605093443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x95\x4d\x6f\xa3\x3c\x10\xc7\xef\x7c\x8a\x11\x8a\x1e\x25\x51\x6b\x9e\xbd\x46\xda\x43\x55\x55\xdd\x43\x1b\xad\xba\x2f\x77\xc7\x4c\xb0\x55\x67\x8c\xfc\x92\xb4\x62\xfd\xdd\x57\x86\x84\x86\x42\x37\xf5\xc9\x66\x7e\xf3\x67\xe6\x8f\x6d\x9a\x06\x66\xf5\x73\x05\xab\xaf\xb0\xe1\x0e\x21\x97\x9c\x4a\x8d\x36\x87\x18\xb3\xa6\xb9\x86\x83\xf2\x12\xf0\xc5\x23\x95\x30\x83\xfc\x3b\x17\xcf\xbc\xc2\xfc\x0c\xbc\x8e\x31\x03\x00\x68\x1a\xf0\xb8\xab\x35\xf7\x49\x06\x79\x99\x82\xac\xd3\x81\x94\x1e\x63\x96\xa9\x5d\x6d\xac\x87\x79\x9b\x91\x13\xfa\x42\x7a\x5f\xe7\xdd\xd2\x79\x2b\x0c\xed\xf3\xac\x5b\x56\xca\xcb\xb0\x61\xc2\xec\x8a\xca\x5c\x0b\xa9\x0a\x21\x55\x3e\x15\xab\x35\x7f\xad\xac\x09\x54\x16\x7b\xae\x55\xc9\xbd\xb1\xc5\xfe\xcb\xff\x63\x58\x2b\x55\x17\x4e\xa2\x55\xdb\xed\x38\xba\xe3\xce\x21\x6a\x21\x0b\x8b\x94\xea\x1f\x11\x4e\xd9\x50\x3b\xa4\x42\x9b\xca\x06\x77\x2a\x35\xd9\xc8\x6e\x0d\x6d\x55\xc5\x8e\x16\x41\x8c\x79\xb6\xc8\x52\xf3\x96\x53\x85\x30\xa3\xe4\xf2\x8c\xad\x4d\x89\x0e\xde\x4c\x53\x5b\x20\xe3\x61\x46\xec\x86\xc8\x78\xee\x95\x21\xc7\xbe\x75\xf6\xde\x23\xb1\x1f\xcf\xaa\xbe\x47\x42\xdb\x86\x5a\x1b\xe1\x38\x8a\x02\x7e\x4a\x4c\x2a\x33\x62\x6b\xbe\x4b\x6f\x3d\x66\xb2\x1e\xf2\xaf\xf5\x34\x02\xce\xdb\x20\x3c\x34\x3d\x9a\xc6\x52\x48\xc5\x1e\xc3\x4b\x36\x78\x2a\xb4\x42\xf2\x6d\x1c\xc9\xb3\xdb\x76\x39\x20\x7a\xe7\x61\xd9\x4f\xd9\xef\x6e\x86\x03\x52\x9b\xaa\x42\xdb\x6a\x75\x36\xb2\x87\xf6\x49\x0f\x0d\x3b\xbc\xb5\x98\xf6\x14\x07\xc2\xc3\x64\x1f\x3d\xbc\x0d\x24\x60\x8d\x87\x29\x68\x2e\xce\x2b\xbf\x82\xfd\x54\x99\x57\xa9\xb6\x77\x55\x2d\x60\x39\x69\xde\xd0\x35\x8b\x3e\x58\x82\xff\xa6\xd0\x21\x99\xc6\x63\x78\x59\xbd\x59\x2b\x15\x5b\xe3\xe1\xc9\x04\x8f\x76\xbe\xb8\x1a\xd1\x9d\xf7\x6d\x82\x18\x47\xfb\x2e\x56\xb0\x1f\x47\x3b\xaf\x57\xc7\xe9\x30\x1e\x3f\x30\xfc\x8e\xf8\x46\x23\x70\xad\xd3\xb9\xad\x8d\x22\xef\xd8\xd0\xe4\xb9\x9c\x76\x65\x71\x4c\xbe\xd1\xfa\xee\x94\x3a\xff\x9c\x83\x92\x75\xa9\xdd\xe7\x3e\x65\xcf\x17\x93\xd0\x13\xf2\xf2\x02\xf2\xab\x2e\x2f\xeb\x3c\x28\xe7\x3f\x40\xde\x0e\x2e\xb6\x07\x97\xd8\x5d\x59\xa1\xeb\xef\xbb\x29\xb9\xd4\x26\x76\x6d\xfe\x81\x9a\x3b\xc1\x35\xc4\xf8\xf1\x0b\xd2\xb5\xf8\x5e\xef\xb8\x93\xe4\xd4\xc7\x19\xde\xb1\x9d\x8d\x85\x68\x0d\xcb\xd3\x05\x73\x26\x35\x89\x5a\xe4\xe5\xa7\xc0\xd0\x9a\x77\x8e\x36\x4d\xb1\x1c\xe1\x25\x6a\x6c\x31\x88\x71\x59\x5c\x12\xd5\xca\xf9\x93\xe4\xbf\x49\x17\x36\x16\x9d\x33\xc1\x0a\x74\xc3\x2a\x4e\xbf\x92\x7e\xf6\x37\x00\x00\xff\xff\xc0\x51\xdf\x1b\xc3\x06\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 1731, mode: os.FileMode(420), modTime: time.Unix(1605189445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x13\x8c\x42\x0a\x6c\xfa\x3d\x45\x1f\xd2\x26\xcb\x8c\x6d\xed\xd0\x64\xeb\x43\x51\xa0\xb4\x79\x92\x98\x28\xa4\x7a\xa4\xe3\x64\x9a\xfe\xf7\x81\x3f\x2c\xcb\xb6\x9c\xba\x1b\xb6\x61\x7e\x49\x74\xba\x3b\x1e\xef\xfb\xee\x3b\x35\x0d\x08\xcc\xa5\x42\x48\x4a\xae\x44\x85\x34\x5d\x10\x72\x8b\x09\xb4\xed\x09\x00\xc0\x74\x0a\x97\x8a\xcf\x2b\x04\x5b\x22\x84\x97\xa0\x6b\x24\x6e\xa5\x56\xcc\xfb\xe4\x4b\xb5\x80\xb4\x84\xd3\xa6\x81\x11\x7b\xcb\xef\x11\xda\xf6\x87\x90\x2f\x8b\xe1\x6f\x7c\xe4\xa5\x12\xb5\x96\xca\xa6\xd9\xa0\x33\x34\x3e\x9f\xfb\x95\xec\x17\x6d\x6c\x9a\x4c\x93\x31\x94\x2c\x44\x67\xdd\x5b\x42\xbb\x24\x05\xa5\x37\xb4\x27\xeb\x4a\x8d\xa5\xe5\xc2\x82\xd5\x30\x97\x4a\xf8\x8a\x6b\x6d\x2c\xcc\xb5\x78\x02\xab\x43\xb5\xf6\xa9\x46\xd8\x1c\xfe\x07\x2c\xf8\x3d\x56\xd0\xb6\xe1\x90\xf7\xf8\x65\x89\xc6\xae\x73\x6d\x2a\x6a\x9a\xe9\x29\x9c\x0b\x01\xbc\xaa\x20\x97\x58\x09\x03\xb6\xe4\x16\x38\x21\x28\x6d\x01\x1f\x17\xd5\x52\xa0\x60\x70\x3a\x8d\xdd\x0b\x71\x40\x5c\x15\x08\xa3\x1c\xce\x5e\xc1\x88\x7d\x1f\x62\x27\x3d\x9f\xe0\x37\x81\x11\xf7\x2e\x39\x3b\x57\x4a\x5b\xdf\x62\x13\xfc\xaf\x50\xc1\x40\x80\xcc\x41\x13\xa4\xee\xf8\x11\xcf\x60\xc4\x63\xab\x76\x7d\x63\x21\xa3\x9c\x5d\xfb\x7b\xf9\x9c\xd0\xb6\xd1\x78\xf3\x54\xa3\x7b\x23\x55\xe1\x8c\x9f\x6f\x8d\x56\x67\x49\xd3\x80\xe5\xc5\x4f\x5a\xdf\x2d\xeb\x4d\xe8\x0d\x2f\x20\x71\x0e\x8e\x23\x89\x4b\x20\xf3\xcd\xc1\xbf\xf1\x4a\x0a\x5f\xb8\xf3\x6b\xdb\x87\xf0\x8c\x3e\xdb\x41\x2f\xf7\x12\x95\x2b\xe8\xf3\xde\x15\x83\xfd\x64\xd7\x34\xd9\xb2\xf5\xa0\x41\x51\xe0\xb1\xc8\x4c\xd6\xd0\x60\x80\xe6\xd2\xc7\x3e\x83\x0c\x7e\x0b\x32\x5c\x89\x08\x0d\x86\x0e\xf7\x63\x23\xe5\xaf\x50\xb1\xeb\x3b\x59\x5f\xa1\x8a\x33\x95\x41\x3a\x08\x69\x76\x08\x53\x1c\xc0\x54\xe6\x10\x0f\xfe\x55\xc9\x2f\x4b\xc7\x87\x8f\x9f\xba\x26\x87\x28\x5f\xd2\xec\xe2\x28\xf0\xf1\x3f\x04\x7f\x32\x80\x7e\x34\x6d\x46\xff\xa6\x94\xc6\x0b\x91\xcb\x1b\x75\xca\x00\x07\x85\x2b\xe8\x2b\x0d\xdc\x6b\x81\x95\x87\xc6\x58\x4d\x68\x40\x5a\x90\xca\x6b\x85\xe0\x96\xcf\xb9\xc1\x8d\xaa\xa5\x25\x0c\x6a\x5a\xb8\x48\xba\x82\xd2\xda\x9a\xbd\x47\x53\x6b\x65\xf0\x03\x49\x8b\x34\x06\x82\xd3\x68\xf7\x52\x92\xf5\x44\x64\x3a\x85\x2b\xb4\x1b\x65\x72\x47\xb2\xee\xad\x70\x1c\xeb\x4b\x93\x51\xfc\x0e\x77\xa5\xa9\x69\x5d\x1a\xab\x85\x86\x89\x63\xbc\x5e\x41\xae\xe9\x7e\xb2\xa4\x6a\x82\x6a\x21\xb4\x40\x31\x7d\xbc\xaf\xa6\x35\x69\xab\xe7\xcb\x7c\xe7\x14\x99\x03\x12\xb9\xa3\x1c\x90\xec\x2d\xae\x2e\x70\xa1\x05\x52\x4a\xec\xb5\x16\x4f\x19\x0b\xcf\xe9\x0b\x91\xbd\xf4\xae\xdf\xbd\x02\x25\xab\xde\x35\xc0\x2b\x74\xa5\x8b\x02\x89\x7d\x90\xb6\xbc\x24\xd2\x94\x22\x51\xc6\xc2\xbf\x09\xba\x3f\x20\x5c\x26\x47\x2c\xcf\x99\x6c\x2b\x01\xa1\x12\x48\xec\x35\x17\xf1\x62\xe9\x6a\x0c\x34\x86\x44\x2a\x4f\x1c\x1f\xe3\x74\x58\xaa\x62\x2f\xd4\xe9\x7f\x67\x8a\x34\x88\x0d\x8e\xfc\xc2\x0e\xd3\xa1\xab\x97\x2c\x92\x53\x53\xa4\x76\xfa\xec\x6d\x43\xe4\x18\xf4\x9d\x8b\x46\x22\x96\x9e\x6e\x32\xcc\x42\xc5\x1b\x66\xfb\x26\x64\x2f\x9d\x7b\xb3\x37\xb4\x47\x75\x2e\x26\x77\xbd\xa3\xb8\x92\xdc\x5d\x76\x1a\xd1\xeb\xe3\x4c\x59\x24\xc5\xab\x6b\xa4\x07\xa4\x90\x2b\x34\x54\xc9\x6a\x28\x6a\xab\x85\x3b\x6d\x7c\xae\xcc\x99\xca\x75\x9a\x3c\x74\x77\x85\x9c\xcb\x0a\xc5\x91\xe8\xba\x14\xc7\x63\x79\xcd\x1f\x86\x70\x9c\x07\x08\x17\x95\x44\x65\x59\x7f\x44\xa3\xc6\xa4\xd9\x90\xca\xff\xbb\x0b\x98\xed\xf5\xfc\x1a\xed\xd0\x12\x4e\x05\x1b\x32\x67\x47\xa8\xe1\xd0\x76\xfc\x7f\xad\xb4\xfd\x2e\xc5\xa3\xfa\xbb\x6b\xcf\xa7\xd7\xcd\x58\x48\xc4\x7f\x76\x11\xbb\xb9\xbb\x15\xf7\x27\xc0\x77\xb4\x32\x07\xf3\x9f\x0b\x31\x94\xdf\x1c\x38\x80\x31\x76\xe0\x8c\x6d\x88\xbe\x0e\xe6\xd6\x00\xb8\x25\xe5\x16\xd4\xf6\x72\x72\x3f\x1c\xaf\xc5\x6c\xce\xdc\x9c\xa4\xc4\xde\x68\x65\xf1\xd1\xa6\x59\xb6\x2b\x79\x7f\x5d\xc2\x0d\x7f\x70\x22\xd4\x1f\xb2\xe1\x51\xff\x06\x01\x7a\x7e\xe6\x91\x24\xaf\xe4\xef\x43\x83\xef\x79\x5b\x90\x5e\xd6\x26\xd0\xfb\x00\xff\x02\xbf\xae\x82\x63\xaf\xc9\xb7\x5d\xcf\x4c\x89\x24\xf3\x9c\xfd\xcc\xc9\x94\xbc\x4a\x5f\xac\x0d\xef\x6a\x9f\xad\x09\xc1\x67\xf0\xf1\x53\x58\x41\xcd\xd0\x3c\xac\x6b\x19\xfc\x34\xeb\x46\xb1\xf0\xb5\x06\x57\xff\xbd\x33\x2a\xda\x36\x19\x47\xc4\xf7\x67\x33\xd0\x72\xd7\xee\x7e\xc9\xd0\xd7\xc1\x19\x21\x17\xc9\x57\x09\xd6\xb6\x63\xc0\xbf\x47\x0c\xf7\xe8\xf9\x9e\x26\x5b\xa2\xeb\x1f\x66\x17\x1d\x3f\xc6\xe0\xbe\x2c\x3b\x22\x99\x88\x68\x58\x17\x9e\x56\xff\x20\x85\xb6\x8a\xdf\xab\x76\xd3\xb6\xae\xca\xb0\xd0\x86\x5c\x62\x5d\x5b\xcb\x2d\x96\xfa\xee\xc7\x58\xd9\x6d\x16\x3f\x45\xbb\x01\xfe\x33\x00\x00\xff\xff\x8f\x7c\xb3\x1a\x56\x0f\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 3926, mode: os.FileMode(420), modTime: time.Unix(1605189445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x5f\x6f\xe3\x36\x0c\x7f\xef\xa7\xe0\x19\xc1\x22\x17\xa9\x72\x87\xbd\x75\x08\x86\xde\xad\xeb\x8a\x75\x6b\xd7\xf6\xd0\x87\x61\x0f\x4a\x44\xdb\x5a\x15\xc9\x91\xe4\xde\x1f\xcf\xdf\x7d\x90\x6c\x27\x8e\xe3\xe4\x5a\xe0\x0e\xc3\x04\x04\x08\x28\x8a\xfc\x91\xfc\x91\x92\xcb\x12\x38\x26\x42\x21\x44\x19\x53\x5c\xa2\x99\x4a\x61\x5d\x04\x55\x75\x04\x00\x30\x9d\xc2\xb9\x62\x73\x89\xe0\x32\x04\xbf\x05\x3a\x47\xc3\x9c\xd0\x8a\x06\x8d\xa4\x50\x0b\x20\x19\x1c\x97\x25\x8c\xe8\xef\x6c\x89\x50\x55\xbf\xd4\xb6\xe2\xe6\xf0\x95\xb0\xee\x5c\xf1\x5c\x0b\xe5\x48\x3c\xa8\x0a\x65\xb0\xe6\x57\x46\x2f\xd0\x91\x68\x1a\x4d\x20\xa3\xfe\x68\xbc\xde\x32\xe8\x0a\xa3\x20\x0b\x82\xea\xa8\x85\x78\x9f\x09\x1b\x80\x78\x58\xb0\x2a\xd0\x08\xb4\x90\x68\x03\x5d\x4f\xb0\xd4\x1c\xa5\xa5\xf0\x8e\x29\x98\x23\x24\x42\x3a\x34\xc8\x61\xfe\x29\x9c\xf9\x04\x39\x33\x6c\x89\x0e\x8d\xdd\xc4\x46\x32\x18\x8c\xcc\x03\x23\x1f\x20\x73\x2e\xa7\xb7\x68\x73\xad\x2c\x3e\x18\xe1\xd0\x4c\xc0\xc0\x71\x23\x5f\x15\x68\x5d\xdc\x09\x6e\x05\xa7\x33\xc8\xe8\x42\x0a\x54\x8e\x76\x2d\xd3\x3f\x3c\x06\xb2\x09\xb6\x2c\x4f\xc0\x30\x95\x22\x8c\xd0\x9f\x1a\xd1\x73\x9e\xa2\x6d\x4b\x33\xa0\x26\x6b\xb5\x33\xa5\xb4\x0b\x25\xb2\xb4\xc1\x7b\x81\x2a\xa4\xf2\x9c\xa5\x68\x7a\x06\x5a\x23\x22\x01\x5c\x79\x23\x23\x5c\x63\x7a\x10\x2e\x2b\x4b\xc8\x99\x5d\xb0\xee\x06\x89\xcb\x12\x50\x71\x38\xd9\x41\xb3\x23\x6e\x44\x55\x53\xaf\xa6\x66\x37\x2c\x15\x2a\x80\x5c\x4b\x9f\x98\x01\x34\xe1\xa7\xcd\x5a\x9a\xb3\x34\x84\xff\x66\x2d\x11\x0e\x97\xf6\x06\xcd\x4d\xb3\xf3\xfd\xeb\x8d\x65\x91\x00\xf7\x32\x43\xdf\xdf\x5e\xb5\x29\xad\x09\xd5\x3d\x16\xc5\x3f\x00\x87\x57\x33\x88\xa2\x4e\x71\xfa\xc6\x27\x01\xce\x0c\xac\x33\x0b\xad\x9e\xe8\x99\xd3\x82\xf0\x78\x5b\x3f\x09\x4a\xaf\x66\xa0\x84\xec\xd9\xaa\xd9\x2c\x75\x9a\xa2\x09\xa9\xfc\x59\xa0\xe4\x3d\x24\x13\xe0\x31\xbd\x54\x89\x26\x51\x08\xdc\xb3\xd0\x0a\x95\xf6\x39\x09\xe3\xee\xb1\x71\x14\xef\xb8\x32\xa8\x38\x1a\xfa\x96\xf1\x86\x78\xe4\xc3\x04\xcc\x04\xb6\xfc\xc1\xb2\xb0\xce\xd3\x9f\x41\xae\xad\x70\xe2\x09\x41\x28\x87\x29\x1a\x48\x0d\x32\xef\xe9\x33\x1a\x3d\x68\xdf\x77\xdf\x96\x78\x53\xe5\xea\x59\x35\xc8\x0f\xe6\x3e\xff\x86\x39\xcf\x5f\x96\xeb\xfc\xa5\x39\xce\xbf\x69\x6e\xdb\x7f\x9d\x39\x32\x83\x15\xbd\x12\x4b\xe1\x48\xb7\xbc\x31\xbd\x4e\x12\x8b\x8e\x90\x00\xe8\x04\xde\xc4\x70\xbc\x45\xea\x78\xab\x0d\xdf\xdb\x7a\xb4\xf7\x07\x20\x38\xdd\x0c\xc8\xcd\x36\x05\xa7\xb9\x86\x13\x50\x68\x1d\xf2\x66\xff\xc7\xa1\x81\x95\xd4\x93\x28\xe4\x7e\x70\x62\x8d\xfe\xb6\x5a\x85\x61\x72\x3a\x03\xa1\x38\x7e\x04\x62\x73\x29\x1c\x10\xc7\xd2\x2b\xad\x1f\x8b\x1c\x46\x09\xbd\x73\xa6\x58\xb8\x7b\x96\x42\xe4\x4f\x44\x31\x44\x93\x28\x86\xd7\x7d\x9b\x22\x81\x64\x0f\xe7\xfc\x90\x5d\x7b\xab\x2a\x4f\xbf\x64\x90\x7e\xb0\x19\x84\xa3\x84\x5e\xda\xb7\x5a\xcb\xbe\x9f\x76\xf9\x59\x35\x87\xb9\xd6\x72\x70\x3b\xc0\x99\xcd\x20\x72\xa6\xc0\x21\x3f\xed\x9a\xc3\x0c\xbc\xce\xa0\x42\x05\x28\x2d\x6e\x8c\x25\x4c\xda\x2f\x5a\x0b\x4a\x87\xcc\xed\x3f\xbe\xd5\x37\xe7\xbe\x41\x08\x1a\x13\x77\xdb\xa8\x9f\xcc\x09\x24\x31\xfd\x09\xe7\x45\x4a\xa2\x85\x2e\x24\x07\xa5\x5d\x68\xab\x1d\x4e\x0d\xb0\xbe\x5d\x7b\xbb\x6a\xdc\xf3\x37\x5e\xb7\xd8\xd8\x67\x6d\x0c\xda\xc0\x38\x44\x3c\xd4\xac\x1b\xf3\x3b\xcd\xb5\xce\xc9\xa0\xb4\xee\xae\x87\x0c\x0d\x92\x70\x47\xdf\xb0\xc5\xa3\xef\xa7\xaa\xa2\x65\xb9\xa6\x65\xc8\x49\x55\x91\x79\xbc\xeb\xdb\xdf\x7a\x4d\xf1\x02\x99\x2e\x95\xdb\xc7\x25\x51\xcf\xbc\xd3\xde\xd0\x4b\x86\x03\xfa\xd2\xf0\x6b\xd7\xff\xa9\x98\x4c\xb5\x73\xf2\x3f\xac\xa2\x78\x46\x15\xef\x9c\xf1\xd7\xc5\x9e\x42\xbe\xd0\x61\xf2\x0c\x87\xf7\x22\xa4\x6a\xd0\xdd\x74\x1a\x06\xf2\xa0\x8d\x81\xa7\xd9\xc1\x17\x19\xda\x35\x09\x57\xf4\x4c\x4a\x62\xe8\x3b\xad\x1c\x7e\x74\xa4\x83\xf2\x10\xf7\xf6\xf1\xad\xfe\xdb\xdc\xb7\x81\x45\x3e\x83\x9c\x39\x36\x67\x16\xa3\xb8\x0d\x03\x4e\x60\x8e\xce\x5f\x38\xdb\xef\x3f\xd8\x50\xea\x52\x39\x34\x8a\xc9\x3b\x34\x4f\x68\x6a\xc3\x35\xb7\x94\x90\x71\xef\xc4\x16\x59\x3a\x91\xfa\xc2\xa4\x46\x17\xb9\x3d\xf8\x5a\xbe\x45\xc6\x2f\x6a\xb5\x4e\x1e\xf9\xa6\x55\x33\x34\x22\x49\xe8\x6f\xcc\xd8\x8c\x49\xf2\x5d\x2b\xb8\xce\x83\xad\xb2\x3e\x7c\x0a\x7f\xfe\x65\x03\x69\xca\x9d\x3b\xd0\xd7\x38\xdd\x71\xd1\xd5\x68\x6e\xd3\x34\x20\xad\x55\xab\x2a\x2a\xcb\x51\xea\xbb\xf5\xc0\x13\xdc\x53\xa8\x2f\xf7\x2b\xda\x7c\x71\xfc\x03\x56\xb1\x47\x4f\xae\xd3\xf0\xc9\xb7\x03\xaf\x6f\xbb\xaa\x26\x80\xf6\xab\x90\xc1\xa2\x11\x4c\x8a\xcf\x21\xed\x75\xbd\xa3\x7e\xfd\xbe\x5e\xc5\x87\x9e\x83\x6c\xa9\x0b\xe5\xa2\x09\x48\x54\x04\x6d\xdc\x3e\x0b\x87\xf2\xd3\x80\x41\x1e\x75\xbf\x44\x03\xbe\xeb\x5f\x1b\x38\xcd\x0b\xb5\x3a\x2a\x4b\x54\xbc\xaa\xfe\x0d\x00\x00\xff\xff\x37\x93\xa5\x78\x59\x0f\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3929, mode: os.FileMode(420), modTime: time.Unix(1605189445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x94\x41\x6f\xdb\x3c\x0c\x86\xef\xf9\x15\xfc\x84\xe0\x83\xdd\x39\xca\x3d\x40\x0f\xc3\xda\x75\xc1\xb0\x15\xeb\x06\xf4\xb0\xee\xa0\x54\xb4\x25\x4c\x91\x1d\x4a\x69\xd7\x69\xfa\xef\x83\x64\x27\x71\x93\x60\xbe\x89\x7e\x49\x3e\x7a\x49\x3b\x04\x90\x58\x6b\x8b\xc0\x94\xb0\xd2\x20\xcd\x09\x85\x64\x10\xe3\x04\x00\x60\x3e\x87\x6b\x2b\x56\x06\xc1\x2b\x84\xf4\x0a\xda\x0e\x49\x78\xdd\x5a\x9e\x15\xf5\xd6\x3e\x42\xa1\xe0\x22\x04\x98\xf2\xcf\x62\x8d\x10\xe3\x87\xbe\x56\x39\x24\xdf\xa1\x90\xd7\x56\x76\xad\xb6\xbe\x28\xcf\x4a\x21\xe4\x6a\xe9\x51\xfc\x06\x7d\xc1\xe6\x41\xcb\xc5\xc3\x83\x7c\x13\x59\x05\x8a\xa7\x1a\xe5\x5e\x43\xe8\xb7\x64\x41\xe5\x40\x9c\xec\x58\xbf\x29\xed\x32\x51\xe2\x83\x1a\xfd\xa3\x42\x97\xd1\xc7\x2d\x61\xdd\x4a\x34\xa0\x25\x5a\xaf\x6b\x8d\x12\x56\x2f\x20\xa0\xd1\x4f\x08\x5b\x32\xb3\x4e\x90\x58\xa3\x47\x82\x9a\xda\xf5\xae\xb6\x14\x5e\xac\x84\x43\x10\x56\x0e\xfd\x1d\x68\x0f\xbe\xcd\x0d\x1e\x8d\x46\xeb\x0f\x9e\x14\x0a\xce\x3a\x92\xee\x51\x3c\x83\xf2\xbe\xe3\x77\xe8\xba\xd6\x3a\xbc\x27\xed\x91\x2a\x20\xb8\x18\xe2\x9b\x2d\x3a\x5f\x8e\x4c\x09\x61\x06\x1e\xd7\x9d\x11\x1e\x81\x69\x39\x4b\x68\x33\xea\x85\x3d\x31\x83\x69\x1a\xdb\x3e\x65\xb3\x82\xc5\x25\x28\x3e\x90\x8d\x69\xf8\x97\x2d\xd2\x4b\x51\xf2\x7b\x85\x84\xc5\xe1\xd5\x1f\x70\x56\xfc\xcc\x92\xe5\x55\xa1\x65\x59\x8e\x08\x46\x00\x69\x13\xe6\x9b\xd5\xd0\x72\x27\xc1\x0a\x90\x28\x75\xdd\xac\xf8\xad\x35\x2f\x05\xf1\x77\xad\xf5\xf8\xcb\x17\xff\xac\x84\x44\x2d\xcd\xf2\x06\x6a\xdb\x1c\x5f\x24\xe1\x35\xd4\x6e\x3b\x97\x4a\x4f\xf9\x5b\x6b\x5b\x9f\x57\xd0\xf1\xc1\xd7\x1b\xb4\x79\x43\x6e\x7a\xd9\x88\x49\xee\x99\x9c\x42\xd2\x75\xcd\x3f\x09\x72\x4a\x98\xe2\xff\x5d\xe0\xb6\xcb\xb5\x42\x9f\xbc\x80\xef\x3f\x9c\x27\x6d\x9b\x83\xfb\xbb\x09\xe8\x7a\x4f\x32\x6a\x31\x56\x90\xb0\x0d\xc2\xb4\xc9\xa4\xbd\x34\x46\x16\xc2\xb4\x89\x91\x55\x21\x00\x5a\x09\xb3\xa3\xe4\x14\x36\x0e\x4f\xe2\xe9\x61\xe7\x86\xb3\xc8\x1f\xe9\x09\xde\x71\xed\x18\x2b\xc0\x83\xef\xba\xce\x56\xfc\x77\x09\x56\x1b\x78\x7d\x3b\xc5\x4d\xdb\x34\x48\xfc\x5e\x7b\x75\x9d\xc6\x51\x20\x51\x99\x8f\xef\x35\x1a\x59\xb0\x57\x0b\x94\x0f\xcb\xab\xdd\x99\x55\xa0\x65\xc9\xfb\x44\xe6\x90\xb4\x30\xfa\x77\x9e\x11\xe4\xe1\xb2\xf2\x55\x3b\x42\x2b\x91\xf8\xd2\x7a\x24\x2b\xcc\x57\xa4\x27\xa4\x3e\xfb\xb9\x02\xaa\x12\xe1\x71\x46\xfa\xe2\x0e\x57\x9b\x4c\xce\xa2\x9f\xb0\x1e\x4c\x63\x15\x20\x5f\x5e\x95\x7c\x69\xeb\xf6\xbc\x64\xe0\x42\xc9\xc6\xbf\x9a\x8c\x7a\xfb\x71\x20\x1b\xfe\x42\x71\x12\x02\x5a\x19\xe3\xdf\x00\x00\x00\xff\xff\x77\x5d\x56\x3f\x43\x05\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1347, mode: os.FileMode(420), modTime: time.Unix(1605189445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\xdf\x8f\xe3\x34\x10\x7e\xdf\xbf\x62\xb0\x2a\x14\x97\xd4\x79\x5f\xe9\x1e\x4e\x77\xcb\x52\xf1\x63\xc5\x01\xda\x07\x0e\x21\xb7\x9e\x24\x16\xae\x9d\x8e\x1d\x8e\x25\xe4\x7f\x47\x4e\xd2\x36\x6d\x93\xd5\x09\xb4\x82\x87\xf3\x53\x6b\xcf\x8c\xe7\x9b\xf9\xe6\x73\x9a\x06\x14\xe6\xda\x22\xb0\x52\x5a\x65\x90\x32\x5f\x6f\x08\xbd\x77\x35\x6d\xd1\x33\x68\xdb\x1b\x00\x80\xa6\x01\x92\xb6\x40\x58\x20\xdc\xbe\x82\x85\xb8\x53\x05\xfa\xc3\x69\x6f\x91\x2d\xe1\x1d\x4a\x95\x7d\xa3\x7d\x00\x57\x21\xc9\xa0\x9d\xf5\xe0\x2c\x9c\x05\x85\x65\x36\xf2\xcb\x32\xb8\xb3\x72\x63\x10\x42\x89\x40\x28\xd5\xc9\x37\xba\xc6\xdd\xa6\x81\x05\x8a\xef\xe4\x0e\xa1\x6d\x01\x55\x81\xe2\xe8\x9f\xd7\x76\x0b\x49\x09\xcb\x68\x74\xb0\xf9\xaa\x07\xc3\x87\xd0\x23\xff\xbf\xa0\x92\x7e\x2b\x0d\xb4\xed\x9d\x55\x95\xd3\x36\x24\x7c\xd2\x19\x9a\xe3\x1d\x71\x95\xe2\x1e\x43\xc2\xb2\x46\xab\xdb\xf7\xef\xd5\x17\x6d\x16\x6b\x82\x95\x91\x5b\x84\xe4\x14\xde\x5b\xf9\x1b\x72\x60\xbf\x32\x60\xab\x58\x3f\x96\x42\x29\xa6\x33\xe0\x67\x37\x10\x86\x9a\x2c\x94\xc7\xcd\xf6\xe6\x0c\x65\x52\xc2\x24\xc6\xe9\xd8\xc9\x07\x28\x43\xa8\xc4\x3b\xf4\x95\xb3\x1e\x1f\x49\x07\xa4\x14\x08\x96\xc3\xfe\xbe\x46\x1f\xf8\x05\xcc\xa6\x59\x41\xc0\x5d\x65\x64\x40\x60\x5a\xad\x72\x72\xbb\x15\xf5\xc6\xab\x4a\x92\xdc\x31\x58\x8c\x1b\x1f\xd7\x7e\x13\x59\x51\x8a\xad\xd1\x68\x83\x18\xa7\x29\xbe\xaf\x91\x9e\x12\x2e\x1e\x4b\x24\x4c\x4e\x47\x43\xa9\xa2\xc9\xfa\x6d\xa2\x15\xe7\xbd\xe9\x0c\x1c\x7e\x73\x91\x27\xe8\x3c\x1a\xfe\x64\xf5\xbe\xc6\xcb\x84\x06\x93\x13\x92\x48\xac\x6c\xbf\x61\xd1\xe5\xc7\xa7\x6a\xd2\x01\x53\x40\xa2\x88\x64\xbf\x11\x0f\xd6\x3c\x25\x24\xde\x38\x1b\xf0\x8f\x90\x70\xfe\x11\xf1\x91\xc8\xd1\xaa\x9b\x24\x6d\x8b\xb3\xbb\xa6\xbc\x17\x05\xb9\xba\xf2\xdd\x40\xa1\x78\x6d\xad\x0b\xfd\xc8\x88\xa1\xb7\xf7\x68\x45\x1c\xa9\xfb\xde\x6e\x22\x65\x75\x4c\xd9\x97\x48\x3a\xcf\xc5\xb7\x92\x7c\x29\x4d\xf2\xf9\x61\xe3\xa1\xea\x62\x36\x7d\x90\x5b\xf8\xf9\x17\x1f\x48\xdb\xa2\xb9\x0a\x76\xe8\x7f\x2c\x6c\x31\x7b\xe5\xd8\x72\xd0\x84\xa2\x83\xd0\xbb\xb4\x2d\x6b\x9a\x45\x11\x79\xdf\x34\x80\x56\xc1\x6a\x26\x48\x3c\x36\x1e\x67\xcf\xe3\x62\x3d\x1b\x62\x15\x2f\x59\x73\x1b\x4b\xce\x66\x41\xcc\xdd\xdc\xb6\x29\xe0\x75\x33\x75\xde\x15\xf2\xb3\x57\x60\xb5\x81\xe9\xda\x94\xc2\xb8\xa2\x40\x12\x8f\x3a\x94\x77\xb1\xd7\x09\x12\xf1\xee\xef\x97\x1a\x8d\x4a\xae\xd2\x6d\x5b\x31\xda\x5a\xbf\x3d\xec\xb2\x14\xb4\xe2\xa2\x0f\xc2\x3c\x92\x96\x46\xff\xd9\x8b\x5e\xc7\x22\x76\x9d\x22\x74\x1a\x61\x15\x92\x58\xdb\x80\x64\xa5\xf9\x01\xe9\x77\xa4\x3e\xca\x87\x14\x28\x8d\xd9\xcf\x79\x46\x75\xb9\x2e\xc7\x35\x33\xcf\x60\xce\xe0\x3a\xb5\x81\xa5\x10\x81\x71\xb1\xb6\xb9\x7b\xce\x70\xc8\x1d\xd5\x04\xb4\x01\xd6\xc3\xd7\x03\x0a\xc5\x2f\x87\xbd\x63\xca\xe4\x90\x67\x4b\x08\x4e\x39\x58\x41\x28\xb5\x07\xed\x41\x82\x89\x4f\x10\xb9\x3a\xa0\x38\xbc\x2e\xfb\xa8\x2d\x90\x6b\x13\x30\xb2\x5f\x9c\xbf\x42\x87\x85\x7e\xac\x01\xaf\x8d\x79\x5e\x02\xfe\x0d\x6b\x86\xde\x77\xdd\xee\xb3\xd3\xb6\x00\x25\x83\xdc\x48\x8f\x8c\xc7\x97\x71\x00\xb6\xc1\x10\x90\x7a\x62\xfc\x67\xb4\xb8\x12\xac\xae\xc9\x9f\x54\x6b\x62\x3d\xa7\x5a\x91\x9a\xff\x50\xb5\xfc\x8b\x10\xf0\xff\x2f\x3e\x72\xe7\x6a\x1b\x58\x0a\x06\x6d\x82\x9e\xbf\xb8\xd6\x58\x35\xa6\xd0\x28\xcb\x4e\x6d\xde\x10\xc6\x27\xff\xa3\xbe\x70\x4f\xd1\x8e\xbf\xfe\x0e\x00\x00\xff\xff\xf1\x80\xde\xe0\x74\x0b\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 2932, mode: os.FileMode(420), modTime: time.Unix(1605189445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xdf\x6f\xdb\x36\x10\x7e\xef\x5f\x71\x13\x8c\x42\xca\x2c\xfa\x3d\x45\x1f\xda\x26\xf3\x8c\x6d\x2d\xd0\xb4\xeb\x43\x5b\xa0\xb4\x79\x92\xd8\xc8\xa4\x7a\xa2\x9d\x66\x9a\xfe\xf7\x81\x3f\x2c\xcb\xb2\x9c\xb9\x1b\xb6\x61\x7e\x49\x48\xdd\x1d\x8f\xf7\x7d\xf7\x1d\x9b\x06\x04\x66\x52\x21\x44\x05\x57\xa2\x44\x9a\x6d\x2a\xc1\x0d\x46\xd0\xb6\x8f\x00\x00\x66\x33\xb8\x56\x7c\x59\x22\x98\x02\xc1\x7f\x04\x5d\x21\x71\x23\xb5\x62\xce\x26\xdb\xa8\x15\xc4\x05\x5c\x34\x0d\x4c\xd8\x4b\xbe\x46\x68\xdb\x1f\x7d\xbc\x24\xb8\xbf\x75\x9e\xd7\x4a\x54\x5a\x2a\x13\x27\xa3\xc6\xd0\xb8\x78\xf6\x57\xb0\x39\x9a\x38\x9a\x35\x52\x5c\x7e\xf8\x20\xbe\x6f\xa3\x29\x14\xcc\x47\x49\x3a\x2b\x42\xb3\x21\x05\x85\xdb\x68\x1f\xed\x32\xae\x0d\x6d\x56\x06\x8c\x86\xa5\x54\xc2\x65\x5e\xe9\xda\xc0\x52\x8b\x7b\x30\xda\x67\x6d\xee\x2b\x84\x7d\x12\xbf\xc3\x8a\xaf\xb1\x84\xb6\xf5\x87\xbc\xc6\x2f\x1b\xac\xcd\x2e\xd6\x3e\xb3\xa6\x99\x5d\xc0\x33\x21\x80\x97\x25\x64\x12\x4b\x51\x83\x29\xb8\x01\x4e\x08\x4a\x1b\xc0\xaf\xab\x72\x23\x50\x30\xb8\x98\x85\x2a\x7a\x3f\x20\xae\x72\x84\x49\x06\x97\x4f\x61\xc2\x7e\xf0\xbe\x69\xcf\xc6\xdb\xa5\x30\xe1\xce\x24\x63\xcf\x94\xd2\xc6\x95\xba\xf6\xf6\x73\x54\x30\xe2\x20\x33\xd0\x04\xb1\x3d\x7e\xc2\x13\x98\xf0\x50\xaa\xa1\x6d\x48\x64\x92\xb1\x1b\x77\x2f\x17\x13\xda\x36\x6c\xbe\xb9\xaf\xd0\x7e\x91\x2a\xb7\x9b\x9f\x3e\xd7\x5a\x5d\x46\x4d\x03\x86\xe7\x3f\x6b\x7d\xbb\xa9\xf6\xae\x6f\x78\x0e\x91\x35\xb0\x5c\x89\x6c\x00\x99\xd9\x83\x5f\x10\x72\x83\xbf\xf2\x52\x0a\x97\xb8\xb5\x6b\xdb\xad\x5f\xa3\x8b\x76\xd2\xca\x7e\x44\x65\x13\xfa\x74\x74\x45\xbf\xff\x68\xb8\x95\x1e\xec\xf5\xa0\x41\x91\xe3\xb9\xc8\xa4\x3b\x68\xd0\x43\x73\xed\x7c\x1f\x40\x06\xbf\x05\x19\xae\x44\x80\x06\x7d\x85\xfb\xbe\x81\xfa\x73\x54\xec\xe6\x56\x56\x73\x54\xa1\xb7\x12\x88\x07\x90\xfa\x9a\x25\xa7\x30\xc5\x11\x4c\x65\x06\xe1\xe0\xb7\x4a\x7e\xd9\x58\x3e\xbc\xff\xd8\x15\xd9\x7b\xb9\x94\x16\x57\x67\x81\x8f\xff\x21\xf8\xe9\x08\xfa\x61\x6b\xdf\xfa\x6f\x0a\x59\x3b\x41\xb2\x71\x83\x5e\xd5\xc0\x21\x97\x5b\x54\xd0\xd7\x1c\x58\x6b\x81\xa5\x03\xa7\xe6\x5b\x47\x15\x84\x55\x61\x79\x50\x83\x54\x6e\x29\xb8\xe1\x4b\x5e\xe3\x5e\xe7\xe2\x02\x46\x55\xce\xb7\x5b\x7c\x07\x85\x31\x15\x7b\x8d\x75\xa5\x55\x8d\xef\x48\x1a\xa4\x29\x10\x5c\x84\x7d\x27\x2a\xc9\x81\x9c\x80\xc1\x75\x55\xda\x66\x8d\xa4\x48\x33\xd2\xeb\x94\xbc\x5d\x5a\x71\xe2\xeb\x08\x26\xf6\x9e\x9d\xc7\x6c\x06\x73\x34\x7b\x55\xb3\x49\xb2\xee\xab\xb0\xfc\xec\xcb\x5a\xad\xf8\x2d\x0e\x65\xad\x69\x6d\x18\xa3\x85\x86\xd4\x76\x8b\xbe\x83\x4c\xd3\x3a\xdd\x50\x99\xa2\x5a\x69\x81\x62\xf6\x75\x5d\xce\x2a\xd2\x46\x2f\x37\xd9\xe0\x10\x99\x01\x12\xd9\x93\x2c\x07\xd8\x4b\xbc\xbb\x42\xeb\x44\x31\xb1\xe7\x5a\xdc\x27\xcc\xaf\xe3\xc7\x22\x79\xe2\x4c\xbf\x7b\x0a\x4a\x96\xbd\x7b\x83\x13\xf9\x52\xe7\x39\x12\x7b\x27\x4d\x71\x4d\xa4\x29\x46\xa2\x84\xf9\x7f\x23\xb4\x7f\x40\xd8\x48\x96\x93\x8e\x6e\xc9\x41\x00\x42\x25\x90\xd8\x73\x2e\xc2\xbd\xe2\xbb\x29\xd0\x14\x22\xa9\x1c\xe7\x9c\x8f\x95\x70\xa9\xf2\x23\x57\x3b\x3a\xba\xad\xc3\xfa\x06\x6a\x62\x47\x82\xb1\xab\x17\x2c\xf0\x5a\x53\xe8\x8a\xf8\xc1\xdb\x7a\xcf\x29\xe8\x5b\xeb\x8d\x44\x2c\xbe\xd8\x47\x58\xf8\x8c\xf7\x4d\xe1\x8a\x90\x3c\xb1\xe6\xcd\x51\xbf\x9f\x55\xb9\x10\xdc\xd6\x2e\x10\xca\xdd\x65\x50\x88\x5e\x1d\x17\xca\x20\x29\x5e\xde\x20\x6d\x91\x7c\x2c\x5f\x50\x25\xcb\x31\xaf\x83\x12\x0e\xca\xf8\x50\x9a\x0b\x95\xe9\x38\xda\x76\x77\x85\x8c\xcb\x12\xc5\x99\xe8\xda\x10\xe7\x63\x79\xc3\xb7\x63\x38\x2e\x3d\x84\xab\x52\xa2\x32\xac\xdf\xd3\x61\x74\xbe\x52\xb8\xb8\x8a\xa5\x48\xc6\xe6\xc4\xbf\x32\xc2\xbd\x4c\xda\x8c\x8e\x4a\x7f\x83\x66\x6c\x8c\xc7\x82\x8d\x6d\x27\x67\xe8\xe9\xd8\x7c\xfd\x3f\x0c\xc5\xf0\x24\x1c\xad\x52\x38\xaa\x3f\xfd\x8e\x6c\x7a\xd5\x0c\x89\x04\x1a\x2c\xae\x42\x35\x87\x73\xf5\xb8\x11\x5c\x45\xcb\xfa\x64\xfc\x67\x42\x8c\xc5\xaf\x4f\x1c\xc0\x18\x4b\xdc\x5b\x66\x2f\xd1\x84\x6b\xbd\x45\x90\xc3\xb7\xa6\x1f\x6b\x61\x5a\x55\xdc\xac\x8a\xd4\xd2\xfc\xe0\x79\x33\xc4\x7d\x04\x8f\xd3\x74\x38\xea\x24\xa9\x06\x53\xd1\xfe\x70\xba\x13\xc5\x25\xb3\x56\x31\xb1\x17\x5a\x19\xfc\x6a\xe2\x24\x19\x4a\xe7\x5f\x1f\x05\x35\xdf\x5a\x31\xeb\x37\xeb\xb8\x64\x7c\x83\x90\x3d\xac\x1d\x48\x92\x97\xf2\xb7\x31\x01\x71\xc4\xcf\x49\x6f\xaa\xda\xf7\xc7\x09\x02\x7b\x82\xce\xbd\x61\xaf\xc6\x9f\xbb\x9a\xd5\x05\x92\xcc\x32\xf6\x0b\xa7\xba\xe0\x65\xfc\x78\xb7\xf1\xaa\x72\xd1\x1a\xef\x7c\x09\xef\x3f\xfa\x51\xd6\x8c\x35\xd4\x2e\x97\x13\xc8\x87\x5e\xce\x5d\xae\xde\xd4\x3d\xb9\x26\x79\xdb\x46\xd3\x00\xf8\x71\x73\x7b\x5e\x0f\xf7\xed\x2f\x1a\x7b\x64\x5c\x12\x72\x11\xfd\x29\xbf\xda\x76\x0a\xf8\xf7\x88\x61\x97\xae\x61\xe2\xe8\x40\xbc\xdd\x62\x71\xd5\xf1\x63\x0a\xf6\x71\xdb\x11\xa9\x0e\x88\xfa\xb1\xe3\x68\xf5\x0f\x52\xe8\x20\xf9\xa3\x6c\xf7\x65\xeb\xb2\xf4\x83\x71\xcc\x24\xe4\x75\x30\x24\x43\xaa\xaf\x7e\x0a\x99\x7d\x4e\xc2\x6b\xb8\xeb\xdf\x3f\x02\x00\x00\xff\xff\x91\x9b\x48\x8c\xe1\x0f\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 4065, mode: os.FileMode(420), modTime: time.Unix(1605189445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4f\x6f\xfb\x36\x0c\xbd\xf7\x53\x70\x46\x80\xd8\x45\xac\xde\x7f\x40\x30\x74\xe8\xbf\x00\x45\x31\xb4\x1d\x76\x56\x2c\x5a\x51\xe7\x50\x8e\x24\xa7\xc8\x0c\x7f\xf7\x81\xb2\x93\xba\x49\xdb\xf5\xd2\xdc\x14\x3d\x92\x8f\x8f\x8f\x72\xdb\x82\xc2\xd2\x10\x42\x62\x54\x5e\x3a\xbb\xce\x1d\x6e\x1a\xf4\x21\xaf\xa5\x93\xeb\x04\xba\xee\x0c\x00\xc0\xa8\x1a\x7e\xcd\xa1\x58\x19\xf1\xd7\xe3\xfd\x9f\x7c\x97\xba\x19\x47\x25\x59\x0f\x28\x23\x66\x3e\x87\x24\x81\x36\xfe\xc5\xbf\x95\xa8\xac\xd6\xe8\xc4\xdf\x26\xac\x6e\x0c\x56\x2a\xe5\x98\x19\x83\x33\xb1\xa0\xd2\xa6\x09\xae\xeb\xb0\x83\xa9\x51\x53\x68\x5c\x05\x7d\xe1\xec\x90\xc2\x21\x29\x74\xe2\x0f\xa9\x1e\x7b\x6a\xe9\xeb\x0c\xfa\xda\x50\x48\x22\x1b\x60\x89\x30\x9d\xbe\x0b\x09\x8d\xa3\x78\xec\xe9\xb7\x2d\x13\x9c\x88\xc5\x95\xb8\x93\xfe\xd6\x3e\xef\x6a\x84\x7c\xe8\xad\xef\x8f\xdb\x6b\xdb\x1e\xc3\xd7\xe2\x29\x38\x43\x1a\xba\x2e\x65\xae\xfb\x34\x58\x79\x3c\xe4\x5a\xf8\x01\x74\x9a\xca\xa8\xfa\x93\x90\x05\x85\x23\xfc\x0c\xd0\x39\x0e\xf2\xc1\x15\x96\xb6\xe2\x32\x58\xf3\x56\x75\x90\x97\x31\xbf\xcd\x81\x4c\x35\xd2\xf7\xdb\x1a\x3b\x67\x1d\x4b\xeb\x99\xee\x41\x66\x0c\xe8\xa2\xf2\x23\xf1\xfe\x4f\xf3\x75\xe3\xa3\xe2\x12\x6a\xeb\x4d\x30\x5b\x04\x43\x01\x35\x3a\xd0\x0e\x25\x67\xfc\x17\x9d\x3d\xc9\x78\x18\xc9\x78\x2c\x39\x20\xa9\xae\x3b\x63\x99\x48\xb1\xdb\xce\x46\x9e\x74\x28\xd5\xc5\x66\x79\x70\x61\xdb\x5e\x9c\xc3\xa2\x04\x4b\x08\xb6\x84\xb0\x42\xd0\x66\x8b\x04\x2b\x49\xaa\x8a\x04\x6c\x53\x7b\x30\x1e\x3c\x06\xb0\x14\x21\xa8\x34\x02\x4a\x26\xf8\x62\x0d\x81\x09\xe2\xfc\x62\x9c\x31\x58\x65\x21\x07\x42\x1f\x50\x0d\xc8\xca\x4a\x65\x48\xff\x0e\x23\x68\x0e\x4e\x92\x46\x98\x20\x0f\x6b\x22\xae\x95\x46\x0f\xa3\x51\x8e\x20\xba\x87\x5c\xb2\x3f\x65\x30\x96\xbc\xb8\xeb\x49\xde\x22\x89\x47\x94\xea\xb6\xe7\x3a\x0a\x3f\xae\x12\x73\xf8\xba\x32\x01\xd2\x20\xf5\xbd\xb5\xff\x34\x35\x4c\xa2\x35\x9b\x22\x3c\x4b\x0d\x49\xdf\x71\x92\x41\x32\x4b\x8e\x73\xed\xf3\xb1\x79\x36\x4c\x89\x53\x76\xdd\x66\x19\x9d\xd2\xb6\x50\x4b\x5f\xc8\x8a\x33\x3e\xc8\x35\xb2\xd5\xb3\x61\x10\xf9\x07\xb4\x86\x01\x7d\xf2\xd7\xe8\xf8\xc5\x30\xa3\x0f\xf3\x38\x2e\x43\xfa\xed\x79\xf9\xc4\xde\xfe\xd5\x84\x62\xc5\x77\x22\x0d\xbb\x1a\xb3\x23\xeb\x17\xd2\x23\x9c\x23\x05\xf1\x60\xc3\x8d\x6d\x48\x5d\x73\x81\x5f\x27\x32\xbc\xdb\x91\x88\x49\xd1\xb9\x6c\xbc\x32\x71\xf9\x07\x1d\xc4\xfe\x25\x18\xce\x71\x99\x32\x71\x85\xcb\x46\xa7\xc9\x8b\x5d\x02\x3f\x3b\x25\x17\x3c\xf2\xf9\x68\x7b\xf6\x94\x86\xdd\xe1\x7a\x1f\x40\xdf\xad\xc5\x49\x4f\x4f\x86\x74\x53\x49\xf7\xa3\x6d\xf5\x81\x89\x6a\xea\xca\x14\x32\x20\x20\x05\xb7\x83\xd2\x3a\x30\x5f\xf4\xb7\xa0\x80\x8e\x64\xf5\x84\x6e\x8b\x3d\xc3\xa1\x55\x32\xd5\xb7\x5a\x55\x58\xca\xa6\x0a\x3f\xdc\x57\xff\xf6\x95\x18\x8a\x15\x3f\x7e\x64\x15\x02\x7f\xea\x40\x2d\x7f\xaa\xb9\x6e\xf8\xf6\xbc\x6d\xc2\x7f\x01\x00\x00\xff\xff\xc0\xb5\xd9\xb6\x6a\x07\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1898, mode: os.FileMode(420), modTime: time.Unix(1605172767, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl": &bintree{flutterClientTpl, map[string]*bintree{}},
		"model.tpl":  &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
