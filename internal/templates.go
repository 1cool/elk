// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/date_utc_converter.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_delete.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xd1\x6e\xe3\xba\x11\x7d\xef\x57\x4c\x0d\x03\x96\x2e\x12\xb9\xcf\xce\x3a\x69\x9b\xbd\x69\xb7\xb8\x5b\x04\x4d\xf2\xb4\x58\x04\x8c\x34\xb2\xd9\x48\xa4\x42\x52\x9b\x75\xb5\xfa\xf7\x82\x14\x65\x53\x12\xa5\x38\x29\xba\xd8\x05\xae\x5e\x12\x4b\xa3\x99\xe1\xe1\xe1\x99\x19\x55\x15\x24\x98\x52\x86\x30\x8b\x33\x8a\x4c\xcd\xa0\xae\xff\x00\x00\x50\x55\x00\x0a\xf3\x22\x23\x0a\x61\xb6\x45\x92\xa0\x98\xc1\xa9\x7d\x4a\xf3\x82\x0b\x05\x8b\x82\xc4\x8f\x64\x83\xab\x34\x2b\x95\x42\xb1\x7c\xa6\xc9\x06\x95\x8c\x12\x22\xd4\xe2\xcc\x6b\x4a\x99\x42\x11\x63\xa1\x30\xb9\xdf\x2a\x55\x2c\xfb\x37\x9a\x97\x41\x6e\xf9\x33\x5c\x9a\xa4\xfc\x8e\xfe\x2d\x39\xbb\x27\x8c\x71\x45\x14\xe5\x6c\xd9\xfb\x3d\x95\x43\x21\xf8\x17\x9a\xa0\x58\xb6\xff\xb4\xc6\x1d\xeb\x28\x5a\x26\x44\xe1\x7d\xa9\xe2\xfb\x98\xb3\x2f\x28\x54\xcf\xb2\xaa\x96\xbf\xc0\x87\xc6\x5c\x6d\x11\xe2\x52\x2a\x9e\x83\x36\x01\xb5\x2b\x50\x46\xf0\xcb\xf2\x00\xa8\x20\x6c\x83\x30\x8f\x6e\x77\x05\x7e\x24\x45\x41\xd9\x46\xee\x21\x75\x23\x57\x15\x44\xd6\x6d\x5d\xdb\x35\x34\x3e\x4e\x81\xa6\x10\x5d\xb6\xd9\xec\x8d\xdc\x37\x87\x4f\x17\x67\x55\x05\xc8\x92\x7d\x30\xfb\xb3\xae\xfd\xeb\x60\x3c\x41\xa0\x4a\x62\x96\x02\x61\x09\x90\x2c\x03\x9e\x9a\x47\x98\x6c\x50\x82\x22\x62\x83\xca\xd8\x49\x58\x42\xc3\x1d\x77\xb5\x0e\x86\x39\x4f\x30\x5b\x56\x15\xcc\xa3\x7f\x92\x1c\xe1\x1b\x48\x46\x1e\x11\xea\xda\xdd\xa2\x03\x3c\x08\xab\x35\xcc\xa3\x5f\x4d\x20\x1f\x3a\x1d\x9f\x68\xd0\x9c\xf2\xec\x00\xc7\x05\x04\x8c\xab\xfd\x5b\x7f\xd9\xb3\x45\x46\x7f\x27\x2c\xc9\x50\xfc\x0d\x59\x78\x8c\x51\x74\xf3\x48\x8b\x10\x9c\xf4\x7a\x29\x36\x98\xbc\x2a\xc7\x17\xb7\xe8\x1f\x92\xb3\x1b\x14\x94\x64\xf4\x3f\xe4\x21\x43\x28\x4a\x25\xcd\xb6\x6c\x90\xa1\x20\x0a\x13\x88\xcd\xde\x31\x50\x5b\x2a\x21\xa5\x19\x3a\xbb\x52\x10\xcb\x91\xe1\x56\x6c\x86\xc4\xfe\xa8\x1f\x69\xe7\xa5\xb0\xdb\x4f\x65\x43\x0d\x12\xc7\x28\x25\xd5\x19\x28\x0e\x5c\x6d\x51\x34\xa4\xd7\xf1\x5c\x1a\xc4\x9c\x49\x05\xbe\x80\x77\x22\x83\xb5\xc9\x25\x10\x58\x64\x24\x46\x08\xba\x46\x21\xcc\xee\x67\x30\x3b\x9d\x85\xf0\x0d\x8a\xac\x14\x24\x6b\x4e\xc3\x21\xc3\x5b\x7d\xe6\x0c\xce\x90\x72\x01\x04\x0c\x2f\x22\xb8\xe4\x4c\x96\x39\xf6\xa1\x21\x05\x75\x73\xcb\x88\x94\x4e\x6e\x75\xdd\xa8\x0d\x54\xee\x96\xf4\x1e\x06\x95\xc0\xa7\x92\x0a\x4c\x0c\x1c\x51\x13\xbd\x0e\x6d\x56\xfa\x4a\x29\x23\x99\x55\x2e\x9b\x9d\xf3\xd4\xe4\x7d\x45\xf5\xa1\x02\x49\xd9\x26\xb3\xa7\xed\x61\x07\x34\x71\xb2\xd3\xd7\x55\xa9\x4a\x81\xef\xdc\x2c\xce\xb5\xfb\x24\x30\xb7\x3e\xbc\x37\xbc\x82\x6f\x06\x7b\xf3\x6f\x5d\x03\x4d\x42\x20\x72\xc7\x62\x67\x1d\x87\xb4\x04\xac\x81\x3c\x13\xda\x66\x16\x6d\x50\x05\x77\x82\x06\x05\x51\xdb\x15\x2c\x96\xf3\x91\xcd\x5a\xce\x69\xb2\x08\xdd\x75\xea\x4b\xa0\x2a\x05\xeb\xe0\x14\xa5\x82\xe7\x9a\xa8\x81\x88\x1e\x78\xb2\x0b\x0f\x0c\xaf\x7b\x30\xfc\x46\xa5\x82\xbc\xcc\x14\x2d\x2c\x0c\x86\xb1\x0a\x35\xbc\x0f\x3b\x78\x2a\x51\xec\x34\x69\x49\x2e\xfd\xd0\x68\x0f\x5d\x7c\xce\x21\xa3\x52\x05\xdd\xb5\x53\xa6\x2e\xa0\x20\x1b\x3c\x19\xde\xa6\x0a\x73\x79\x8d\xe2\x7a\xf0\x58\x8b\x86\xd5\xa4\xb4\xd1\xa4\x2b\x8a\x59\x22\xfb\x87\xbe\xb5\x9d\xeb\x0a\x64\xf2\x58\xad\x81\xb2\x04\xbf\x42\x20\x8b\x8c\x2a\x08\x14\xd9\xfc\xc6\xf9\x63\x59\xc0\x3c\x8d\x6e\x94\x28\x63\x75\x4b\x36\x30\xd3\x6f\xcc\x42\x98\x9d\xcc\x42\xf8\x93\xcf\xaf\x65\x21\x4d\x41\x4b\x52\x80\x4f\x4e\x14\x73\x34\x4e\x47\x5e\x6a\xe9\x9b\x7a\x38\x72\x61\x9f\xd8\x5d\x8e\x49\x8e\xfa\x68\x9d\x8c\x45\xb7\x3a\x34\x7d\xb7\x9e\xa2\x5d\xb3\x87\xb0\xb6\x82\xf0\xee\x46\x09\xca\x36\x27\x90\xec\x18\xc9\x69\x7c\x5e\xd5\x3d\x62\xd1\x14\x02\xbd\x61\xf0\xc7\x35\xb0\x32\xcb\xc2\x9e\x5b\x68\xd4\x8c\xe4\xf2\xd3\x42\xdb\x2d\x3e\xc3\xda\xec\xf0\x59\xc7\xac\x1e\x7a\x75\xf7\xfb\x18\xef\xae\xbd\x89\xe2\xde\x98\x8c\x76\x28\x69\x3f\x2e\x7d\x26\xd8\xa3\xc1\xf2\xf2\x64\x0a\x35\x1f\x82\xda\xc9\x3e\x6a\x5d\x1b\x10\xbd\x8e\xcf\x46\xdd\x8d\xae\x6c\x92\x9a\xaf\xd1\x3f\xcf\xfe\x4f\x0b\xe2\x62\x78\x5c\x8c\x5e\x5d\xeb\x55\xa3\x42\x21\x57\x16\x81\xae\xe1\x40\x43\x35\xce\x8d\x54\x46\x54\xfe\x9a\x17\x6a\xe7\x03\xd6\x2a\xed\xa7\xcf\x93\x94\xb3\x56\xd6\x1f\x10\x69\x34\x36\x8c\x72\x52\x04\x01\x0d\x61\x7d\x3e\xa2\xd5\x34\x0c\x23\xc5\xb5\x71\x30\x21\xd8\x97\x02\xf5\x38\x40\x80\xe1\x73\x53\xb6\x38\x33\x35\x56\x60\xce\x15\x1e\x53\xbe\x62\xe3\x22\xe8\x54\x56\x73\xeb\x5f\xf8\x54\xa2\x54\x20\xf0\xe9\x55\x05\xac\xe0\x52\x0d\x77\xef\x98\x92\xb6\x08\x87\x5b\xa8\x61\x5b\xe9\x1c\x22\xc5\x0d\x30\x3d\x9b\x91\x02\x18\x4c\x56\xc0\x09\x44\xef\x8a\xc4\x22\xfa\x26\x34\x4b\xf3\x7a\x27\x7a\xe3\xf1\xcd\x68\x12\x15\x6f\xdf\x06\xe7\x72\xae\x7b\xa3\xa8\x6d\x4d\x6c\x3a\xf5\x8f\x80\xf2\x7b\xcc\xf0\x35\x28\x43\x62\x5e\x78\xa9\xcd\x5a\x9f\x77\xb2\xb4\x10\xda\x77\xdf\xd6\x54\x35\xed\x21\xaa\x78\xbb\x1f\xc4\x64\x33\x73\xf5\x12\xf5\xcf\x4b\x43\x29\xfc\x1e\x53\x4f\x97\x9e\x34\xd5\x4e\xee\x18\x7d\x2a\xf5\x32\xfb\x03\x90\xb9\x83\x99\xd4\xff\xed\xdb\xb7\xae\xc1\xf9\x5e\xc2\x1b\xb9\xc2\x7e\xa1\xe8\x10\x01\xd0\xcf\xf0\x17\x98\x7e\x7c\xe3\x5b\xe1\x80\xd4\x8d\xb5\x7f\xae\x33\xca\x12\xfa\x6b\x59\x1f\x9e\xa9\xee\xcd\x25\x7d\x17\x9f\x29\xea\xf7\xa2\x19\xa0\x8f\x89\xf2\x42\xc5\x18\x4b\xc0\x5f\x37\xfa\x49\x38\x63\xad\x7b\xbd\xd4\x52\x7a\x2a\xb9\x3b\x98\xba\xd3\x68\x3b\x8e\x3e\xec\xcc\xb9\x31\xc3\x68\xfb\x71\x07\xec\x67\x9f\xde\x09\x92\x9a\xde\xb1\x6f\x00\xe4\x69\xf0\xd7\x92\x66\xc9\x25\x67\x0a\xbf\x2a\xdd\xb4\xea\xbf\x06\x8c\xeb\xf6\x8b\x11\x4f\xdf\x0d\x5f\x3d\x0f\xac\xed\x89\x19\x43\x90\xad\x20\x25\x99\x44\x8b\x4d\xdd\x9b\x5d\x73\x94\x52\xb7\xa1\xa5\xd4\xf3\x24\xb7\xc5\xd1\xd6\x57\x33\xcb\x8e\x8a\x95\x8e\x9d\xa4\xb1\x3e\xfb\x7a\xb1\x56\xef\x6d\x87\xd9\x7c\x62\x82\x99\x3e\xad\x4d\x75\xdd\x7f\xd7\xfb\x73\xff\x1b\x42\xd0\x04\xbd\x22\xb1\xe2\x62\xd7\xe6\xdb\xd8\xbe\x27\x0a\xef\x54\xbc\xff\xa0\x14\x84\x63\x93\x73\xa7\x84\x8f\x0c\xd0\xae\x4d\x6f\x40\x3b\xa8\x99\x5e\x93\x8f\x2b\x66\xda\xae\x2a\x98\x1e\x5a\x3c\x64\xab\xbb\xf2\x3a\x92\x8f\x61\xb4\xfb\x74\x20\x31\xab\x91\x84\xe9\x49\xdb\xdf\x8f\xa5\xee\x6f\xa2\xd7\x80\x91\x77\x0e\xd0\x02\x91\x46\x1f\xa4\x16\x74\xa8\x6b\x23\xfe\x17\xd1\xc4\x31\xf2\xfa\x3f\xc6\xf5\xc5\x30\x81\xae\xa5\xb6\x3b\x46\xaa\x9a\x0c\x8c\xb5\x91\x89\x83\x52\x8e\x06\x78\x51\x98\x8c\x00\xa1\x39\x73\x8d\xfe\xfa\x03\x1c\xe4\x67\x3c\xd4\x38\x6e\xe3\x8f\x4e\x3b\x43\x13\x85\x20\xc1\x18\x82\x0c\x99\xd9\xe7\x30\xd4\x45\xf0\x64\x6c\x00\x19\xc6\xec\x72\x70\x82\xeb\x4d\x85\x38\x7c\xc3\x6d\xea\x65\xff\xb7\x2f\x6f\x6d\xd6\x76\x27\x9e\x83\x32\xf8\xd0\xe8\xca\xea\x47\x52\x0c\x66\x72\x68\x7b\x33\xbd\x05\xf7\xf3\xd1\xa3\x73\xdb\x98\xe9\x03\x7a\xa4\xcc\x95\x6d\xd3\x7b\x8c\xc4\x95\x2f\x4b\x5c\xd3\xf2\xfe\x9f\x25\xae\xdb\x57\xfb\x25\xae\x63\xd3\x93\xb8\x56\xc0\xdc\x3e\x62\x20\x5e\x7b\x62\x94\xdf\x49\x04\x3b\x19\xbf\x41\x04\xdd\xd5\x18\x49\xeb\xdd\x6b\xe8\x6c\x8f\x4d\x39\x75\x66\x7c\x7a\xea\x47\xe1\x77\x3d\xf5\x04\xf8\xa9\xf5\xb4\xfc\x1f\xf5\x74\x64\x48\xbb\xe8\x33\xf4\xcc\x2b\xc2\x43\x96\xfd\x14\x22\xdc\x39\xba\x3e\x11\x3e\x84\xf8\x6f\x00\x00\x00\xff\xff\x2f\xc5\x99\x0e\xe7\x1d\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 7655, mode: os.FileMode(420), modTime: time.Unix(1614280125, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x41\x6f\xda\x4c\x10\xbd\xe7\x57\x3c\x21\xa4\xe0\x88\x98\xbb\xf3\x25\xf9\x5a\x0e\x6d\x55\x35\xaa\xc4\x21\x87\xaa\x42\x5b\xef\x80\x57\x98\xb5\xbb\x3b\x86\x20\xd7\xff\xbd\xb2\x77\x31\xb6\x41\xa8\xed\x5e\x90\x67\xe6\xbd\x7d\xef\xed\x50\x96\x90\xb4\x52\x9a\x30\x8a\x53\x45\x9a\x67\xb9\xc9\x76\x4a\x92\x19\xa1\xaa\x6e\x00\xa0\x2c\xc1\xb4\xcd\x53\xc1\x84\x51\x42\xa2\xe9\xdd\xfb\xa6\xda\xe6\x99\x61\xdc\xe6\x22\xde\x88\x35\x45\xab\xb4\x60\x26\x33\xdb\x2b\xb9\x26\xb6\xa1\x14\x86\x6f\x1f\x2e\x8e\x2a\xcd\x64\x62\xca\x99\xe4\x32\x61\xce\x67\xc3\x82\x03\xc3\x26\xd9\x1e\xf3\x46\xdc\x65\xa2\xa3\xe2\x56\xfa\xb5\x5b\xdb\x61\xab\xf4\x3a\xa5\x65\x9c\xa8\x54\x2e\x9d\xdc\x23\xce\xdb\x9e\xdd\xe1\x93\x43\xd3\x8e\xcc\x01\x3a\x93\x84\xbb\xd9\x29\x16\x23\xf4\x9a\x30\xd6\x88\x1e\x31\x0e\x5f\x32\x49\xb6\x0d\xc6\x8d\xdc\x43\xad\xa0\x33\xc6\x58\x87\xef\xb4\xce\x58\xb0\xca\xb4\x0d\x3f\x0a\x2d\x53\x32\x1f\x48\x87\x8b\x8d\xca\xd1\x01\x75\x45\x97\x65\x0d\x7c\x11\x5b\xc2\x2f\x58\x2d\x36\x84\xaa\xea\xba\xf3\x42\x48\xcb\xf6\xe2\xce\xe7\xc9\xc7\x57\xe7\x1a\x9c\x10\xdc\x3b\x5b\xc8\x6c\xaf\x9b\x82\x33\x0f\x36\x44\xe1\xc9\x5f\x9c\x0a\x6b\x7d\xee\x1e\x6e\x40\x6f\x4c\x5a\x5a\x2c\x9a\xf0\xe6\x75\x76\x0b\x16\x4c\x29\x59\xfb\xea\x68\xca\x56\x58\x1f\x3b\x29\x7b\x16\x3f\xd3\xe1\x19\x1b\x3a\x4c\x7b\x55\x43\x3f\x0b\x65\x48\x82\x13\x65\x43\xa7\xb4\x3f\xe1\x1a\xf5\xc5\xa7\x7a\x15\x20\x82\x2d\x72\x32\x93\x0d\x1d\xa2\x86\x16\xcd\x4c\xe4\x7e\x02\xff\xa6\xf5\x59\x29\x2d\x52\xaf\xcd\x67\xf1\x30\x68\x3a\x27\xcf\x0e\xdb\x81\xfe\x9f\xed\xc8\x18\x25\xa9\xad\x78\xcf\x3f\x0a\x95\xca\x57\xc5\x49\x93\xc8\xe4\x7d\xfd\x39\xcf\x34\xd3\x1b\x23\x76\xbf\xd3\x3e\x6b\x80\x72\x60\x9c\x0b\xa3\xf1\xa5\x48\x59\xb5\x89\xf5\x26\xea\x73\x5c\x5e\x1b\xe1\xdb\x59\xf3\x0f\x97\xf2\x1c\xf2\x8f\x4b\x3a\x3c\x47\xd9\xff\x75\xb6\xb6\xaa\x5c\xd0\x4f\xe7\x5e\x86\x27\x36\x24\x98\x22\x4c\x96\x01\x1e\x9f\x70\x81\x64\xe2\x5e\x2b\xf2\xaf\x16\x4c\xaf\x72\x5e\x69\x0f\xfe\x31\x7f\xd1\xfe\x7e\x4e\xda\xdd\xb3\x7e\x37\x38\xed\x95\x63\xaa\x6e\x3c\x75\x55\xfd\x0e\x00\x00\xff\xff\xac\x27\xc9\xe1\x78\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1400, mode: os.FileMode(420), modTime: time.Unix(1614280316, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterDate_utc_converterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xc3\x30\x10\x86\xf7\x3e\xc5\xaf\x2e\x4d\x24\x14\x60\x41\xa8\x90\x06\x09\x16\x58\xa1\x33\x32\xc9\xb5\x72\x49\xee\x22\xfb\xe8\x62\xf9\xdd\x91\x9d\x12\xa4\x22\xe1\xc5\x67\xfb\xfe\xef\xf3\x85\x80\x8e\x76\x96\x09\xcb\xce\x28\x6d\xb5\x7d\x14\x3e\x92\x53\x72\x4b\xc4\xb8\x00\x00\x3b\x8c\xe2\x14\xab\xd1\xb4\x9f\x66\x4f\xeb\x83\x17\x7e\x37\xcc\xa2\x46\xad\xf0\xe5\xd9\xb9\xea\x8c\xd3\xd5\xdd\x22\x67\xdb\xde\x78\x8f\xa7\x33\x74\x42\xf6\x34\x10\xab\xc7\x8b\x17\x9e\x1f\xee\x53\xe7\x9b\x1d\xa8\xb9\xc0\xab\x3a\xcb\xfb\x66\x83\x90\x49\x99\x26\xec\xf5\x0f\xad\x28\x4f\xb2\xb4\x1e\xe4\x48\xce\xd9\x8e\xe6\x9b\x19\x89\x9d\x93\x21\xe9\x8a\x13\x1a\xe9\xe7\x25\xea\x4d\x2e\x50\xd7\xe0\xaf\xbe\x47\x33\x6d\xeb\x39\x59\x8d\xc6\x79\x2a\x72\xf7\xbf\xaa\x1f\xae\x4a\xd6\xfc\x9a\xe5\xe3\x40\xad\x66\xd5\x54\x36\x95\xca\x56\xdb\xa2\xac\x54\x9e\xbd\xdc\xde\x5c\x5d\x4f\xe1\x34\x4c\x42\xc5\x45\x08\x20\xee\x10\xe3\x77\x00\x00\x00\xff\xff\x80\x09\x97\x37\xa4\x01\x00\x00")

func flutterDate_utc_converterTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterDate_utc_converterTpl,
		"flutter/date_utc_converter.tpl",
	)
}

func flutterDate_utc_converterTpl() (*asset, error) {
	bytes, err := flutterDate_utc_converterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/date_utc_converter.tpl", size: 420, mode: os.FileMode(420), modTime: time.Unix(1613741733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x5b\x4f\xe3\x3a\x10\x7e\xe7\x57\x8c\xaa\x88\x16\x74\x70\xdf\x81\x02\x47\xdc\x0e\x47\xcb\xae\xb4\xc0\x73\x65\xe2\x71\x6a\x48\xec\x60\xbb\x48\xdd\x90\xff\xbe\xf2\x25\x69\x92\xb6\x8b\x76\xb5\x4f\x4d\x3d\x33\xdf\x5c\xbe\x6f\xa6\xaa\x80\x21\x17\x12\x61\x54\x28\x86\xf9\x08\xea\x7a\x0f\x00\xa0\xaa\xc0\x62\x51\xe6\xd4\x22\x8c\x16\x48\x19\xea\x11\x1c\x45\xa3\x28\x4a\xa5\x2d\x8c\x19\xd5\xf6\x38\x55\xf2\x1d\xb5\x1d\x9f\xec\xf5\x6c\x25\x4d\x5f\x69\x86\xc7\x2f\x46\xc9\x39\x95\x52\x59\x6a\x85\x92\xd3\xc1\x7f\xe2\x30\x86\xb1\x84\x4c\x19\xb5\x38\x5f\xda\x74\x1e\xe1\x51\xf7\x3c\xab\x0a\x12\xc6\xe1\x78\x06\xee\xf5\x3b\xbe\x2d\xd1\xd8\x1b\x81\x39\x33\x90\x90\xc7\x55\x89\x30\xf2\xbd\x44\xef\xe9\x21\xdc\x05\x70\xbb\x40\x48\x97\xc6\xaa\xc2\x87\x82\x5d\x95\x68\x08\x1c\x4e\xd7\x8d\x6b\x2a\x33\x8c\x30\xf7\xb4\x2c\x85\xcc\x4c\xdb\x7b\xb7\xce\xaa\x02\x12\x61\xeb\x7a\x7c\xd2\xda\xab\xea\x08\x04\x07\x72\xd9\xd4\xde\x3a\x75\x23\x37\xad\xe3\x93\xaa\x02\x94\xac\x4d\x16\xff\xf6\xfa\xb8\x51\x1a\xf0\x1d\xf5\x0a\x90\x65\xd8\xd4\xe2\xda\xca\x50\xa2\xa6\x16\x19\x78\x2e\xb7\x36\x85\x6e\x66\x09\xb9\x66\x19\x6e\xef\x89\x90\xa9\x8f\x9e\xba\x11\xa3\x9f\x01\xf9\x4a\x0b\x84\x0f\x30\x92\xbe\x22\xd4\x75\xc3\xc4\xae\x0a\xff\x37\x4a\x3e\xa0\x16\x34\x17\x3f\xe8\x73\x8e\x50\x2e\xad\x19\x54\x98\x2a\x86\x20\x24\xd8\x85\x30\xc0\x45\x8e\x9d\x6a\x4b\x1a\x47\x94\x6c\x64\xce\x7a\x2a\xb8\x18\x66\x9a\x1c\x84\xf7\x2b\x6a\xf1\xc9\xa6\xed\x84\xe3\x7b\x9a\x53\x63\x60\x0d\x5c\xd7\x50\x75\x48\x5b\x3f\x4f\x0e\x62\x86\xb6\xa7\xc7\x05\x02\x0f\xfa\x52\xdc\xf7\x32\x9c\x71\x8b\x71\x77\x15\x04\xf8\xe1\x05\xe6\x3f\xeb\xfa\xbc\xb5\xc5\x14\x7d\xb5\x44\x76\x78\x60\x27\x0a\xb9\x4b\x4f\xe3\x98\xa4\xde\x85\xf1\xb5\x7c\x9c\x20\x12\x0e\x5b\x9c\x05\x07\x2a\x19\x24\x9c\xfc\xdb\x2e\x9c\x09\xe8\xb7\x28\xc9\x3d\x2d\x6f\x95\xaf\x2f\xe1\xe4\x3f\x6a\xe2\x9f\x61\xda\x0e\x5a\x92\x42\x5d\xbb\x46\xe2\x6f\x57\xab\x9d\x19\xec\x78\x4e\xf8\xce\xc1\xf0\x86\xe9\x94\x16\x98\x0f\xc6\xd3\x53\x58\x8f\x11\xf4\x32\xfe\x8c\x90\x38\x71\xaf\xf9\xf3\x10\xd3\xa1\xf7\x42\xbd\xa3\xd6\x82\xe1\x7a\x15\xa4\x85\x0c\x2d\x2c\xa8\x59\x5c\x3a\x9d\xce\xce\x86\xec\x91\xc6\xf6\x4b\xa0\x67\xa5\x72\x50\xa5\x93\xbc\xd2\x30\x9b\x4d\xbe\x3d\xbf\x60\x6a\x41\xd9\x05\xea\x03\x07\xeb\xbf\x40\x0c\x44\xb9\xbf\x3f\xcc\x07\xb3\x59\xf0\x25\x1b\x32\x6a\xb3\x71\x9a\x5a\xa5\x57\x3d\x28\xc2\xb5\x2a\xdc\x96\x4c\xee\x69\x79\xfa\x60\xb5\x90\xd9\x3f\xc0\x56\x92\x16\x22\x3d\x03\x77\x8c\x7d\x1d\xf3\xa4\x1b\x75\xd3\x04\x79\xfb\x9a\x8a\xad\x18\x56\x79\xd7\x2d\x30\x8f\xc1\xe2\x56\xbc\xbb\x4f\x01\x01\xac\x0a\x1f\x21\xd2\x65\xba\x96\xee\x2a\x4c\x1a\xc0\x98\xb8\x7b\x59\x3e\xe5\x7c\xd7\x45\xd8\xdc\xfc\x70\x01\xb7\xaf\xbf\xb7\x0d\x6e\xc0\xa7\x07\x34\xba\xb9\x2d\x41\xf2\x24\xc5\xdb\x12\xe3\xb2\x74\xaf\x68\x58\x9b\xdc\xb8\xaf\x2f\xc2\xd8\xd3\x4d\x87\xb3\x56\xf1\x61\x37\xf0\xb7\x76\x63\x9b\x0a\x7c\xb1\x7f\x26\x05\x1f\xfa\x97\xf4\xe0\xb1\xfa\xa2\x08\x04\xaf\xdb\xf8\x19\x00\x00\xff\xff\xa9\x74\x8a\x93\x90\x08\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 2192, mode: os.FileMode(420), modTime: time.Unix(1613731308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xd1\x6f\xdb\xb6\x13\x7e\xd7\x5f\x71\x3f\xc1\x68\x25\xff\x6c\x2a\xed\x80\x3d\x74\xf0\x43\xd7\x61\x5d\x81\x36\xc8\xd2\x76\x7d\x66\xc4\xb3\x44\x44\x22\x59\x92\x72\xea\x19\xfa\xdf\x07\x92\x92\x2c\x27\xb6\x97\xc4\x29\xd0\x05\x08\x60\x93\x77\xf7\xdd\x7d\xf7\xf1\x48\x6f\x36\x30\x51\xd7\x05\xbc\x5a\xc0\x15\x35\x08\x71\x49\x05\xab\x50\xc7\xd0\xb6\xd1\x66\x33\x87\x1b\x6e\x4b\xc0\x6f\x16\x05\x83\x09\xc4\x17\x34\xbf\xa6\x05\xc6\x23\xc3\x79\xdb\x46\x00\x00\x9b\x0d\x58\xac\x55\x45\xad\x0b\x83\x94\xb9\x4d\x12\xe2\x80\x73\x6f\xdb\x28\xe2\xb5\x92\xda\x42\xe2\x3d\x62\x81\x36\x2b\xad\x55\x71\xf8\x6a\xac\xce\xa5\x58\xc5\x51\xf8\x5a\x70\x5b\x36\x57\x24\x97\x75\x56\xc8\x79\x5e\xf2\x2c\x2f\x79\xbc\x6f\x4f\x55\x74\x5d\x68\xd9\x08\x96\xad\x68\xc5\x19\xb5\x52\x67\xab\x17\x67\x77\x8d\x2b\xce\x55\x66\x4a\xd4\x7c\xb9\xbc\xbb\x5b\x53\x63\x10\xab\xbc\xcc\x34\x0a\x97\xff\x1d\x0b\xc3\x75\xa3\x0c\x8a\xac\x92\x85\x6e\x4c\x9f\xaa\xa3\x91\xbc\x91\x62\xc9\x0b\xd2\x51\x04\x6d\x1b\x77\xbc\x64\x53\x78\x17\xea\xa6\x55\x05\x76\xad\xd0\x40\x63\x90\x01\x17\x60\x4b\x84\x25\xc7\x8a\x19\x98\x66\x5b\x26\x35\x15\x05\x82\xba\x2e\x82\xa3\x81\xc9\xc0\x73\x0f\x48\x46\x08\x3d\xbf\x69\x14\x65\x19\xfc\x11\x5a\x03\xdc\x00\xd6\x57\xc8\x18\x32\xb8\x5a\x7b\x70\x14\x96\xdb\x35\x74\xcd\x33\x04\x2e\xb4\x5c\x71\x67\x60\x64\x8d\xe0\xe8\x47\xc1\x51\xe4\x08\x35\xda\x52\x32\x43\x22\x97\xf0\x10\xd3\x58\xdd\xe4\x16\x36\x1e\x78\x9a\x97\x9c\x7c\x68\xbe\x05\x16\xde\x54\x1c\x85\xf5\xeb\x28\x2c\x09\x5f\xfd\xce\x5f\x7d\x53\x60\x3a\xf4\x87\x74\x8b\xe8\x2d\xde\xcb\xa2\x40\xed\x7d\x03\xb3\x24\xac\x44\x6d\x14\x2d\x1b\x91\xc3\x39\xde\x74\x29\x24\xf9\x38\xfe\x0c\x56\xfb\x82\xce\xa0\x92\xc5\xad\x58\x29\x4c\xfb\x2a\x42\xfa\x1a\x6d\xa3\x05\x3c\xdb\x5d\x75\x7f\x1f\x9a\x6f\xaf\xba\x8f\xae\xc4\x73\xbc\xb9\x94\x8d\x45\x9d\xa4\xb3\xc1\x26\xe0\x7b\xb3\x7c\xbb\x3a\x94\xfa\x0a\x56\xdb\xd5\x90\x80\xb7\xad\x64\x11\xd6\x5b\x57\xdb\xd0\xea\x89\x70\x67\x70\x42\xce\x25\x43\x03\x5b\x21\xf0\x25\x08\x69\x61\x22\xc8\x6b\x21\xa4\xa5\x96\x4b\x61\x48\x97\xf1\x5b\x14\xe4\xe3\x35\x57\xfe\x68\xf5\x58\x59\x06\x9f\x4a\x74\xbe\x13\x41\xce\x69\xed\x94\xd8\xd9\x93\xc1\xc8\xf7\x74\x9f\xc9\x6e\x83\xfb\xbf\x9e\xb8\x61\x71\x17\xef\x8d\x46\x77\xea\x29\x08\xbc\xd9\x1b\x75\x30\xee\x7b\xb9\xcf\xe8\x94\xc6\xee\x2d\x65\xb7\x86\xd2\x11\xfc\x6c\x9f\xe1\x66\x2c\xae\x19\xac\x3c\x46\x3a\x2a\xf1\x21\xbd\xe8\xb8\x68\xdb\xdd\x79\x18\x8c\xb2\xdc\xef\x66\xda\xa9\x29\x76\x4d\xf7\x76\xdd\xe9\x7d\x0c\xdc\x25\x52\x76\x08\x4c\x23\x65\x4f\x08\xf5\x59\xb1\x23\x95\x35\x7e\xf7\x09\xe1\x7e\xc3\x0a\x0f\xc3\x31\xbf\xdb\xc3\x9d\x8a\xf5\x9e\x1b\x7b\x08\xa9\xe2\xc6\x1e\x28\xeb\x16\x56\x36\x05\x2b\x99\x84\x39\x18\x77\x28\x35\x1a\xd9\xe8\x1c\x47\x93\x7d\x94\xd7\x5d\x20\xd3\x5c\xf5\x2e\x59\x81\xbb\x98\xbb\x50\xdd\xe0\x2a\xf7\x1d\xc7\xa7\xd4\xe9\xc1\x3e\x3e\x95\x3a\x4f\x06\xb8\x8f\x26\x4f\x06\xb9\x8f\x12\x4f\x06\xf9\x37\x09\x1e\x16\xdf\x7d\x85\x77\x1f\xd1\xf5\x72\x83\x9d\x67\xc5\x08\xd4\x83\x7d\x74\x6f\x85\x12\x2b\x85\xba\xc3\xf0\x73\x3d\x29\xfb\x67\x42\x0a\x8d\xae\x2e\xa8\xa6\xf5\x47\xab\xb9\x28\x92\x1b\x70\xef\x3c\x72\x89\x46\x49\x61\xf0\x8b\xe6\x16\xf5\x0c\x34\x4c\xbb\xf5\xaf\x0d\x1a\x3b\x03\xe5\x7c\xdc\x1d\xc4\x45\x91\x42\xc2\x59\xf7\x79\x06\xa8\xb5\xfb\x97\x3a\xed\xe6\x3a\x67\xb0\xf0\xb7\xf3\xe7\xcb\xf7\x1e\x2a\xd1\x9d\x7f\x1a\xf6\x97\xde\x64\x01\x71\x3c\xba\x09\x5c\x98\x45\x08\x64\xdc\xbd\x9e\xc4\x58\x2b\xbb\x76\xf9\x06\xe7\x38\x1d\x6c\xcb\xee\x7e\x21\x5f\xb8\x2d\x7f\x77\x8f\xb4\x24\x0e\x36\x3d\x10\x79\x27\x96\xf2\x58\x88\xf0\x8e\x24\xbf\x52\xd6\x95\x98\xdc\xcc\xa0\xcf\x13\xfe\x0f\x31\xe4\xd4\x69\x02\xae\x10\x9e\x3f\xef\x1c\xbb\xde\x86\x53\x1e\x1d\x21\xf7\x9d\xb0\x27\x30\xcb\xdd\x25\x7b\x87\x56\xe5\xae\xc9\xe3\xb4\xaa\xff\x24\xab\x23\x4a\x47\x24\x73\x36\xeb\xb2\xef\x7e\x7d\x90\xd7\x56\xf2\x44\x0d\xc5\xba\xcd\xff\x2d\x40\xf0\x6a\x54\xef\x9e\x1a\x3c\xf6\x0c\xd4\x90\xbd\x23\xc3\x65\x64\xb8\x28\xb6\x55\xa0\x45\xfd\xa0\x4a\xea\xc6\xf8\x3a\x28\x28\x69\xb8\xe5\x2b\x74\x8d\x43\xf7\x5a\x2e\xfc\x90\xd6\xf0\x37\x6a\x79\xb4\xc8\x41\x49\x87\xa5\xf4\x89\xd7\xf8\x58\x2d\xf9\x11\x6c\x79\x8d\xc4\x45\x79\x2a\x4d\xfd\x58\x3a\x09\x6f\xcf\xa0\x14\x5f\xea\x05\xd5\x06\x93\xf8\xe5\xd9\xd9\xcf\xf3\xb3\x17\xf3\xb3\x97\x2e\xad\x1f\x50\x35\xfe\x09\xed\xd3\x77\x3f\x37\xd7\xeb\xf5\x7a\x5e\xd7\x73\xc6\x60\x29\x75\x4d\xed\x63\x75\xa3\x68\xc1\x85\xbf\xc9\x7c\xe2\xf7\x53\x4e\x0a\x89\x72\x3f\x8d\xfd\xe4\xe1\x16\x6b\x73\x81\xfa\x62\x58\xb9\xab\x1b\xb7\xb5\x80\x17\x81\xd5\xb1\xfd\x02\x7e\x3a\x8b\x7a\xb2\x99\x93\x97\x76\xe2\x22\x7f\x36\xa8\xd7\x49\x4a\xde\xa2\x4d\xe2\xb1\x47\x9c\xfe\x02\xcc\xb5\x64\x47\x63\x63\x8b\xbd\x73\x80\x6d\xe9\x39\xd4\xd5\x43\x5a\xdd\x41\x9f\x01\xdb\xdf\xe2\xaf\x2e\xe1\x6d\x93\xe1\xf9\xd8\x6d\x2c\xc9\x63\x7d\xdf\xc1\x7a\xc4\xc4\xb8\xd5\xfd\xa0\x80\xf1\x90\x3c\xcc\xb1\x3a\xc8\xad\xfa\x0e\x9c\xaa\x87\x71\xa9\x1e\xc2\xa1\xfa\x3e\xdc\x6d\xcf\xd0\x3f\x01\x00\x00\xff\xff\x3c\xba\x37\x4d\x6c\x13\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 4972, mode: os.FileMode(420), modTime: time.Unix(1614146252, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x6d\x6f\xdb\x36\x10\xfe\x9e\x5f\x71\x13\x8c\x82\x0a\x6c\x7a\xfd\x9a\xa2\x18\xda\xa6\xcb\x82\xf5\x65\xab\xbb\xf5\x43\x51\xa0\xb4\x79\xb2\xd8\xc8\xa4\x43\x52\x49\x3c\x8d\xff\x7d\xe0\x8b\x15\xcb\x52\xdc\xb4\x43\xf7\xa2\x2f\x89\xa8\xbb\xe3\xf1\x9e\x87\xcf\x9d\x9b\x06\x38\x16\x42\x22\x64\x25\x93\xbc\x42\x3d\x5d\x68\x64\x16\xa7\x5a\xd5\x16\x33\x70\xae\xa4\xbf\x28\x63\x49\x36\xcd\xc6\x50\xd2\x67\xe1\x6b\xde\x34\x80\x92\x83\x73\x47\x47\x77\x86\xf0\xce\x47\x00\x00\xd3\x29\x18\xab\xeb\x85\x05\xab\x60\x2e\x24\x07\x5b\x22\xac\x95\xb1\x30\x57\x7c\x03\x56\xd1\x60\x67\x37\x6b\x84\xa6\x81\x11\x7d\xc5\x56\x08\x7f\xc2\x82\xad\xb0\x02\xe7\xe2\xa6\x6f\xf0\xb2\x46\x63\xb7\xb1\x9a\xe0\xe3\x9f\xa6\x99\x1e\xc3\x13\xce\x81\x55\x15\x14\x02\x2b\x6e\xc0\x96\xcc\x02\xd3\x08\x52\x59\xc0\x9b\x45\x55\x73\xe4\x14\x8e\xa7\x29\xa7\xe8\x07\x9a\xc9\x25\xc2\xa8\x80\x93\xc7\x30\xa2\x3f\x46\xdf\xc9\x8e\x4d\xb4\x9b\xc0\x88\x05\x93\x82\x3e\x91\x52\x59\x66\x85\x92\x26\xda\x9f\xa1\x84\x01\x07\x51\x84\xad\x09\x93\xdc\x3b\x8f\x18\x9d\x5d\x88\x75\x2a\xdf\xbe\x43\xca\x66\x54\xd0\x59\x38\x5c\x08\x0c\xce\xc1\x71\x5c\x7d\xbb\x59\xa3\xff\x24\xe4\xd2\xaf\x7e\xfc\x64\x94\x3c\xc9\x9a\x06\x84\xe4\x78\x03\xc4\xac\x2b\x61\x81\x58\xb6\x7c\xa1\xd4\x45\xbd\xbe\x8d\xf4\x96\x2d\x21\xf3\xe6\x59\x0e\xd9\x38\xcb\xe1\x7b\x70\x2e\x78\x16\x3e\xa7\x98\xcf\xef\xac\x12\x3c\x9c\xc9\x9b\x3b\x17\x72\xb9\xeb\x63\x0b\xfd\xc7\xde\x99\x13\x25\xf6\x97\x26\x9d\xb5\x1d\xac\x90\x2f\xf1\xbe\x50\x4d\xb6\x58\x61\xc4\xea\x79\xf0\x3d\x00\x15\x7e\x09\x54\x1e\x25\xe2\xf7\x1f\x61\x2c\xf6\xae\xef\x4f\x91\xd6\x67\x28\x03\x86\x79\xb4\x1c\x46\xf6\x4e\x68\x71\x1f\xda\x84\x01\xd2\xdf\xa4\xb8\xac\x11\x9c\xf3\x60\x63\x65\xfc\xbf\xef\x3f\xb4\x65\x8e\xce\x21\xa9\xf3\xd3\xaf\x60\x02\xfe\x5b\x4c\x98\x0c\x50\x21\x2d\xb9\xa3\xad\x30\xbc\x2d\x85\x81\xa2\x96\x0b\x1f\x16\xa2\x70\x18\x60\x20\xf1\x7a\x47\x0a\x9c\x83\x95\xe2\x58\x05\x9c\x8c\x55\x1a\x0d\x08\x0b\x42\x06\x25\xe1\xcc\xb2\x39\x33\x18\x55\xc4\x07\x23\x65\xc7\x39\x01\x98\x43\x3c\x07\xb9\x86\xd2\xda\x35\x7d\x83\x66\xad\xa4\xc1\x77\x5a\x58\xd4\x63\xd0\x70\x9c\xd6\x83\xd0\xe4\x3b\x12\x33\x9d\xc2\x19\xda\x5b\xdd\xf2\x5b\xd2\xf6\x2b\xf7\x84\xdb\x15\x2e\x23\xd9\x05\xee\x0b\x57\xe3\x7c\x18\xab\xb8\x82\x89\xa7\xbf\xba\x86\x42\xe9\xd5\xa4\xd6\xd5\x04\xe5\x82\x2b\x8e\x7c\x7a\xb3\xaa\xa6\x6b\xad\xac\x9a\xd7\xc5\xde\x2e\xa2\x00\xd4\xda\x6f\xe5\x51\xa4\xaf\xf0\xfa\x14\x17\x8a\xa3\x26\x9a\x3e\x55\x7c\x93\xd3\xf8\x4e\x1e\xf0\xfc\x51\x30\xfd\xee\x31\x48\x51\xed\x1c\xc3\x3f\x25\x7d\xa1\x96\x4b\xd4\xf4\x9d\xb0\xe5\x73\xad\x95\x26\xa8\x75\x4e\xe3\xbf\x19\xfa\x3f\xc0\x7d\x24\xcf\xb1\x48\x98\x4e\x00\x8d\x92\xa3\xa6\x4f\x19\x4f\x07\x23\xd7\x63\xd0\x63\xc8\x84\xbc\xf2\x0c\x09\x3e\x5e\xa5\x85\x5c\xf6\x5c\x6d\xad\x65\xbb\x94\x68\x90\x0a\x9c\xe8\x85\x2d\xa6\x43\x47\x2f\x69\x32\x53\x3a\xf1\x9a\x1c\x3c\x6d\xf4\x1c\x83\xba\xf0\xde\xa8\x35\x25\xc7\x57\x6d\x84\xf3\x98\xf1\x2d\xb1\x43\x11\xf2\x47\xde\xbc\xe9\x5d\xe3\x7b\x55\x2e\x05\xf7\xb5\xd3\xa9\x61\xf9\xb3\xec\x15\x62\xa7\x8e\xe7\xd2\xa2\x96\xac\x9a\xa1\xbe\x42\x1d\x63\xc5\x82\x4a\x51\x0d\x79\x75\x4a\xb8\x57\xc6\x43\x69\x9e\xcb\x42\x91\xec\xaa\x3d\x2b\x14\x4c\x54\xc8\xef\x89\xae\x0f\x71\x7f\x2c\x67\xec\x6a\x08\xc7\x79\x84\xf0\x59\x25\x50\x5a\xba\x7b\x45\x93\xc4\x90\x7c\x48\xf2\xff\x0b\xed\x59\x14\xc0\xe9\x60\x8f\x1e\xe4\x5d\x7b\x62\x3a\x43\x3b\xe4\x46\x8e\x87\xc3\xe5\xb1\x45\x26\x99\xb8\x0e\xbd\x71\xae\x6a\x0b\xa6\x12\x0b\xec\x8c\x37\xa5\x2f\xf2\xa2\x36\x56\xad\x60\xc5\xb4\x29\x59\x55\xa1\x36\x3f\x74\x5b\xe7\x2d\x40\xfb\x35\xe8\x8b\xf4\x50\x07\xff\xff\xb6\xdd\x16\xb2\x5e\xef\x3d\x08\x59\xca\x6d\xb7\x33\x0f\xda\x45\x78\x63\xfc\x97\x75\xcc\x7a\x86\x76\x07\xdb\xfd\x7d\xfb\xb7\xb9\x85\x22\xb6\xfd\x7b\xef\xe3\x27\x28\xe7\xc8\xf0\x36\x94\xd2\x03\x3b\x75\x11\xde\x3e\x5f\xc2\x8e\xce\x45\xf7\xcd\xd8\x37\xe2\x6e\x13\xf6\x0f\x8e\xb7\xa2\x3d\xa7\x5e\x0f\x88\xa6\xcf\x94\xb4\x78\x63\x49\x9e\xef\x4b\xfb\xd7\xb7\x2a\xc3\xae\xbc\xd8\xee\x8a\xc9\xb0\xa4\x7d\x81\xd0\x1e\xd4\xb6\x37\xc8\x78\x98\x4f\x50\x5a\xbd\xb9\x3d\xef\xe5\xdd\xe2\xf6\x6b\x8d\x7a\x43\x72\xfa\xae\x44\x8d\x64\x68\x52\xa0\xe7\xa7\xc4\x0f\x78\xf9\xa0\x00\x76\x2e\x5f\xef\x2a\x6d\xad\x96\xd1\xea\x8e\x3b\x14\x6f\xca\x99\x56\xf5\xba\x17\xa3\x1b\x07\x43\xa0\xcf\x4c\x92\xcb\x10\x28\xce\x92\x77\x31\x37\x0e\x97\x78\xe9\x53\xf3\x51\x9d\xbb\x0c\x50\x36\x0d\xac\x99\x59\xb0\xca\xc7\x4c\x35\x22\x79\x5f\x7e\xfa\xd4\x3b\xbc\xda\x5f\xc1\x87\x2d\x09\x2f\xe9\x6b\x59\x6d\xbe\x11\x09\x35\x32\xfe\xcf\xb2\x70\x86\x5a\xb0\x4a\xfc\x31\xd4\x66\x83\x1c\x47\x80\xbe\x8a\x12\x9f\xda\xa2\x99\x12\xb5\x28\x0a\xfa\x32\xb6\x17\xf2\x60\xbb\xf0\x7a\x1d\xa2\x35\xd1\xf9\x04\xde\x7f\x88\x03\x5f\x33\x24\xf3\xdb\x5c\x06\xa1\x9d\x74\xe9\x1b\x4d\xc3\x2f\x93\xd1\xd2\xb9\x6c\x9c\x40\xed\xb7\x9c\x28\x9a\xfb\xeb\xfe\xc9\x86\x6e\xd8\x89\xc7\x28\xfb\xac\xcc\x39\x37\x06\x7c\xf8\xf7\xa8\xe1\x5f\x83\x18\x93\xac\x23\x03\xe1\xe5\xfc\xb4\x25\xc8\x18\xc2\x95\xdf\x52\xc9\x24\x48\xe3\x74\x16\x88\xf5\x0d\x39\xd4\x49\xbe\x97\xed\x6d\xdd\xda\x2c\xe3\xfc\x38\x64\x92\xf2\xea\xcc\x92\x29\xd5\xd7\x3f\xa7\xcc\x3e\xe5\xe9\x97\x5f\x7b\x49\xff\x0a\x00\x00\xff\xff\x17\x34\x1c\x7c\x7c\x12\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 4732, mode: os.FileMode(420), modTime: time.Unix(1614146215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_deleteTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xd4\x40\x0c\xbd\xef\xaf\x78\x44\x3d\x24\x90\xce\xde\x8b\x7a\xea\x16\x11\x09\x0a\xa2\x48\xbd\xf4\x92\x76\x9c\x8d\xc5\xac\xa7\x38\x93\xb6\x68\x98\xff\x8e\xf2\xc1\x2a\xdb\xb2\x12\xbe\x44\xb6\xe3\xf7\x9e\xdf\x38\x46\x58\x6a\x58\x08\x59\x5b\x8b\x75\xa4\x6b\x4b\x8e\x02\xad\xd5\xf7\x81\x32\xa4\xd4\x9a\xcf\xfd\xb3\xd9\x8c\xd5\x3c\x5b\x47\xb6\x31\x82\x1b\x9c\x98\x6a\x63\xaa\xae\x92\x80\x94\xce\x6e\x6f\xed\xbb\x18\x41\x62\x91\x52\xca\x4a\xb4\xf3\x48\xb1\xaf\xae\x56\x47\xd9\x06\x9e\x15\x00\xac\xd7\xf8\xde\x72\x87\xa6\x97\xfb\xc0\x5e\x30\xf5\x3b\x84\x96\x10\x23\x4e\xcc\x55\xbd\x23\xa4\x84\x9d\xb7\xe4\xc0\x96\x24\x70\xc3\x64\x71\xf7\x0b\x35\xb6\xfc\x48\x82\x5e\xdd\xe9\x43\xad\xf5\x8e\x02\xa9\x19\x81\x07\xc0\xbc\x3d\x80\xf8\x38\x49\x28\x30\xef\xf6\x84\x36\x84\x07\xf3\x8d\xba\x07\x2f\x1d\xdd\x28\x07\xd2\x12\x8a\xb7\x73\xfd\x67\x4f\x5d\x28\x10\x47\xc0\x21\x62\x3c\x7d\xe5\xc4\xbe\x39\x04\xdb\x12\xa4\x8a\xb3\x73\xb4\xa6\x57\xf7\x75\x10\x55\x49\xc8\x9f\x4a\x68\x89\x8c\x6d\x56\x2c\xd0\x40\xae\xa3\xff\xc2\xb8\x0e\xca\xb2\x3d\x0a\x23\x16\xa7\x0b\x18\x6e\x46\x84\x37\xe7\x10\x76\x0b\xfd\x43\x28\x85\x5e\x65\x5f\x4a\xab\x97\x53\x23\xef\x85\x63\x92\x60\x96\xf6\xcd\xef\xfb\x45\xa8\xda\xe4\x6c\x0b\x73\xf9\x4c\xf7\xb9\x9a\x0b\x2f\x81\x9e\x43\x5e\x14\xef\x8f\xb3\xb6\xe6\x93\xdf\x6e\x49\xcd\x0d\x87\xf6\x52\xd5\x6b\x4e\xaa\xc5\x98\x7e\x60\x72\x36\xcf\x0e\xb8\xc6\xa4\xda\xfc\xcd\xb3\x12\x23\xe3\x38\x98\xd1\xf0\x99\x2e\x85\x65\x0b\xf1\x96\xd0\xa8\xdf\xc1\xde\x2d\x7c\x99\x96\x15\x4b\x6a\x2a\x09\xa4\x52\xbb\x6b\xd2\x47\xd2\x09\x65\xb2\x52\xd8\xbd\x9c\x38\x66\xcf\xc1\x0a\xaf\x34\xff\x46\x27\xf5\x8f\x85\xd6\x4a\x1a\xff\xef\x1f\xe6\x1b\x5f\xbe\xe1\xac\xf3\xca\x8f\x66\x0e\xf7\x32\xf5\xd2\x2a\x46\x12\x9b\xd2\x9f\x00\x00\x00\xff\xff\x92\x3a\xe3\x3c\xb8\x03\x00\x00")

func handlerHandler_deleteTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_deleteTpl,
		"handler/handler_delete.tpl",
	)
}

func handlerHandler_deleteTpl() (*asset, error) {
	bytes, err := handlerHandler_deleteTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_delete.tpl", size: 952, mode: os.FileMode(420), modTime: time.Unix(1614367139, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xcf\x6f\xdb\x36\x14\xbe\xfb\xaf\x78\x25\x8c\x59\x2a\x6c\x7a\xbb\x76\x30\x86\xb4\xcd\xd2\x60\xde\x92\x25\x29\x72\x18\x76\xa0\xcd\x27\x89\x0b\x4d\xca\x24\x95\x34\x53\xf5\xbf\x0f\xa4\x24\x47\x96\xe5\xa4\x05\x72\x99\x2e\xb6\xc4\xc7\xef\xfd\xfa\xf8\x3e\x96\x25\x70\x4c\x84\x42\x20\x19\x53\x5c\xa2\x99\x4b\x61\xdd\xdc\xe8\xc2\x21\x81\xaa\xca\xe8\x19\xba\x88\xcc\xc9\x14\x32\xba\x14\xd6\xc5\x65\x09\xa8\x38\x54\xd5\x68\x74\x6c\xf7\xb6\x40\xf3\x38\x4b\x84\x74\x68\x3c\xc8\x08\x00\x60\x3e\x87\xcf\x16\xc1\x65\x08\x61\x1d\x72\x66\xd8\x06\x1d\x1a\x0b\x4e\x43\x6d\xfd\xb4\x4c\xc1\x69\xae\x61\x06\x0a\xad\x43\xde\xac\xff\x12\xa0\xca\x72\x06\x86\xa9\x14\x61\x9c\xc0\xbb\x05\x8c\xe9\xaf\x02\x25\xb7\xad\xab\xd6\x66\xfc\x8f\xd5\xea\x0f\xb6\x41\x6f\x24\x14\xc7\x2f\x10\xd9\x5c\x0a\x07\x91\x63\xe9\x52\xeb\xbb\x22\x87\x71\x42\xaf\x9d\x29\xd6\xee\x86\xa5\x40\xfc\x0e\x12\x03\x99\x92\x18\x7e\xec\xe2\x89\x04\x82\x2f\x43\x3f\x5f\x2d\xe9\x9f\x3e\xc4\x28\xae\x8b\x53\x96\x1d\x4f\x55\x45\xe2\x9f\x21\x81\x37\x0b\x20\x04\xca\xdd\xfe\x36\x26\x91\x78\x8f\x9f\x98\x3d\xd3\x37\x8f\x39\x76\x5d\xb4\xcf\x7c\x1e\x72\xef\x6d\x45\x69\xb1\xd9\x7d\x6e\xdf\x6b\x2d\x87\xb6\xde\x33\x03\x2b\x58\x69\x2d\x0f\x96\x42\x02\x8b\x05\x10\x67\x0a\xec\x47\xd6\x3e\x2b\x58\x80\x5f\x3f\x58\xac\xa0\xf5\x5f\x83\x24\x4c\xda\x67\x51\x82\xc1\x31\x98\xe1\x6d\x19\x5d\xea\x34\x45\x43\x6f\x85\xcb\x4e\x8d\xd1\x26\x42\x63\xe2\xf0\x1a\x1a\x7c\x58\xea\x29\x24\x31\xfd\x88\xab\x22\x8d\xc8\x5a\x17\x92\x83\xd2\xce\x33\xcb\x1e\xb0\x8c\xc4\x83\x4e\x0d\x2a\x8e\x86\xbe\x67\xfc\x0a\xb7\x05\x5a\x17\x3d\x4c\xc1\x4c\x81\x4c\x7a\xbe\x26\xb0\x29\xac\x83\x15\xc2\xc4\x57\x68\x02\xda\xc0\x24\x64\x39\x39\x0a\xed\x0a\xa3\x0e\x6b\x70\xf0\x65\x4b\x6f\x33\x34\x18\x79\x8f\xf4\x92\xad\xef\x58\xea\x3d\xd2\xb2\xdc\x91\x33\xe4\x5f\x55\xd1\x2a\x8e\x7b\xbc\x80\x3d\x62\x9c\x2b\x37\xc4\x0b\x31\x05\x34\xc6\xf3\xd7\x3a\xb3\xd6\xea\x9e\x9e\x38\x2d\xa2\xe4\x30\x70\x91\x04\xcb\x37\x0b\x50\x42\xfe\xcf\x1b\xc5\x14\x08\xe5\x30\x7d\x06\xf3\xf5\x3b\x24\x5e\xe8\xd0\xb5\x33\x42\xa5\x43\x4d\xfa\x0e\x27\xc9\x0b\x4e\x6e\xc4\xe6\x3b\x46\x4b\x18\xe8\xb3\x8e\x79\x35\xea\x2c\x54\xd5\xe8\xe5\x99\xdf\x1d\xf3\x37\x99\xb0\x90\x14\x6a\xed\x84\x56\xa1\xbb\x02\x2d\x24\xda\x40\xc8\xac\x69\x13\x6c\x34\x47\x69\x29\x7c\x60\xca\x37\xab\x1e\xf0\xc8\x61\xf5\x78\x20\x10\x34\x40\x7b\xc8\x28\xdb\x03\xf9\x54\x87\x10\x83\x97\xa6\xe8\x01\x32\xe7\x72\x7a\x85\x36\xd7\xca\xe2\xad\x11\x0e\xcd\x14\x0c\xbc\x6d\xbe\x07\xde\xc4\x1d\x56\x6f\xfd\x91\xc8\xe8\x07\x29\x50\x39\xda\x45\x6e\x47\xfc\xa8\xa3\x28\xa1\xbc\x5c\xd7\x92\x73\xa2\x94\x76\xcc\xa7\x68\x69\x13\xc6\x19\x2a\xfa\x11\x13\x56\x48\xe7\xe3\xb9\x30\x1c\x4d\xbf\x0b\x22\x19\x92\x10\xed\x4d\x49\x1c\x46\xeb\xd0\x54\xdd\xd2\x00\x16\x0d\xb2\xb8\x23\x87\x75\x6c\x5e\x37\x07\x9a\xdf\x3e\x4d\xaa\xfe\xa4\x6f\x21\x1a\xeb\x1a\x1b\xbe\x82\xd4\x0f\xbe\x96\x84\xa3\x5d\xfb\x86\x7e\x44\xbb\x6e\x99\x55\x55\x27\xf5\x4b\xe0\x41\x7d\xc0\x75\xad\xbb\x41\xf3\xa6\x47\x43\xeb\x93\xab\x7d\xf6\x19\xdc\x55\xee\x1d\xd9\xba\x30\x63\xb4\x3e\x39\x64\x29\x9a\xa5\x66\x1c\xf9\x29\x4f\xd1\xc2\x18\x88\x2f\xf6\x99\xd1\x45\x6e\xc9\xfe\x15\x20\x34\x0c\x6d\xbf\x07\xf3\x39\x9c\x7a\x18\x90\x9a\x71\x40\x0f\x43\xf7\x0c\xb6\x07\xb2\xdd\xd4\x37\xdc\x24\x3c\xe2\x50\x42\x61\xfe\x95\x25\xe4\xcc\xae\x99\x84\x31\xb6\x5c\x8a\xfa\x87\x75\xd6\x66\xf8\x4c\xce\xf3\x39\x5c\xb2\x54\xa8\x40\xb1\xdd\xd7\x9c\xa5\x38\x05\xe1\x70\x63\x2f\xd1\x5c\x86\xb7\x66\xb2\x67\x34\xdf\xd9\x9f\xab\x44\x87\xf9\x18\x77\x2f\x30\x47\x07\x7b\x6f\x0e\x76\xa2\xd8\xd2\xa5\xd8\x08\x17\x75\x3d\xc6\xf4\x22\x49\x2c\xba\x28\xf2\xd1\xc0\x0c\x7e\x8a\xe1\xed\x5e\x4c\xfb\xa7\xc6\xe1\x26\x97\xcc\x3d\x7f\x4b\x1c\xef\x25\x8f\x76\x97\xd6\x96\x9e\x48\x19\x19\xfa\x41\x2b\x87\x5f\x5c\x14\x7f\x5b\x4a\xc7\x34\xaa\xfe\x4b\xd0\xff\xd4\x73\xc6\x4f\x63\xce\x1c\x5b\x31\x8b\x24\x6e\x47\x24\xcc\x60\x85\xce\x5f\x49\x83\x69\xaf\x5c\x41\x8a\xce\x95\x43\xa3\x98\xbc\x46\x73\x8f\xa6\x06\xae\x35\x49\x09\x19\x7f\x63\x81\xfd\x39\x4a\x03\x77\x9f\x1d\x2b\x57\xc8\x78\x4d\xf1\x2e\x6d\xf8\x93\xac\x67\x68\x44\x92\xd0\xdf\x99\xb1\x19\x93\xd1\x0f\xed\x87\x8b\x3c\x60\x95\xf5\xe6\x77\xf0\xd7\xdf\x36\x08\xd0\xf0\xcd\x34\x3d\x70\xd1\xb5\x68\x0e\x41\x1a\x22\xad\x4d\xab\x8a\x94\xe5\x38\xf5\x0a\x3f\xa0\x23\xd0\x91\xa6\xa1\x13\x43\x9e\x26\xee\x57\xb0\x8a\xdd\xf9\xd3\xf2\x2e\xe8\xc9\xe0\x89\xd9\xd3\xa8\x6a\x0a\x68\x5f\x85\x0c\x16\x8d\x60\x52\xfc\x1b\xca\x5e\xf7\x9b\xf4\xfb\xf7\x7a\x1d\xdf\x0b\xa6\xb9\x2e\xb1\x8d\x2e\x94\x23\x53\x90\xa8\x22\xb4\x71\x4c\xc3\x09\x1e\xac\x4f\x13\x0c\xf2\x4e\x8c\x4d\x7c\x17\xbf\x35\xe1\xf0\x7a\xc9\x2b\x37\x2a\x5e\x55\xff\x05\x00\x00\xff\xff\x4b\x74\x2b\x60\xe8\x0d\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3560, mode: os.FileMode(420), modTime: time.Unix(1614146215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xcf\x6f\xdb\x3a\x0c\xbe\xe7\xaf\xe0\x33\x82\x07\xfb\x3d\x47\xb9\x07\xe8\xe1\xa1\x79\xeb\x8c\xfd\xe8\xd6\x0e\xe8\x61\xdd\x41\xad\x68\x4b\x98\x42\x27\x94\xdc\xae\xd3\xf4\xbf\x0f\x96\x93\xd4\x69\xda\xa1\x3c\xd9\x14\xf9\xf1\x23\xf9\x31\x04\x50\x58\x1b\x42\xc8\xb4\x24\x65\x91\xe7\x8c\x52\xcd\xb9\xed\x3c\x66\x10\xa3\x16\x67\xe8\xf3\x6c\x1e\x8c\x0a\x01\x4c\x0d\x53\x51\x2d\x45\xe5\x2a\xf2\x10\xe3\xe2\xfa\x5a\xfd\x1b\x02\x20\x29\x88\x31\x66\x25\x68\x71\x81\x52\x15\x7b\xdf\x64\xf2\x42\x89\x1e\x7c\x02\x00\x30\x9f\xc3\x17\x6d\x1c\xd4\x1d\xdd\x7a\xd3\x12\xd4\xe8\x6f\x35\x3a\xf0\x1a\x21\x04\x98\x8a\x8f\x72\x85\x10\x23\xac\x5a\x85\x16\x8c\x42\xf2\xa6\x36\xa8\xe0\xe6\x01\x24\x34\xe6\x0e\xa1\x63\x3b\x5b\x4b\x96\x2b\xf4\xc8\x50\x73\xbb\xda\x61\x2b\xe9\xe5\x8d\x74\x08\x92\x14\x30\xfa\x8e\xc9\x81\xf1\xe0\xdb\x54\xe0\xd6\x1a\x24\x2f\x52\x74\xcf\x20\xd7\x07\x35\xdf\x0e\x8c\x0b\xe8\xbb\xca\xef\x41\x7b\xbf\x16\x17\xe8\xd6\x2d\x39\xbc\x62\xe3\x91\x4b\x60\xf8\x67\xeb\xdf\x74\xe8\x7c\x01\x21\xc1\xf5\x16\xc2\xec\x68\x68\xfb\xc7\xde\x8c\x2a\x01\x99\x61\x71\x02\x5a\x74\x6c\x3f\xf5\x4d\x54\xe4\xf3\xfb\x12\xb8\x84\xcc\xa8\xac\x18\xa1\x01\x5a\x87\xaf\xc2\xb8\xf4\x6c\xa8\x79\x11\x86\x14\xcc\x46\x30\xa6\x4e\x08\x7f\x9d\x00\x19\x3b\xe2\xdf\xdb\x30\xb4\xbd\x2b\x4e\xf6\x9f\x9b\xa1\xe4\xe9\x30\xc3\xf1\xdc\xc4\xe7\x0e\xf9\x21\x2f\xc4\x95\x46\xc6\xfc\xf1\xe9\x17\x38\x92\xdf\x53\x48\xb5\xcc\x8d\x2a\x0e\x68\x79\x5c\xad\xad\xf4\x08\x59\x52\xe1\xe6\x26\x83\xe9\xb8\x5b\xdc\x37\xba\x11\xe7\x64\x1f\x72\x16\xa7\x2d\x79\xfc\xe1\xf3\x3f\x02\x21\x73\xcb\xb3\x24\x3f\x43\xcd\x16\x74\x1c\x3f\x6d\xb8\xed\xd6\xae\x47\x9e\x8a\xff\x88\x5a\x2f\x7b\x2d\x3a\xb1\x15\xc0\x19\x52\x12\xf6\xd9\x10\x36\xa2\xf4\x38\x7b\xa7\x91\x4d\x5d\x8b\x0f\x92\x9d\x96\x36\xff\x7b\xe7\x38\x5f\x27\xac\x30\x24\x2f\xe0\xeb\x37\x97\x96\x73\x38\xe6\x9d\x54\x9a\xa3\x12\xe3\x08\x96\xd4\x20\x4c\x9b\xc4\x74\x08\x8d\x31\x0b\x61\xda\xf4\xe7\xf7\xcc\x66\xc7\xba\x79\xea\xef\x2d\x7b\x6e\x37\x8b\x74\xa1\x47\xf4\x9e\x62\xc7\x58\x02\x16\xaf\x12\x91\x16\xef\xdb\xa6\x41\x16\x57\xc6\xeb\xff\xfb\x75\xe4\xc8\x5c\xa4\xdf\x37\x06\xad\xca\xb3\x03\xfd\xa4\x9f\x6a\xb9\xfb\xcf\x4a\x30\xaa\x10\x43\x62\xe6\x90\x8d\xb4\xe6\x67\xda\x11\xa4\xe5\x8e\xe4\x3d\x68\x96\x14\xb2\xa8\xc8\x23\x93\xb4\x97\xc8\x77\xc8\x43\xf6\x70\x11\x64\xec\xd3\x8c\x97\x54\x7e\x40\xfd\x88\xeb\xe3\xd0\xb2\x12\x50\x54\xcb\x42\x54\x54\xb7\xcf\x87\x6c\x79\xe1\xf8\x1a\xb7\x54\xcf\xdf\x6d\x99\xa9\xe1\x29\x4e\x42\x40\x52\x31\xfe\x0e\x00\x00\xff\xff\xe6\xa4\xc9\xb5\xa3\x05\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1443, mode: os.FileMode(420), modTime: time.Unix(1614146215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x4c\x09\xa1\x90\x52\x9b\x42\xaf\x01\x72\x58\x24\xdb\xd4\x68\xda\xa4\x49\x17\x39\x74\x8b\x82\xb1\x46\x32\x11\x99\x94\x48\xaa\x69\xaa\xd5\xbb\x17\x24\x65\x5b\xb6\x25\xd9\xd9\xa0\xed\x16\xd8\x39\x59\x32\x39\xff\xdf\xfc\xa8\xae\x21\xc1\x94\x0b\x04\xb2\x60\x22\xc9\x51\xc5\xba\x7a\x50\xa8\x65\xa5\xe6\x18\x67\x68\x62\x25\x2b\x83\x04\xa6\x4d\xf3\x06\x00\xa0\xae\x41\x31\x91\x21\x04\x08\xa7\x67\x10\xd0\x77\x49\x86\x7a\xfd\xb7\x3f\x32\x05\x9e\x82\x90\x06\x02\xa4\xbf\x3c\x17\x48\xdf\x0a\x21\x0d\x33\x5c\x0a\x4d\xbf\xf7\x82\x2e\x51\xd0\xbb\x47\x5e\x40\xe7\xa6\xa5\x05\xbd\x44\x13\x92\xb8\xe6\x49\x5d\x5b\x3e\x01\x9d\x5d\xd0\x99\x9e\x09\x03\x4d\x73\xfa\xe1\x43\xf2\x4d\x5d\x03\x8a\x04\x9a\xa6\x89\xad\x3a\x58\xe4\x6c\x8e\x10\x06\x48\x7f\x62\x4b\x84\x8f\xa0\x05\x7b\xc4\x08\xc8\xef\x04\xc8\x94\x40\xd3\x90\x09\x2c\x68\x5d\xc3\xe6\x48\xc1\xf4\x9c\xe5\xd0\x34\x51\x47\x6f\xc7\xb6\x63\xe9\xea\xb1\xf3\xf3\xcd\x61\x97\x11\x18\xf7\xd5\x96\xab\x5e\xe1\xa9\xba\x8e\x4f\xe0\x16\x59\x12\x5f\x71\x6d\x40\x16\xa8\xfc\x45\x90\x02\xbc\x4e\x5e\x29\x0d\x27\xf1\xce\xdd\xb4\x12\xf3\x70\x61\xe5\x07\xde\x23\x4d\xd3\x4a\x8b\xa0\xdf\x4f\xe1\x13\x2c\x8c\x29\xe8\x2d\xea\x42\x0a\x8d\xf7\x8a\x1b\x54\x13\x50\x70\xd2\xbe\x2f\x2b\xd4\x26\x82\x7a\x4b\x50\x27\x21\xb6\x02\xb9\x77\xc8\x12\x4f\x26\x80\x4a\x59\x67\x2d\x68\xa5\xf2\x1b\xa6\xd8\x72\x26\x4c\xf8\x34\x01\x35\x01\xc2\x13\x12\xf5\x70\x07\xcc\x35\xbe\x88\xe7\x9d\x51\x5c\x64\x07\xd9\x76\xb2\x61\x8b\x65\xea\x38\x7e\x75\x06\x82\xe7\x3d\xf6\x5a\x52\x68\x2a\x25\xf6\xfe\x6a\xde\xec\xbd\x2a\xbd\x6a\xe7\x39\x47\x61\x68\x37\x22\xf4\xe7\x0a\xd5\x73\x18\xd1\xfb\x05\x2a\x0c\x37\x7f\xb5\x19\x6e\x8f\xcc\x2e\x42\x9e\x44\x91\x3f\x3a\x10\xb9\x68\x5f\x68\x0b\x2d\xa4\xef\x05\x2f\xab\x41\xe7\xd5\x35\x18\x5c\x16\x39\x33\x08\x44\xd9\x54\x2b\x1f\xc8\x2a\x57\x87\x2e\xe1\xda\xe1\x25\xbd\x16\xf9\x73\xa8\xe8\xb9\x14\x06\xff\x34\x61\xb4\xef\xe7\x7e\x31\xa8\x94\x54\x53\x07\x30\x2e\xb2\x2d\x91\x43\x1c\x82\x4c\xc9\xaa\xd0\x0e\x69\xe3\x60\xb2\x98\xb9\xf4\x87\x07\x4c\xd8\xe4\x8c\x5e\xa0\xe2\x69\x4a\x7f\x64\x4a\x2f\x58\x1e\x7e\xbd\x7a\x71\x5d\x38\xbe\xb5\x67\x74\x0a\xbf\xfe\xa6\x5d\x52\xf5\xa7\x03\x74\x60\x90\x8d\x8a\xee\x9e\x6e\xab\x47\xe6\x6c\xf2\xd7\x9a\x86\xd4\x75\x90\xd9\x92\x36\x92\xa1\x1d\xb7\x38\x6c\x8c\x9d\xb1\x44\x7c\xe6\x38\xa7\xed\x64\xd8\xa9\x8d\x07\x19\x35\x6a\x4c\x8b\xa6\x99\x00\xf6\x47\xfd\x18\x18\x81\xeb\x08\x57\x32\xcb\x50\xd1\x7b\x6e\x16\xef\x6c\x62\x84\xa8\x54\xe4\x1e\xbf\xe3\x98\x27\xe1\x9e\xfa\x4d\x43\x3b\xaf\x66\x17\xab\xb7\x64\x02\x3c\x89\xa8\x67\x42\x34\x2a\xce\x72\xfe\x97\xcb\x10\x70\x29\xd7\x53\x08\x56\xa4\x50\x24\xa8\xe8\x4c\x18\x54\x82\xe5\x77\xa8\xfe\x40\xe5\x39\xf9\x3a\x22\x78\x3e\x76\xbb\xb7\x1e\x40\x7f\x4d\xd8\x33\x7b\xc0\xce\x4d\x98\xc8\x04\xac\xa1\x11\x9d\x89\x54\x8e\x1d\x6c\xed\xc0\xbe\x9a\xd7\x31\xf3\xfa\x87\xd6\xaa\xe4\xc5\x15\xb7\xad\x2d\x89\x6c\xa1\xd8\x45\xa1\xed\x80\x16\x82\x17\x98\xb2\x2a\x37\xd7\x2a\x41\x35\x86\x04\x9e\x82\xa2\xef\x6f\xaf\xd6\xa5\xd0\x0d\x07\xd2\x5e\x23\x11\x9c\x9d\x01\x21\x23\x99\x63\xa9\xa4\x4e\x48\x38\x7a\x08\xb6\x01\xe7\x35\x4f\xe4\x41\xdc\xac\xa8\xad\xdc\x36\xa3\x4b\x08\x03\xe9\x65\xc2\x47\xc8\xe5\x93\x6d\xa9\x24\x41\x3d\xb7\x73\xc1\x05\xea\xf9\xc6\x7d\x6f\xfd\x83\x9b\x65\x7c\xcc\x24\x75\x91\xb6\x01\x8d\x26\x47\xa9\x7c\xa8\x04\x58\x1a\x4e\xcb\xc1\x08\x3a\x0d\xb7\xc2\x38\x56\x51\xdb\x70\xda\x39\xe4\x4b\x48\x3f\xdb\x90\x3a\xa5\x86\xfa\xe7\x14\x02\x74\xcd\x13\x59\x86\xea\x4a\xb2\x04\x13\x3f\xaf\xae\x7a\x2f\xb1\xe1\xf5\xed\x8e\x1c\xc0\x3e\x8e\xb6\xb7\x38\x86\x77\x56\x08\xe4\x92\x25\x80\x56\x08\x1d\x3c\x5c\x8e\xb6\x9e\xad\xf9\x7a\x67\x0f\x19\xd6\xcf\x0e\xdc\x21\x96\x6b\xcb\x82\xc8\x76\x0c\x5b\x67\xeb\x7a\x35\x37\x05\xeb\x56\x72\x5c\x9e\x7d\x3a\x56\x8e\xcd\x48\x37\xb3\x97\x70\xe2\xe6\xc0\x73\x29\x52\x9e\xd1\x1b\x36\x7f\x64\x99\xad\xef\x0f\x4c\xef\xf6\xbd\x56\x7f\x87\xb3\xbe\xb9\x7c\x88\x8e\xc6\xd7\xae\x0f\x3e\x15\x6b\x5d\xfa\x8f\x70\xb7\x6b\xca\x31\x18\xec\xd2\x30\x1e\xbb\x74\x98\xdf\xd1\xf8\xdf\x00\xfa\x10\xab\x61\xa8\x8e\x55\x84\x38\x86\x1b\x96\x71\xe1\x12\xb8\xf7\x44\xc1\x32\x9c\x00\x37\xb8\xd4\x37\xa8\x6e\xdc\xd3\x7a\xd3\x2a\xd6\x77\xdd\x40\x62\x67\x89\xd7\x4d\x81\x2f\x1f\xa0\x4a\x7a\xc5\x97\xdc\x84\x5d\x0d\x23\x7a\x9d\xa6\x1a\x4d\x18\x5a\xed\x61\x0a\xdf\x46\x70\xb2\x65\x43\xcf\xb2\x04\xbb\x2b\xca\x6a\xf1\xcf\xb9\x36\x71\x69\xe1\x35\x4d\x79\x6e\x50\x1d\x5e\x54\x50\x77\xb6\xa3\xb7\x79\x7e\x78\x39\x7a\xed\x98\xdc\x0e\xbb\x6e\xbc\x05\xa7\x2c\x17\x19\x24\xcc\x30\x5b\x32\x48\x64\x23\x6d\xa4\x45\x2b\x3c\xa0\x31\xa8\xfc\x24\xfc\xd9\xcc\xc1\x2f\x5a\xed\x36\x2d\xea\xcb\x6a\xe7\x69\x6c\xb5\xb3\xf9\xfb\xca\xd5\x4e\xff\xa3\x49\xfb\xff\xdb\xd0\xd8\x52\x56\xc2\x90\x09\xe4\x28\x42\xd4\xd1\xbf\xb6\x90\xed\x17\xfa\x66\xf7\xcb\x66\xb7\x26\xb9\x8f\x87\xe7\x0a\x6d\x3d\x3b\xea\xcb\xe1\x86\xc7\xfa\xd7\xdf\x01\x00\x00\xff\xff\x03\x2c\xd4\xf4\x3e\x16\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 5694, mode: os.FileMode(420), modTime: time.Unix(1614146215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdf\x6f\xdb\xb6\x13\x7f\xcf\x5f\x71\x5f\xc1\x28\xa4\x7c\x6d\x7a\xcf\x29\x8a\xa1\x6d\xba\xcc\x58\x7f\xa1\x69\xd7\x87\xb6\x40\x69\xf3\x24\xb1\x91\x49\x95\xa4\x9c\x64\x1a\xff\xf7\x81\x3f\xac\xc8\xb2\xe2\xba\x1b\x86\x6d\x7a\x49\x44\xdf\x1d\xef\xee\x73\xf7\xb9\x53\xdb\x02\xc3\x9c\x0b\x84\xa4\xa4\x82\x55\xa8\xe6\x4d\xcd\xa8\xc1\xb9\x92\x8d\xc1\x04\xac\x2d\xc9\x6b\x6a\x56\x65\x9a\xcc\x5b\xce\xda\x16\x78\x0e\x13\xb2\x38\x27\x0b\xbd\x10\x06\xac\x3d\xfb\xf8\x91\xfd\xbf\x6d\x01\x05\x03\x6b\x6d\x32\x85\x92\xbc\xf3\x36\xb2\xee\xf4\xe4\xe4\xde\x8b\xdc\x15\x27\x00\x00\xf3\x39\x68\xa3\x9a\x95\x01\x23\x61\xc9\x05\x03\x53\x22\xd4\x52\x1b\x58\x4a\x76\x0b\x46\x12\x2f\x67\x6e\x6b\x84\xb6\x85\x09\x79\x49\xd7\x08\xbf\xc3\x8a\xae\xb1\x02\x6b\xc3\xa5\x6f\xf0\x6b\x83\xda\x6c\x6d\xb5\x5e\xc7\x3d\x6d\x3b\x3f\x85\xc7\x8c\x01\xad\x2a\xc8\x39\x56\x4c\x83\x29\xa9\x01\xaa\x10\x84\x34\x80\x37\xab\xaa\x61\xc8\x08\x9c\xce\xa3\x4f\x41\x0f\x14\x15\x05\xc2\x24\x87\xb3\x47\x30\x21\x3f\x05\xdd\x59\x4f\x26\xc8\xcd\x60\x42\xbd\x48\x4e\x1e\x0b\x21\x0d\x35\x5c\x0a\x1d\xe4\x2f\x50\xc0\x88\x02\xcf\xfd\xd5\x29\x15\xcc\x29\x4f\x28\xb9\xbc\xe2\x75\x4c\xdf\x50\x21\x7a\x33\xc9\xc9\xa5\x0f\xce\x1b\x06\x6b\xe1\x34\x9c\xbe\xbd\xad\xd1\xfd\xc4\x45\xe1\x4e\x3f\x7f\xd1\x52\x9c\x25\x0e\x32\xc1\xf0\x06\x52\x5d\x57\xdc\x40\x6a\x68\xf1\x5c\xca\xab\xa6\xbe\xb3\xf4\x96\x16\x90\x38\xf1\x24\x83\x64\x9a\x64\xf0\x03\x58\x9b\x44\xb0\x69\x84\xf3\x57\x5a\x71\xe6\x63\x72\xe2\xd6\x7a\x5f\xee\xfb\xb1\x83\xfe\xf3\x5e\xcc\xb1\x24\x86\x47\xb3\x9d\xb3\x1e\x56\xc8\x0a\x3c\x16\xaa\xd9\x16\x2b\x0c\x58\x3d\xf3\xba\x07\xa0\xc2\xef\x81\xca\xa1\x94\xba\xfb\x27\x18\x92\xdd\xd7\xfd\x39\x94\xf5\x05\x0a\x8f\x61\x16\x24\xc7\x91\xbd\x17\x5a\x1c\x42\x1b\x31\x40\xf2\x4e\xf0\xaf\x0d\x82\xb5\x0e\x6c\xac\xb4\xfb\xf7\xc3\xa7\x2e\xcd\x41\xd9\x3b\xb5\x38\xff\x13\x95\x80\xff\x54\x25\xcc\x46\x4a\x21\x1e\xd9\x93\x2d\x31\xbc\x2d\xb9\x86\xbc\x11\x2b\x67\x16\x02\x71\x68\xa0\x50\xf0\x0d\x8a\x1e\x19\x58\x0b\x6b\xc9\xb0\xf2\x48\x69\xba\xf1\x75\x83\xb0\x2a\x5d\x51\x68\xe0\xc2\xbf\x32\x6a\xe8\x92\x6a\x0c\x7c\xe2\xcc\xa6\xe5\x8e\x91\x08\x65\x06\x21\xa2\xf4\x1a\x4a\x63\x6a\xf2\x06\x75\x2d\x85\xc6\xf7\x8a\x1b\x54\x53\x50\x70\x1a\xcf\x3d\xe5\x64\x3b\x64\x33\xdb\x23\xca\x9d\xf0\x39\x9b\x02\x2a\xe5\x6a\xb0\x24\x8d\xaa\x5e\x53\x45\xd7\x0b\x61\xd2\xeb\x29\xa8\x29\x24\x9c\x25\x59\x9f\x82\x22\xe2\xdf\xb6\x11\x50\xbf\xd7\xcc\x20\xe3\x3c\xf7\x16\xfe\xf7\x08\x04\xaf\x7a\xfe\xbb\x47\xa1\x69\x94\xe8\x8e\x22\x1a\x11\x91\x0b\x34\x77\xfc\xec\x12\x4a\xba\x5f\x99\x73\xa8\x4f\xd0\x5a\xd0\x2b\x1c\x12\x74\x6b\x9d\x19\x23\x99\x84\x99\x6b\x73\x79\x0d\xb9\x54\xeb\x59\xa3\xaa\x19\x8a\x95\x64\xc8\xe6\x37\xeb\x6a\x5e\x2b\x69\xe4\xb2\xc9\x07\x97\x44\xc7\xcf\x1e\x81\x2b\x56\xf2\x12\xaf\xcf\xd1\x29\xa9\x54\x91\x27\x92\xdd\x66\x24\xbc\xa7\x0f\x58\xf6\xf0\xfe\x18\x4b\xf2\x5c\x16\x05\x2a\xf2\x9e\x9b\xf2\x99\x52\x52\xa5\xa8\x54\x46\xc2\xbf\x09\xba\x3f\xc0\x9c\x25\xd7\x4a\xa1\x2f\x06\x49\x12\x0c\x15\x79\x42\x59\x8c\xab\xcb\xbc\xd8\xb8\x46\xf0\x3a\x6e\x18\x71\x51\xec\xa9\x1e\xc8\x6f\xec\x22\xec\x0a\x76\x2c\xf4\x92\x44\x31\xa9\x62\xfb\xa6\x07\xa3\x0d\x9a\x53\x90\x57\x4e\x1b\x95\x22\xe9\xe9\xa6\xb3\xb0\x08\x1e\xdf\xf5\xaf\x4f\x42\xf6\xd0\x89\xb7\x7b\x6c\x75\x54\xe6\xa2\x71\x97\x3b\x15\xe7\xb2\x8b\x65\x90\x88\x5e\x1e\x17\xc2\xa0\x12\xb4\xba\x44\xb5\x41\x15\x6c\x85\x84\x0a\x5e\x8d\x69\xed\xa4\x70\x90\xc6\x43\x6e\x2e\x44\x2e\xd3\x64\xd3\xc5\x0a\x39\xe5\x15\xb2\x23\xd1\x75\x26\x8e\xc7\xf2\x92\x6e\xc6\x70\x5c\x06\x08\x9f\x56\x1c\x85\x21\x7d\xfe\x89\x4c\xfa\x4a\xe0\xe2\x3c\xe5\x2c\x1b\x1b\x70\xff\x86\x65\x84\xe7\xc0\xc8\xe8\x46\x32\x5a\x7e\x5d\xe0\xe4\x12\xcd\x98\x5a\x7a\x3a\x6e\x2e\x0b\x0b\x41\x24\x8b\x6b\xbf\x09\x2c\x65\x63\x40\x57\x7c\x85\x3b\xcb\x5c\xe9\x72\xbd\x6a\xb4\x91\x6b\x58\x53\xa5\x4b\x5a\x55\xa8\xf4\x8f\xbb\x8b\xc2\x1d\x4e\xc3\x1c\xec\x8f\xa4\xb1\x7d\xe5\xbf\xbb\x64\x74\x90\xed\x6d\x1a\x07\x21\xdb\xce\xb3\xde\x1e\x32\x2a\x17\xe0\x0d\xf6\x5f\x34\xc1\xeb\x4b\x34\x3d\x6c\x87\xf7\xee\x37\x75\x07\xc5\xc8\xc8\x3b\x74\x8f\xdb\x17\xad\x4d\xc7\xaf\x21\x84\x84\x2a\xba\x1b\x3a\x0a\xd7\x72\x83\xc0\x87\xdf\x01\x61\xa9\x88\xbb\x42\xed\xbe\x7d\x66\xae\x71\x47\x0b\x08\xc6\x77\xda\xed\xf3\x3d\xf5\xb5\xc7\x18\x5c\x0c\x36\x15\xf7\x60\x37\xf2\x97\xc4\x49\xa5\x8a\x3c\x95\xc2\xe0\x8d\x49\xb3\xec\xa8\xb1\x7e\x14\x71\x6b\xba\x71\xa4\xdd\x27\xa5\x71\x6a\xfc\x0e\xc2\x3e\xcc\x91\xa8\x38\xad\xf8\x6f\x63\x44\xe9\x3b\xa9\x50\xb2\xa9\x75\x68\xb8\x7b\x3a\x22\xd4\xfd\x45\x10\xec\xe5\xf8\x4b\x97\x33\x5d\xa2\xe2\x79\x4e\x5e\x04\x66\x48\x1f\x6c\x0f\x5e\xd5\xde\x5a\x1b\x94\xcf\xe0\xc3\xa7\x30\xb2\xdb\xb1\x0e\xdd\xfa\x32\xba\xc3\x77\xe4\x50\x78\x5f\x83\xa8\x5f\xa1\x27\x85\xfb\x3a\x1e\x59\xc2\xa0\xb7\xe2\x0d\xcf\xdd\x93\x8c\x2d\x53\x67\x0a\x29\x4b\xbe\x59\x5f\xd6\x4e\x01\xff\x5a\x61\xb8\x57\xdf\x46\x69\xb2\x33\xa4\xfc\xcb\xe2\xbc\xab\x8f\x29\xb8\x6f\x8f\xae\x90\x74\x44\x34\x8c\x57\x5f\x56\x7f\x63\x09\xed\x38\xbf\xe7\xed\x5d\xda\x3a\x2f\xc3\x02\x30\x26\x12\xfd\xda\x59\x06\xa2\xab\xaf\x7e\x89\x9e\x7d\xc9\xe2\x17\x4a\xd7\xbf\x7f\x04\x00\x00\xff\xff\xb0\x23\x9f\x95\x4a\x11\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 4426, mode: os.FileMode(420), modTime: time.Unix(1614146215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xf9\x14\xaf\xc2\x07\x29\xd8\xca\x3d\x10\x4a\x21\x7f\x6a\x08\x39\xd4\x85\x9e\xd7\xda\xd1\x6a\x53\x65\x56\x1e\x8d\x12\xc2\xa2\xef\x5e\x24\xd9\x46\x38\x69\xe9\xc5\xba\xcd\xee\xdb\x37\xef\xb7\x3b\x8a\x11\x96\x4a\xcf\x84\x44\xc8\xd8\xab\xdd\x36\x41\xdf\x5f\x00\x40\x8c\x57\x97\x58\x97\x08\x4c\x08\x25\xb4\x22\x38\xff\x4a\x8c\xca\xb0\xad\x49\xe0\x24\x74\x4d\x0b\xdf\xa2\x25\x45\xe0\x51\x42\xd6\x11\xc8\x38\x12\x3c\x07\xcf\xf0\x9a\x5f\x5e\xcd\x1d\x35\xd8\x80\x15\x98\x5a\x25\xbb\x57\xd6\xc1\x58\xcf\xee\x2b\x66\xd2\x15\xc4\xb0\x23\x2c\x08\xd7\x37\x58\xe4\x77\xd6\x51\x7b\xc8\x76\x22\x71\x93\xe4\x1b\x73\x50\xa3\x3e\x70\x9b\x7f\x9f\x42\x3e\x10\xe7\x3f\xc8\xd8\x87\x29\xeb\xec\xf8\x69\x97\xd1\xa3\x6d\x6a\xaf\x48\xd5\xb8\xc7\x10\x7e\x77\x0d\x16\x94\x6f\x54\xba\x42\x7f\x1a\x87\x64\x22\x4e\x32\x24\xcb\xe4\xd4\xeb\xe0\xe7\x4b\xd0\x6e\x88\x34\x58\xf6\xfd\x2e\xff\xe5\xb5\x8a\x11\x8d\x69\x0b\x53\x0f\x86\x4f\xe6\x85\xd0\xf7\x69\x16\x23\x88\x2d\x56\x9f\xa4\x1a\xd6\x4f\x58\x67\x4b\xb3\x72\xef\xd1\xf7\x17\x17\xa7\x6f\x49\x22\x41\x56\xe3\x6b\x79\x76\xc7\xc0\x43\x40\x11\x7c\xb9\x01\xfb\x1a\xf1\xd8\xa3\x7d\xf3\x5a\x54\xc3\x5e\x9e\xea\x7b\x43\xd9\x6c\x6f\xf8\x0a\xd3\x12\x2e\x89\x35\x7f\x0a\x7a\x1f\x3a\xb6\x77\x43\x83\xeb\x0f\xb7\x50\xe5\x8f\xc1\x39\x92\x91\x7c\xd4\xa4\x24\x92\x8d\xe5\xbd\xa7\xda\xa6\x49\x8c\x58\x1c\xee\x21\x1f\x8b\xf5\xed\xa1\x4e\x96\xf0\x36\xcb\x6f\x69\xdb\xb9\x34\x79\x0e\x5b\x70\x50\x94\x43\xc3\x24\xfb\xd0\x4c\x88\x2d\xc9\x31\x52\xfa\xb6\x84\x2c\x07\x88\xcf\xa4\xda\x09\xff\x9d\x69\xe3\xd9\x75\xb5\x91\xb3\x62\x4d\x07\x13\xdb\x35\xb5\x2f\x8c\x12\x88\x55\xde\x51\x06\x81\xff\x07\xdf\x9a\x95\x84\x4d\xbd\x21\x79\xa5\x29\xe1\x1e\x95\x7d\xfd\x5f\xa8\x96\x4a\xd3\xd5\x7a\x66\xae\x71\xe6\x50\x92\x16\x95\x67\x07\x0e\x96\x50\x4a\x78\x81\xdd\x9e\x0b\x6e\x9a\xea\xf9\x9f\xf0\x27\x00\x00\xff\xff\x9d\xbd\x5a\x9a\xd5\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1237, mode: os.FileMode(420), modTime: time.Unix(1614146215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/date_utc_converter.tpl":    flutterDate_utc_converterTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_delete.tpl":        handlerHandler_deleteTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":             &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl":    &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"date_utc_converter.tpl": &bintree{flutterDate_utc_converterTpl, map[string]*bintree{}},
		"model.tpl":              &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_delete.tpl":        &bintree{handlerHandler_deleteTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
