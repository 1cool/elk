// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x14\x7d\xef\xaf\x38\x13\x0c\x58\x2a\x12\x79\xcf\x6e\x1d\x0c\x4b\x17\xa0\x43\x37\x04\x58\xf3\x54\x14\x03\x23\x5e\x39\x5c\x28\x52\x21\xa9\xa5\x86\xa2\xff\x3e\x90\x92\x1c\x59\x96\x95\xa0\x7b\xa8\x5f\x2c\x90\xf7\xeb\x9c\xfb\xa1\xab\xba\x06\xa7\x5c\x28\x42\x94\x49\x41\xca\x45\x68\x9a\x37\x00\x50\xd7\x70\x54\x94\x92\x39\x42\x74\x47\x8c\x93\x89\x70\xde\x5d\x8a\xa2\xd4\xc6\x61\x59\xb2\xec\x9e\x6d\x69\xcd\x85\x5e\x71\xa1\x53\xce\x8c\x5b\xbe\x9b\x14\xc9\x65\xe5\x1c\x99\xd5\xa3\xe0\x5b\x72\x76\x4e\xb4\x34\xfa\x5f\xc1\xc9\xac\xfa\x87\x5e\xb8\x0b\x6c\xf5\x16\x1f\x5b\x15\x77\x47\x50\x9a\x13\x84\xb3\x24\x73\x30\xc5\xc1\xa4\x84\xce\xc3\x15\xf1\x2d\x59\x38\x66\xb6\xe4\x82\x9c\xc5\x0a\x2d\x4e\x9b\xe2\xed\x6a\x84\x26\x4d\x57\x85\xe6\x24\x57\x75\x8d\x45\xfa\x27\x2b\x08\x4f\xb0\x8a\xdd\x13\x9a\x66\x18\x70\x5d\xc3\x30\xb5\x25\x2c\x08\xeb\x0d\x16\xe9\x6f\xc1\x51\xcf\xce\x49\x9b\x94\x7e\xde\x95\x34\x67\x79\xa4\xda\xc6\xfa\x4a\xdd\xba\x06\x29\xee\xf3\xf7\xcc\xd3\x1f\x5e\xcc\x53\x51\x99\x8e\x15\x61\x5b\xc6\x58\x96\x91\xb5\xe2\x56\x12\x9c\x86\x76\x77\x64\xe0\x8d\x21\x17\x92\x86\xec\x64\x5a\x59\x87\x29\x4a\x6e\x8c\xc4\x06\xcb\xba\x46\x6c\xa8\x94\x2c\x23\xc4\x87\x42\x09\xa2\xbf\x23\x44\xe7\x51\x82\x27\x94\xb2\x32\x4c\xa2\x69\xfa\x4c\x66\x92\x59\x3b\xb0\xdc\x34\x97\x01\x2f\xea\x3d\x17\xc7\x97\x71\xfd\x8b\xa1\x87\x4a\x18\xe2\x01\x4d\xca\x85\x6e\x12\xac\xc1\xac\x25\xe3\x62\x2e\x34\x7e\xda\x40\x55\x52\x26\x9d\x1f\xff\xcb\x85\x62\x12\x1f\x84\x06\x17\x7a\x70\x1e\x58\xba\x12\xbe\x6e\x60\x85\xda\xca\xae\xa0\x6e\x77\x10\x7c\xc0\x82\xff\x5d\x55\xae\x32\xf4\x7e\x18\xd3\x85\x37\xcc\xe3\x70\xf4\xf1\x43\x48\x11\x9e\x02\x8f\xe1\xb1\x69\x20\x78\x02\x66\x77\x2a\x1b\xa0\x7a\x0e\xc8\x60\x03\xf6\xc8\x84\xf3\x61\xa5\x5b\x72\xf1\x72\xb5\x38\xc1\xf5\x6a\x21\xf8\x32\x79\x77\x60\xc5\x90\xab\x8c\x3a\xa0\x29\xcd\x8d\x2e\x7e\xb7\x5a\xc5\xbe\x6f\x1c\x1b\x68\x34\x23\xdc\x9f\x84\x75\x28\x2a\xe9\x44\xd9\xe1\xb6\x3e\xfd\x8e\x3c\xb9\xb7\x3b\x3c\x54\x64\x76\x28\x99\x61\x85\x9d\xe6\xc2\x5b\x38\x24\xe4\x02\x52\x58\x17\x1f\x82\x15\xca\xa1\x64\x5b\x3a\x3b\x3a\x15\x8e\x0a\x7b\x4d\xe6\xfa\xe8\xb6\xae\xcf\xfb\x2e\xcb\xdb\x2e\xbb\x12\x24\xb9\xc5\x20\x8a\xa1\xec\xe2\x1f\xab\x55\x88\x62\xbd\x81\x50\x9c\xbe\x21\xb6\xa5\x14\x0e\xb1\x63\xdb\x4f\x5a\xdf\x57\x25\x16\x79\xfa\x97\x33\x55\xe6\x3e\xb3\x2d\x22\xaf\x11\x25\x88\xce\xa2\x04\x3f\x4f\xdb\xf5\x1a\x13\x59\xf5\x17\x7b\x7f\x4d\x33\x8e\xbc\x6f\xc4\x3d\xf1\x73\x35\xd0\xf2\x8b\x4d\xdf\x69\xcd\xa0\x3c\x03\x4d\x39\x62\x4f\xde\xbe\xac\x47\x56\xfc\xaf\xb5\xf1\x65\xe9\xe5\x96\x5f\xb1\x09\x6c\x1f\x96\x4a\x73\x6c\x75\x48\xfe\x6b\xac\x0f\xe5\x83\x97\xe1\xc1\xac\xb7\xe7\x89\xf9\xc3\x72\xe9\x01\x8f\xd2\x36\x87\x79\x88\x7b\xa4\x16\xa0\x8f\xce\xde\x1d\x19\x68\x4e\xd4\xc4\xff\x9c\x02\xcb\x64\xa2\x3c\xda\x4e\xc7\xe6\x34\x9c\x6e\x50\x7c\xf9\x3a\x9b\xa6\x4e\xaa\xb7\xc7\x6c\x18\x11\x49\x5a\xb0\x32\x8e\x45\x82\xcd\xc5\x89\x51\x23\x92\x24\x75\xda\x0b\xc7\x33\xf3\xe6\xd2\x90\x5f\x27\x18\x14\x3d\xb6\x63\x56\xab\xf0\x76\x32\x54\x68\x47\xaf\x19\xb7\x59\x30\x11\x0f\x0f\x41\xaf\x9f\xb0\xa5\xb6\xb3\xe4\x9e\xc1\x03\x5f\x83\x52\xa7\x03\xb0\x64\x7a\xe0\xc6\xb3\x13\x77\x86\x82\x9b\x92\x77\x14\x7c\x17\xfc\x2a\xa8\x7f\x3f\x7c\xe6\xb2\xbb\x1f\x8a\xff\x8a\x5c\x76\xb7\xdf\xdb\x6c\xbb\xa2\x8d\x90\x4f\xaf\x57\xa3\x96\x7e\xa6\x47\xe4\x7e\x3b\xba\x51\xe2\xa1\xf2\xd1\x8c\x97\xa5\x70\x42\xd2\xfa\xa7\xfd\xeb\xea\x50\xe0\x62\xdf\x9d\x6d\x7d\xef\xd7\xac\x8c\x15\xe4\x37\x96\x57\x11\x7e\x8a\xf4\x97\xde\xea\x35\xa5\xfd\xfe\xd0\x79\x68\x5a\xe9\xe9\x95\xaf\x9b\x01\x63\xcf\x63\x22\xce\x27\x46\xe0\x38\x81\x87\x2c\xcc\xa5\x71\xe0\x25\x50\xf9\x92\xf5\x17\x06\xc8\x29\xc7\xd3\x63\x64\xe8\x5c\xf1\x23\xdf\x07\x85\x33\x1e\xb2\xc3\x2d\x78\xb8\xfa\xf6\xbb\xef\xed\x2e\x14\x63\xd8\x7c\xfb\xcf\x0d\x74\x1f\x22\xa3\xb2\xb4\x8e\x39\x91\x4d\xed\xab\x3a\x8f\x7f\xad\x84\xe4\x97\x5a\x39\xfa\xe6\xfc\x8b\xdc\xff\x07\xb8\xd7\xfd\x37\x8c\xce\xdf\x1f\xab\x5e\xc4\x9d\xec\x59\x58\x9b\x48\xad\x91\x33\x69\xa9\x43\xdf\xbc\x19\x40\xfa\x2f\x00\x00\xff\xff\x87\xbb\x7b\x8c\xac\x0d\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 3500, mode: os.FileMode(420), modTime: time.Unix(1605473089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\x4d\x6b\xdb\x40\x10\xbd\xe7\x57\xbc\x86\x40\xac\xe0\xc8\x77\xa5\x09\x69\x53\x48\x4b\x69\x28\xe4\x90\x43\x29\x66\xab\x1d\xdb\x83\xd7\xbb\xea\xee\xc8\x89\x51\xf5\xdf\x8b\x3e\x2c\x4b\x76\x30\x29\x9d\x8b\xd0\xbc\x79\x4f\xf3\x66\x46\x45\x01\x4d\x33\xb6\x84\xd3\xd4\x30\x59\x99\x64\xde\xad\x59\x93\x3f\x45\x59\x9e\x00\x40\x51\x40\x68\x95\x19\x25\x84\xd3\x05\xa9\x1a\xbb\x6c\x41\x5e\x65\xce\x0b\xce\x33\x95\x2e\xd5\x9c\x12\xcd\x6e\xa2\xd9\xc5\x5a\x79\x39\xbf\x7a\xb5\x64\x66\x72\x11\xf2\x93\x67\xd6\x73\x92\x70\xac\x74\xdb\x4b\xd7\xd4\x9b\x8a\x03\xdb\xb9\xa1\x69\xba\x60\xa3\xa7\xcd\x57\xb6\xbc\xd6\xd0\xe4\x02\x5f\x1a\x36\xad\xc9\x6f\x60\x9d\x26\x5c\x4c\x76\x86\xbd\xb2\x73\xc2\x99\x45\x72\x8d\xb3\xf8\xc1\x69\x0a\x9d\xe5\xa6\xe4\x12\x3c\x83\x75\x82\x33\x1b\x7f\xb0\xd6\x89\x12\x76\x36\xc4\x9f\x95\xd5\x86\xfc\x3d\xd9\xf8\x71\xc9\xd9\x3d\x59\xf2\x35\x84\x1e\xbd\xdf\x7e\x51\x54\x12\x0f\x6a\x45\xf8\x83\x60\xd5\x92\x50\x96\x7d\x9f\x6d\x4b\x64\x75\xd7\x42\xef\x75\xe7\xe8\x7b\xe3\x1f\xb2\x20\x34\xbb\x0c\xd0\xee\xd9\xd6\x89\x66\x0c\x10\x4f\x14\xef\x9c\xa6\x46\x85\x80\xbb\xba\xb8\xa5\x7b\xd0\x8b\x90\xd5\x01\x8f\xf5\x18\xef\xaa\x29\x3e\x8a\x12\x32\x14\xc2\x53\x23\x53\x74\x8d\x0d\xb9\xa3\x62\x60\xf1\x2b\x6d\xb0\xa4\xcd\x78\x90\xbc\xf5\xf4\x3b\x67\x4f\x1a\xb2\xe0\x10\x6b\x76\x43\xbc\xce\xd6\xbb\xdb\xe5\xcb\x08\x09\x54\x08\xe4\x65\xa4\xd9\xe1\xdd\x35\x6c\x6e\x4c\x34\x46\xc8\x33\xf2\xa3\x25\x6d\x92\xfa\x4b\xa8\x89\x49\xf3\x88\xda\x7d\x57\x31\x63\xab\x0c\x3e\xb1\x83\x66\x77\xb5\x97\x6e\x5d\xd5\xa4\x1e\xe7\xd6\xad\xc9\x7b\xd6\xd4\x65\xda\xc2\x5f\x39\x1b\xfd\xc4\xb2\xa8\x87\x33\xfa\x58\xbd\xde\x39\x2b\xf4\x22\x48\x9b\xe7\x78\x20\x1a\x61\x38\x18\x4f\x92\x7b\x8b\x6f\xb9\x11\xee\x66\x37\xa8\xa8\x62\x7b\xd0\x21\xc1\x8f\x03\xf0\x8d\x87\x7a\x48\xf9\xef\xc3\xdd\x8f\xad\x81\xf7\xbd\x4b\x2e\xcb\xe6\x30\x6e\x0e\x5d\xed\x47\xea\x49\x09\x25\x18\x4d\x23\x5c\xdf\xe0\x15\x91\x6a\xe5\x49\xb5\xb7\x68\x7c\x54\xed\x08\xbc\xf7\xff\xfc\x03\xfc\xf3\x50\xb4\x7f\x63\x43\x34\xda\x5d\x56\xa3\x54\x9e\xb4\xd2\x65\xf9\x37\x00\x00\xff\xff\xbd\xab\xf4\xd4\x6a\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1386, mode: os.FileMode(420), modTime: time.Unix(1605278693, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xcd\x6e\xdb\x3a\x10\x85\xf7\x79\x8a\x03\xc3\x40\xec\xe0\x46\xda\xe7\xc7\xb8\x8b\xd6\x40\x8b\xb6\x9b\xb8\xeb\x60\x2a\x0e\x65\x36\x12\xa9\x92\x4c\x01\x57\xd1\xbb\x17\xa4\x24\x4b\x56\x54\x38\x28\xba\x93\x38\x9c\x6f\xce\xcc\x19\xd6\x35\x04\x4b\xa5\x19\x8b\xd2\x08\x2e\x16\x68\x9a\x0b\x00\xa8\x6b\x78\x2e\xab\x82\x3c\x63\xb1\x67\x12\x6c\x17\xb8\xee\x82\xaa\xac\x8c\xf5\xb8\xac\x28\x7b\xa2\x9c\x6f\xbe\x3b\xa3\x1f\x49\x6b\xe3\xc9\x2b\xa3\xd3\xc9\x7f\x22\xc8\xfa\xcb\xdb\x8b\x0e\x9c\x5e\x61\x6b\x2c\xf8\x27\xdb\x03\x58\xe4\xdc\xf3\xfc\x9e\x91\xb3\x66\x4b\x9e\x05\xa2\x9e\x04\x57\xe9\xa0\xc8\x92\xce\x19\x4b\xc6\xcd\x3d\x96\xc9\x7b\x91\xb3\xeb\xf5\x8e\x65\x25\x49\x1a\x93\xd3\xba\xc6\x92\x93\xdd\xa1\xe2\xe4\x0b\x95\x8c\x17\x38\x4d\x4f\x8c\xa6\xe9\x25\x75\x60\xd6\x22\x80\x06\x81\x1f\x9d\xd1\x0f\x6c\x15\x15\xea\x17\x7d\x2b\x18\xd5\xb3\x77\x13\x81\x99\x11\x0c\xa5\xe1\xf7\xca\x41\xaa\x82\x47\x62\x2b\x0a\x42\x42\xfd\x57\x95\xf3\x93\x71\xfc\x3f\xad\xb4\x5a\xc7\xf3\xac\x20\xe7\x30\x00\x9a\x06\xf5\xb1\xd1\xf1\xf1\x6a\xdd\x91\x8e\xda\x77\x7b\x86\x54\x5c\x08\x07\x23\xa3\xe6\xe9\x28\x8f\x8c\x0f\xef\xe2\x74\xf0\x82\xa0\x29\x7e\x86\x42\x5d\xa8\xab\x70\x3b\xca\xb9\xee\x3d\x90\xad\x07\xdb\xb6\xce\x88\xdb\xb3\xe5\x9f\xc8\x72\x8e\x7b\xe2\xc0\x49\x27\x1c\x5d\x3e\xd7\x48\x87\x6c\x57\x22\xa6\x8c\xa6\x22\x29\xf3\xc6\x1e\x4e\x6e\x26\xd2\x9a\x32\xcc\x7e\xf5\x99\xaa\xbb\x07\x6f\x95\xce\xff\x83\x38\x68\x2a\x55\xb6\x41\xd8\xe0\x35\xee\x37\x78\x5c\x8e\xb3\xb6\x7d\x52\x8c\x0f\x0d\xcc\x32\xbc\x89\x57\x67\x30\xbb\x36\x12\x16\xa7\x83\x8c\x77\xef\x6c\xd7\x6f\xdf\x99\x76\x1e\xf3\x8b\x13\x63\x93\xed\x39\xf7\xc2\xba\x5b\x4a\x86\x77\xf5\x55\xab\x1f\xcf\x81\x34\x7d\x66\xf1\x84\x0b\x17\xbe\x3e\x29\xe7\xef\x5e\x5f\xd8\x1c\x2d\x47\x1b\x7c\xcb\x4e\xcc\xf9\x18\x25\xfe\x9d\x99\x31\xf5\x1f\x39\x1a\x59\x73\xb6\x0e\x6d\xfc\x0e\x00\x00\xff\xff\xb6\x36\xa0\xad\x6b\x05\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 1387, mode: os.FileMode(420), modTime: time.Unix(1605257548, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x6f\x6f\xdb\xb6\x13\x7e\xaf\x4f\x71\x3f\xc1\x68\x65\xff\x6c\xca\xed\x80\xbd\xc8\xe0\x17\x5d\x86\xa5\x05\xd2\x20\x4b\xda\xf5\x35\x23\x9e\x25\x22\x12\xc9\x92\x94\x1d\xcf\xd0\x77\x1f\x48\xfd\xb1\x1c\xcb\x41\xe2\xa5\xc0\x30\x01\x01\x4c\xde\x1d\x9f\xbb\xe7\x1e\xfe\xc9\x76\x0b\x23\x75\x9f\xc2\xd9\x02\xee\xa8\x41\x08\x33\x2a\x58\x8e\x3a\x84\xaa\x0a\xb6\xdb\x19\xac\xb9\xcd\x00\x1f\x2c\x0a\x06\x23\x08\xaf\x69\x72\x4f\x53\x0c\x7b\x8e\xb3\xaa\x0a\x00\x00\xb6\x5b\xb0\x58\xa8\x9c\x5a\xb7\x0c\x52\xe6\x8c\xa4\x5e\x07\x5c\x78\x55\x05\x01\x2f\x94\xd4\x16\x22\x1f\x11\x0a\xb4\x71\x66\xad\x0a\xeb\xa1\xb1\x3a\x91\x62\x15\x06\xf5\x30\xe5\x36\x2b\xef\x48\x22\x8b\x38\x95\xb3\x24\xe3\x71\x92\xf1\x70\xc8\xa6\x72\xba\x49\xb5\x2c\x05\x8b\x57\x34\xe7\x8c\x5a\xa9\xe3\xd5\xbb\xf9\xa1\x73\xce\xb9\x8a\x4d\x86\x9a\x2f\x97\x87\xd6\x82\x1a\x83\x98\x27\x59\xac\x51\xb8\xfc\x0f\x3c\x0c\xd7\xa5\x32\x28\xe2\x5c\xa6\xba\x34\x6d\xaa\x8e\x46\x72\x2e\xc5\x92\xa7\xa4\xa1\x08\xaa\x2a\x0c\xc6\x41\x10\xc7\x70\x9b\x51\x8d\x0c\x1a\xc6\x48\x60\x37\x0a\xdb\x11\x18\xab\xcb\xc4\xc2\xd6\x2f\x34\x49\x32\x4e\x3e\x97\x0f\xf5\xb2\x49\xce\x51\x58\x3f\x8f\xc2\x92\x73\x3f\xf4\x96\xae\x4a\x98\x74\x3f\xc9\x9f\xf5\x2f\xf4\x1e\xb9\x4c\x53\xd4\x3e\xb6\x4e\x95\x5c\xfa\x99\xa0\x0a\x5c\x3f\x34\x15\x29\xc2\x48\xb8\xc6\x8f\xc8\x95\x64\x68\x60\xd7\x47\xbe\x04\x21\x2d\x8c\x04\xf9\x20\x84\xb4\xd4\x72\x29\x0c\xf9\x58\x67\x7c\x81\x82\xdc\xde\x73\x75\x81\x02\xb5\x37\xf9\xce\x42\xf3\xc5\x31\x7c\xc9\xd0\xad\x32\x12\xe4\x8a\x16\x8e\x88\x8f\x6d\xe5\xad\x93\x67\x60\xc8\x65\x9f\x8e\xf6\x9b\x34\x64\x75\x93\xfb\x78\xe7\x1a\x9d\xe8\x28\x08\x5c\x0f\xae\xda\x39\x2f\x4b\x91\xc0\x15\xae\x87\x9c\xa2\xa4\x4f\xf3\x14\x56\x43\xdc\x4e\x1d\xb1\x8f\x28\x1d\xc3\x64\xb0\x94\xfd\x1a\x32\x47\xf5\x9b\x21\xc7\x7d\x3f\xf7\xbd\xc9\x8e\x59\xdc\xf7\xb9\x7c\x38\xeb\x06\x4e\x30\x57\xb8\xbe\x91\xa5\x45\x1d\x8d\xa7\x83\x11\xb5\x90\x7c\x50\x32\xec\xd1\x55\x7a\x06\xab\x61\x8f\x5a\x50\x67\xcd\xcf\x43\x9f\x6a\x7f\xaa\xd7\x21\x78\x81\xa8\x9a\x56\x56\xd5\xfe\x69\x52\x3b\xc5\x89\xb7\xc6\xda\x15\x1b\xd6\x4e\xcd\xc1\x72\x0a\xd6\x0d\x52\x76\x0c\x49\x23\x65\xaf\x85\xf3\x55\xb1\x27\x6a\x2a\xbd\x75\x08\x6b\xbb\x8d\x27\xa7\xe0\xfd\x86\x39\x1e\xc7\x63\xde\x3a\x80\x37\x89\x4f\xac\xef\x92\x1b\x7b\x0c\x2d\xe7\xc6\x0e\xd5\xf6\x08\x28\x9e\x80\x95\x4c\xc2\x0c\xcc\x3d\x57\xa0\xd1\xc8\x52\x27\x68\x60\x28\xa9\x43\x14\x53\xde\xb5\x21\x71\x8a\x1d\xe0\x48\x1c\x40\x69\xb4\xa5\x16\x90\x0d\x9d\x24\xaf\xa9\xd1\x06\xfc\x50\x38\xaf\x25\xce\x7f\x0c\xf0\x1c\x55\x1e\x80\xf4\x25\xf9\x9a\x72\x3c\x2e\xc4\xd7\x12\xe1\x41\x29\xc1\x4b\xd5\xf7\x1c\xe5\xb5\x9a\x6b\xfc\x3b\xd6\x3a\x50\x0f\x76\x2b\x0b\x84\x0c\x73\x85\xba\xc1\xf0\xf7\x52\x94\xb5\x8f\x82\x31\x94\x3a\xbf\xa6\x9a\x16\x9f\x84\x8d\xd6\xe0\xde\x48\xe4\x06\x8d\x92\xc2\xe0\x37\xcd\x2d\xea\x29\x68\x98\x34\xf3\xdf\x4b\x34\x76\x0a\xca\x05\xb8\x0b\x94\x8b\x74\x0c\x11\x67\xc0\xdd\x3d\x86\x5a\xbb\x3f\xa9\xc7\xcd\x8d\xa4\xdc\x4d\xe4\xee\x8d\xaf\x37\x97\x1e\x24\xd2\x4d\xf0\xd8\xdb\xf9\x12\x14\x2c\x16\x10\x86\xbd\x2b\x2c\x23\xf5\x05\x40\xbe\x71\x9b\xfd\xce\x31\x67\x51\xe8\x63\xc2\x36\x96\x7c\x12\x4b\x19\x85\x58\x28\xbb\x71\xf9\xd7\xd3\xe1\x38\xd8\xed\x3d\xf7\xa6\x22\xbf\x52\xd6\xa4\x1c\xad\xa7\xd0\x42\xc3\xff\x21\x84\x84\xba\x06\xc3\x1d\xc2\xdb\xb7\x7b\x81\x6e\xd3\x06\xbd\xed\xca\x59\x5d\xd7\x02\x9a\x37\x23\xf9\x60\x25\x8f\x54\x57\x80\x33\xfe\x6f\x01\x82\xe7\x4f\xd7\xe0\xb1\xa7\xa0\xba\xec\x1d\x51\x2e\x23\xc3\x45\xba\xab\x02\x2d\xea\x17\x55\x52\x94\xc6\xd7\x41\x41\x49\xc3\x2d\x5f\xa1\x6b\x06\xba\x27\x59\xea\x0f\x08\x0d\x7f\xa1\x96\x4f\x16\xd9\xcc\x54\xc1\x71\x79\x7c\xe1\x05\x9e\xaa\x0f\xbf\xfd\x2d\x2f\x90\xb8\x55\xfe\x9b\x3a\xa9\x9f\x6c\xb5\x52\x7c\xa9\xd7\x54\x1b\x8c\xc2\xf7\xf3\xf9\xcf\xb3\xf9\xbb\xd9\xfc\xbd\x4b\xeb\x5f\xa8\x1a\xff\x1e\xf3\xe9\x03\x17\xb0\xd9\x6c\x36\xb3\xa2\x98\x31\x06\x4b\xa9\x0b\x6a\x4f\xd5\x8d\xa2\x29\x17\xfe\x00\xf5\x89\x3f\x4f\x39\x63\x88\x94\xfb\x87\xc6\x9f\x26\xdc\x62\x61\xae\x51\x5f\x77\x33\x87\xba\x71\xa6\x05\xbc\xab\x59\xed\xfb\x2f\xe0\xa7\x79\xd0\x92\xcd\x9c\xbc\xb4\x13\x17\xf9\xa3\x44\xbd\x89\xc6\xe4\x02\x6d\x14\xf6\x23\xc2\xf1\x2f\xc0\x5c\x4b\xf6\x34\xd6\xf7\x18\x3c\x07\xd8\x8e\x9e\x63\x5d\x3d\xa6\xd5\x3d\xf4\x29\xb0\xe1\x16\x7f\x77\x09\xef\x9a\x0c\x6f\xfb\x61\x7d\x49\x3e\xd5\xf7\x3d\xac\x13\x4e\x8c\x47\xdd\xaf\x15\xd0\x3f\x24\x8f\x73\xac\x8e\x72\xab\x7e\x00\xa7\xea\x65\x5c\xaa\x97\x70\xa8\x7e\x0c\x77\xbb\x3d\xf4\x77\x00\x00\x00\xff\xff\x89\x82\xde\x80\x22\x11\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 4386, mode: os.FileMode(420), modTime: time.Unix(1605473129, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x13\x8c\x42\x0a\x6c\xea\x3d\x45\x1f\xda\xa6\xcb\x8c\x6d\xed\xd0\x64\xeb\x43\x51\xa0\xb4\x79\x92\x98\x28\xa4\x7b\xa4\xf2\x63\x9a\xfe\xf7\x81\x3f\x2c\xcb\xb6\x9c\xba\x1b\xb6\x61\x7a\xb1\x45\xdd\x1d\x8f\xdf\xf7\xdd\x1d\xdb\x16\x04\x16\x52\x21\x24\x15\x57\xa2\x46\xca\x97\x84\xdc\x62\x4e\xba\xb1\x98\x40\xd7\x55\xec\x17\x6d\x6c\x9a\xe4\xc9\x14\x2a\xf6\xda\x7f\xcd\xda\x16\x50\x09\xe8\xba\x93\x93\x83\x21\x9c\xf3\x09\x00\x40\x9e\x83\xb1\xd4\x2c\x2d\x58\x0d\x0b\xa9\x04\xd8\x0a\x61\xa5\x8d\x85\x85\x16\x8f\x60\x35\xf3\x76\xf6\x71\x85\xd0\xb6\x30\x61\x6f\xf9\x2d\xc2\x1f\xb0\xe4\xb7\x58\x43\xd7\x85\x4d\xdf\xe3\x97\x06\x8d\x5d\xc7\x6a\xbd\x8f\x7b\xda\x36\x3f\x85\x97\x42\x00\xaf\x6b\x28\x24\xd6\xc2\x80\xad\xb8\x05\x4e\x08\x4a\x5b\xc0\x87\x65\xdd\x08\x14\x0c\x4e\xf3\x98\x53\xf0\x03\xe2\xaa\x44\x98\x14\x70\xf6\x02\x26\xec\xfb\xe0\x3b\x1b\xd8\x04\xbb\x19\x4c\xb8\x37\x29\xd8\x4b\xa5\xb4\xe5\x56\x6a\x65\x82\xfd\x05\x2a\x18\x71\x90\x05\x68\x82\xd4\x6d\x3f\xe1\x19\x4c\x78\x84\x6e\xd7\x36\x26\x32\x29\xd8\xa5\x3f\x97\x8f\x09\x5d\x17\x17\xaf\x1e\x57\xe8\xbe\x48\x55\xba\xc5\xcf\xd7\x46\xab\xb3\xa4\x6d\xc1\xf2\xf2\x27\xad\x6f\x9a\xd5\xc6\xf5\x8a\x97\x90\x38\x03\x87\x7c\xe2\x02\xc8\x62\xb3\xf1\x6f\xbc\x96\xc2\x27\xee\xec\xba\xee\x2e\xbc\xa3\x8f\x76\xd0\x2a\xe9\x99\xfe\xbc\x77\xc4\xa8\x80\xdd\xa5\xd9\xd6\xda\x80\x1a\x14\x25\x1e\xcb\xcc\x6c\x4d\x0d\x06\x6a\xde\x78\xdf\x27\x98\xc1\x6f\x61\x86\x2b\x11\xa9\xc1\x80\xf0\xd0\xf7\x87\xa0\xe2\x0b\x54\xec\xf2\x46\xae\x2e\x50\x21\xf9\x4f\x19\xa4\xa3\x94\x66\x87\x38\xc5\x11\x4e\x65\x01\x71\xe3\x5f\x95\xfc\xd2\x38\x3d\x7c\xfc\xd4\x83\x1c\xbc\x7c\x4a\xf3\xf3\xa3\xc8\xc7\xff\x90\xfc\xd9\x08\xfb\x71\xa9\x3b\x59\x97\xfe\x55\x25\x0d\x14\x8d\x5a\xba\xb8\x10\x5a\x83\x01\x0e\x0a\xef\x07\xc5\xde\x75\x70\xab\x05\xd6\x9e\x1a\x63\x35\xa1\x01\x69\x41\x2a\xdf\x2b\x04\xb7\x7c\xc1\x0d\x86\x3e\xe1\x82\xa5\xd5\x96\x73\xe4\x2c\x83\x70\x90\xf4\x1e\x2a\x6b\x57\xec\x3d\x9a\x95\x56\x06\x3f\x90\xb4\x48\x53\x20\x38\x8d\xeb\xbe\x95\x64\x83\x26\x92\xe7\x70\x81\x76\xd3\x99\xdc\x96\xac\xff\x2a\x9c\xc6\x86\xad\xc9\x28\x7e\x83\xbb\xad\xa9\xed\x5c\x18\xab\x85\x86\x99\x53\xbc\xbe\x87\x42\xd3\xed\xac\xa1\x7a\x86\x6a\x29\xb4\x40\x91\x3f\xdc\xd6\xf9\x8a\xb4\xd5\x8b\xa6\xd8\xd9\x45\x16\x80\x44\x6e\x2b\x47\x24\x7b\x8b\xf7\xe7\xb8\xd4\x02\x29\x25\xf6\x4a\x8b\xc7\x8c\x85\xf7\xf4\x99\xc8\x9e\x7b\xd3\xef\x5e\x80\x92\xf5\xe0\x18\xee\xa9\x58\xad\xcb\x12\x89\x7d\x90\xb6\x7a\x43\xa4\x29\x45\xa2\x8c\x85\xbf\x09\xba\x1f\x10\x2e\x92\x13\x96\xd7\x4c\xb6\x15\x80\x50\x09\x24\xf6\x8a\x8b\x78\xb0\xf4\x7e\x0a\x34\x85\x44\x2a\x2f\x1c\xef\xe3\xfa\xb0\x54\xe5\x9e\xab\x6d\x48\xf5\x4b\x51\x06\x11\xe0\xa8\x2f\xec\x39\x1d\x3b\x7a\xc5\xa2\x38\x35\x45\x69\xa7\x4f\x9e\x36\x78\x4e\x41\xdf\x38\x6f\x24\x62\xe9\xe9\x26\xc2\x3c\x64\xbc\x51\xb6\x07\x21\x7b\xee\xcc\xdb\xbd\xa2\x3d\x0a\xb9\x18\xdc\x61\x47\x71\x24\xb9\xb3\xec\x00\x31\xc0\x71\xae\x2c\x92\xe2\xf5\x25\xd2\x1d\x52\x88\x15\x00\x55\xb2\x1e\xf3\xda\x82\x70\x07\xc6\xa7\xd2\x9c\xab\x42\xa7\xc9\x5d\x7f\x56\x28\xb8\xac\x51\x1c\xc9\xae\x0b\x71\x3c\x97\x97\xfc\x6e\x8c\xc7\x45\xa0\x70\x59\x4b\x54\x96\x0d\x4b\x34\xf6\x98\x34\x1b\xeb\xf2\xff\xee\x00\x66\x7b\x98\x5f\xa2\x1d\x1b\xc2\xa9\x60\x63\xcb\xd9\x11\xdd\x70\x6c\x3a\xfe\xbf\x46\xda\x3e\x4a\x71\xab\xe1\xec\xda\xb3\x19\xa0\x19\x13\x89\xfc\xcf\xcf\x23\x9a\xbb\x53\x71\xbf\x02\x3c\xa2\xb5\x39\x18\xff\xa5\x10\x63\xf1\xcd\x81\x0d\x18\x63\x07\xf6\xd8\xa6\xe8\xeb\x64\x6e\x15\x80\x1b\x52\x6e\x40\x6d\x0f\x27\xf7\xe0\x74\xdd\xcc\x16\xcc\xd5\x49\x4a\xec\xb5\x56\x16\x1f\x6c\x9a\x65\xbb\x2d\xef\xaf\xb7\x70\xc3\xef\x5c\x13\x1a\x16\xd9\x78\xa9\x7f\x43\x03\x7a\xba\xe6\x91\x24\xaf\xe5\xef\x63\x85\xef\x75\x5b\x92\x6e\x56\x26\xc8\xfb\x80\xfe\x82\xbe\x2e\x82\xe1\x00\xe4\xeb\x1e\x33\x53\x21\xc9\xa2\x60\x3f\x73\x32\x15\xaf\xd3\x67\xeb\x85\x77\x2b\x1f\xad\x0d\xce\x67\xf0\xf1\x53\x18\x41\xed\x58\x3d\xac\x73\x19\xbd\x9a\xf5\xa5\x58\xfa\x5c\x83\xa9\xbf\xef\x4c\xca\xae\x4b\xa6\x91\xf1\xfd\xda\x0c\xb2\xdc\x5d\x77\x4f\x32\x76\x3b\x38\x23\xe4\x22\xf9\xaa\xc0\xba\x6e\x0a\xf8\xf7\x84\xe1\x5e\xbd\xde\xd3\x64\xab\xe9\xfa\x97\xf9\x79\xaf\x8f\x29\xb8\x9b\x65\x2f\x24\x13\x19\x0d\xe3\xc2\xcb\xea\x1f\x94\xd0\x56\xf2\x7b\xd9\x6e\x60\xeb\xb3\x0c\x03\x6d\xcc\x24\xe6\xb5\x35\xdc\x62\xaa\xef\x7e\x8c\x99\x5d\x67\xf1\x2a\xda\x17\xf0\x9f\x01\x00\x00\xff\xff\xd9\xc3\x4f\x31\xef\x0e\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 3823, mode: os.FileMode(420), modTime: time.Unix(1605259576, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\x09\xa3\x96\x16\x36\xdd\x5e\x53\x18\x45\x76\x9b\xa6\x41\xd3\x26\x4d\xb2\xc8\xa1\xe8\x81\xb6\x46\x12\x1b\x9a\xb4\x87\x54\x76\xb7\x2a\xff\x7b\x41\x4a\xb6\x65\x5b\xf6\xa6\xc0\xf6\x50\x5e\x6c\x91\xc3\x37\x8f\xf3\x1e\x3f\xea\x1a\x32\xcc\xa5\x46\x60\xa5\xd0\x99\x42\x9a\x28\x69\xdd\x84\x4c\xe5\x90\x81\xf7\x25\xbf\x42\x97\xb0\x09\x1b\x41\xc9\x6f\xa4\x75\x69\x5d\x03\xea\x0c\xbc\x3f\x3b\x3b\x32\x3b\xcc\x3b\x03\x00\x98\x4c\xe0\xb1\x94\x16\xf2\x4a\xcf\x9d\x34\x1a\x56\x15\x92\x44\x0b\xb9\x21\xa8\x6b\x18\xf0\x5f\xc5\x02\xc1\x7b\x58\x98\x0c\x95\xe5\xf0\x4e\x68\x98\x21\xe4\x52\x39\x24\xcc\x60\xf6\x29\xce\xf9\x04\x4b\x41\x62\x81\x0e\xc9\xf2\x08\x1d\x20\x93\x72\x07\xe4\xa7\x86\x42\x0a\x81\x66\xf2\x01\x4a\xe7\x96\xfc\x1e\xed\xd2\x68\x8b\x4f\x24\x1d\xd2\x08\x08\xde\xb4\xfd\xab\x0a\xad\x4b\xa1\x8e\x70\xa1\xad\xe0\x7c\x0a\x25\x9f\x2b\x89\xda\xf1\x2e\x32\xff\x2d\x70\x48\xd2\x4d\x68\x5d\x8f\x81\x84\x2e\x10\x06\x18\x66\x0d\xf8\x65\x56\xa0\x5d\xaf\xbb\x27\x4c\x35\x61\x17\x5a\x1b\x27\x42\x2d\x2c\x6f\xf9\x5e\xa1\x8e\x85\xbd\x14\x05\xd2\x1e\xc0\x1a\x44\xe6\x80\xab\x00\x32\xc0\x0d\xa7\x27\xe9\xca\xba\x86\xa5\xb0\x73\xd1\x1d\x48\xd6\x0a\x8d\x0f\xd8\x1c\x74\x77\xb4\x5c\x77\x4d\x26\x70\x27\x0a\xa9\x23\xc9\x4d\xef\x52\x14\x38\x02\xe9\x70\x61\xef\x90\xee\xe2\x17\x12\x35\x15\x5b\x6e\xe2\xaf\x75\x6e\x92\x0f\x23\xa0\x6d\xa9\x02\x75\x22\xf8\x6a\x0a\x5a\xaa\x4e\xb5\x43\x23\x74\x15\x6d\x93\x6c\x79\x75\x34\x99\xc2\x8a\xdf\xc8\x85\x74\x49\x37\x7b\xca\x6f\xf3\xdc\xa2\x4b\x92\xc0\x0c\xc6\xf0\x6d\x0a\x6f\x76\xf8\xa5\x3b\x4b\x7a\x6f\x11\x5c\x89\x07\x66\x02\x67\x5a\xb3\x6d\x87\x39\x38\x93\x19\x18\x83\x46\xeb\x30\x6b\xc7\xbf\xef\x13\x3f\x6f\x54\xfd\x51\xa2\xca\x7a\xd5\x1f\xfc\x69\x8d\x8e\xc2\x9c\x4f\x41\xea\x0c\x3f\x42\x62\x97\x4a\x3a\x48\x9c\x28\x6e\x8c\x79\xae\x96\x30\xc8\xf9\x83\xa3\x6a\xee\x1e\x45\x01\x2c\xcc\x60\x29\xb0\x11\x4b\xe1\x9b\x7d\x4c\x99\x43\xcc\x49\xfc\xfd\xfd\xcd\xda\x96\xcd\x16\x0d\x86\xdd\x64\xf3\x9e\xa5\xdf\x41\x1e\xca\xce\xd8\x5e\xd5\x3b\xa6\x1a\xe4\xfc\xda\xbe\x35\x46\xed\xe7\x59\xb7\x17\x41\x30\x83\x99\x31\xaa\x77\x38\xd2\x99\x4e\x81\x39\xaa\xb0\x2f\xcf\xba\xcd\x60\x0a\x21\xa6\x37\xc0\x03\x2a\x8b\x5b\xb0\x5c\x28\xfb\x59\xb4\x18\x74\x0a\xee\xf8\xf4\x92\x2b\x53\x14\x48\x71\x0b\x5d\x12\x19\x4a\x90\x28\x8d\x9f\x51\xca\xc3\x62\x8e\x20\x4f\xf9\x0f\x38\xab\x8a\x84\xcd\x4d\xa5\x32\xd0\xc6\x05\x1f\xd9\x03\x4f\xb1\xf4\x68\x62\x42\x9d\x21\xf1\xb7\x22\x6b\x8f\x9f\xb8\x57\x46\xc0\x86\x7b\xf9\x86\xb0\xa8\xac\x0b\x27\xe1\x30\x54\x6d\x08\x86\x60\x18\x57\x3c\x3c\x09\xbf\xb3\x9d\x76\x6a\xd2\xdb\xdb\xec\xae\xa7\x12\x09\x93\x78\xde\xdd\x89\xf9\x73\xd8\x4f\xde\xf3\xba\xde\xd8\x32\xd6\xc4\xfb\x64\x96\x1e\xe6\x0e\x27\x48\x2b\x5e\x34\xd3\xb5\x76\xc7\xbc\x24\x37\x47\x86\x75\x34\x37\xfa\x85\x5f\x38\x23\x93\xbc\x7f\x41\xa7\xce\x8d\x6e\xfb\x3f\x89\x29\x34\x48\xed\xb0\xf8\x0c\xee\x7f\xab\xa2\x7c\x85\x8a\x0f\x8e\xa4\x2e\x8e\x09\xf9\x2f\x13\xe6\xaf\x48\xf8\x28\x63\xa9\x7a\xd3\x4d\x26\xf1\x40\xee\xc5\xe8\xb9\xe6\x4e\xde\x6e\x68\x37\x26\x5c\xf1\x0b\xa5\x12\xe2\xef\x8c\x76\xf8\xd1\x25\xe9\xeb\xee\xac\x63\x7e\x6b\xfe\x32\x0c\x3f\x8d\x8b\x42\x05\x33\xe1\xc4\x4c\x58\x64\xe9\x7a\x19\x30\x86\x19\xba\x70\xe1\xc4\xd0\xbd\xfb\x30\x5a\xea\x5a\x3b\x24\x2d\xd4\x03\xd2\x0b\x52\x03\xdc\x78\x4b\x4b\x95\x9e\xbe\x41\xbb\x8b\x1f\x14\x64\xaa\xa5\x3d\xf9\xf2\xb8\x47\x91\x5d\x35\x61\x9d\x3a\x66\xdb\xad\x5a\x22\xc9\x3c\xe7\xbf\x08\xb2\xa5\x50\xc9\xd7\xeb\x8e\xdb\x65\xc4\xaa\x9b\xc9\xe7\xf0\xfb\x1f\x36\x9a\xa6\x3e\xb8\x03\x83\xc6\xc5\x41\x8a\x6e\x44\x7b\x9b\x16\x91\x69\x13\xea\x3d\xab\xeb\x41\x11\x76\xeb\x89\xe7\x4c\xb0\xd0\x7e\x7f\x68\x6c\xfb\x7a\xfb\x1b\xac\x16\xcf\xc1\x5c\xe7\xf1\x6d\x7a\x40\x6f\x1f\xdb\xfb\x11\xa0\xfd\x22\x66\xb0\x48\x52\x28\xf9\x57\x2c\x7b\xa3\x37\xdb\xd7\xef\xcb\x29\xbe\x43\xa6\x3d\xfa\xc4\xc2\x54\xda\xb1\x11\x28\xd4\x09\xda\x34\xe5\xf1\x89\xd6\x5b\x9f\x96\x0c\x66\x1d\x8e\x2d\xbf\xdb\x9f\x5b\x3a\x59\x33\xe4\xcf\xea\x1a\x75\xe6\xfd\x3f\x01\x00\x00\xff\xff\x4d\x06\x7b\x80\x40\x0c\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3136, mode: os.FileMode(420), modTime: time.Unix(1605261122, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\xcc\x12\xc6\x42\xda\x95\xe9\xbb\x81\x1c\x16\x9b\xdd\xac\xb1\x68\xd3\xa6\x05\x72\x68\x7a\xa0\xc3\x91\x48\x94\x1e\xd9\x43\x2a\x69\xca\xf2\xbf\x17\xa2\xe4\x58\xce\x47\xd1\x39\x89\xa3\x37\x8f\x8f\x7c\x8f\x31\x82\xc6\xda\x12\x82\x30\x8a\xb4\x43\x5e\x32\x2a\xbd\xe4\xb6\x0b\x28\x20\x25\x23\x2f\x30\x14\x62\x19\xad\x5e\xdd\xdc\xe8\x3f\x93\xa8\xc0\xc8\x2b\x54\xba\x8c\x11\x90\x34\xa4\x34\x9b\xbd\x42\xd3\x13\xcc\x00\x00\x96\x4b\xf8\x68\xac\x87\xba\xa3\xdb\x60\x5b\x82\x1a\xc3\xad\x41\x0f\xc1\x20\xc4\x08\x73\xf9\x56\x6d\x11\x52\x82\x6d\xab\xd1\x81\xd5\x48\xc1\xd6\x16\x35\x6c\x1e\x40\x41\x63\xef\x10\x3a\x76\x8b\x9d\x62\xb5\xc5\x80\x0c\x35\xb7\xdb\x03\xb7\x56\x41\x6d\x94\x47\x50\xa4\x81\x31\x74\x4c\x1e\x6c\x80\xd0\xe6\x0d\x6e\x9d\x45\x0a\x32\xa3\x7b\x05\x85\x39\xd9\xf3\xbf\x41\x71\x09\xfd\xa9\x8a\x7b\x30\x21\xec\xe4\x15\xfa\x5d\x4b\x1e\xaf\xd9\x06\xe4\x0a\x18\xfe\x18\xfb\xfb\x0e\x7d\x28\x21\x66\xba\xbe\xac\xae\x00\x99\x61\x75\x06\x46\x76\xec\xde\xf5\x1a\xd7\x14\x8a\xfb\x0a\xb8\x02\x61\xb5\x28\x8f\xe0\x3a\x63\x7f\x3b\x03\xb2\x6e\x42\xd2\xd7\xa0\xfc\xb1\x95\x66\x8f\x9f\xfb\xcd\xc0\x3e\x9e\x64\xaa\x5e\xbe\xef\x90\x1f\x8a\x52\x5e\x1b\x64\x2c\x8e\xbf\xbe\x83\x27\xf5\x25\x43\xd6\xe7\x85\xd5\xe5\x51\x44\x8c\x10\x70\xbb\x73\x2a\x20\x88\xec\xf7\x7e\x23\x60\x7e\x70\xab\x2f\x7c\x3c\xd3\x7e\x23\x2f\xc9\x3d\x14\x2c\xff\x6e\x29\xe0\xd7\x50\xfc\x94\x09\x99\x5b\x5e\xe4\x14\x58\x6a\x46\xd6\x29\x7e\xde\x70\xdb\xed\x7c\x4f\x3d\x97\x7f\x11\xb5\x41\xf5\x91\xf0\x72\xf4\xe1\x02\x29\xe7\xeb\x62\x80\x4d\x34\x1d\xef\xd9\x1b\x64\x5b\xd7\xf2\x8d\x62\x6f\x94\x2b\x7e\x3f\x34\x2e\x77\x99\x2b\x0e\xc3\x2b\xf8\xf4\xd9\x07\xb6\xd4\x9c\x5e\x74\x8c\x8b\xde\x88\x83\x92\xc9\x16\x53\x04\x2b\x6a\x10\xe6\x4d\x56\x3a\x40\x53\x12\x31\xce\x9b\x94\x44\x35\xa6\x7f\xf1\x64\xb8\x6f\x3b\x8f\xcf\xfa\x7d\x89\x97\xcc\x59\xe5\x87\xf2\x4c\xde\x53\xee\x94\x2a\xc0\x5f\x8b\x91\x91\xae\x6d\x1a\x64\x79\x6d\x83\xf9\xa7\xb7\xa3\x40\xe6\x32\x2f\xff\xb5\xe8\x74\x21\x4e\x02\x94\x17\xeb\xf3\xc3\x5a\x54\x60\x75\x29\x87\x41\xe1\x91\xad\x72\xf6\x5b\xf6\x08\xb2\xb9\x93\x34\x0f\xa9\x25\x8d\x2c\xd7\x14\x90\x49\xb9\x0f\xc8\x77\xc8\xc3\xf4\xf0\x00\xc8\xba\xa7\x13\xaf\xe5\xfc\x44\xfa\x33\xad\xc7\x4b\x13\x15\xa0\x5c\x9f\x97\x72\x4d\x75\xfb\x32\x64\xd4\x85\xd3\xc7\x37\x4a\xbd\xfc\x7f\x54\xa6\x87\x5f\x69\x16\x23\x92\x4e\xe9\x47\x00\x00\x00\xff\xff\xab\xc5\x06\x30\x0e\x05\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1294, mode: os.FileMode(420), modTime: time.Unix(1605261327, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x4b\x6f\xe3\x36\x10\xbe\xe7\x57\x4c\x09\xa3\x10\x53\x99\xba\x07\xd8\xc3\x62\x37\x4d\x8d\x3e\xd2\x6e\x5b\xe4\xd0\x2d\x0a\xda\x1c\x4b\x44\x19\x4a\x1e\x52\xdd\xa6\x2a\xff\x7b\x41\x52\x8e\xe5\x58\x4e\x5f\x58\xb4\x87\xe5\xc9\xa2\xe6\xf1\xcd\xcc\x37\x9f\x3c\x0c\xa0\x70\xab\x2d\x02\x6b\xa4\x55\x06\xa9\x72\xfd\x9a\xd0\xb5\x3d\x6d\xb0\xaa\xd1\x57\xd4\xf6\x1e\x19\x2c\x43\xb8\x00\x00\x18\x06\x20\x69\x6b\x84\x05\xc2\xd5\x0b\x58\x88\x6b\x55\xa3\x7b\x7c\x1d\x4f\x23\x6e\xd0\x17\xac\x1a\xb4\xba\x7a\xfb\x56\x7d\x12\xaa\xe8\x84\x9d\x91\x1b\x84\x62\x81\xe2\x2b\x79\x8f\xf0\x3b\x38\x2b\x7f\x46\x0e\xec\x27\x06\x6c\xc9\x20\x04\x56\x42\x23\x86\x01\x0e\x26\x9d\x74\x1b\x69\x20\x04\xbe\x4f\x8e\x56\xa5\x64\x93\x9f\x17\x7f\x5e\x45\x8c\xfe\x1c\xfc\x09\xfa\x61\xa8\x2e\xe1\x0d\x4a\x55\x7d\xa1\x9d\x87\xb6\x43\x92\x5e\xb7\xd6\x41\x6b\x21\x87\xcd\x71\x1d\x5c\x56\x13\xbf\x6d\x6f\x37\x45\x13\x13\x2c\x32\xfa\x10\x3e\xcb\x60\x38\xcc\xd7\x54\xbc\x83\xc6\xfb\x4e\xbc\x41\xd7\xb5\xd6\xe1\x1d\x69\x8f\x54\x02\xc1\xe5\x78\xbf\xeb\xd1\x79\x0e\xc3\x63\x92\x78\xb4\x2a\x01\x89\x22\xfc\x46\xf4\x64\xbe\x96\x24\xef\x57\xd6\x17\xef\x4a\xa0\x12\x98\x56\x8c\x1f\x39\x24\xa7\x6d\xf2\xf9\xe8\x05\x58\x6d\x9e\x04\x8c\x87\xd0\xf7\x64\x8f\xae\xc3\xd1\xd3\x6e\x9d\x13\x6e\x8c\x46\xeb\xc5\xb4\x4c\xf1\x4d\x8f\xf4\x50\x70\x71\xd7\x20\x61\x71\x78\x35\x8e\x38\x9a\xac\x5e\x17\x5a\x71\x9e\x4d\xcf\xb4\x83\x5f\x1c\x65\x1c\x86\x88\x7a\x81\xe2\x7b\xab\x77\x3d\x4e\x67\x34\x31\xf1\x78\xdf\x19\xe9\x11\x18\xc5\x99\xed\xd6\x2c\xba\x7c\xf7\xd0\xcd\x3a\xe0\x63\xeb\x76\x6b\x71\x6b\xcd\x43\x41\xe2\x55\x6b\x3d\xfe\xea\x0b\x7e\xda\xb5\xd3\xf8\x48\xd4\xd2\x32\xb1\x4c\xdb\xfa\x28\xd7\x9c\xf7\xa2\xa6\xb6\xef\x5c\xa2\x1a\x8a\x97\xd6\xb6\x3e\x93\x49\x8c\xdc\xb8\x41\x2b\x22\xd9\x6e\xb2\xdd\x0c\xe4\xc3\xb4\x5d\x83\xa4\xb7\x5b\xf1\xa5\x24\xd7\x48\x53\x7c\xbc\xbf\xb8\xed\x52\xcc\x21\x07\xb9\x82\x1f\x7e\x74\x9e\xb4\xad\x4f\xc7\x9c\x61\x2d\x53\x63\xeb\xb3\x29\xa7\x96\xe3\xb6\xd4\xa9\x84\xec\x12\x02\x1b\x86\x45\x1d\xf7\x75\xb2\x85\xf3\x01\x00\x8d\xc3\xb3\xef\xe3\x61\x99\x0d\xb1\x8b\x4f\x59\x73\x15\x5b\xce\xce\x16\x71\x2e\x73\x08\x25\xe0\xdf\x5f\x01\x48\xd2\x65\xda\xba\x46\x12\x77\xda\x37\xd7\x71\xd6\x05\x12\xf1\xf4\xf8\xa9\x46\xa3\x8a\x13\xb8\x21\x88\xc9\xd5\xea\xf5\xfe\x96\x95\xa0\x15\x17\x39\x08\x73\x48\x5a\x1a\xfd\x5b\x9a\x3e\x24\x16\xcd\x6c\x29\xa4\x4d\xb4\x0a\x49\xac\xac\x47\xb2\xd2\x7c\x8b\xf4\x0b\x52\x8e\x92\x17\xdc\x6a\x73\xce\xf3\x64\x87\x53\x3b\x4e\x99\x79\x54\xe6\x99\xba\x0e\x63\x60\x25\xc4\xc2\xb8\x58\xd9\x6d\xfb\x9c\xe1\x88\x1d\xe7\x04\x68\x2c\xeb\xf6\xf3\xb1\x0a\xc5\x9f\x2e\x7b\x62\xca\xec\x92\x57\x97\xe0\x5b\xd5\xc2\x12\x7c\xa3\x1d\x68\x07\x12\x4c\x14\xe7\xf4\x6d\x12\x70\x6d\xe5\xda\x20\xec\xa2\xb6\xc0\x56\x1b\x8f\x91\xfd\xe2\x58\x9f\xf7\x07\xdd\x54\x03\x5e\x1a\xf3\xbc\x04\xfc\x1b\xd6\x8c\xb3\x4f\xd3\xce\xe8\xb4\xad\x41\x49\x2f\xd7\xd2\x21\xe3\x50\x55\xfb\xc2\xd6\xe8\x3d\x52\x26\xc6\x7f\x46\x8b\x13\xc1\x4a\x43\xfe\xa0\x5a\x33\xe7\x39\xd5\x8a\xd4\xfc\x87\xaa\xe5\xde\x0b\x01\xff\xff\xe2\x23\xef\xdb\xde\x7a\x56\x82\x41\x5b\xa0\xe3\xef\x5d\x6b\xac\x9a\x52\x68\x82\x32\xa9\xcd\x2b\xc2\xf8\xc9\xff\x4b\xff\xfd\x0e\xd1\x1e\x7f\xfd\x11\x00\x00\xff\xff\xc4\x0a\x3c\x3e\x56\x0b\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 2902, mode: os.FileMode(420), modTime: time.Unix(1605473174, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x13\x8c\x42\xca\x6c\xfa\xdd\x45\x1f\xda\xa6\xf3\x8c\x6d\xed\xd0\xb4\xeb\x43\x5b\xa0\xb4\x79\x92\xd8\xc8\xa4\x7a\xa2\x9c\x66\x9a\xfe\xf7\x81\x3f\x22\xcb\xb2\x9c\xb9\x18\xb6\x61\x7a\x49\x48\xdf\x1d\x8f\xdf\xf7\xdd\x1d\x9b\x06\x04\xa6\x52\x21\x44\x39\x57\xa2\x40\x9a\xd7\xa5\xe0\x06\xe7\xa4\x6b\x83\x11\xb4\x6d\xce\x96\x68\xe2\x68\xde\x48\xb1\xf8\xf0\x41\x7c\xdf\x46\x53\xc8\xd9\x5b\x67\x95\x34\x0d\xa0\x12\xd0\xb6\x17\x17\x27\x43\xd9\x20\x17\x00\x00\xf3\x39\x54\x86\xea\x8d\x01\xa3\x61\x2d\x95\x00\x93\x23\x94\xba\x32\xb0\xd6\xe2\x0e\x8c\x66\xce\xce\xdc\x95\x08\x4d\x03\x13\xf6\x92\x6f\x11\xfe\x80\x0d\xdf\x62\x01\x6d\xeb\x0f\x7d\x8d\x5f\x6a\xac\xcc\x7d\xac\xc6\xf9\xd8\xaf\x69\xe6\x97\xf0\x54\x08\xe0\x45\x01\xa9\xc4\x42\x54\x60\x72\x6e\x80\x13\x82\xd2\x06\xf0\xeb\xa6\xa8\x05\x0a\x06\x97\xf3\x90\x93\xf7\x03\xe2\x2a\x43\x98\xa4\xb0\x78\x02\x13\xf6\x83\xf7\x9d\xf5\x6c\xbc\xdd\x0c\x26\xdc\x99\xa4\xec\xa9\x52\xda\x70\x23\xb5\xaa\xbc\xfd\x12\x15\x8c\x38\xc8\x14\x34\x41\x6c\x8f\x9f\xf0\x04\x26\x3c\x40\x37\xb4\x0d\x89\x4c\x52\x76\xed\xee\xe5\x62\x42\xdb\x86\xcd\x37\x77\x25\xda\x5f\xa4\xca\xec\xe6\xa7\xcf\x95\x56\x8b\xa8\x69\xc0\xf0\xec\x67\xad\x6f\xea\x72\xef\xfa\x86\x67\x10\x59\x03\x8b\x7c\x64\x03\xc8\xd4\x1e\xfc\x9c\x90\x1b\xfc\x8d\x17\x52\xb8\xc4\xad\x5d\xdb\xee\xfc\x1a\x5d\xb4\x93\x56\x51\xc7\xf4\xa7\xa3\x2b\x06\x05\x0c\xb7\x66\x07\x7b\x3d\x6a\x50\x64\x78\x2e\x33\xb3\x7b\x6a\xd0\x53\xf3\xc2\xf9\x3e\xc0\x0c\x7e\x0b\x33\x5c\x89\x40\x0d\x7a\x84\xfb\xbe\x3f\x7a\x15\x2f\x51\xb1\xeb\x1b\x59\x2e\x51\x21\xb9\x9f\x12\x88\x07\x94\x7a\xcc\x92\x53\x9c\xe2\x08\xa7\x32\x85\x70\xf0\x5b\x25\xbf\xd4\x56\x0f\xef\x3f\x76\x20\x7b\x2f\x97\xd2\xea\xea\x2c\xf2\xf1\x3f\x24\x7f\x36\xc2\x7e\xd8\x6a\x2f\xee\x4b\xff\x4d\x2e\x2b\x48\x6b\xb5\xb1\x71\xc1\xb7\x86\x0a\x38\x64\x72\x87\xaa\x57\xee\x6d\x0b\x5b\x2d\xb0\x70\xe4\x54\x7c\xe7\xa4\x82\xb0\xc9\xad\x0e\x2a\x90\xca\x2d\x05\x37\x7c\xcd\x2b\xf4\x1d\xc3\x86\x8d\xf3\x83\x20\x81\xbd\x04\x7c\xb9\xc5\xb7\x90\x1b\x53\xb2\xd7\x58\x95\x5a\x55\xf8\x8e\xa4\x41\x9a\x02\xc1\x65\xd8\x77\x4d\x25\xe9\xb5\x13\x29\xa6\x80\x44\x56\x55\x39\xab\xa9\xf8\x95\x13\xdf\xae\x94\x89\x6f\xa7\x40\x53\x88\xa4\x88\x92\xbd\x71\xea\x6c\xbf\x7b\x02\x4a\x16\xbd\x20\xf6\x23\x34\x35\xa9\x6e\x2b\x40\x12\x60\x59\xa2\xd9\xb7\x41\x7b\x2b\xd6\xfd\x2a\xec\xd1\xfd\x3e\x58\x29\x7e\x83\xc3\x3e\xd8\xb4\x36\x8c\xd1\x42\xc3\xcc\x96\x97\xbe\x85\x54\xd3\x76\x56\x53\x31\x43\xb5\xd1\x02\xc5\xfc\xeb\xb6\x98\x97\xa4\x8d\x5e\xd7\xe9\xe0\x90\x90\xf8\xe2\x09\x58\xd1\xb0\x97\x78\x7b\x85\xd6\x89\x62\x62\xcf\xb4\xb8\x4b\x98\x5f\xc7\x8f\x44\xf2\xf8\xf4\x1d\x73\x56\xe8\x2c\x43\x62\xef\xa4\xc9\x5f\x10\x69\x8a\x91\x28\x61\xfe\xdf\x08\xed\x1f\x10\x36\x92\x15\xb1\xd3\x67\x32\x00\x49\x09\x24\xf6\x8c\x8b\x70\xaf\x0e\x66\xe5\x44\xea\x7c\x6c\xcf\x97\x2a\x3b\x72\x7d\x00\xdf\xa0\x65\xec\x54\x33\x76\xf5\x9c\x85\x42\xd0\x14\xca\x28\x7e\xf0\xb6\xde\x73\x0a\xfa\xc6\x7a\x23\x11\x8b\x2f\xf7\x11\x56\x3e\xe3\x7d\x15\x39\x10\x92\xc7\xd6\xbc\x39\x6a\x10\x67\x21\x17\x82\x5b\xec\x28\x8c\x3f\x7b\x97\x01\x10\x3d\x1c\x57\xca\x20\x29\x5e\x5c\x23\xed\x90\x7c\x2c\x0f\xa8\x92\xc5\x98\xd7\x01\x84\x03\x18\x1f\x4a\x73\xa5\x52\x1d\x47\xbb\xee\xae\x90\x72\x59\xa0\x38\x93\x5d\x1b\xe2\x7c\x2e\xaf\xf9\x6e\x8c\xc7\xb5\xa7\x70\x53\x48\x54\x86\xf5\x9b\x40\x98\xb5\xaf\x14\xae\xae\x62\x29\x92\xb1\xc1\xf2\xaf\xcc\x7c\xdf\x57\x6d\x46\x47\xd0\x5f\xa3\x19\x9b\xfb\xb1\x60\x63\xdb\xc9\x19\x0d\x78\x6c\x20\xff\x1f\xa6\x68\x78\x53\x8e\xa2\x14\x8e\xea\x8f\xcb\x23\x9b\x1e\x9a\x21\x91\x20\x83\xd5\x55\x40\x73\x38\x88\x8f\x0b\xc1\x21\x5a\x54\x27\xe3\x3f\x15\x62\x2c\x7e\x75\xe2\x00\xc6\x58\xe2\x1e\x3f\xfb\x16\x4d\xb8\xd5\x3b\x04\x39\x7c\x9c\xfa\x39\x18\xc6\x5b\xc9\xcd\x26\x9f\x59\x99\x1f\xbc\x87\x86\xbc\x8f\xf0\x71\x5a\x0e\x47\x95\x24\xd5\x60\x8c\xda\x0f\xbb\xa1\xb7\x66\xd6\x2a\x26\xf6\x5c\x2b\x83\x5f\x4d\x9c\x9c\x37\xee\xce\x6a\x68\x15\xdf\xd9\x66\xd6\x2f\xd6\xf1\x96\xf1\x0d\x8d\xec\xe1\xde\x81\x24\x79\x21\x7f\x1f\x6b\x20\x4e\xf8\x19\xe9\xba\xac\x7c\x7d\x9c\x10\xb0\x17\xe8\xd2\x1b\xf6\x30\xfe\xdc\x61\x56\xe5\x48\x32\x4d\xd9\x2f\x9c\xaa\x9c\x17\xf1\xa3\xfb\x8d\x57\xa5\x8b\xd6\x78\xe7\x05\xbc\xff\xe8\x47\x59\x33\x56\x50\xf7\xb9\x9c\x60\x3e\xd4\x72\xe6\x72\xf5\xa6\xee\x8d\x36\xc9\xda\x36\x9a\x06\xc2\x8f\x8b\xdb\xeb\x7a\xb8\x6f\xbf\x68\xec\x91\xb1\x20\xe4\x22\xfa\x4b\x7d\xb5\xed\x14\xf0\xef\x09\xc3\x2e\x5d\xc1\xc4\xd1\x41\xf3\x76\x8b\xd5\x55\xa7\x8f\x29\xd8\xd7\x70\x27\xa4\x2a\x30\xea\xc7\x8e\x93\xd5\x3f\x28\xa1\x83\xe4\x8f\xb2\xdd\xc3\xd6\x65\xe9\x07\xe3\x98\x49\xc8\xeb\x60\x48\x86\x54\x5f\xfd\x14\x32\xfb\x9c\x84\xe7\x73\x57\xbf\x7f\x06\x00\x00\xff\xff\xba\xde\x85\xb6\xab\x0f\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 4011, mode: os.FileMode(420), modTime: time.Unix(1605261327, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\xcf\x6e\xdb\x3c\x10\xc4\xef\x79\x8a\xf9\x04\x1f\xa4\xc0\x96\xef\x01\x82\x0f\x05\xf2\xa7\x06\x8a\x1c\xea\x02\x3d\xd3\xe2\x8a\x62\xca\x2c\xe5\xd5\x2a\x41\x20\xe8\xdd\x0b\x49\xb6\x21\x38\x69\xd1\x8b\x75\x5b\x72\x38\x3b\x3f\x72\xd5\x75\xb0\x54\x7a\x26\x24\x42\xc6\xae\xf7\xbb\x04\x7d\x7f\x05\x00\x5d\xb7\xbe\xc6\xa6\x44\x64\x42\x2c\xa1\x15\xc1\xf9\x57\x62\x54\x86\x6d\x20\x81\x93\xd8\xd6\x0d\x7c\x83\x86\x14\x91\x47\x09\x59\x47\x20\xe3\x48\xf0\x1c\x3d\xc3\x6b\x7e\xbd\x9e\x3b\x6a\xb4\x11\x2b\x30\x35\x4a\xf6\xa0\x0c\xd1\x58\xcf\xee\x7f\xcc\xa4\x2b\x88\x61\x47\x58\x10\x6e\x6e\xb1\xc8\xef\xad\xa3\xe6\x98\xed\x4c\xe2\x26\xc9\x17\xe6\xa8\x46\x7d\xe4\x26\xff\x3a\x85\x7c\x24\xce\xbf\x93\xb1\x8f\x53\xd6\xd9\xf1\xf3\x2e\xa3\x47\x53\x07\xaf\x48\xd5\xb8\x6f\x31\xfe\x6a\x6b\x2c\x28\xdf\xaa\xb4\x85\xfe\x30\x0e\xc9\x44\x9c\x64\x48\x96\xc9\xb9\xd7\xd1\xcf\x97\xa0\xfd\x10\x69\xb0\xec\xfb\xfd\x2e\xff\xe9\xb5\xea\x3a\xd4\xa6\x29\x4c\x18\x1c\x9f\xcc\x0b\xa1\xef\xd3\xac\xeb\x40\x6c\xb1\xfa\x24\xd6\xb0\x7e\x06\x3b\x5b\x9a\x95\x07\x8f\xbe\xbf\xba\x3a\x7f\x4c\x12\x89\xb2\x1a\x9f\xcb\xb3\x3b\x25\x1e\x12\x8a\xe0\xbf\x5b\xb0\x0f\xe8\x4e\x3d\x9a\x37\xaf\x45\x35\xec\xe5\xa9\xbe\xd7\x94\xcd\xf6\x86\xaf\x30\x0d\xe1\x9a\x58\xf3\xa7\xa8\x0f\xb1\x65\x7b\x3f\x34\xb8\xf9\x70\x0d\x55\x1e\xa2\x73\x24\x23\xf9\xa8\x49\x49\x24\x1b\xcb\x07\x4f\xc1\xa6\x49\xd7\x61\x71\xbc\x87\x7c\x2c\x36\x77\xc7\x3a\x59\xc2\xdb\x2c\xbf\xa3\x5d\xeb\xd2\xe4\x39\xee\xc0\x51\x51\x0e\x0d\x93\xec\x43\x33\x21\xb6\x24\xa7\x48\xe9\xdb\x12\xb2\x1c\x20\x3e\x93\x6a\x2b\xfc\x67\xa6\xad\x67\xd7\x06\x23\x17\xc5\x9a\x0e\x26\xb6\xad\x83\x2f\x8c\x12\x88\x55\xde\x51\x46\x81\xff\x0b\xdf\x86\x95\x84\x4d\xd8\x92\xbc\xd2\x94\xf0\x80\xca\x3e\xfc\x13\xaa\xa5\xd2\xb4\x41\x2f\xcc\x35\xce\x1c\x4a\xd2\xa2\xf2\xec\xc0\xd1\x12\x4a\x89\x2f\xb0\xbb\x4b\xc1\x4d\x53\x3d\xff\x13\x7e\x07\x00\x00\xff\xff\x49\xc9\x45\x9b\xd6\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1238, mode: os.FileMode(420), modTime: time.Unix(1605260297, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":          &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl": &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"model.tpl":           &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
