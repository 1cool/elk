// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xdd\x6e\xdc\xb6\x12\xbe\xcf\x53\xcc\x11\x16\x58\x29\xb0\xb5\xe7\xda\xce\x1a\xc1\x71\x8e\x81\x14\x49\x11\x34\xce\x55\x10\x04\xb4\x38\x92\xd9\x50\xa4\x4c\x52\x49\xb6\x8a\xde\xbd\x20\x29\xed\x52\xbf\x71\x52\xb4\xf5\x8d\x77\xc9\xe1\xfc\x7c\x33\xf3\x71\xb8\x4d\x03\x14\x73\x26\x10\xa2\x8c\x33\x14\x26\x82\xb6\x7d\x02\x00\xd0\x34\x60\xb0\xac\x38\x31\x08\xd1\x3d\x12\x8a\x2a\x82\xf3\x6e\x93\x95\x95\x54\x06\xb6\x15\xc9\x3e\x91\x02\x2f\x28\x93\x3b\xca\x64\x4a\x89\x32\xdb\xcb\x59\x91\x9c\xd7\xc6\xa0\xda\x7d\x61\xb4\x40\xa3\xd7\x44\x7f\xd7\x52\x7c\x24\x42\x48\x43\x0c\x93\x62\x37\xfa\xbe\x76\xb4\x52\xf2\x33\xa3\xa8\x76\xfd\x87\x5e\xb8\x8b\x69\xf7\x14\x5e\xfa\x23\xe6\x1e\x21\xab\xb5\x91\x25\x58\x11\x30\x87\x0a\x75\x0a\x4f\x77\xa7\xf8\x15\x11\x05\xc2\x26\xbd\x3d\x54\xf8\x9a\x54\x15\x13\x85\x3e\x42\x10\x5a\x6f\x1a\x48\x3b\xb5\x6d\xdb\x79\xe6\x75\x9c\x03\xcb\x21\xbd\x96\xe2\x33\x2a\x83\x0a\xda\x36\x3c\x13\xae\x6f\x2f\x9b\x06\x50\xd0\xa3\x81\xee\x6b\xdb\xce\xfb\x2e\x24\x45\x60\x46\x23\xcf\x81\x08\x0a\x84\x73\x90\xb9\xdb\x42\x5a\xa0\x06\x43\x54\x81\xc6\xc9\x69\xd8\x81\x4f\x6f\x18\x61\xef\x49\x9a\xee\x4a\x49\x91\xef\x9a\x06\x36\xe9\xaf\xa4\x44\xf8\x06\x5a\x90\x4f\x08\x6d\x1b\x82\x7d\x82\x04\xe1\x62\x0f\x9b\xf4\xff\xce\xd0\x1c\x22\x03\x9d\xe8\x10\x5c\xd3\x3c\x3a\xea\x7d\x7d\xe4\xd9\x39\x9c\x7e\xd1\x52\xbc\x45\xc5\x08\x67\x7f\x90\x3b\x8e\x50\xd5\x46\x3b\x6c\x0a\x14\xa8\x88\x41\x0a\x99\x03\x50\x80\xb9\x67\x1a\x72\xc6\x31\x80\xa6\x22\x5d\x8a\xa6\x78\x14\xd3\x8a\x7a\x6d\xb7\xac\xf2\x5a\x75\x39\x60\xda\xe7\x87\x64\x19\x6a\xcd\xac\x07\x46\x82\x34\xf7\xa8\x7c\xb5\x59\x7b\x61\x2e\x32\x29\xb4\x81\x39\x83\xef\x14\x87\xbd\xf3\x25\x56\x58\x71\x92\x21\xc4\x43\xa1\x04\xa2\x8f\x11\x44\xe7\x51\x02\xdf\xa0\xe2\xb5\x22\xdc\x97\xe1\xc9\xc3\x5b\x5b\xec\x0e\x54\xc8\xa5\x02\x02\x2e\x39\x29\x5c\x4b\xa1\xeb\x12\xc7\xd0\x90\x8a\x85\xbe\x71\xa2\x75\xe0\x5b\xdb\x5e\x7b\x55\x4d\x50\xe8\xe3\xcd\xb8\x79\xae\xf0\xa1\x66\x0a\xa9\xc3\x23\xa5\x4c\xb6\x09\x5c\x00\xd1\x1a\x95\x89\x29\x93\xf0\x9f\x3d\x88\x9a\xf3\xa4\xf3\xd4\xfe\xe5\x4c\x10\x0e\x2f\x98\x04\xca\x64\xb0\xee\xa2\xb8\x61\xb6\xce\x41\x33\x51\xf0\xae\x01\xee\x0e\xc0\x68\xe0\xab\xfd\xbb\xa9\x4d\xad\xf0\x59\xe8\xd3\x95\x55\x4c\x63\xb7\xf4\xf2\x85\x2b\x29\xf8\xe6\x32\xe1\x3e\xb6\x2d\x30\x9a\x00\xd1\x07\x91\x05\x51\x9d\x1c\x52\xb0\x07\xf2\x85\x30\x63\xdd\x4a\x0b\x34\xf1\x76\xb7\x59\xc8\xd6\x6e\xc3\xe8\x36\xb9\x1c\x68\x51\x68\x6a\x25\x06\x30\xa5\xb9\x92\xa5\xad\xd3\xd8\x72\x94\x21\xc1\x89\x76\x14\xf7\x2b\xa6\x0d\x94\x35\x37\xac\xea\xe2\x76\x05\x6b\xd0\x82\x7b\x77\x80\x87\x1a\xd5\xc1\xd6\x2c\x29\xf5\x3c\x16\x56\xc3\x10\x90\x2b\xe0\x4c\x9b\x78\x18\x2c\x13\x06\x2a\x52\xe0\xd9\x64\x95\x19\x2c\xf5\x1b\x54\x6f\x26\xbb\x96\xe3\x3a\x56\xc8\x3d\x2b\xdc\x30\xe4\x54\x43\xe0\x45\x28\xbb\xb1\x6c\xee\xbc\xb8\xd8\x03\x13\x14\xbf\x42\xac\x2b\xce\x0c\xc4\x86\x14\xaf\xa4\xfc\x54\x57\xb0\xc9\xd3\xb7\x46\xd5\x99\xb9\x25\x05\x44\xf6\x44\x94\x40\x74\x16\x25\xf0\xdf\x79\xbd\xf6\xc4\x4c\x56\xed\xc6\xd1\x5e\xdb\x8e\x3d\xef\x89\xe3\x08\xfc\x5a\x0d\x78\x7c\x61\xdf\xf7\x6a\x1b\x94\xa7\x83\x29\x87\xd8\x82\x77\x2c\xeb\x91\x16\xf0\xbc\x42\x4a\xfd\x7e\x6b\xe5\xb6\x1f\x60\xef\xd0\x1e\x96\x4a\x3b\xd5\x1a\x82\xff\x18\xed\xa1\xbc\xb3\x12\x2e\xac\x5a\x3b\x31\xfc\xbf\x96\x4b\x1b\xf0\x28\x6d\x6b\x31\x87\x71\x8f\x8e\xb9\xd0\x47\x6b\x97\x13\x05\xed\x42\x4d\xfc\x45\x16\xd8\x26\x33\xe5\xe1\x3b\x1d\xf6\xcb\xe1\x74\x44\xf1\xfe\xc3\x6a\x9a\x3a\xa9\x5e\x1f\xd1\x8e\x22\x92\xb4\x24\x55\x1c\xb3\x04\xf6\x57\x0b\x54\xc3\x92\x24\x35\xd2\x0a\xc7\x2b\x7c\x73\xad\xd0\x4e\x7d\x04\x04\x7e\xf1\x34\x2b\x85\xbb\x21\x14\x96\xd2\xe0\x63\xe8\x36\x73\x2a\xe2\xc1\xbd\xe0\x96\x7e\xc3\x87\x1a\xb5\x01\x85\x0f\x8f\x27\xdc\x4a\xea\x55\xac\xcf\xc0\xe2\x70\x61\x95\xa6\x46\xba\x48\x93\x79\x06\x8e\x57\x29\x78\x05\x93\x77\x15\xed\x30\xf9\x29\x3c\x6a\x77\x7c\x60\xdd\x6b\xfc\x39\x3c\x88\xc9\xee\x57\xaf\xa0\xc6\x42\xd1\x5f\x77\x9d\xc1\xf6\x9f\xc0\xe9\x06\x4d\x76\x7f\x1c\x50\xb5\x9f\x45\x47\x08\xcd\xcf\x91\x23\x2e\x38\xc1\xc8\x72\x3b\x06\xbe\x13\xec\xa1\xb6\xde\x8c\xa7\x42\xb7\x82\x5c\xdb\x4f\xc7\x7b\x6e\x28\x70\x75\x6c\x6b\xdf\x18\xc7\x79\x32\x23\x25\xda\x61\x69\x10\x2e\xe0\x7c\x26\x96\xb2\xf1\xbd\x71\xa0\xc1\x49\x26\xbc\xf4\xfc\x6c\xdb\x91\xc7\xd8\xf2\x18\x88\xf3\x19\xee\x1c\x27\x70\x88\xc2\x5a\x1a\x03\x2b\x0e\xca\xef\x69\xff\x0e\xf3\x2c\x19\x9e\xe7\x9f\xd0\x78\xf0\x00\x3a\x95\xd8\x48\xa0\x1d\x17\x5d\x37\x80\x87\x53\x77\x3f\x76\xdf\x1d\x5c\x31\xba\xa1\xbb\x7f\x13\x42\xf7\x5a\x1c\x95\xa5\xb6\xcf\xcb\x6c\x6e\xd0\x95\x79\xfc\xbf\x9a\x71\x7a\x2d\x85\xc1\xaf\xc6\x4e\x00\xf6\xbf\x0b\xf7\x4d\xff\xd0\x94\xf9\xb3\xe9\xd1\xab\xb8\x93\x3d\x73\xf3\x16\x8a\x0b\xc8\x09\xd7\xd8\x45\xdf\x3e\x19\x0d\xe9\x25\x6a\x6d\x6f\xf9\x5a\xdb\xb9\x59\x76\x3c\xda\x51\xb1\x1b\xda\x17\xb9\xc7\x1a\xa7\x79\x66\x3b\xca\x46\xdb\xdd\xdc\xfe\xf5\x0a\x91\x67\xdf\xe3\xeb\xfe\xf9\xf8\x85\x14\x7b\x4b\x37\x24\x33\x52\x1d\x7a\x2f\x97\xe6\xff\x01\x95\x2f\x3c\x03\x42\x99\xd1\x9c\x79\x22\x00\xeb\xf0\x5c\xad\xb9\x27\x83\x7d\x22\xaf\x4d\x6e\xe7\x83\xd1\x6d\xf0\x5a\x58\xf0\xc3\x55\x62\xb8\x3b\x69\xfc\x8b\x05\x47\xd9\x59\x3f\x13\x2d\xb9\xec\x87\xd0\x5e\xd5\x1e\x5c\xd7\xdb\x96\xcd\xd3\x97\xda\x32\x1c\xb4\xad\x67\xc3\x63\x19\x0f\x8e\x78\x69\x21\x0d\xc4\xf8\x00\x1b\x06\x31\xc5\x0c\x62\x8e\xc2\xd9\x4c\x92\xc4\xe2\x30\x1d\x5a\x61\x76\x94\x1d\xa2\xb1\x82\xb6\x37\x3b\xf8\x29\x62\xfc\xd3\xc4\x42\x5f\x5a\xb1\x60\xd0\x4e\x27\x23\xd6\x4c\xbb\xbe\x26\xd5\xb3\xb7\x46\x31\x51\x9c\x01\x3d\x08\x52\xb2\xec\x0a\xfa\xab\xc8\xb6\xd3\xc7\xcd\x62\xf2\x6e\xbd\x98\x2d\x8d\x53\xfb\x9c\x6c\x2d\x74\x50\xdd\x5f\xdc\xeb\xdd\x73\xea\xa0\x7a\xa1\x83\xfc\x7d\x1d\x85\x20\xff\x48\x17\xc1\x6c\x27\x0d\x87\x80\x49\x97\xcc\xcb\xc5\xd3\x7b\xa9\xef\x97\xf0\x96\x39\x9b\x2b\xd1\x63\x25\xd4\x8b\x1c\xbf\xde\x7b\xb0\x42\xd4\xe3\x99\x77\x31\x82\x1f\xed\xc3\xa3\xb2\x53\x74\x7d\x87\x85\x6b\xbe\x96\xbb\x8e\xa9\x97\xdb\x05\x16\x5b\x7b\x19\x95\xbf\xb7\xbd\xeb\xd5\xf6\x86\xd9\x16\x87\x61\x9b\x87\x18\x2d\x3c\x85\x03\xa8\x2e\x17\x09\x79\x1e\x82\x9f\xa7\x09\x78\x0c\x55\xc0\xf2\xdb\xeb\x07\x29\x63\x50\x67\x53\xca\x00\x47\x1b\x27\x53\x7f\x06\x00\x00\xff\xff\x99\xd1\x35\x88\x01\x17\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 5889, mode: os.FileMode(420), modTime: time.Unix(1605793809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4f\x6b\xdb\x4e\x10\xbd\xe7\x53\xbc\x5f\x08\xc4\x0a\x8e\x7c\x57\x7e\x09\x69\x53\x68\x4b\x69\x28\xf8\x90\x43\x29\x66\xab\x1d\xdb\x83\xd7\xbb\xea\xee\xc8\x89\x51\xf5\xdd\x8b\xfe\x58\x96\xec\x60\xd2\xee\x45\xec\xcc\xbc\xb7\xf3\x66\x9e\x8a\x02\x9a\xe6\x6c\x09\xe7\xa9\x61\xb2\x32\xc9\xbc\xdb\xb0\x26\x7f\x8e\xb2\x3c\x03\x80\xa2\x80\xd0\x3a\x33\x4a\x08\xe7\x4b\x52\x75\xee\xba\x4d\xf2\x3a\x73\x5e\x70\x99\xa9\x74\xa5\x16\x94\x68\x76\x13\xcd\x2e\xd6\xca\xcb\xe5\xcd\xab\x25\x73\x93\x8b\x90\x9f\x3c\xb3\x5e\x90\x84\x53\xa5\xbb\x5e\xba\xa6\xde\x54\x1c\xd8\x2e\x0c\xcd\xd2\x25\x1b\x3d\x6b\x5e\xd9\xe1\x5a\x41\x93\x2b\x7c\x6e\xd0\xb4\x21\xbf\x85\x75\x9a\x70\x35\xd9\x0b\xf6\xca\x2e\x08\x17\x16\xc9\x2d\x2e\xe2\x47\xa7\x29\x74\x92\x9b\x92\x6b\xf0\x1c\xd6\x09\x2e\x6c\xfc\xce\x5a\x27\x4a\xd8\xd9\x10\x7f\x52\x56\x1b\xf2\x1f\xc9\xc6\xd3\x15\x67\xe8\x81\xfa\x4d\x17\x45\x05\x7c\x54\x6b\xc2\x6f\x04\xab\x56\x84\xb2\xec\xab\x6b\x1b\x21\xab\xbb\x87\x7b\xd7\xbd\x8e\x6f\x8d\x6a\xc8\x92\xd0\x6c\x30\x40\xbb\x67\x5b\x07\x1a\xf1\x10\x4f\x14\xef\xf5\xa5\x46\x85\x80\x87\xba\xb8\x85\x7b\xd0\x8b\x90\xd5\x01\xd3\x7a\x78\x0f\xd5\xec\xa6\xa2\x84\x0c\x85\xf0\xd4\xd0\x14\x5d\x63\x43\xec\xa8\x18\x48\xfc\x42\x5b\xac\x68\x3b\x1e\x04\xef\x3d\xfd\xca\xd9\x93\x86\x2c\x39\xc4\x9a\xdd\x30\x5f\x47\xeb\x8d\xed\xe3\x65\x84\x04\x2a\x04\xf2\x32\xd2\xec\xf0\xdf\x2d\x6c\x6e\x4c\x34\x46\xc8\x33\xf2\xa3\x15\x6d\x93\xfa\x25\xd4\xc0\xa4\xf9\x44\xed\x96\xab\x33\x67\xab\x0c\x3e\xb0\x83\x66\x77\x73\x10\x6e\x55\xd5\xa0\x1e\xe6\xde\x6d\xc8\x7b\xd6\xd4\x45\xda\xc2\x9f\x39\x1b\xfd\xc4\xb2\xac\x87\x33\x7a\x5f\x5d\x1f\x9c\x15\x7a\x11\xa4\xcd\x77\x3c\x20\x8d\x30\x1c\x8c\x27\xc9\xbd\xc5\xd7\xdc\x08\x77\xb3\x1b\x54\x54\x67\x67\xe3\x90\xe0\xfb\x51\xf2\x8d\xf6\x3c\x86\xfc\xa3\x5d\x0f\xcf\xae\xed\xff\x7b\xfe\x2d\xcb\xc6\x0e\x77\xc7\x5a\x0e\x4f\xea\x49\x09\x25\x18\xcd\x22\xdc\xde\xe1\x15\x92\x6a\xd1\x49\xb5\xad\x68\x7c\x92\xed\x44\xfa\xe0\xaf\xf9\x8b\xf4\x8f\x63\xd2\xbe\xb3\x86\xd9\x68\xef\xa7\x86\xa9\x3c\x6b\xa9\xcb\xf2\x4f\x00\x00\x00\xff\xff\xe4\x64\xed\x6d\x56\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1366, mode: os.FileMode(420), modTime: time.Unix(1605565331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x51\x4f\xdb\x30\x18\x7c\xe7\x57\x9c\xaa\x8a\xb6\x68\xb8\xef\x40\x11\x12\x1b\x1b\xd3\xd8\x1e\x60\xcf\xc8\x24\x5f\x12\x43\x62\x67\xb6\x41\xea\x4c\xfe\xfb\x64\xc7\xa4\x69\x08\x2b\x9a\xf6\x96\xf8\xf3\x77\x77\xfe\xee\x6c\xe7\x90\x52\x26\x24\x61\x52\xa9\x94\xca\x09\x9a\x66\x0f\x00\x9c\x83\xa5\xaa\x2e\xb9\x25\x4c\x0a\xe2\x29\xe9\x09\x0e\x63\x51\x54\xb5\xd2\x16\xb3\x9a\x27\x0f\x3c\xa7\xa3\x7b\xa3\xe4\x2d\x97\x52\x59\x6e\x85\x92\xcb\xc1\x3f\x4b\xb9\xb6\xb3\xe3\xbd\x08\xbc\x3c\xc0\x65\x0b\x60\x0b\x42\xf2\x68\xac\xaa\xe0\xb7\xc0\xae\x6b\x32\x0c\x07\xcb\x8d\x08\xcd\x65\x4e\x98\xb2\x9b\x75\x4d\x57\xbc\xae\x85\xcc\x4d\xa7\xa3\xaf\xc5\x39\xb0\x08\xdb\x34\xb3\xe3\xae\xee\xdc\x21\x44\x06\x76\xae\xe4\x13\x69\x4b\x1a\x4d\xd3\xef\xe9\xaf\xcf\x8e\x9d\x03\xc9\xb4\x23\x88\xbf\x4d\xd3\xd3\x7e\xa1\x34\xe8\x89\xf4\x1a\x94\xe6\xf4\xc2\xef\x8f\x92\x93\x24\xcd\x2d\xa5\x08\xb3\x1c\x3d\x08\xe1\x68\x85\x29\xfb\x94\xe6\x34\x7e\x0e\xc6\x96\xa1\x7b\xe9\x1c\xa6\x14\xce\xcd\xbe\xf3\x8a\xf0\x0c\x23\xf9\x03\xa1\x69\x5e\xe6\xf9\x96\xc2\xaf\x46\xc9\x6b\xd2\x82\x97\xe2\x37\xbf\x2b\x09\xf5\xa3\x35\x03\x85\x89\x4a\x09\x42\xc2\x16\xc2\x20\x13\x25\xf5\xd4\xd6\x3c\x0e\x67\xfa\x8a\x39\xdf\xf2\xf2\x6c\xc8\x34\x5f\x84\xf5\xa4\xe4\xc6\x60\x03\xd0\x34\x70\x3d\x43\x36\xcb\xf3\x45\x44\xea\xb4\xdf\x14\x84\x4c\x50\x99\x1a\xa8\x2c\x68\x1e\xce\xb2\xc3\xb8\xfc\x18\xa6\x83\xe7\x10\x9e\xf0\xe9\x89\x62\x29\x32\x6c\x07\x21\x9a\x90\xb5\x26\x5c\xb4\x3c\x7d\x17\x7a\x89\x99\x66\xec\x0b\x37\x9f\x55\x04\x3e\xf3\xc0\xd9\x08\x63\x17\xa0\xf9\x62\x90\x9e\xbe\xda\xb1\xce\x58\x18\x51\xba\xe5\xe9\xd6\x6c\x28\x04\x67\xd7\x68\x22\x64\x9b\xb2\xd0\xd2\x9b\xf3\x99\x7a\x22\xad\x45\x4a\x9b\xec\x49\x8b\x9c\x2c\x0a\x6e\x8a\x73\x1f\x8c\xd5\xe9\xeb\x39\xfe\xa5\xff\x4e\xa9\x12\xaa\xf6\xd1\x52\x1a\xab\xd5\xfc\xc7\xdd\x3d\x25\x16\xca\x16\xa4\x17\x1e\x2d\x7c\x41\x0c\x42\xb1\xbf\x3f\xa4\xc1\x6a\xd5\xee\x65\x6f\xf3\x67\x3c\xb1\x4a\xaf\xb7\xa0\x58\xa6\x55\xe5\xd3\x38\xbf\xe2\xf5\xc9\xb5\xd5\x42\xe6\x1f\x90\xae\x25\xaf\x44\x72\x0a\xff\x20\x05\x1d\xb7\xd3\x7e\xd7\xc5\x4b\x53\xa8\x6f\x0c\x18\xc5\xb0\x2a\x6c\x1d\x81\xb9\x69\x2b\xfe\x2a\x45\x90\xfe\x6d\xdc\xe9\xda\xfb\x6f\x51\xeb\xe7\xf8\x55\x0a\xb5\xc1\x7d\xda\xf9\xe8\xc4\x6d\x3e\xed\xc4\x7e\x4a\xf1\xeb\xd1\x43\x0d\x5f\x9e\xb0\x42\xa5\xf1\x5f\xdf\x84\xb1\x27\xaf\x37\x9c\x76\x99\x45\x5b\x7c\x4f\xa8\xc7\x8c\x0c\x1a\xff\xcd\xcd\xd0\xfa\x9f\x2c\x0d\x58\x63\xbe\x6e\x8e\xf1\x27\x00\x00\xff\xff\xa4\x07\x58\x96\x3b\x07\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 1851, mode: os.FileMode(420), modTime: time.Unix(1605971479, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\xd1\x6f\xdb\xb6\x13\x7e\xd7\x5f\x71\x3f\xc1\x68\x65\xff\x6c\xca\xed\x80\x3d\x64\xf0\x43\xd7\x61\x6d\x81\x36\xc8\xd2\x76\x7d\x66\xa4\xb3\x44\x44\x22\x59\x92\xb2\xe3\x19\xfa\xdf\x87\xa3\x64\x59\x8e\xe5\x20\xce\x52\x60\x98\x00\x03\x12\x79\xc7\xef\xee\xbb\x8f\x47\x7a\xbb\x85\x91\xbe\xcd\xe0\x62\x01\x37\xdc\x22\x84\x39\x97\x69\x81\x26\x84\xba\x0e\xb6\xdb\x19\xac\x85\xcb\x01\xef\x1c\xca\x14\x46\x10\x5e\xf1\xe4\x96\x67\x18\xf6\x0c\x67\x75\x1d\x00\x00\x6c\xb7\xe0\xb0\xd4\x05\x77\xb4\x0c\xf2\x94\x26\x59\xb3\x0e\x90\x7b\x5d\x07\x81\x28\xb5\x32\x0e\x22\xef\x11\x4a\x74\x71\xee\x9c\x0e\x9b\x4f\xeb\x4c\xa2\xe4\x2a\x0c\x9a\xcf\x4c\xb8\xbc\xba\x61\x89\x2a\xe3\x4c\xcd\x92\x5c\xc4\x49\x2e\xc2\xa1\x39\x5d\xf0\x4d\x66\x54\x25\xd3\x78\xc5\x0b\x91\x72\xa7\x4c\xbc\x7a\x35\x3f\x36\x2e\x84\xd0\xb1\xcd\xd1\x88\xe5\xf2\x78\xb6\xe4\xd6\x22\x16\x49\x1e\x1b\x94\x14\xff\x91\x85\x15\xa6\xd2\x16\x65\x5c\xa8\xcc\x54\x76\x17\x2a\xd1\xc8\xde\x2a\xb9\x14\x19\x6b\x29\x82\xba\x0e\x5b\x5e\xe2\x09\x7c\x68\xf2\xe6\x45\x01\x6e\xa3\xd1\x42\x65\x31\x05\x21\xc1\xe5\x08\x4b\x81\x45\x6a\x61\x12\x77\x4c\xce\xc0\x70\x99\x21\xe8\xdb\xac\xf1\xb4\x30\xa2\x05\xb7\x5b\xcf\x68\xb8\x67\x74\x1c\x04\x71\x0c\x9f\x73\x6e\x30\x85\xb6\x26\x2c\x20\x8c\xdd\x17\x58\x67\xaa\xc4\xc1\xd6\xaf\x3d\x49\x72\xc1\x3e\x55\x77\x4d\xe0\x49\x21\x50\x3a\x3f\x8e\xd2\xb1\xb7\xfe\xd3\xcf\x74\x3c\xc2\xa4\x7b\x65\x7f\x36\x6f\xe8\x2d\x0a\x95\x65\x68\xbc\x6f\x43\x06\xfb\xe8\x47\x82\x3a\xa0\x8a\x37\x09\x8c\x24\x49\x6b\xc4\x2e\x55\x8a\x16\xf6\x4a\x11\x4b\x90\xca\xc1\x48\xb2\x37\x52\x2a\xc7\x9d\x50\xd2\xb2\xf7\x4d\xc4\xef\x50\xb2\xcf\xb7\x42\x7b\xc5\x40\xfb\xc4\x31\x7c\xc9\x91\x7c\x47\x92\x5d\xf2\x92\x08\x7e\xbf\xcb\x77\x67\xe4\xf3\x1e\x32\x39\x24\x61\xf7\x4c\x5a\x8a\xba\xc1\x43\xbc\xb7\x06\x49\xcc\x1c\x24\xae\x07\x57\xed\x8c\x97\x95\x4c\xe0\x12\xd7\x43\x46\x51\xd2\x27\x77\x0a\xab\x21\x46\xa7\x44\xe7\x3d\x22\xc7\x30\x19\x4c\xe5\x30\x87\x9c\x08\x7e\x31\x64\x78\x68\x47\xcf\x8b\xfc\xd4\x0c\x3d\x9f\xaa\xbb\x8b\xee\x83\x64\x72\x89\xeb\x6b\x55\x39\x34\xd1\x78\x3a\xe8\xd1\xc8\xc7\x3b\x25\xc3\x16\x5d\xa6\x17\xb0\x1a\xb6\x68\x64\x74\xd1\xbe\x1e\xdb\xd4\x87\x43\xbd\x0a\xc1\x19\x52\x6a\x4b\x59\xd7\x87\x5d\xaa\x31\x8a\x13\x3f\x1b\x1b\x4a\x36\x6c\x8c\xda\xed\xf5\x14\xac\x6b\xe4\xe9\x29\x24\x83\x3c\x7d\x2e\x9c\xaf\x3a\x7d\x20\xa7\xca\xcf\x0e\x61\xf9\x86\xf4\x04\xbc\xdf\xb0\xc0\xd3\x78\xa9\x9f\x1d\xc0\xeb\xda\xda\xb9\x78\x1f\x85\x75\xa7\xd0\x0a\x61\xdd\x50\x6e\xf7\x80\xe2\x09\x38\x95\x2a\x98\x81\xa5\x7e\x62\xd0\xaa\xca\x24\xd8\xeb\xb5\xbd\xa0\x8e\x51\x6c\x75\xb3\x73\x89\x33\xec\x00\x47\xf2\x08\xca\xa0\xab\x8c\x84\x7c\xa8\x93\x3c\xa7\x46\x5b\xf0\x63\xe1\x3c\x97\x38\xff\x31\xc0\x63\x54\x79\x04\xd2\x97\xe4\x73\xca\xf1\xb4\x10\x9f\x4b\x84\x47\xa9\x04\xe7\xaa\xef\x31\xca\xdb\x69\xae\xb5\xef\x58\xeb\x40\x3d\xd8\x67\x55\x22\xe4\x58\x68\x34\x2d\x86\x3f\x97\xa2\x7c\x77\x15\x18\x43\x65\x8a\x2b\x6e\x78\xf9\x41\xba\x68\x0d\x74\xf7\x62\xd7\x68\xb5\x92\x16\xbf\x19\xe1\xd0\x4c\xc1\xc0\xa4\x1d\xff\x5e\xa1\x75\x53\xd0\xe4\x40\x07\xa8\x90\xd9\x18\x22\x41\xf7\x16\x37\x05\x34\x86\x7e\xca\x8c\xdb\x13\x49\xd3\x49\x44\xe7\xc6\xd7\xeb\x8f\x1e\x24\x32\xad\xf3\xd8\xcf\x8b\x25\x68\x58\x2c\x20\x0c\x7b\x47\x58\xce\x9a\x03\x80\x7d\x13\x2e\xff\x9d\x2e\x42\x51\xe8\x7d\xc2\x9d\x2f\xfb\x20\x97\x2a\x0a\xb1\xd4\x6e\x43\xf1\x37\xc3\xe1\x38\xd8\xef\x3d\xba\xab\xb1\x5f\x79\xda\x86\x1c\xad\xa7\xb0\x83\x86\xff\x43\x08\x09\xa7\x02\xc3\x0d\xc2\xcb\x97\x07\x8e\xb4\x69\x83\xde\x76\x15\x69\x93\xd7\x02\xda\xbb\x28\x7b\xe3\x94\x88\x74\x97\x00\x4d\xfe\x6f\x01\x52\x14\x0f\xe7\xe0\xb1\xa7\xa0\xbb\xe8\x89\x28\x8a\xc8\x0a\x99\xed\xb3\x40\x87\xe6\xac\x4c\xca\xca\xfa\x3c\x38\x68\x65\x85\x13\x2b\xa4\x62\x20\x5d\xc4\x32\xdf\x20\x0c\xfc\x85\x46\x3d\x98\x64\x3b\x52\x07\xa7\xe5\xf1\x45\x94\xf8\x54\x7d\xf8\xed\xef\x44\x89\x8c\x56\xf9\x6f\xea\xa4\xb9\xb2\x35\x4a\xf1\xa9\x5e\x71\x63\x31\x0a\x5f\xcf\xe7\x3f\xcf\xe6\xaf\x66\xf3\xd7\x14\xd6\xbf\x50\x35\xfe\x3e\xe6\xc3\xa7\x3f\x1f\x9b\xcd\x66\x33\x2b\xcb\x59\x9a\xc2\x52\x99\x92\xbb\xa7\xea\x46\xf3\x4c\x48\xdf\x40\x7d\xe0\x8f\x53\xce\x18\x22\x4d\x7f\x94\x7c\x37\x11\x0e\x4b\x7b\x85\xe6\xaa\x1b\x39\xd6\x0d\x4d\x2d\xe0\x55\xc3\x6a\xdf\x7e\x01\x3f\xcd\x83\x1d\xd9\x29\xc9\xcb\x90\xb8\xd8\x1f\x15\x9a\x4d\x34\x66\xef\xd0\x45\x61\xdf\x23\x1c\xff\x02\x29\x95\xe4\x40\x63\x7d\x8b\xc1\x3e\x90\xee\xe9\x39\x55\xd5\x53\x5a\x3d\x40\x9f\x42\x3a\x5c\xe2\xef\x14\xf0\xbe\xc8\xf0\xb2\xef\xd6\x97\xe4\x43\x75\x3f\xc0\x7a\x42\xc7\xb8\x57\xfd\x46\x01\xfd\x26\x79\x9a\x63\x7d\x92\x5b\xfd\x03\x38\xd5\xe7\x71\xa9\xcf\xe1\x50\xff\x18\xee\xf6\x7b\xe8\xef\x00\x00\x00\xff\xff\xaf\x68\x3b\xd2\x7a\x11\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 4474, mode: os.FileMode(420), modTime: time.Unix(1606259967, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4b\x6f\xdb\x46\x10\xbe\xfb\x57\x4c\x09\x21\x20\x0d\x69\x79\x77\x90\x43\x12\xa7\xae\xd0\x36\x29\x62\xb7\x39\x04\x01\xb2\xd2\x0e\xc9\xb5\xe9\x5d\x65\x76\xe9\x47\x59\xfe\xf7\x62\x1f\xa2\x28\x89\x72\x94\x16\x41\x51\x5e\x6c\xae\xe6\xb5\xdf\xf7\xcd\x0c\xdb\x16\x04\x16\x52\x21\x24\x15\x57\xa2\x46\xca\x97\x84\xdc\x62\x4e\xba\xb1\x98\x40\xd7\x55\xec\x37\x6d\x6c\x9a\xe4\xc9\x14\x2a\xf6\xda\xff\x9a\xb5\x2d\xa0\x12\xd0\x75\x27\x27\x07\x43\x38\xe7\x13\x00\x80\x3c\x07\x63\xa9\x59\x5a\xb0\x1a\x16\x52\x09\xb0\x15\xc2\x4a\x1b\x0b\x0b\x2d\x1e\xc1\x6a\xe6\xed\xec\xe3\x0a\xa1\x6d\x61\xc2\xde\xf2\x5b\x84\xbf\x60\xc9\x6f\xb1\x86\xae\x0b\x49\xdf\xe3\x97\x06\x8d\x5d\xc7\x6a\xbd\x8f\x7b\xda\x36\x3f\x85\x97\x42\x00\xaf\x6b\x28\x24\xd6\xc2\x80\xad\xb8\x05\x4e\x08\x4a\x5b\xc0\x87\x65\xdd\x08\x14\x0c\x4e\xf3\x58\x53\xf0\x03\xe2\xaa\x44\x98\x14\x70\xf6\x02\x26\xec\xc7\xe0\x3b\x1b\xd8\x04\xbb\x19\x4c\xb8\x37\x29\xd8\x4b\xa5\xb4\xe5\x56\x6a\x65\x82\xfd\x05\x2a\x18\x71\x90\x85\x4f\x9d\x72\x25\x9c\xf3\x84\xb3\xcb\x1b\xb9\x8a\xf0\xed\x3a\xc4\x6a\x26\x05\xbb\xf4\x97\xf3\x81\xa1\xeb\xe2\xe1\xd5\xe3\x0a\xdd\x2f\x52\x95\xee\xf0\xf3\xb5\xd1\xea\x2c\x69\x5b\xb0\xbc\xfc\x45\xeb\x9b\x66\xb5\x71\xbd\xe2\x25\x24\xce\xc0\xc1\x9f\xb8\x00\xb2\x70\xd9\x43\xe6\x3f\x78\x2d\x85\xaf\xde\xd9\x75\xdd\x5d\x78\x47\x1f\xed\xa0\x55\xd2\xd3\xfd\x79\xef\x9e\x51\x06\xbb\x47\xb3\xad\xb3\x01\x3f\x28\x4a\x3c\x96\x9e\xd9\x9a\x1f\x0c\xfc\xbc\xf1\xbe\x4f\xd0\x83\xdf\x42\x8f\x63\x26\x75\xf9\x27\x18\x10\x1e\xfa\xfe\x14\xa4\x7c\x81\xca\xf3\x96\x41\xaa\x29\x5a\xf3\x6c\x83\xd4\x41\x26\x71\x84\xc9\x28\x89\x09\xb2\xdf\x95\xfc\xd2\x20\x74\xdd\xc7\x4f\x3d\xb4\xc1\xcb\x17\x32\x3f\x3f\x8a\x72\xfc\x0f\x29\x9f\x8d\x70\x1e\x8f\xba\x93\x75\xd7\x5f\x55\xd2\x40\xd1\xa8\xa5\x8b\x0b\x61\x2a\x18\xe0\xa0\xf0\x7e\xd0\xe7\x5d\x07\xb7\x5a\x60\xed\x09\x31\x56\x13\x1a\x90\x16\xa4\xf2\x63\x42\x70\xcb\x17\xdc\x60\x18\x11\x2e\x58\x5a\x6d\x39\x47\xa6\x32\x08\x17\x49\xef\xa1\xb2\x76\xc5\xde\xa3\x59\x69\x65\xf0\x03\x49\x8b\x34\x05\x82\xd3\x78\xee\xa7\x48\x36\x98\x1f\x79\x0e\x17\x68\x37\x43\xc9\xa5\x64\xfd\xaf\xc2\x29\x6b\x38\x95\x8c\xe2\x37\xb8\x3b\x95\xda\xce\x85\xb1\x5a\x68\x98\x39\x9d\xeb\x7b\x28\x34\xdd\xce\x1a\xaa\x67\xa8\x96\x42\x0b\x14\xf9\xc3\x6d\x9d\xaf\x48\x5b\xbd\x68\x8a\x9d\x2c\xb2\x00\x24\x72\xa9\x1c\x91\xec\x2d\xde\x9f\xe3\x52\x0b\xa4\x94\xd8\x2b\x2d\x1e\x33\x16\xde\xd3\x67\x22\x7b\xee\x4d\x7f\x78\x01\x4a\xd6\x83\x6b\xb8\xa7\x62\xb5\x2e\x4b\x24\xf6\x41\xda\xea\x0d\x91\xa6\x14\x89\x32\x16\xfe\x4d\xd0\xfd\x01\xe1\x22\x39\x61\x79\xcd\x64\x5b\x01\x08\x95\x40\x62\xaf\xb8\x88\x17\x4b\xef\xa7\x40\x53\x48\xa4\xf2\xc2\xf1\x3e\x6e\x04\x4b\x55\xee\xb9\xda\x86\x54\x7f\x14\x65\x10\x01\x8e\xfa\xc2\x9e\xd3\xb1\xab\x57\x2c\x8a\x53\x53\x94\x76\xfa\xe4\x6d\x83\xe7\x14\xf4\x8d\xf3\x46\x22\x96\x9e\x6e\x22\xcc\x43\xc5\x1b\x65\x7b\x10\xb2\xe7\xce\xbc\xdd\x6b\xda\xa3\x90\x8b\xc1\x1d\x76\x14\xb7\x91\xbb\xcb\x0e\x10\x03\x1c\xe7\xca\x22\x29\x5e\x5f\x22\xdd\x21\x85\x58\x01\x50\x25\xeb\x31\xaf\x2d\x08\x77\x60\x7c\xaa\xcc\xb9\x2a\x74\x9a\xdc\xf5\x77\x85\x82\xcb\x1a\xc5\x91\xec\xba\x10\xc7\x73\x79\xc9\xef\xc6\x78\x5c\x04\x0a\x97\xb5\x44\x65\xd9\xb0\x45\xe3\x8c\x49\xb3\xb1\xd9\xfe\x7d\x76\xef\xe8\xb4\x76\xa5\xec\x61\x7e\x89\x76\x6c\xf5\xa6\x82\x8d\x1d\x67\x47\x4c\xc3\xb1\x9d\xf8\x7f\x58\x64\xfb\xd8\xc4\x04\xc3\x8d\xb5\x67\x33\xc0\x30\xa6\x8f\xac\xcf\xcf\x23\x86\xbb\xbb\x70\x5f\xf7\x1e\xc7\xda\x1c\x8c\xff\x52\x88\xb1\xf8\xe6\x40\x02\xc6\xd8\x81\x1c\xdb\xc4\x7c\x9d\xc2\x2d\xd9\xbb\xd5\xe4\xd6\xd2\xf6\x4a\x72\x0f\x4e\xd7\x23\x6c\xc1\x5c\x77\xa4\xc4\x5e\x6b\x65\xf1\xc1\xa6\x59\xb6\x3b\xe8\xfe\xf9\xe0\x36\xfc\xce\x8d\x9e\x61\x6b\x8d\x37\xf8\x37\x8c\x9d\xa7\x3b\x1d\x49\xf2\x5a\xfe\x39\xd6\xee\x5e\xad\x25\xe9\x66\x65\x82\xa8\x0f\xa8\x2e\xe8\xeb\x22\x18\x0e\x40\xbe\xee\x31\x33\x15\x92\x2c\x0a\xf6\x2b\x27\x53\xf1\x3a\x7d\xb6\x3e\x78\xb7\xf2\xd1\xda\xe0\x7c\x06\x1f\x3f\x85\xc5\xd3\x8e\x75\xc1\xba\x96\xd1\x0f\xb2\xbe\x01\x4b\x5f\x6b\x30\xf5\x5f\x39\x93\xb2\xeb\x92\x69\x64\x7c\xbf\x23\x83\x2c\x77\xcf\xdd\x93\x8c\x7d\x13\x9c\x11\x72\x91\x7c\x55\x60\x5d\x37\x05\xfc\x77\xc2\x70\xaf\x5e\xef\x69\xb2\x35\x6a\xfd\xcb\xfc\xbc\xd7\xc7\x14\xdc\xf7\x64\x2f\x24\x13\x19\x0d\x4b\xc2\xcb\xea\x3b\x4a\x68\xab\xf8\xbd\x6a\x37\xb0\xf5\x55\x86\x35\x36\x66\x12\xeb\xda\x5a\x69\xb1\xd4\x77\x3f\xc7\xca\xae\xb3\xf8\x01\xda\x37\xf0\xdf\x01\x00\x00\xff\xff\x7b\xc8\x9d\xee\xe0\x0e\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 3808, mode: os.FileMode(420), modTime: time.Unix(1606294939, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\x12\x46\x2d\x2d\x6c\xba\xbd\xa6\x30\x8a\xec\x26\xcd\x06\x4d\x9b\x34\xc9\x22\x87\xa2\x07\xda\x1c\x49\x6c\x68\x52\x26\xa9\x64\x53\xad\xfe\x7b\x41\x4a\x72\x64\x59\x4e\x76\x81\x5c\xaa\x8b\x2d\x71\xf8\xe6\xeb\x71\x1e\xcb\x12\x38\x26\x42\x21\x90\x8c\x29\x2e\xd1\xcc\xa5\xb0\x6e\x6e\x74\xe1\x90\x40\x55\x65\xf4\x0c\x5d\x44\xe6\x64\x0a\x19\xbd\x10\xd6\xc5\x65\x09\xa8\x38\x54\xd5\x68\x74\x68\xf7\xa6\x40\xf3\x34\x4b\x84\x74\x68\x3c\xc8\x08\x00\x60\x3e\x87\xcf\x16\xc1\x65\x08\x61\x1d\x72\x66\xd8\x1a\x1d\x1a\x0b\x4e\x43\x6d\xfd\xbc\x4c\xc1\x69\xae\x61\x06\x0a\xad\x43\xde\xac\xff\x12\xa0\xca\x72\x06\x86\xa9\x14\x61\x9c\xc0\xd1\x02\xc6\xf4\x57\x81\x92\xdb\xd6\x55\x6b\x33\xfe\xc7\x6a\xf5\x07\x5b\xa3\x37\x12\x8a\xe3\x17\x88\x6c\x2e\x85\x83\xc8\xb1\xf4\x42\xeb\xfb\x22\x87\x71\x42\x6f\x9c\x29\x56\xee\x96\xa5\x40\xfc\x0e\x12\x03\x99\x92\x18\x7e\xec\xe2\x89\x04\x82\x2f\x43\x3f\x5f\x5f\xd0\x3f\x7d\x88\x51\x5c\x17\xa7\x2c\x3b\x9e\xaa\x8a\xc4\x3f\x43\x02\xef\x16\x40\x08\x94\xdb\xfd\x6d\x4c\x22\xf1\x1e\x3f\x31\x7b\xa6\x6f\x9f\x72\xec\xba\x68\x9f\xf9\x3c\xe4\xde\xdb\x8a\xd2\x62\xb3\xfb\xdc\x7e\xd0\x5a\x0e\x6d\x7d\x60\x06\x96\xb0\xd4\x5a\xee\x2d\x85\x04\x16\x0b\x20\xce\x14\xd8\x8f\xac\x7d\x96\xb0\x00\xbf\xbe\xb7\x58\x41\xeb\xbf\x06\x49\x98\xb4\x2f\xa2\x04\x83\x43\x30\xc3\xdb\x32\x2a\x75\x9a\xa2\xa1\x77\xc2\x65\xa7\xc6\x68\x13\xa1\x31\x71\x78\x0d\x0d\xde\x2f\xf5\x14\x92\x98\x9e\xe0\xb2\x48\x23\xb2\xd2\x85\xe4\xa0\xb4\xf3\xcc\xb2\x7b\x2c\x23\xf1\xa0\x53\x83\x8a\xa3\xa1\x1f\x18\xbf\xc6\x4d\x81\xd6\x45\x8f\x53\x30\x53\x20\x93\x9e\xaf\x09\xac\x0b\xeb\x60\x89\x30\xf1\x15\x9a\x80\x36\x30\x09\x59\x4e\x0e\x42\xbb\xc2\xa8\xfd\x1a\xec\x7d\xd9\xd0\xbb\x0c\x0d\x46\xde\x23\xbd\x62\xab\x7b\x96\x7a\x8f\xb4\x2c\xb7\xe4\x0c\xf9\x57\x55\xb4\x8c\xe3\x1e\x2f\x60\x87\x18\xe7\xca\x0d\xf1\x42\x4c\x01\x8d\xf1\xfc\xb5\xce\xac\xb4\x7a\xa0\xc7\x4e\x8b\x28\xd9\x0f\x5c\x24\xc1\xf2\xdd\x02\x94\x90\xff\xf3\x46\x31\x05\x42\x39\x4c\x5f\xc0\x7c\xfb\x0e\x89\x57\x3a\x74\xe3\x8c\x50\xe9\x50\x93\xbe\xc3\x49\xf2\x8a\x93\x5b\xb1\xfe\x8e\xd1\x12\x06\xfa\xac\x63\x5e\x8d\x3a\x0b\x55\x35\x7a\x7d\xe6\x77\xc7\xfc\x6d\x26\x2c\x24\x85\x5a\x39\xa1\x55\xe8\xae\x40\x0b\x89\x36\x10\x32\x6b\xda\x04\x6b\xcd\x51\x5a\x0a\x1f\x99\xf2\xcd\xaa\x07\x3c\x72\x58\x3e\xed\x09\x04\x0d\xd0\x1e\x32\xca\x76\x40\x3e\xd5\x21\xc4\xe0\xa5\x29\x7a\x84\xcc\xb9\x9c\x5e\xa3\xcd\xb5\xb2\x78\x67\x84\x43\x33\x05\x03\xef\x9b\xef\x81\x37\x71\x87\xd5\x1b\x7f\x24\x32\xba\x92\x02\x95\xa3\x5d\xe4\x76\xc4\x8f\x3a\x8a\x12\xca\xcb\x75\x2d\x39\xc7\x4a\x69\xc7\x7c\x8a\x96\x36\x61\x9c\xa1\xa2\x27\x98\xb0\x42\x3a\x1f\xcf\xa5\xe1\x68\xfa\x5d\x10\xc9\x90\x84\x68\x6f\x4a\xe2\x30\x5a\x87\xa6\xea\x86\x06\xb0\x68\x90\xc5\x1d\x39\xac\x63\xf3\xba\x39\xd0\xfc\xf6\x69\x52\xf5\x27\x7d\x03\xd1\x58\xd7\xd8\xf0\x15\xa4\x7e\xf4\xb5\x24\x1c\xed\xca\x37\xf4\x04\xed\xaa\x65\x56\x55\x1d\xd7\x2f\x81\x07\xf5\x01\xd7\xb5\xee\x06\xcd\x9b\x1e\x0c\xad\x4f\xae\xf6\xd9\x65\x70\x57\xb9\xb7\x64\xeb\xc2\x8c\xd1\xfa\xe4\x90\xa5\x68\x2e\x34\xe3\xc8\x4f\x79\x8a\x16\xc6\x40\x7c\xb1\xcf\x8c\x2e\x72\x4b\x76\xaf\x00\xa1\x61\x68\xfb\x3d\x98\xcf\xe1\xd4\xc3\x80\xd4\x8c\x03\x7a\x18\xba\x63\xb0\xd9\x93\xed\xa6\xbe\xe1\x26\xe1\x11\x87\x12\x0a\xf3\xaf\x2c\x21\x67\x76\xc5\x24\x8c\xb1\xe5\x52\xd4\x3f\xac\xb3\x36\xc3\x17\x72\x9e\xcf\xe1\x8a\xa5\x42\x05\x8a\x6d\xbf\xe6\x2c\xc5\x29\x08\x87\x6b\x7b\x85\xe6\x2a\xbc\x35\x93\x3d\xa3\xf9\xd6\xfe\x5c\x25\x3a\xcc\xc7\xb8\x7b\x81\x39\x38\xd8\x7b\x73\xb0\x13\xc5\x86\x5e\x88\xb5\x70\x51\xd7\x63\x4c\x2f\x93\xc4\xa2\x8b\x22\x1f\x0d\xcc\xe0\xa7\x18\xde\xef\xc4\xb4\x7b\x6a\x1c\xae\x73\xc9\xdc\xcb\xb7\xc4\xf1\x4e\xf2\x68\xb7\x69\x6d\xe8\xb1\x94\x91\xa1\x1f\xb5\x72\xf8\xc5\x45\xf1\xb7\xa5\x74\x48\xa3\xea\xbf\x04\xfd\x4f\x3d\x67\xfc\x34\xe6\xcc\xb1\x25\xb3\x48\xe2\x76\x44\xc2\x0c\x96\xe8\xfc\x95\x34\x98\xf6\xca\x15\xa4\xe8\x5c\x39\x34\x8a\xc9\x1b\x34\x0f\x68\x6a\xe0\x5a\x93\x94\x90\xf1\x37\x16\xd8\x9f\xa3\x34\x70\xf7\xc5\xb1\x72\x8d\x8c\xd7\x14\xef\xd2\x86\x3f\xcb\x7a\x86\x46\x24\x09\xfd\x9d\x19\x9b\x31\x19\xfd\xd0\x7e\xb8\xcc\x03\x56\x59\x6f\x3e\x82\xbf\xfe\xb6\x41\x80\x86\x6f\xa6\xe9\x9e\x8b\xae\x45\x73\x08\xd2\x10\x69\x6d\x5a\x55\xa4\x2c\xc7\xa9\x57\xf8\x01\x1d\x81\x8e\x34\x0d\x9d\x18\xf2\x3c\x71\xbf\x82\x55\xec\xde\x9f\x96\xa3\xa0\x27\x83\x27\x66\x47\xa3\xaa\x29\xa0\x7d\x13\x32\x58\x34\x82\x49\xf1\x6f\x28\x7b\xdd\x6f\xd2\xef\xdf\xdb\x75\x7c\x27\x98\xe6\xba\xc4\xd6\xba\x50\x8e\x4c\x41\xa2\x8a\xd0\xc6\x31\x0d\x27\x78\xb0\x3e\x4d\x30\xc8\x3b\x31\x36\xf1\x5d\xfe\xd6\x84\xc3\xeb\x25\xaf\xdc\xa8\x78\x55\xfd\x17\x00\x00\xff\xff\xeb\x5e\xb7\x44\xe8\x0d\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3560, mode: os.FileMode(420), modTime: time.Unix(1606260203, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\xcc\x12\xc6\x42\xda\x95\xe9\xbb\x81\x1c\x16\x9b\x36\x35\x8a\x36\x6d\x5a\x20\x87\xa6\x07\x26\x1c\x89\x44\xe9\x91\x3d\xa4\x92\xa6\x2c\xff\x7b\x21\x4a\x8e\xe5\x7c\x14\x9d\x93\x38\x7a\xf3\xf8\xc8\xf7\x18\x23\x68\xac\x2d\x21\x08\xa3\x48\x3b\xe4\x25\xa3\xd2\x4b\x6e\xbb\x80\x02\x52\x32\xf2\x0c\x43\x21\x96\xd1\xea\xd5\xd5\x95\xfe\x37\x89\x0a\x8c\xbc\x40\xa5\xcb\x18\x01\x49\x43\x4a\xb3\xd9\x0b\x34\x3d\xc1\x0c\x00\x60\xb9\x84\xcf\xc6\x7a\xa8\x3b\xba\x09\xb6\x25\xa8\x31\xdc\x18\xf4\x10\x0c\x42\x8c\x30\x97\xef\xd5\x06\x21\x25\xd8\xb4\x1a\x1d\x58\x8d\x14\x6c\x6d\x51\xc3\xf5\x3d\x28\x68\xec\x2d\x42\xc7\x6e\xb1\x55\xac\x36\x18\x90\xa1\xe6\x76\xb3\xe7\xd6\x2a\xa8\x6b\xe5\x11\x14\x69\x60\x0c\x1d\x93\x07\x1b\x20\xb4\x79\x83\x1b\x67\x91\x82\xcc\xe8\x5e\x41\x61\x8e\xf6\x7c\x33\x28\x2e\xa1\x3f\x55\x71\x07\x26\x84\xad\xbc\x40\xbf\x6d\xc9\xe3\x25\xdb\x80\x5c\x01\xc3\x3f\x63\x7f\xd7\xa1\x0f\x25\xc4\x4c\xd7\x97\xd5\x15\x20\x33\xac\x4e\xc0\xc8\x8e\xdd\x87\x5e\xe3\x9a\x42\x71\x57\x01\x57\x20\xac\x16\xe5\x01\x5c\x67\xec\x5f\x27\x40\xd6\x4d\x48\xfa\x1a\x94\x3f\xb4\xd2\xec\xe1\x73\x37\x90\x8f\x07\x99\x8a\x97\x1f\x3b\xe4\xfb\xa2\x94\x97\x06\x19\x8b\xc3\xaf\x9f\xe0\x49\x7d\xcb\x90\xf5\x69\x61\x75\x79\xd0\x10\x23\x04\xdc\x6c\x9d\x0a\x08\x22\xdb\xbd\xbb\x16\x30\xdf\x9b\xd5\x17\x3e\x1c\x69\x27\xcf\xc9\xdd\x17\x2c\xff\x6f\x29\xe0\xf7\x50\xfc\x96\x08\x99\x5b\x5e\xe4\x0c\x58\x6a\x46\xd2\x29\x7e\xde\x70\xdb\x6d\x7d\xcf\x3c\x97\xff\x11\xb5\x41\xf5\x81\xf0\x72\x74\xe1\x0c\x29\xa7\xeb\x6c\x80\x4d\x24\x1d\x6e\xd9\x1b\x64\x5b\xd7\xf2\x9d\x62\x6f\x94\x2b\xfe\xde\x37\xce\xb7\x99\x2b\x0e\xc3\x2b\xf8\xf2\xd5\x07\xb6\xd4\x1c\x5f\x73\x8c\x8b\xde\x86\xbd\x92\xc9\x16\x53\x04\x2b\x6a\x10\xe6\x4d\x56\x3a\x40\x53\x12\x31\xce\x9b\x94\x44\x35\x66\x7f\xf1\x68\xb8\x6f\x3b\x8f\x4f\xfa\x7d\x89\xe7\xbc\x59\xe5\x67\xf2\x44\xde\x63\xee\x94\x2a\xc0\x3f\x0b\x91\x91\xae\x6d\x1a\x64\x79\x69\x83\x79\xd5\xdb\x51\x20\x73\x99\x97\xaf\x2d\x3a\x5d\x88\xa3\xfc\xe4\xc5\xfa\x74\xbf\x16\x15\x58\x5d\xca\x61\x50\x78\x64\xab\x9c\xfd\x91\x3d\x82\x6c\xee\x24\xcb\x43\x66\x49\x23\xcb\x35\x05\x64\x52\xee\x13\xf2\x2d\xf2\x30\x3d\xc4\x9f\xac\x7b\x3c\xf1\x52\xca\x8f\xa4\x3f\xd1\x7a\xb8\x34\x51\x01\xca\xf5\x69\x29\xd7\x54\xb7\xcf\x43\x46\x5d\x38\x7d\x7a\xa3\xd4\xf3\xb7\xa3\x32\x3d\xfc\x4a\xb3\x18\x91\x74\x4a\xbf\x02\x00\x00\xff\xff\x7e\x50\x39\x7d\x0c\x05\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1292, mode: os.FileMode(420), modTime: time.Unix(1605509907, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xc1\x6e\xe3\x36\x13\xbe\xef\x53\xcc\x4f\x18\x3f\xa4\xd4\xa6\xd0\x6b\x80\x1c\x82\x24\x4d\x83\xa6\x4d\x9a\x76\x91\x43\xb7\x28\x18\x73\x24\x13\x4b\x93\x16\x49\x35\x4d\xb5\x7a\xf7\x82\xa4\x6c\x4b\xb6\xe4\x64\x53\x2c\xd2\xc3\xce\xc9\x92\x38\xc3\x19\xce\xf7\xcd\x0c\x5d\xd7\xc0\x31\x17\x0a\x81\x2c\x98\xe2\x12\x4d\x66\xab\x07\x83\x56\x57\x66\x8e\x59\x81\x2e\x33\xba\x72\x48\x60\xd6\x34\xef\x00\x00\xea\x1a\x0c\x53\x05\xc2\x04\xe1\xf8\x04\x26\xf4\x82\x17\x68\x37\x9f\xbd\x2c\xe8\x25\xba\x84\x64\xb5\xe0\xc7\x1f\x3e\xf0\x6f\x9a\xcc\x2b\xe1\x4a\xb2\x39\x42\x32\x41\xfa\x13\x5b\x22\x7c\x02\xab\xd8\x47\x4c\x81\xfc\x41\x80\xcc\x08\x34\x0d\x99\xc2\x82\xd6\x35\x6c\x97\xac\x98\x9d\x33\x09\x4d\x93\xae\x37\x47\xc5\xc3\x66\x9d\x9f\xef\x9e\x8f\xc2\x5b\x3f\xe4\x7e\xc7\xfb\xba\xce\x8e\xe0\x0e\x19\xcf\xae\x85\x75\xa0\x57\x68\x98\x13\x5a\x59\xd0\x0a\xa2\xd9\x68\xd7\xc2\x51\xd6\xd1\xcb\x2b\x35\x4f\x16\x7e\x83\x49\xf4\xbe\x69\xbe\x8f\xce\xa4\x30\x1c\x53\xf2\x08\x0b\xe7\x56\xf4\x0e\xed\x4a\x2b\x8b\xf7\x46\x38\x34\x53\x30\x70\xd4\xbe\x2f\x2b\xb4\x2e\x85\x7a\xb3\x89\x17\xc1\xa7\x80\xc6\x78\xf7\x17\xb4\x32\xf2\x96\x19\xb6\xbc\x52\x2e\x79\x9c\x82\x99\x02\x11\x9c\xa4\x3d\x85\xa0\x94\x07\x9d\xff\x9d\x80\x12\x72\xc7\xa0\x17\x83\xae\x32\xaa\xf7\xba\xe9\x3d\x95\x71\xbf\xb9\x14\xa8\x1c\xed\x46\x49\x7f\xae\xd0\x3c\x25\x29\xbd\x5f\xa0\xc1\x64\xfb\xa9\xcd\xb0\x5f\x72\x75\x9e\x08\x9e\xa6\x71\xe9\xc8\x69\xa4\xef\x7a\x1b\xd6\xb5\x77\x7a\x82\xf4\xbd\x12\x65\x85\xdd\x14\x75\x96\x38\x5c\xae\x24\x73\x08\xc4\xf8\x94\x95\x0f\xc4\xab\xfc\xfa\xb4\x1a\x54\xc0\xcd\xc9\x95\xf4\x46\xc9\xa7\xc4\xd0\x33\xad\x1c\xfe\xe5\x92\x74\xff\xcc\xf6\xcd\xa3\x31\xda\xcc\x02\xc6\x84\x2a\x7a\x5b\x0d\x69\x4f\x0a\xa3\xab\x95\x0d\x40\x8b\x2b\xe9\xa9\x52\xda\x45\x3c\xd1\x16\x1e\x97\xa8\xa8\xc7\xdb\x65\x5c\x3c\xe0\xf6\x36\xe1\x76\x81\x46\xe4\x39\xfd\x91\x19\xbb\x60\x32\xf9\xff\xfa\xc5\xcd\x2a\xd8\xac\xa3\x91\x63\xf8\xed\x77\xeb\x8c\x50\xc5\x7e\xa6\xa3\x6f\xb3\x70\xb8\xc5\xe8\x96\xdd\x95\x2d\x61\x8a\x10\x47\x54\x69\x1a\x52\xd7\x93\xc2\x53\xb6\x43\xc4\x61\x03\x80\xd2\xe2\xe8\x77\x2f\x24\x22\x22\x1c\xd0\x0e\x72\x8e\xfd\xb9\x93\xd1\x20\xc6\x76\x6e\x9a\x29\xe0\xe7\xb3\x00\x42\xf5\x92\xba\x28\xd0\xd0\x7b\xe1\x16\x17\x3e\xe1\x09\x1a\x93\x86\xc7\xef\x04\x4a\x9e\xec\xb9\xdb\x34\xb4\xf3\xea\xea\x7c\xfd\x96\x4c\x41\xf0\x94\x46\x23\xc4\xa2\x11\x4c\x8a\xbf\x43\xf6\x21\x40\x69\x80\xa8\x10\xc8\xa8\x38\x1a\x7a\xa5\x1c\x1a\xc5\xe4\x2f\x68\xfe\x44\x13\xad\x44\x8e\x2b\x21\xc7\x34\xf7\x68\x1c\x8e\x63\x1f\x9e\xbd\x30\x47\xe2\xda\xa6\x81\x4c\xc1\x07\x96\xd2\x2b\x95\xeb\x43\x0b\x5b\xdf\x71\xa8\x06\xb5\x61\xdd\xfc\xd0\x46\xc1\xd3\x5d\xc2\x07\xa4\x0c\x13\xdd\xc3\x95\xeb\x96\x4a\x5d\x16\xf9\x02\xee\x29\x74\x8e\x39\xab\xa4\xbb\x31\x1c\xcd\x18\xa2\x45\x0e\x86\xbe\xbf\xbb\xde\x94\xac\xd0\xa8\xb4\x57\x21\x29\x9c\x9c\x00\x21\x23\xa8\xf0\x52\xd2\x60\x3c\x19\x5d\x00\x7d\xc2\x44\x6f\xb9\x3e\x88\xfd\xb5\xb4\x55\xd5\x23\xb4\x84\x64\xa2\xe3\x5e\xf0\x09\xa4\x7e\xf4\x2d\x84\x70\xb4\x73\xdf\xc6\xce\xd1\xce\xb7\x47\x75\x1a\x1f\x14\xf7\x15\x34\xe4\x45\xd3\x90\x4d\x9f\xb4\x74\xfa\xac\xab\x87\xa8\xeb\x65\x18\x66\x83\x19\x0a\x1e\xf5\xd2\x74\xa8\xe2\xb5\xe9\xf2\x3d\xf6\x6b\xca\xde\x2c\x65\xc1\x89\xa1\xde\x35\x83\x09\x86\xc6\x85\xac\x40\x73\xad\x19\x47\x1e\x47\xa5\x75\xcf\x23\x3e\x75\xb1\xdd\x90\x03\x9c\xc5\xd1\xf6\x92\x65\x70\xe1\x8d\x83\xd4\x8c\x03\x7a\xe3\x74\x70\x61\x39\x5a\xfe\x7b\xa3\xdc\xce\x14\x3a\xec\x8f\xd2\x0e\x12\x2c\x37\x51\x4c\x52\x5f\xbd\x7d\x0d\xac\xeb\xf5\x2c\x32\xd9\x94\xf5\xe7\x71\xf3\x7a\xbc\xbf\x04\x61\x61\xa6\x2c\xe1\x28\xcc\x54\x67\x5a\xe5\xa2\xa0\xb7\x6c\xfe\x91\x15\xbe\xe6\x3e\x30\xbb\xdb\x7b\x5a\xbf\x03\x57\x76\xe7\xc6\x31\x79\x11\x47\x76\xe3\x7e\x0d\x5f\xba\xf2\x06\xdc\xd9\x0d\xe1\x39\x1e\x75\x65\x98\x53\x5d\x39\x6c\xe7\x45\xbc\xdd\x12\xf2\x90\x89\x61\xaa\x8d\x31\x39\xcb\xe0\x96\x15\x42\x05\x40\xee\x7d\x5d\xb1\x02\xa7\x20\x1c\x2e\xed\x2d\x9a\xdb\xf0\xb4\xb9\x5a\xac\x36\x7a\xa1\xe9\xfb\x9e\xfd\xba\x89\xea\xe5\x43\x49\x49\xaf\xc5\x52\xb8\xa4\xeb\x51\x4a\x6f\xf2\xdc\xa2\x4b\x12\xef\x2d\xcc\xe0\xdb\x14\x8e\x7a\x3e\xa7\x83\xc3\xf7\x76\x74\x5f\xdf\x09\xa5\xb0\x2e\x2b\x3d\x35\x66\xb9\x90\x0e\xcd\xe1\x01\x1e\x6d\xe7\xb6\x70\x2a\xe5\xe1\xcb\xc2\xbf\x19\x2d\xdb\x01\x31\x8c\x84\x10\x1c\x14\xaa\x00\xce\x1c\xf3\x14\x27\xa9\xcf\xa2\xd3\x9e\x65\xf0\x80\xce\xa1\x89\xd3\xe3\x9b\xcd\x8e\x9f\x75\xb5\xd9\xb6\x89\xaf\x57\x9b\xfe\xd5\xc6\xe3\xf1\x95\x57\x1b\xfb\x45\x00\xf8\xdf\xbf\xa1\xb0\xa5\xae\x94\x23\x53\x90\xa8\x12\xb4\xe9\x17\xbf\x90\xf4\x0b\x6e\xc7\xcb\xf0\x37\xd1\x99\x41\x5f\x61\x5e\xf4\x1f\xd1\xd6\xda\xe6\xd7\x3f\x01\x00\x00\xff\xff\x7f\x26\x34\x51\x7e\x13\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 4990, mode: os.FileMode(420), modTime: time.Unix(1605568036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x13\x8c\x42\xca\x6c\xfa\xdd\x45\x1f\xda\xa6\xcb\x8c\x6d\xed\xd0\xb4\xeb\x43\x5b\xa0\xb4\x79\x92\x98\xc8\xa4\x7a\xa2\x9c\x64\x9a\xfe\xf7\x81\x3f\x22\xcb\xb2\x9c\xb9\x18\xb6\x61\x7a\x49\x48\xdf\x1d\x8f\xdf\xf7\xdd\x1d\x9b\x06\x04\xa6\x52\x21\x44\x39\x57\xa2\x40\x9a\xd7\xa5\xe0\x06\xe7\xa4\x6b\x83\x11\xb4\x6d\xce\x2e\xd1\xc4\xd1\xbc\x91\x62\xf1\xe9\x93\xf8\xbe\x8d\xa6\x90\xb3\xf7\xce\x2a\x69\x1a\x40\x25\xa0\x6d\xcf\xce\x8e\x86\xb2\x41\xce\x00\x00\xe6\x73\xa8\x0c\xd5\x6b\x03\x46\xc3\x4a\x2a\x01\x26\x47\x28\x75\x65\x60\xa5\xc5\x3d\x18\xcd\x9c\x9d\xb9\x2f\x11\x9a\x06\x26\xec\x35\xdf\x20\xfc\x01\x6b\xbe\xc1\x02\xda\xd6\x1f\xfa\x16\xbf\xd6\x58\x99\x87\x58\x8d\xf3\xb1\x5f\xd3\xcc\xcf\xe1\xb9\x10\xc0\x8b\x02\x52\x89\x85\xa8\xc0\xe4\xdc\x00\x27\x04\xa5\x0d\xe0\xdd\xba\xa8\x05\x0a\x06\xe7\xf3\x90\x93\xf7\x03\xe2\x2a\x43\x98\xa4\xb0\x78\x06\x13\xf6\x83\xf7\x9d\xf5\x6c\xbc\xdd\x0c\x26\xdc\x99\xa4\xec\xb9\x52\xda\x70\x23\xb5\xaa\xbc\xfd\x25\x2a\x18\x71\x90\x29\x68\x82\xd8\x1e\x3f\xe1\x09\x4c\x78\x80\x6e\x68\x1b\x12\x99\xa4\xec\xca\xdd\xcb\xc5\x84\xb6\x0d\x9b\xef\xee\x4b\xb4\xbf\x48\x95\xd9\xcd\x2f\xd7\x95\x56\x8b\xa8\x69\xc0\xf0\xec\x67\xad\x6f\xea\x72\xe7\xfa\x8e\x67\x10\x59\x03\x8b\x7c\x64\x03\xc8\x74\x77\xf0\x6f\xbc\x90\xc2\x25\x6e\xed\xda\x76\xeb\xd7\xe8\xa2\x1d\xb5\x8a\x3a\xa6\xbf\x1c\x5c\x31\x28\x60\xb8\x35\xdb\xdb\xeb\x51\x83\x22\xc3\x53\x99\x99\x3d\x50\x83\x9e\x9a\x57\xce\xf7\x11\x66\xf0\x5b\x98\xe1\x4a\x04\x6a\xd0\x23\xdc\xf7\xfd\xd1\xab\xf8\x12\x15\xbb\xba\x91\x65\x02\xf1\x28\x91\xc9\x31\x26\x71\x84\x49\x99\x42\x38\xee\xbd\x92\x5f\x6b\xab\x82\x8f\x9f\x3b\x68\xbd\x97\x4b\x64\x79\x71\x12\xe5\xf8\x1f\x52\x3e\x1b\xe1\x3c\x6c\xb5\x67\x0f\x05\xff\x2e\x97\x15\xa4\xb5\x5a\xdb\xb8\xe0\x1b\x42\x05\x1c\x32\xb9\x45\xd5\x2b\xf2\xb6\x85\x8d\x16\x58\x38\x4a\x2a\xbe\x75\x02\x41\x58\xe7\x96\xfd\x0a\xa4\x72\x4b\xc1\x0d\x5f\xf1\x0a\x7d\x9f\xb0\x61\xe3\x7c\x2f\x48\xe0\x2c\x01\x7f\xa5\xf8\x16\x72\x63\x4a\xf6\x16\xab\x52\xab\x0a\x3f\x90\x34\x48\x53\x20\x38\x0f\xfb\xae\x95\x24\xbd\x26\x22\xc5\x14\x90\xc8\x6a\x29\x67\x35\x15\xbf\x72\xe2\x9b\xa5\x32\xf1\xed\x14\x68\x0a\x91\x14\x51\xb2\x33\x4e\x9d\xed\x77\xcf\x40\xc9\xa2\x17\xc4\x7e\x84\xa6\x26\xd5\x6d\x05\x48\x02\x2c\x97\x68\x76\xcd\xcf\xde\x8a\x75\xbf\x0a\x7b\x74\xbf\xfb\x55\x8a\xdf\xe0\xb0\xfb\x35\xad\x0d\x63\xb4\xd0\x30\xb3\x45\xa5\x6f\x21\xd5\xb4\x99\xd5\x54\xcc\x50\xad\xb5\x40\x31\xbf\xdb\x14\xf3\x92\xb4\xd1\xab\x3a\x1d\x1c\x12\x12\x5f\x3c\x03\x2b\x1a\xf6\x1a\x6f\x2f\xd0\x3a\x51\x4c\xec\x85\x16\xf7\x09\xf3\xeb\xf8\x89\x48\x9e\x1e\xbf\x63\xce\x0a\x9d\x65\x48\xec\x83\x34\xf9\x2b\x22\x4d\x31\x12\x25\xcc\xff\x1b\xa1\xfd\x03\xc2\x46\xb2\x22\x76\xfa\x4c\x06\x20\x29\x81\xc4\x5e\x70\x11\xee\xd5\xc1\xac\x9c\x48\x9d\x8f\xed\xf4\x52\x65\x07\xae\x8f\xe0\x1b\xb4\x8c\x9d\x6a\xc6\xae\x9e\xb3\x50\x08\x9a\x42\x19\xc5\x8f\xde\xd6\x7b\x4e\x41\xdf\x58\x6f\x24\x62\xf1\xf9\x2e\xc2\xd2\x67\xbc\xab\x22\x07\x42\xf2\xd4\x9a\x37\x07\x0d\xe2\x24\xe4\x42\x70\x8b\x1d\x85\xa1\x67\xef\x32\x00\xa2\x87\xe3\x52\x19\x24\xc5\x8b\x2b\xa4\x2d\x92\x8f\xe5\x01\x55\xb2\x18\xf3\xda\x83\x70\x00\xe3\x63\x69\x2e\x55\xaa\xe3\x68\xdb\xdd\x15\x52\x2e\x0b\x14\x27\xb2\x6b\x43\x9c\xce\xe5\x15\xdf\x8e\xf1\xb8\xf2\x14\xae\x0b\x89\xca\xb0\x7e\x13\x08\xfd\xec\x8d\xc2\xe5\x45\x2c\x45\x32\x36\x4e\xfe\x95\x49\xff\x92\xd0\x4f\x7a\x76\x00\xfd\x15\x9a\xb1\x69\x1f\x0b\x36\xb6\x9d\x9c\xd0\x80\xc7\xc6\xf0\xff\x61\x76\x1e\x62\x13\x0e\xe8\x0f\xc9\x03\x9b\x1e\x86\xe1\xf8\x40\xfe\xf2\x22\x60\x38\x1c\xbf\x87\xf2\x77\x38\x16\xd5\xd1\xf8\xcf\x85\x18\x8b\x5f\x1d\x39\x80\x31\x96\xb8\x87\xce\xae\x31\x13\x6e\xf4\x16\x41\x0e\x1f\xa2\x7e\xfa\x85\xa1\x56\x72\xb3\xce\x67\x56\xdc\x7b\x6f\x9f\x21\xdb\x23\x2c\x1c\x17\xc1\x41\xfd\x48\x35\x18\x9e\xf6\xc3\x6e\xd4\xad\x98\xb5\x8a\x89\xbd\xd4\xca\xe0\x9d\x89\x93\xd3\x86\xdc\x49\x6d\xac\xe2\x5b\xdb\xc2\xfa\x25\x3a\xde\x28\xbe\xa1\x7d\x3d\xde\x31\x90\x24\x2f\xe4\xef\x63\x6d\xc3\xc9\x3d\x23\x5d\x97\x95\xaf\x8a\x23\xb2\xf5\x02\xbd\xf4\x86\x3d\x8c\xaf\x3b\xcc\xaa\x1c\x49\xa6\x29\xfb\x85\x53\x95\xf3\x22\x7e\xf2\xb0\xf1\xa6\x74\xd1\x1a\xef\xbc\x80\x8f\x9f\xfd\x00\x6b\xc6\xca\xe8\x21\x97\x23\xcc\x87\x0a\xce\x5c\xae\xde\xd4\xbd\xcc\x26\x59\xdb\x46\xd3\x40\xf8\x61\x49\x7b\x5d\x0f\xf7\xed\x17\x8d\x3d\x2d\x16\x84\x5c\x44\x7f\xa9\xaf\xb6\x9d\x02\xfe\x3d\x61\xd8\xa5\x2b\x98\x38\xda\x6b\xd9\x6e\xb1\xbc\xe8\xf4\x31\x05\xfb\x06\xee\x84\x54\x05\x46\xfd\xb0\x71\xb2\xfa\x07\x25\xb4\x97\xfc\x41\xb6\x3b\xd8\xba\x2c\xfd\x38\x1c\x33\x09\x79\xed\x8d\xc6\x90\xea\x9b\x9f\x42\x66\xd7\x49\x78\x34\x77\xf5\xfb\x67\x00\x00\x00\xff\xff\x0d\xa4\x22\x85\x97\x0f\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 3991, mode: os.FileMode(420), modTime: time.Unix(1605783956, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\xcf\x6e\xdb\x3c\x10\xc4\xef\x79\x8a\xf9\x04\x1f\xa4\xc0\x96\xef\x01\x82\x0f\x05\xf2\xa7\x06\x8a\x1c\xea\x02\x3d\xd3\xe2\x8a\x62\xca\x2c\xe5\xd5\x2a\x41\x20\xe8\xdd\x0b\x49\xb6\x21\x38\x69\xd1\x8b\x75\x5b\x72\x38\x3b\x3f\x72\xd5\x75\xb0\x54\x7a\x26\x24\x42\xc6\xae\xf7\xbb\x04\x7d\x7f\x05\x00\x5d\xb7\xbe\xc6\xa6\x44\x64\x42\x2c\xa1\x15\xc1\xf9\x57\x62\x54\x86\x6d\x20\x81\x93\xd8\xd6\x0d\x7c\x83\x86\x14\x91\x47\x09\x59\x47\x20\xe3\x48\xf0\x1c\x3d\xc3\x6b\x7e\xbd\x9e\x3b\x6a\xb4\x11\x2b\x30\x35\x4a\xf6\xa0\x0c\xd1\x58\xcf\xee\x7f\xcc\xa4\x2b\x88\x61\x47\x58\x10\x6e\x6e\xb1\xc8\xef\xad\xa3\xe6\x98\xed\x4c\xe2\x26\xc9\x17\xe6\xa8\x46\x7d\xe4\x26\xff\x3a\x85\x7c\x24\xce\xbf\x93\xb1\x8f\x53\xd6\xd9\xf1\xf3\x2e\xa3\x47\x53\x07\xaf\x48\xd5\xb8\x6f\x31\xfe\x6a\x6b\x2c\x28\xdf\xaa\xb4\x85\xfe\x30\x0e\xc9\x44\x9c\x64\x48\x96\xc9\xb9\xd7\xd1\xcf\x97\xa0\xfd\x10\x69\xb0\xec\xfb\x7d\xfe\xd3\x6b\xd5\x75\xa8\x4d\x53\x98\x30\x18\x3e\x99\x17\x42\xdf\xa7\x59\xd7\x81\xd8\x62\xf5\x49\xaa\x61\xfd\x8c\x75\xb6\x34\x2b\x0f\x1e\x7d\x7f\x75\x75\xfe\x96\x24\x12\x65\x35\xbe\x96\x67\x77\x0a\x3c\x04\x14\xc1\x7f\xb7\x60\x1f\xd0\x9d\x7a\x34\x6f\x5e\x8b\x6a\xd8\xcb\x53\x7d\xaf\x29\x9b\xed\x0d\x5f\x61\x1a\xc2\x35\xb1\xe6\x4f\x51\x1f\x62\xcb\xf6\x7e\x68\x70\xf3\xe1\x16\xaa\x3c\x44\xe7\x48\x46\xf2\x51\x93\x92\x48\x36\x96\x0f\x9e\x82\x4d\x93\xae\xc3\xe2\x78\x0f\xf9\x58\x6c\xee\x8e\x75\xb2\x84\xb7\x59\x7e\x47\xbb\xd6\xa5\xc9\x73\xdc\x81\xa3\xa2\x1c\x1a\x26\xd9\x87\x66\x42\x6c\x49\x4e\x91\xd2\xb7\x25\x64\x39\x40\x7c\x26\xd5\x56\xf8\xcf\x4c\x5b\xcf\xae\x0d\x46\x2e\x8a\x35\x1d\x4c\x6c\x5b\x07\x5f\x18\x25\x10\xab\xbc\xa3\x8c\x02\xff\x17\xbe\x0d\x2b\x09\x9b\xb0\x25\x79\xa5\x29\xe1\x01\x95\x7d\xf8\x27\x54\x4b\xa5\x69\x83\x5e\x98\x6b\x9c\x39\x94\xa4\x45\xe5\xd9\x81\xa3\x25\x94\x12\x5f\x60\x77\x97\x82\x9b\xa6\x7a\xfe\x27\xfc\x0e\x00\x00\xff\xff\x86\x5e\x99\x66\xd5\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1237, mode: os.FileMode(420), modTime: time.Unix(1605509907, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":          &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl": &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"model.tpl":           &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
