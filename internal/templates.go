// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/date_utc_converter.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdd\x6e\xdc\xb6\x12\xbe\xcf\x53\xcc\x59\x2c\xb0\x52\x60\x6b\xcf\xb5\x9d\x75\x72\x8e\x53\xb7\x29\x92\x22\xa8\xed\xab\x20\x30\x68\x71\xb4\x66\x2d\x91\x32\x49\x25\xd9\x2a\x7a\xf7\x82\xa4\xa4\xa5\x7e\xbd\x4d\x90\xb4\x05\xea\x1b\xef\x4a\xc3\xf9\xf9\x66\xe6\xe3\xcc\x96\x25\x50\x4c\x18\x47\x58\xc4\x29\x43\xae\x17\x50\x55\x4f\x00\x00\xca\x12\x34\x66\x79\x4a\x34\xc2\xe2\x0e\x09\x45\xb9\x80\xe3\xfa\x25\xcb\x72\x21\x35\xac\x72\x12\xdf\x93\x2d\x9e\x50\x26\xd6\x94\x89\x88\x12\xa9\x57\xa7\xa3\x22\x49\x5a\x68\x8d\x72\xfd\x91\xd1\x2d\x6a\x35\x27\xfa\x9b\x12\xfc\x86\x70\x2e\x34\xd1\x4c\xf0\x75\xef\xfb\xdc\xd1\x5c\x8a\x0f\x8c\xa2\x5c\x37\x1f\x1a\xe1\x8e\x74\x14\xad\x29\xd1\x78\x53\xe8\xf8\x26\x16\xfc\x03\x4a\xdd\x93\x2c\xcb\xf5\x53\x78\xe5\xc4\xf5\x1d\x42\x5c\x28\x2d\x32\x30\x22\xa0\x77\x39\xaa\x08\x9e\xae\xf7\x48\x49\xc2\xb7\x08\xcb\xe8\x6a\x97\xe3\x1b\x92\xe7\x8c\x6f\x55\x0b\x96\x6f\xb9\x2c\x21\xaa\xd5\x56\x55\x1d\x83\xd3\x71\x0c\x2c\x81\xe8\xbc\xf1\xa6\x15\xf2\x4f\x0e\xdf\xae\x4e\xcb\x12\x90\xd3\xd6\x58\xfd\xb5\xaa\xc6\xe3\xe0\x82\x22\x30\xad\x30\x4d\x80\x70\x0a\x24\x4d\x41\x24\xf6\x15\xd2\x2d\x2a\xd0\x44\x6e\x51\x5b\x39\x05\x6b\x70\x45\xe1\x47\xeb\x61\x98\x09\x8a\xe9\xba\x2c\x61\x19\xfd\x42\x32\x84\xcf\xa0\x38\xb9\x47\xa8\x2a\x3f\x45\x7b\x78\x10\x4e\x36\xb0\x8c\x7e\xb0\x86\xc6\xd0\xe9\xe8\x44\x8b\xe6\x9c\x66\x0f\x38\x21\x21\xe0\x42\xb7\xa7\xfe\xd7\x56\x8b\x8a\x7e\x22\x9c\xa6\x28\x7f\x44\x1e\x1e\x22\x14\x5d\xde\xb3\x3c\x04\xcf\xbd\x9e\x8b\x0e\x93\x3f\xe5\xe3\xa3\x29\xfa\x59\x09\x7e\x89\x92\x91\x94\xfd\x4e\x6e\x53\x84\xbc\xd0\xca\xa6\x65\x8b\x1c\x25\xd1\x48\x21\xb6\xb9\xe3\xa0\xef\x98\x82\x84\xa5\xe8\x65\x25\x27\x75\x8d\x0c\x53\xb1\x1d\x16\xf6\x1b\xf3\xca\x28\x2f\x64\x9d\x7e\xa6\x5c\x69\x90\x38\x46\xa5\x98\xf1\x40\x0b\x10\xfa\x0e\xa5\x2b\x7a\x63\xcf\x2f\x83\x58\x70\xa5\x61\xcc\xe0\xb5\x4c\x61\x63\x7d\x09\x24\xe6\x29\x89\x11\x82\xae\x50\x08\x8b\x9b\x05\x2c\x8e\x17\x21\x7c\x86\x3c\x2d\x24\x49\x5d\x37\xec\x3d\xbc\x32\x3d\x67\x71\x86\x44\x48\x20\x60\xeb\x22\x82\x73\xc1\x55\x91\x61\x1f\x1a\x92\x33\xdf\xb7\x94\x28\xe5\xf9\x56\x55\xe7\x4e\x55\xe9\xa7\xa4\xf7\x32\x28\x5f\x48\x7c\x28\x98\x44\x6a\xf1\x88\x28\x13\x55\x08\x27\x40\x94\x42\xa9\x03\xca\x04\xfc\x67\x03\xbc\x48\xd3\xb0\xf6\xd4\xfc\x25\x8c\x93\x14\x5e\x32\x01\x94\x09\xef\xb9\x8d\xe2\x82\x99\x16\x03\xc5\xf8\x36\xad\x7b\xef\x76\x07\x8c\x7a\xbe\x9a\xbf\x8b\x42\x17\x12\x9f\xf9\x3e\x9d\x19\xc5\x34\xb0\x8f\x5e\xbd\xb4\x55\x06\x9f\x6d\x26\xec\xc7\xaa\x02\x46\x43\x20\x6a\xc7\x63\x2f\xaa\xbd\x43\x12\x36\x40\x3e\x12\xa6\x8d\x5b\xd1\x16\x75\xb0\x5a\x2f\x27\xb2\xb5\x5e\x32\xba\x0a\x4f\x3b\x5a\x24\xea\x42\xf2\x0e\x4c\x51\x22\x45\x66\xea\x34\x30\x54\xa9\x89\x77\xa2\xea\xc5\xfd\x9a\x29\x0d\x59\x91\x6a\x96\xd7\x71\xdb\x82\xd5\x68\xc0\xbd\xdd\xc1\x43\x81\x72\x67\x6a\x96\x64\x6a\x1c\x0b\xa3\xa1\x0b\xc8\x19\xa4\x4c\xe9\xa0\x1b\x2c\xe3\x1a\x72\xb2\xc5\xa3\xc1\x53\xa6\x31\x53\x6f\x51\xbe\x1d\xbc\x35\x8c\x51\x13\x52\xe2\x08\xe9\x82\x61\x4a\x55\xbf\xe3\x1b\xd9\xa5\xb9\x7e\xac\x17\x27\x1b\x60\x9c\xe2\x27\x08\x54\x9e\x32\x0d\x81\x26\xdb\xd7\x42\xdc\x17\x39\x2c\x93\xe8\x52\xcb\x22\xd6\x57\x64\x0b\x0b\x73\x62\x11\xc2\xe2\x68\x11\xc2\x7f\xc7\xf5\x9a\x13\x23\x59\x35\x2f\x5a\x7b\x55\xd5\xf7\xbc\x21\x8e\x16\xf8\xb9\x1a\x70\xf8\xc2\xa6\xe9\xd5\xca\x2b\x4f\x0b\x53\x02\x81\x01\xaf\x2d\xeb\x9e\x16\x70\xbc\x42\x32\xf5\x6e\x65\xe4\x56\xef\x61\x63\xd1\xee\x96\x4a\x35\xd4\xea\x83\x7f\x88\x76\x5f\xde\x5a\xf1\x1f\xcc\x5a\xdb\x5f\x2e\x7f\x59\x2e\x4d\xc0\xbd\xb4\xcd\xc5\xec\xc7\xdd\x3b\x66\x43\xef\x3d\x3b\x1d\x28\xa8\x26\x6a\xe2\x2b\x59\x60\x15\x8e\x94\x87\xeb\x74\xd8\x4c\x87\x53\x13\xc5\xbb\xf7\xb3\x69\xaa\xa5\x1a\x7d\x44\x59\x8a\x08\xa3\x8c\xe4\x41\xc0\x42\xd8\x9c\x4d\x50\x0d\x0b\xc3\x48\x0b\x23\x1c\xcc\xf0\xcd\xb9\x44\x33\xa6\x12\xe0\xf8\xd1\xd1\xac\xe0\xf6\x86\x90\x98\x09\x8d\x87\xd0\x6d\x6c\x55\x04\x9d\x7b\xc1\x3e\xfa\x15\x1f\x0a\x54\x1a\x24\x3e\x1c\x4e\xb8\xb9\x50\xb3\x58\x1f\x81\xc1\xe1\xc4\x28\x8d\xb4\xb0\x91\x86\xe3\x0c\x1c\xcc\x52\xf0\x0c\x26\xd7\x39\xad\x31\xf9\x22\x3c\x0a\x7b\xbc\x63\xdd\x69\xfc\x32\x3c\x88\x8e\xef\x66\xaf\xa0\xd2\x40\xd1\x5c\x77\xb5\xc1\xea\x7b\xe0\x74\x81\x3a\xbe\x6b\x67\x63\xe5\xc6\xe0\x1e\x42\xe3\x23\x6c\x35\xe8\xc4\xef\x31\x88\x76\x33\xc6\x12\xa3\xe4\x9a\xb3\x87\xc2\x04\xde\x9f\x49\xed\x13\x4c\x95\xf9\xd4\x5e\xa9\x5d\x81\xb3\x96\x41\x5c\x0f\xb6\xd3\x6c\x4c\x32\x34\x73\x59\x07\x59\xc0\xf1\xa4\xcf\x25\xff\xb1\xe9\xa3\xc4\x41\xe2\x9d\xf4\xf8\x74\x5d\x73\xd5\x98\xf5\x3e\x20\xc7\x23\xd8\x8d\xd5\x4d\x17\x91\xb9\xea\xe9\x59\xb3\xd0\x1e\x62\xe5\x11\xe2\x9b\x72\x60\x9c\xfe\xfa\x4e\x78\xbb\x85\xff\x37\x75\x51\x0c\x9f\x74\x3b\xa2\xde\x0e\xfc\x95\xa0\xd9\x09\x6e\x77\xb6\x53\xec\x46\xd0\x6c\xd8\x50\xef\xde\xbd\x9e\x51\xa6\xa0\xe3\xb1\x29\x5c\x24\xc1\xff\x0b\x96\xd2\x73\xc1\x35\x7e\xd2\x66\x3c\x31\xff\x2d\x18\x6f\x9b\xb5\x5d\x24\xcf\x86\x47\xcf\x82\x5a\xf6\xc8\x0e\x83\xc8\x4f\x20\x21\xa9\xc2\x1a\x9b\xea\x49\x6f\x83\xc8\x50\x29\x33\x82\x14\xca\x0c\xf5\xa2\x26\xf9\xfa\x9e\xb0\x1b\xc5\x24\x31\x1a\xe3\x34\x89\x4d\xbb\x9b\x68\x6b\xd6\xab\xa7\x0b\xb7\xe8\xc3\xc2\x34\xa8\xbb\x25\xda\x9f\x4d\x5e\xf4\x37\xb9\xc0\x19\xbd\x20\xb1\x16\x72\xd7\x38\xec\x64\x5f\x12\x8d\xd7\x3a\x6e\xd7\xfa\x20\x9c\xda\x5f\x3a\x57\xd1\xc4\x1a\xe3\xcb\xf4\xe6\xe4\x3d\x81\x99\x98\xc6\x8a\xc5\xae\x3c\x65\x09\xd1\xdc\xe4\x79\xdc\x19\x3d\x3b\xdb\xce\x84\x1f\xb6\x94\xfd\xb7\x03\x36\x39\x99\x70\x94\x1d\x35\x33\xdd\x94\xcb\x6e\x88\x6e\x54\x6d\x00\xa3\xd1\x99\xcf\x30\x42\x12\xbd\x52\x86\xb3\xa1\xaa\x2c\xbf\x3f\x8f\x66\xfa\xa6\xa3\xf7\x10\x95\xcf\x87\x86\xbb\x92\x46\xee\x10\x4e\x72\x96\xad\xb4\xe5\x83\x3d\x23\x4e\x1a\x78\x94\x81\x2c\xd3\xa0\x6d\x2e\xc7\xb3\xe3\x06\xc2\xe7\x2d\xd1\x4c\xdb\x9a\x06\x6c\xfa\x95\xc5\xc0\x5c\x76\x01\x3e\xc0\x92\x41\x40\x31\x86\x20\x45\x6e\x13\x1b\x86\xe6\x82\x3b\x1a\x92\xd3\x94\xcd\x6e\xd1\xcd\x14\xb5\xbb\x0b\xf6\x3f\x99\xb9\xbb\xb0\xff\x7d\xcc\x6f\x23\xe6\xed\x63\xd1\x60\x12\x1f\x21\xce\x37\x24\x7f\x76\xa9\x25\xe3\xdb\x23\xa0\x3b\x4e\x32\x16\x9f\x41\x33\xb1\x18\xec\x6f\x96\x93\x3d\x72\xe5\xc4\x4c\x07\xee\x89\x0c\xe6\x78\xac\x68\x66\xbb\x43\x38\xac\x78\x9c\xc3\xdc\x64\xf7\x8d\x39\xac\x3b\x3e\x8e\x73\x58\x47\xa6\xc7\x61\x0d\x43\xf9\x83\xc2\x80\xa5\xda\x82\x28\xbe\x31\xcb\x75\x3c\xfd\x02\x96\xf3\xa3\xb0\xdc\xd5\x7b\xe6\xca\xb7\x6e\x93\x62\xae\x47\xc6\x08\x73\x3c\xfa\x7f\x09\xf3\x1f\x4f\x98\xc5\x57\x12\xe6\xd4\xaf\x89\xbd\xea\x3b\x1d\x25\xd9\x61\x55\xfd\xad\x49\xb6\xd3\xa2\x63\x24\xbb\x37\xf1\x47\x00\x00\x00\xff\xff\xc6\x80\x68\xe7\x07\x1b\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 6919, mode: os.FileMode(420), modTime: time.Unix(1609937906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4f\x6b\xdb\x4e\x10\xbd\xe7\x53\xbc\x5f\x08\xc4\x0a\x8e\x7c\x57\x7e\x09\x69\x53\x68\x4b\x69\x28\xf8\x90\x43\x29\x66\xab\x1d\xdb\x83\xd7\xbb\xea\xee\xc8\x89\x51\xf5\xdd\x8b\xfe\x58\x96\xec\x60\xd2\xee\x45\xec\xcc\xbc\xb7\xf3\x66\x9e\x8a\x02\x9a\xe6\x6c\x09\xe7\xa9\x61\xb2\x32\xc9\xbc\xdb\xb0\x26\x7f\x8e\xb2\x3c\x03\x80\xa2\x80\xd0\x3a\x33\x4a\x08\xe7\x4b\x52\x75\xee\xba\x4d\xf2\x3a\x73\x5e\x70\x99\xa9\x74\xa5\x16\x94\x68\x76\x13\xcd\x2e\xd6\xca\xcb\xe5\xcd\xab\x25\x73\x93\x8b\x90\x9f\x3c\xb3\x5e\x90\x84\x53\xa5\xbb\x5e\xba\xa6\xde\x54\x1c\xd8\x2e\x0c\xcd\xd2\x25\x1b\x3d\x6b\x5e\xd9\xe1\x5a\x41\x93\x2b\x7c\x6e\xd0\xb4\x21\xbf\x85\x75\x9a\x70\x35\xd9\x0b\xf6\xca\x2e\x08\x17\x16\xc9\x2d\x2e\xe2\x47\xa7\x29\x74\x92\x9b\x92\x6b\xf0\x1c\xd6\x09\x2e\x6c\xfc\xce\x5a\x27\x4a\xd8\xd9\x10\x7f\x52\x56\x1b\xf2\x1f\xc9\xc6\xd3\x15\x67\xe8\x81\xfa\x4d\x17\x45\x05\x7c\x54\x6b\xc2\x6f\x04\xab\x56\x84\xb2\xec\xab\x6b\x1b\x21\xab\xbb\x87\x7b\xd7\xbd\x8e\x6f\x8d\x6a\xc8\x92\xd0\x6c\x30\x40\xbb\x67\x5b\x07\x1a\xf1\x10\x4f\x14\xef\xf5\xa5\x46\x85\x80\x87\xba\xb8\x85\x7b\xd0\x8b\x90\xd5\x01\xd3\x7a\x78\x0f\xd5\xec\xa6\xa2\x84\x0c\x85\xf0\xd4\xd0\x14\x5d\x63\x43\xec\xa8\x18\x48\xfc\x42\x5b\xac\x68\x3b\x1e\x04\xef\x3d\xfd\xca\xd9\x93\x86\x2c\x39\xc4\x9a\xdd\x30\x5f\x47\xeb\x8d\xed\xe3\x65\x84\x04\x2a\x04\xf2\x32\xd2\xec\xf0\xdf\x2d\x6c\x6e\x4c\x34\x46\xc8\x33\xf2\xa3\x15\x6d\x93\xfa\x25\xd4\xc0\xa4\xf9\x44\xed\x96\xab\x33\x67\xab\x0c\x3e\xb0\x83\x66\x77\x73\x10\x6e\x55\xd5\xa0\x1e\xe6\xde\x6d\xc8\x7b\xd6\xd4\x45\xda\xc2\x9f\x39\x1b\xfd\xc4\xb2\xac\x87\x33\x7a\x5f\x5d\x1f\x9c\x15\x7a\x11\xa4\xcd\x77\x3c\x20\x8d\x30\x1c\x8c\x27\xc9\xbd\xc5\xd7\xdc\x08\x77\xb3\x1b\x54\x54\x67\x67\xe3\x90\xe0\xfb\x51\xf2\x8d\xf6\x3c\x86\xfc\xa3\x5d\x0f\xcf\xae\xed\xff\x7b\xfe\x2d\xcb\xc6\x0e\x77\xc7\x5a\x0e\x4f\xea\x49\x09\x25\x18\xcd\x22\xdc\xde\xe1\x15\x92\x6a\xd1\x49\xb5\xad\x68\x7c\x92\xed\x44\xfa\xe0\xaf\xf9\x8b\xf4\x8f\x63\xd2\xbe\xb3\x86\xd9\x68\xef\xa7\x86\xa9\x3c\x6b\xa9\xcb\xf2\x4f\x00\x00\x00\xff\xff\xe4\x64\xed\x6d\x56\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1366, mode: os.FileMode(420), modTime: time.Unix(1605565331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterDate_utc_converterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xc3\x30\x10\x86\xf7\x3c\xc5\xaf\x2e\x4d\x24\x14\x60\x41\x28\x90\x16\x09\x16\x58\xa1\x33\x32\xc9\xb5\x72\x49\xee\x22\xfb\xda\x25\xf2\xbb\x23\x3b\x6d\x24\x8a\x84\x17\x9f\xcf\xf7\x7f\x9f\x3d\x8e\x68\x69\x6b\x99\xb0\x68\x8d\xd2\x46\x9b\x67\xe1\x23\x39\x25\xb7\x40\x08\x19\x00\xd8\x7e\x10\xa7\x58\xb6\xc6\x69\x75\xb0\xcb\x87\xec\x57\x7b\x30\xcd\xb7\xd9\x51\xb5\xf7\xc2\x9f\x86\x59\xd4\xa8\x15\xbe\xbe\x38\x97\x31\x7e\xce\x36\x9d\xf1\x1e\x2f\x17\xc6\x88\xec\xa8\x27\x56\x8f\x37\x2f\x3c\x5f\x3c\xc6\xc9\x0f\xdb\xd3\x15\xde\xd5\x59\xde\xad\x30\x26\x4e\x62\x09\x7b\xfd\xc3\xca\x8b\x93\x2a\xae\x27\x39\x92\x73\xb6\xa5\xb9\x73\x06\x62\xeb\xa4\x8f\xae\x7c\x02\x23\xbe\xba\x40\xbd\x4a\x05\xea\x1a\x7c\xe8\x3a\xac\xa7\xad\x9a\x73\xe5\x60\x9c\xa7\x3c\x4d\xff\x2b\x3a\x61\x55\x92\x64\xd6\xca\xd7\x9e\x1a\x4d\xa2\xa9\x5c\x97\x2a\x1b\x6d\xf2\x22\x16\xaf\x5e\xee\xef\x6e\x6e\xa7\x6c\xfc\x49\x24\x85\x6c\x1c\x41\xdc\x22\x84\x9f\x00\x00\x00\xff\xff\x00\x01\xc1\x3b\xb6\x01\x00\x00")

func flutterDate_utc_converterTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterDate_utc_converterTpl,
		"flutter/date_utc_converter.tpl",
	)
}

func flutterDate_utc_converterTpl() (*asset, error) {
	bytes, err := flutterDate_utc_converterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/date_utc_converter.tpl", size: 438, mode: os.FileMode(420), modTime: time.Unix(1606432038, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xdb\x4e\x1b\x31\x10\x7d\xe7\x2b\x46\xd1\x8a\x04\x54\x9c\x77\x20\x88\x8a\x5b\xa9\x4a\x2b\x15\x78\x8e\xcc\x7a\xbc\x31\x6c\xec\xc5\x76\x90\xd2\x65\xff\xbd\xf2\x25\x7b\xcb\xa6\x54\x55\x9f\xd6\xeb\x99\x39\x73\x39\x67\x5c\x96\xc0\x90\x0b\x89\x30\x5a\x2a\x86\xf9\x08\xaa\x6a\x0f\x00\xa0\x2c\xc1\xe2\xb2\xc8\xa9\x45\x18\x2d\x90\x32\xd4\x23\x38\x8a\x46\xb1\x2c\x94\xb6\x30\x66\x54\xdb\xe3\x54\xc9\x37\xd4\x76\x7c\xb2\xd7\xb1\x15\x34\x7d\xa1\x19\x1e\x3f\x1b\x25\xe7\x54\x4a\x65\xa9\x15\x4a\x4e\x7b\xff\xc4\x61\xf4\x63\x09\x99\x32\x6a\x71\xbe\xb2\xe9\x3c\xc2\xa3\xee\x78\x96\x25\x24\x8c\xc3\xf1\x0c\xdc\xed\x4f\x7c\x5d\xa1\xb1\xd7\x02\x73\x66\x20\x21\x0f\xeb\x02\x61\xe4\x7b\x89\xde\xd3\x43\xb8\x0d\xe0\x76\x81\x90\xae\x8c\x55\x4b\x1f\x0a\x76\x5d\xa0\x21\x70\x38\x6d\x1a\xd7\x54\x66\x18\x61\xee\x68\x51\x08\x99\x99\xba\xf7\x76\x9d\x65\x09\x24\xc2\x56\xd5\xf8\xa4\xb6\x97\xe5\x11\x08\x0e\xe4\x62\x53\x7b\xed\xd4\x8e\xdc\xb6\x8e\x4f\xca\x12\x50\xb2\x3a\x59\xfc\xed\xf4\x71\xad\x34\xe0\x1b\xea\x35\x20\xcb\x70\x53\x8b\x6b\x2b\x43\x89\x9a\x5a\x64\xe0\xb9\x1c\x6c\x0a\xdd\xcc\x12\x72\xc5\x32\x1c\xee\x89\x90\xa9\x8f\x9e\xba\x11\xa3\x9f\x01\xf9\x4e\x97\x08\xef\x60\x24\x7d\x41\xa8\xaa\x0d\x13\xbb\x2a\xfc\x6a\x94\xbc\x47\x2d\x68\x2e\x7e\xd1\xa7\x1c\xa1\x58\x59\xd3\xab\x30\x55\x0c\x41\x48\xb0\x0b\x61\x80\x8b\x1c\x5b\xd5\x16\x34\x8e\x28\xd9\xca\x9c\x75\x54\x70\xde\xcf\x34\x39\x08\xf7\x97\xd4\xe2\xa3\x4d\xeb\x09\xc7\xfb\x34\xa7\xc6\x40\x03\x5c\x55\x50\xb6\x48\x6b\xae\x27\x07\x31\x43\xdd\xd3\xc3\x02\x81\x07\x7d\x29\xee\x7b\xe9\xcf\xb8\xc6\xb8\xbd\x0c\x02\x7c\xf7\x02\xf3\x47\x97\x28\x9a\x62\x86\xae\x58\x22\x39\x3c\x90\x13\x75\xdc\x66\x67\xe3\x98\xa4\xde\x85\xf1\x46\x3d\x4e\x0f\x09\x87\x01\x67\xc1\x81\x4a\x06\x09\x27\x9f\xeb\x7d\x33\x01\xfd\x06\x25\xb9\xa3\xc5\x8d\xf2\xe5\x25\x9c\x7c\xa1\x26\xfe\xf4\xd3\xb6\xd0\x92\x14\xaa\xca\x35\x12\xbf\x6d\xa9\xb6\x46\xb0\xe3\x3a\xe1\xbb\xe6\xc2\x87\xa6\xd2\xd1\x55\x87\x07\xf4\xe2\xfd\x88\x86\x08\x19\x94\xee\x43\x5a\x9c\x9e\xab\x37\xd4\x5a\x30\x6c\xf4\x2f\x2d\x64\x68\x61\x41\xcd\xe2\xc2\x89\x73\x76\xd6\xe7\x8c\x6c\x6c\x7f\x04\x7a\x52\x2a\x07\x55\x38\x9d\x2b\x0d\xb3\xd9\xe4\xc7\xd3\x33\xa6\x16\x94\x5d\xa0\x3e\x70\xb0\xfe\x04\xa2\xa7\xc4\xfd\xfd\x7e\x3e\x98\xcd\x82\x2f\xd9\x12\x4f\x9d\x8d\xd3\xd4\x2a\xbd\xee\x40\x11\xae\xd5\xd2\xad\xc6\xe4\x8e\x16\xa7\xf7\x56\x0b\x99\x7d\x02\xb6\x96\x74\x29\xd2\x33\x70\x2f\xb0\xaf\x63\x9e\xb4\xa3\xae\x37\x41\xde\xde\x30\x31\x88\x61\x95\x77\x1d\x80\x79\x08\x16\xb7\xd7\xed\x25\x0a\x08\x60\x55\x38\x84\x48\x97\xe9\x4a\xba\xa7\x60\xb2\x01\x8c\x89\xdb\xcf\xc9\x87\x94\xef\x7a\x06\xb6\xd7\x3d\x88\x61\x78\xe7\xbd\xad\xb7\xf8\x1f\xbe\x9a\xd1\xcd\xed\x06\x92\x47\x29\x5e\x57\x18\x57\xa4\xfd\x74\x86\x65\xc9\x8d\x3b\x7d\x13\xc6\x9e\x6e\x3b\x9c\xd5\x82\x87\x60\xfc\x9b\x8d\x18\x22\xdf\xd7\xf8\x6f\x0a\xf0\xa1\xff\x49\x06\x1e\xab\xab\x85\xc0\x6b\xd3\xc6\xef\x00\x00\x00\xff\xff\xe0\xa5\x78\x3c\x7c\x08\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 2172, mode: os.FileMode(420), modTime: time.Unix(1609938040, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdd\x6e\xdb\x38\x13\xbd\xd7\x53\xcc\x27\x18\xad\xec\xcf\xa6\xd2\x2e\xb0\x17\x59\xf8\xa2\xdb\xc5\xb6\x05\xda\x20\x9b\xb4\xdb\x6b\x46\x1c\x4b\x44\x24\x92\x25\xa9\xa4\x5e\x43\xef\xbe\x20\xf5\x63\xa9\x96\x8c\x24\x75\x81\xae\x01\x03\x12\x67\x86\x67\xe6\xcc\xf1\x90\xde\xed\x60\xa6\x6e\x53\x38\x5f\xc3\x0d\x35\x08\x61\x46\x05\xcb\x51\x87\x50\x55\xc1\x6e\xb7\x82\x7b\x6e\x33\xc0\xaf\x16\x05\x83\x19\x84\x97\x34\xb9\xa5\x29\x86\x3d\xc7\x55\x55\x05\x00\x00\xbb\x1d\x58\x2c\x54\x4e\xad\xdb\x06\x29\x73\x46\x52\xef\x03\x2e\xbc\xaa\x82\x80\x17\x4a\x6a\x0b\x91\x8f\x08\x05\xda\x38\xb3\x56\x85\xf5\xab\xb1\x3a\x91\xe2\x2e\x0c\xea\xd7\x94\xdb\xac\xbc\x21\x89\x2c\xe2\x54\xae\x92\x8c\xc7\x49\xc6\xc3\x31\x9b\xca\xe9\x36\xd5\xb2\x14\x2c\xbe\xa3\x39\x67\xd4\x4a\x1d\xdf\xbd\x38\x3b\x74\xce\x39\x57\xb1\xc9\x50\xf3\xcd\xe6\xd0\x5a\x50\x63\x10\xf3\x24\x8b\x35\x0a\x97\xff\x81\x87\xe1\xba\x54\x06\x45\x9c\xcb\x54\x97\xa6\x4d\xd5\xd1\x48\x5e\x4b\xb1\xe1\x29\x69\x28\x82\xaa\x0a\x1b\x5e\xe2\x05\xbc\xab\xeb\xa6\x79\x0e\x76\xab\xd0\x40\x69\x90\x01\x17\x60\x33\x84\x0d\xc7\x9c\x19\x58\xc4\x7b\x26\x35\x15\x29\x82\xba\x4d\xeb\x40\x03\xb3\x8e\xe7\x16\x90\xf4\x10\x5a\x7e\xe7\x41\x10\xc7\x70\x9d\x51\x8d\x0c\x9a\x0e\x91\xc0\x21\xb6\x6f\x60\xac\x2e\x13\x0b\x3b\x1f\xb9\x48\x32\x4e\x3e\x94\x5f\xeb\x32\x92\x9c\xa3\xb0\x7e\x1d\x85\x25\xaf\xfd\xab\xb7\x74\xac\xc2\xa2\x7b\x24\x7f\xd7\x4f\xe8\x3d\x72\x99\xa6\xa8\x7d\x6c\x4d\x0d\x79\xef\x57\x82\x2a\x08\xba\x7a\x66\xc2\x09\x6d\x46\x2e\x24\x43\x03\xfb\x6a\xf9\x06\x84\xb4\x30\x13\xe4\x95\x10\xd2\x52\xcb\xa5\x30\xe4\x6d\x9d\xf1\x1b\x14\xe4\xfa\x96\x2b\xaf\x9f\x96\x80\x38\x86\x8f\x19\xba\xd8\x99\x20\x17\xb4\x70\x74\xbf\x6d\xeb\x6d\x9d\x7c\xdd\x63\x2e\x43\x12\xda\xcf\xa2\xa1\xa8\x5b\x1c\xe2\xbd\xd6\xe8\xa4\x4d\x41\xe0\xfd\xe8\xae\x9d\xf3\xa6\x14\x09\x5c\xe0\xfd\x98\x53\x94\xf4\xc9\x5d\xc2\xdd\x18\xa3\x4b\x47\xe7\x37\x44\xce\x61\x31\x5a\xca\xb0\x86\xcc\x11\xfc\x6c\xcc\x71\xe8\xe7\x3e\xcf\xb2\x29\x8b\xfb\x7c\x28\xbf\x9e\x77\x2f\x4e\x26\x17\x78\x7f\x25\x4b\x8b\x3a\x9a\x2f\x47\x23\x6a\xf9\xf8\xa0\x64\xdc\xa3\xab\xf4\x1c\xee\xc6\x3d\x6a\x19\x9d\x37\x8f\x87\x3e\xd5\x70\xa9\xd7\x21\x78\x84\x94\x9a\x56\x56\xd5\x70\x66\xd5\x4e\x71\xe2\xad\xb1\x76\xc5\x86\x4e\xb3\xde\xaf\xf9\x85\x3d\x05\xee\x0a\x29\x9b\x02\xd3\x48\xd9\x09\xa1\x3e\x29\x76\xa4\xb2\xd2\x5b\x27\xe0\xfc\x9c\x7a\x02\xe4\x1f\x98\xe3\x34\x24\xf3\xd6\x16\xb2\x87\xd7\x4d\xbb\xc7\xe2\xbd\xe7\xc6\x4e\xa1\xe5\xdc\xd8\x89\xf2\xbe\xc1\x8a\x17\x60\x25\x93\xb0\x02\xe3\x66\x8b\x46\x23\x4b\x9d\x60\x6f\x0a\xf7\xf2\x3a\x04\x32\xe5\x4d\x1b\x12\xa7\x38\xc4\x1c\x42\x69\xb4\xa5\x16\x90\x8d\x4d\x95\x53\xea\x75\x52\x3e\xa7\x52\xe9\x77\x03\x3c\x44\x9b\x47\x55\x79\x4a\x45\x4e\x6b\xf1\x54\x3a\x9c\x56\xe0\x43\xd5\xf7\x10\xe5\xb5\x9a\x83\xc1\x3d\xa0\x07\xea\xc1\xae\x65\x81\x90\x61\xae\x50\x37\x18\xfe\x8c\x8a\xb2\xf6\x5a\x30\x87\x52\xe7\x97\x54\xd3\xe2\xda\x6a\x2e\xd2\xe8\x1e\xdc\xc5\x8c\x5c\xa1\x51\x52\x18\xfc\xac\xb9\x45\xbd\x04\x0d\x8b\x66\xfd\x4b\x89\xc6\x2e\x41\xb9\x18\x77\x9e\x72\x91\xce\x21\xe2\xac\x79\x5e\x02\x6a\xed\xbe\x52\xcf\x9b\x33\x8a\x33\x58\xfb\x93\xe4\xd3\xd5\x7b\x0f\x15\xe9\x26\x7e\x5e\xdb\x37\xde\x65\x0d\x61\xd8\x3b\xd5\xdc\x36\xeb\x7a\x23\xe3\xce\xa0\x28\xc4\x42\xd9\xad\xcb\xb7\x0e\x0e\xe7\x9d\x6f\x46\xea\xf3\x83\x7c\xe6\x36\xfb\xd3\xdd\xaa\xa2\xb0\xf6\x69\x81\xc8\x3b\xb1\x91\xc7\xb6\xa8\x2f\x7e\xe4\x77\xca\x9a\x12\xa3\xfb\x25\xb4\x79\xc2\xff\x21\x84\x84\x3a\x4d\xc0\x0d\xc2\xf3\xe7\x4d\x60\xd3\xdb\xfa\xa7\x1e\x1c\x21\xf7\x9d\xb0\xdf\xc1\x2c\x77\x17\x86\x03\x5a\x95\x3b\xf2\x8f\xd3\xaa\xfe\x93\xac\xf6\x28\xed\x91\xcc\xd9\xb2\xc9\xbe\xf9\xbb\x40\x5e\x59\xc9\x23\xd5\x15\xeb\x8c\xff\x5b\x83\xe0\x79\xaf\xde\x91\x1a\x3c\xf6\x12\x54\x97\xbd\x23\xc3\x65\x64\xb8\x48\xf7\x55\xa0\x45\xfd\xa8\x4a\x8a\xd2\xf8\x3a\x28\x28\x69\xb8\xe5\x77\xe8\x1a\x87\xee\x76\x9c\xfa\x49\xad\xe1\x1f\xd4\xf2\x68\x91\x9d\x92\xa6\xa5\xf4\x91\x17\xf8\x54\x2d\xf9\x39\x6c\x79\x81\xc4\xed\x72\x2a\x4d\xfd\x5c\x3a\xa9\xef\xd1\xb5\x52\x7c\xa9\x97\x54\x1b\x8c\xc2\x97\x67\x67\xbf\xae\xce\x5e\xac\xce\x5e\xba\xb4\x7e\x42\xd5\xf8\x4b\xb2\x4f\xdf\xfd\x3f\xdc\x6e\xb7\xdb\x55\x51\xac\x18\x83\x8d\xd4\x05\xb5\x4f\xd5\x8d\xa2\x29\x17\xfe\x24\xf3\x89\x3f\x4c\x39\x73\x88\x94\xfb\x2f\xeb\x27\x0f\xb7\x58\x98\x4b\xd4\x97\xdd\xca\xa1\x6e\x9c\x69\x0d\x2f\x6a\x56\xfb\xfe\x6b\xf8\xe5\x2c\x68\xc9\x66\x4e\x5e\xda\x89\x8b\xfc\x55\xa2\xde\x46\x73\xf2\x06\x6d\x14\xf6\x23\xc2\xf9\x6f\xc0\x5c\x4b\x06\x1a\xeb\x7b\x8c\xce\x01\xb6\xa7\x67\xaa\xab\x53\x5a\x1d\xa0\x2f\x81\x8d\xb7\xf8\x8b\x4b\x78\xdf\x64\x78\xde\x0f\xeb\x4b\xf2\x58\xdf\x07\x58\x4f\x98\x18\xdf\x74\xbf\x56\x40\x7f\x48\x4e\x73\xac\x26\xb9\x55\x3f\x80\x53\xf5\x38\x2e\xd5\x63\x38\x54\x3f\x86\xbb\xfd\x6f\xe8\xdf\x00\x00\x00\xff\xff\xcf\xbc\xa6\x65\x1d\x13\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 4893, mode: os.FileMode(420), modTime: time.Unix(1608729708, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x13\x8c\x42\x0a\x6c\x1a\x7d\x4d\xd1\x87\xb4\xe9\x32\x63\x5b\xb3\xc5\xd9\xf2\x50\x14\x28\x6d\x9e\x2c\x26\x0a\x29\x93\x94\x13\x4f\xd3\xff\x3e\xf0\x87\x6d\xc9\x92\x53\xb7\x43\x3b\x4c\x2f\x89\xa8\xbb\xe3\xf1\xbe\xef\xbe\xa3\xab\x0a\x18\xa6\x5c\x20\x44\x19\x15\x2c\x47\x35\x9e\x2b\xa4\x06\xc7\x4a\x96\x06\x23\xa8\xeb\x8c\xfc\x26\xb5\x89\xa3\x71\x34\x84\x8c\xbc\x75\x5f\x93\xaa\x02\x14\x0c\xea\xfa\xe4\xe4\x60\x08\xeb\x7c\x02\x00\x30\x1e\x83\x36\xaa\x9c\x1b\x30\x12\x66\x5c\x30\x30\x19\x42\x21\xb5\x81\x99\x64\x6b\x30\x92\x38\x3b\xb3\x2e\x10\xaa\x0a\x06\xe4\x3d\x7d\x40\xf8\x1b\xe6\xf4\x01\x73\xa8\x6b\xbf\xe9\x35\x2e\x4b\xd4\x66\x13\xab\x72\x3e\xf6\xa9\xaa\xf1\x29\x9c\x33\x06\x34\xcf\x21\xe5\x98\x33\x0d\x26\xa3\x06\xa8\x42\x10\xd2\x00\x3e\xcd\xf3\x92\x21\x23\x70\x3a\x0e\x39\x79\x3f\x50\x54\x2c\x10\x06\x29\x9c\xbd\x86\x01\xf9\xd1\xfb\x8e\x1a\x36\xde\x6e\x04\x03\xea\x4c\x52\x72\x2e\x84\x34\xd4\x70\x29\xb4\xb7\xbf\x44\x01\x3d\x0e\x3c\x75\x5b\xc7\x54\x30\xeb\x3c\xa0\x64\x7a\xcf\x8b\x50\xbe\x7d\x87\x90\xcd\x20\x25\x53\x77\x38\x17\x18\xea\x3a\x2c\xde\xac\x0b\xb4\x5f\xb8\x58\xd8\xc5\x4f\x77\x5a\x8a\xb3\xa8\xaa\xc0\xd0\xc5\x2f\x52\xde\x97\xc5\xce\xf5\x86\x2e\x20\xb2\x06\xb6\xfc\xd6\x86\xa7\x76\x73\xbf\xf1\x9f\x34\xe7\xcc\x25\x6f\xcd\x42\xfc\x43\x1f\xb7\x18\x7f\xea\x1c\x2e\x60\xbf\xbf\x34\x6a\xad\x35\x40\x41\xb6\xc0\x63\x31\x19\x6d\x40\x41\x0f\xca\x3b\xe7\xfb\x0c\x26\xf8\x25\x98\x58\x38\x62\xbb\xff\x00\x7d\x59\x9b\xbe\x3f\x79\xfe\x5e\xa2\x70\x60\x25\xde\xb2\x1f\xc2\x83\x18\x62\x0f\x86\x81\x0c\x03\x24\x7f\x08\xbe\x2c\x11\xea\xfa\xc3\xc7\x6d\x7d\xbd\x97\xcb\x66\x72\x71\x14\xd8\xf8\xbd\xc1\x1e\xf5\xa0\x1d\x96\xea\x93\x4d\x93\xdf\x64\x5c\x43\x5a\x8a\xb9\x0d\x0b\x5e\x04\x34\x50\x10\xf8\xd8\x68\xeb\xba\x86\x07\xc9\x30\x77\x50\x68\x23\x15\x6a\xe0\x06\xb8\x70\xaa\xc0\xa8\xa1\x33\xaa\xd1\x2b\x82\x0d\x16\x67\x2d\xe7\x80\x51\x02\xfe\x1c\xf1\x23\x64\xc6\x14\xe4\x1a\x75\x21\x85\xc6\x5b\xc5\x0d\xaa\x21\x28\x38\x0d\xeb\x4e\x34\x92\x86\x5c\x8c\xc7\x70\x89\x66\xa7\x41\x76\x4b\xb2\xfd\xca\x2c\xa7\x9a\x22\xa4\x05\xbd\xc7\x7d\x11\xaa\x6a\x1b\xc6\x48\x26\x61\x64\x19\x2e\x1f\x21\x95\xea\x61\x54\xaa\x7c\x84\x62\xce\x24\x43\x36\x7e\x7a\xc8\xc7\x85\x92\x46\xce\xca\x74\x6f\x17\x9e\x02\x2a\x65\xb7\xb2\xe8\x91\xf7\xf8\x78\x81\x73\xc9\x50\xc5\x8a\xbc\x91\x6c\x9d\x10\xff\x1e\xbf\x60\xc9\x2b\x67\xfa\xc3\x6b\x10\x3c\x6f\x1c\xc3\x3e\x19\xc9\xe5\x62\x81\x8a\xdc\x72\x93\xbd\x53\x4a\xaa\x18\x95\x4a\x88\xff\x37\x42\xfb\x07\x98\x8d\x64\xd9\xe4\x88\x92\xb4\x02\x28\x14\x0c\x15\x79\x43\x59\x38\x58\xfc\x38\x04\x35\x84\x88\x8b\x95\x65\x88\xf3\xb1\x8a\xcb\xc5\xa2\xe3\x6a\x4a\x25\xb6\x4b\x81\x06\xa1\xc0\x81\x5e\xb8\xc5\xb4\xef\xe8\x19\x59\x79\x33\xa9\x02\x9f\xe3\x67\x4f\xeb\x3d\x87\x20\xef\xad\x37\x2a\x45\xe2\xd3\x5d\x84\x89\xcf\x78\x47\x6c\x57\x84\xe4\x95\x35\xaf\x3a\x9d\x7a\x54\xe5\x42\x70\x5b\x3b\x15\x86\x8f\x3d\xcb\x5e\x21\x1a\x75\x9c\x08\x83\x4a\xd0\x7c\x8a\x6a\x85\xca\xc7\xf2\x05\x15\x3c\xef\xf3\x6a\x95\x70\xaf\x8c\xcf\xa5\x39\x11\xa9\x8c\xa3\xd5\xf6\xac\x90\x52\x9e\x23\x3b\x12\x5d\x1b\xe2\x78\x2c\xa7\x74\xd5\x87\xe3\xcc\x43\x38\xcf\x39\x0a\x43\x9a\x2d\x1a\x24\x26\x4e\xfa\x54\xfd\x3f\x18\xb5\xa4\x53\xf8\x29\x9a\xbe\x71\x1b\x33\xd2\xb7\x9c\x1c\x21\x89\x7d\x23\xf1\x7f\x33\xc7\xba\x05\x0a\xbb\x34\x07\x56\xc7\xa6\x51\xc8\x90\x43\xc0\x7f\x72\x11\x0a\xb9\x3f\x0a\xbb\x1d\xe0\x8a\x99\xeb\x83\xf1\xcf\x19\xeb\x8b\xaf\x0f\x6c\x40\x08\x39\xb0\x47\x1b\x9d\xcf\xe3\xd8\x6a\x00\x3b\xa4\xec\x80\x6a\x0f\x27\xfb\xe0\x70\x23\x66\x33\x62\xfb\x24\x56\xe4\xad\x14\x06\x9f\x4c\x9c\x24\xfb\x92\xf7\xf5\x12\xae\xe9\xca\x8a\x50\xb3\xc9\xfa\x5b\xfd\x0b\x04\xe8\xd9\x9e\xbf\x46\xca\xdc\xdc\x46\x61\xd4\x7a\x77\xde\xe5\xe1\xa6\xff\xbd\x44\xb5\x8e\x13\x72\x9b\xa1\xc2\xb8\x6f\x82\x92\xc9\x45\x6c\xaf\x38\x49\xaf\x30\xb4\xda\xa4\x83\xd5\xc6\x6a\xe1\xad\x0e\xb0\xdd\x73\xfa\x52\xc9\xb2\xe8\xc4\x68\xc7\x41\x17\x48\x17\x39\x37\x10\x1f\xba\x59\x2d\x5c\xa0\x28\x81\x68\x18\x1d\x62\xa8\xbf\x74\xe1\xd2\xa6\x66\xa3\xd6\xf5\xd2\x41\x59\x55\x50\x50\x3d\xa7\xb9\x8d\x19\x6a\x14\x27\x5d\xa1\xe8\x52\xef\xf9\xd5\xee\x0a\xbe\xdc\x92\x70\x49\xae\x44\xbe\xfe\x46\x24\x54\x48\xd9\xf7\x65\xe1\x14\x15\xa7\x39\xff\xab\x6f\xfc\x38\xe1\xf4\x00\x7d\x15\x25\xee\xb6\x45\xd3\x19\x2a\x9e\xa6\xe4\x57\xaa\x74\x46\xf3\xf8\xc5\x66\xe1\xaa\x70\xd1\x2a\xef\x7c\x06\x1f\x3e\xfa\x8b\x50\xd5\x27\xc8\x9b\x5c\x7a\xa1\x1d\xb5\xe9\xeb\x4d\xdd\x8d\x7d\xb0\xa8\xeb\x68\x18\x40\xed\x0e\x07\x2f\x8e\xfb\xeb\xf6\x89\xfa\x3a\xec\xcc\x62\x14\x7d\x56\xe6\xea\x7a\x08\xf8\xf2\xdf\x51\xc3\xbe\x3a\xd9\x8d\xa3\x96\x0c\xb8\x97\xc9\xc5\x96\x20\x43\x70\x2d\xbf\xa1\x92\x0e\x90\xfa\x5b\x8b\x23\xd6\x37\xe4\x50\x2b\xf9\x4e\xb6\xbb\xba\x6d\xb3\xf4\xf7\xaa\x3e\x93\x90\x57\xeb\x8e\x15\x52\xbd\xfa\x39\x64\x76\x97\x84\x5f\x44\xdb\x26\xfd\x27\x00\x00\xff\xff\x06\xc1\x56\x13\x60\x11\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 4448, mode: os.FileMode(420), modTime: time.Unix(1608651628, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\x12\x46\x2d\x2d\x6c\xba\xbd\xa6\x30\x8a\xec\x26\xcd\x06\x4d\x9b\x34\xc9\x22\x87\xa2\x07\xda\x1c\x49\x6c\x68\x52\x26\xa9\x64\x53\xad\xfe\x7b\x41\x4a\x72\x64\x59\x4e\x76\x81\x5c\xaa\x8b\x2d\x71\xf8\xe6\xeb\x71\x1e\xcb\x12\x38\x26\x42\x21\x90\x8c\x29\x2e\xd1\xcc\xa5\xb0\x6e\x6e\x74\xe1\x90\x40\x55\x65\xf4\x0c\x5d\x44\xe6\x64\x0a\x19\xbd\x10\xd6\xc5\x65\x09\xa8\x38\x54\xd5\x68\x74\x68\xf7\xa6\x40\xf3\x34\x4b\x84\x74\x68\x3c\xc8\x08\x00\x60\x3e\x87\xcf\x16\xc1\x65\x08\x61\x1d\x72\x66\xd8\x1a\x1d\x1a\x0b\x4e\x43\x6d\xfd\xbc\x4c\xc1\x69\xae\x61\x06\x0a\xad\x43\xde\xac\xff\x12\xa0\xca\x72\x06\x86\xa9\x14\x61\x9c\xc0\xd1\x02\xc6\xf4\x57\x81\x92\xdb\xd6\x55\x6b\x33\xfe\xc7\x6a\xf5\x07\x5b\xa3\x37\x12\x8a\xe3\x17\x88\x6c\x2e\x85\x83\xc8\xb1\xf4\x42\xeb\xfb\x22\x87\x71\x42\x6f\x9c\x29\x56\xee\x96\xa5\x40\xfc\x0e\x12\x03\x99\x92\x18\x7e\xec\xe2\x89\x04\x82\x2f\x43\x3f\x5f\x5f\xd0\x3f\x7d\x88\x51\x5c\x17\xa7\x2c\x3b\x9e\xaa\x8a\xc4\x3f\x43\x02\xef\x16\x40\x08\x94\xdb\xfd\x6d\x4c\x22\xf1\x1e\x3f\x31\x7b\xa6\x6f\x9f\x72\xec\xba\x68\x9f\xf9\x3c\xe4\xde\xdb\x8a\xd2\x62\xb3\xfb\xdc\x7e\xd0\x5a\x0e\x6d\x7d\x60\x06\x96\xb0\xd4\x5a\xee\x2d\x85\x04\x16\x0b\x20\xce\x14\xd8\x8f\xac\x7d\x96\xb0\x00\xbf\xbe\xb7\x58\x41\xeb\xbf\x06\x49\x98\xb4\x2f\xa2\x04\x83\x43\x30\xc3\xdb\x32\x2a\x75\x9a\xa2\xa1\x77\xc2\x65\xa7\xc6\x68\x13\xa1\x31\x71\x78\x0d\x0d\xde\x2f\xf5\x14\x92\x98\x9e\xe0\xb2\x48\x23\xb2\xd2\x85\xe4\xa0\xb4\xf3\xcc\xb2\x7b\x2c\x23\xf1\xa0\x53\x83\x8a\xa3\xa1\x1f\x18\xbf\xc6\x4d\x81\xd6\x45\x8f\x53\x30\x53\x20\x93\x9e\xaf\x09\xac\x0b\xeb\x60\x89\x30\xf1\x15\x9a\x80\x36\x30\x09\x59\x4e\x0e\x42\xbb\xc2\xa8\xfd\x1a\xec\x7d\xd9\xd0\xbb\x0c\x0d\x46\xde\x23\xbd\x62\xab\x7b\x96\x7a\x8f\xb4\x2c\xb7\xe4\x0c\xf9\x57\x55\xb4\x8c\xe3\x1e\x2f\x60\x87\x18\xe7\xca\x0d\xf1\x42\x4c\x01\x8d\xf1\xfc\xb5\xce\xac\xb4\x7a\xa0\xc7\x4e\x8b\x28\xd9\x0f\x5c\x24\xc1\xf2\xdd\x02\x94\x90\xff\xf3\x46\x31\x05\x42\x39\x4c\x5f\xc0\x7c\xfb\x0e\x89\x57\x3a\x74\xe3\x8c\x50\xe9\x50\x93\xbe\xc3\x49\xf2\x8a\x93\x5b\xb1\xfe\x8e\xd1\x12\x06\xfa\xac\x63\x5e\x8d\x3a\x0b\x55\x35\x7a\x7d\xe6\x77\xc7\xfc\x6d\x26\x2c\x24\x85\x5a\x39\xa1\x55\xe8\xae\x40\x0b\x89\x36\x10\x32\x6b\xda\x04\x6b\xcd\x51\x5a\x0a\x1f\x99\xf2\xcd\xaa\x07\x3c\x72\x58\x3e\xed\x09\x04\x0d\xd0\x1e\x32\xca\x76\x40\x3e\xd5\x21\xc4\xe0\xa5\x29\x7a\x84\xcc\xb9\x9c\x5e\xa3\xcd\xb5\xb2\x78\x67\x84\x43\x33\x05\x03\xef\x9b\xef\x81\x37\x71\x87\xd5\x1b\x7f\x24\x32\xba\x92\x02\x95\xa3\x5d\xe4\x76\xc4\x8f\x3a\x8a\x12\xca\xcb\x75\x2d\x39\xc7\x4a\x69\xc7\x7c\x8a\x96\x36\x61\x9c\xa1\xa2\x27\x98\xb0\x42\x3a\x1f\xcf\xa5\xe1\x68\xfa\x5d\x10\xc9\x90\x84\x68\x6f\x4a\xe2\x30\x5a\x87\xa6\xea\x86\x06\xb0\x68\x90\xc5\x1d\x39\xac\x63\xf3\xba\x39\xd0\xfc\xf6\x69\x52\xf5\x27\x7d\x03\xd1\x58\xd7\xd8\xf0\x15\xa4\x7e\xf4\xb5\x24\x1c\xed\xca\x37\xf4\x04\xed\xaa\x65\x56\x55\x1d\xd7\x2f\x81\x07\xf5\x01\xd7\xb5\xee\x06\xcd\x9b\x1e\x0c\xad\x4f\xae\xf6\xd9\x65\x70\x57\xb9\xb7\x64\xeb\xc2\x8c\xd1\xfa\xe4\x90\xa5\x68\x2e\x34\xe3\xc8\x4f\x79\x8a\x16\xc6\x40\x7c\xb1\xcf\x8c\x2e\x72\x4b\x76\xaf\x00\xa1\x61\x68\xfb\x3d\x98\xcf\xe1\xd4\xc3\x80\xd4\x8c\x03\x7a\x18\xba\x63\xb0\xd9\x93\xed\xa6\xbe\xe1\x26\xe1\x11\x87\x12\x0a\xf3\xaf\x2c\x21\x67\x76\xc5\x24\x8c\xb1\xe5\x52\xd4\x3f\xac\xb3\x36\xc3\x17\x72\x9e\xcf\xe1\x8a\xa5\x42\x05\x8a\x6d\xbf\xe6\x2c\xc5\x29\x08\x87\x6b\x7b\x85\xe6\x2a\xbc\x35\x93\x3d\xa3\xf9\xd6\xfe\x5c\x25\x3a\xcc\xc7\xb8\x7b\x81\x39\x38\xd8\x7b\x73\xb0\x13\xc5\x86\x5e\x88\xb5\x70\x51\xd7\x63\x4c\x2f\x93\xc4\xa2\x8b\x22\x1f\x0d\xcc\xe0\xa7\x18\xde\xef\xc4\xb4\x7b\x6a\x1c\xae\x73\xc9\xdc\xcb\xb7\xc4\xf1\x4e\xf2\x68\xb7\x69\x6d\xe8\xb1\x94\x91\xa1\x1f\xb5\x72\xf8\xc5\x45\xf1\xb7\xa5\x74\x48\xa3\xea\xbf\x04\xfd\x4f\x3d\x67\xfc\x34\xe6\xcc\xb1\x25\xb3\x48\xe2\x76\x44\xc2\x0c\x96\xe8\xfc\x95\x34\x98\xf6\xca\x15\xa4\xe8\x5c\x39\x34\x8a\xc9\x1b\x34\x0f\x68\x6a\xe0\x5a\x93\x94\x90\xf1\x37\x16\xd8\x9f\xa3\x34\x70\xf7\xc5\xb1\x72\x8d\x8c\xd7\x14\xef\xd2\x86\x3f\xcb\x7a\x86\x46\x24\x09\xfd\x9d\x19\x9b\x31\x19\xfd\xd0\x7e\xb8\xcc\x03\x56\x59\x6f\x3e\x82\xbf\xfe\xb6\x41\x80\x86\x6f\xa6\xe9\x9e\x8b\xae\x45\x73\x08\xd2\x10\x69\x6d\x5a\x55\xa4\x2c\xc7\xa9\x57\xf8\x01\x1d\x81\x8e\x34\x0d\x9d\x18\xf2\x3c\x71\xbf\x82\x55\xec\xde\x9f\x96\xa3\xa0\x27\x83\x27\x66\x47\xa3\xaa\x29\xa0\x7d\x13\x32\x58\x34\x82\x49\xf1\x6f\x28\x7b\xdd\x6f\xd2\xef\xdf\xdb\x75\x7c\x27\x98\xe6\xba\xc4\xd6\xba\x50\x8e\x4c\x41\xa2\x8a\xd0\xc6\x31\x0d\x27\x78\xb0\x3e\x4d\x30\xc8\x3b\x31\x36\xf1\x5d\xfe\xd6\x84\xc3\xeb\x25\xaf\xdc\xa8\x78\x55\xfd\x17\x00\x00\xff\xff\xeb\x5e\xb7\x44\xe8\x0d\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3560, mode: os.FileMode(420), modTime: time.Unix(1608651633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6f\xdb\x3c\x0c\xbd\xe7\x57\xf0\x33\x82\x0f\xf6\xe6\x28\xf7\x00\x3d\x0c\xcb\xd6\x19\xc3\xd6\xad\x1d\xd0\xc3\xba\x83\x5a\xd1\x96\x30\x85\x4e\x28\xb9\x5d\xa7\xe9\xbf\x0f\x96\x93\xd4\x69\xda\xa1\x3c\xd9\x14\xf9\xf8\x48\x3e\x86\x00\x0a\x6b\x43\x08\x99\x96\xa4\x2c\xf2\x9c\x51\xaa\x39\xb7\x9d\xc7\x0c\x62\xd4\xe2\x14\x7d\x9e\xcd\x83\x51\x21\x80\xa9\x61\x2a\xaa\xa5\xa8\x5c\x45\x1e\x62\x5c\x5c\x5d\xa9\xd7\x21\x00\x92\x82\x18\x63\x56\x82\x16\xe7\x28\x55\xb1\xf7\x4d\x26\xcf\x94\xe8\xc1\x27\x00\x00\xf3\x39\x7c\xd3\xc6\x41\xdd\xd1\x8d\x37\x2d\x41\x8d\xfe\x46\xa3\x03\xaf\x11\x42\x80\xa9\xf8\x2c\x57\x08\x31\xc2\xaa\x55\x68\xc1\x28\x24\x6f\x6a\x83\x0a\xae\xef\x41\x42\x63\x6e\x11\x3a\xb6\xb3\xb5\x64\xb9\x42\x8f\x0c\x35\xb7\xab\x1d\xb6\x92\x5e\x5e\x4b\x87\x20\x49\x01\xa3\xef\x98\x1c\x18\x0f\xbe\x4d\x05\x6e\xac\x41\xf2\x22\x45\xf7\x0c\x72\x7d\x50\xf3\xc3\xc0\xb8\x80\xbe\xab\xfc\x0e\xb4\xf7\x6b\x71\x8e\x6e\xdd\x92\xc3\x4b\x36\x1e\xb9\x04\x86\x57\x5b\xff\xa6\x43\xe7\x0b\x08\x09\xae\xb7\x10\x66\x47\x43\xdb\x3f\xf6\x66\x54\x09\xc8\x0c\x8b\x13\xd0\xa2\x63\xfb\xa5\x6f\xa2\x22\x9f\xdf\x95\xc0\x25\x64\x46\x65\xc5\x08\x0d\xd0\x3a\x7c\x11\xc6\x85\x67\x43\xcd\xb3\x30\xa4\x60\x36\x82\x31\x75\x42\xf8\xef\x04\xc8\xd8\x11\xff\xde\x86\xa1\xed\x5d\x71\xb2\xff\xdc\x0c\x25\xb7\x33\x1c\xcf\x4d\x7c\xed\x90\xef\xf3\x42\x5c\x6a\x64\xcc\x1f\x9e\xfe\x80\x23\xf9\x33\x85\x54\xcb\xdc\xa8\xe2\x80\x96\xc7\xd5\xda\x4a\x8f\x90\x25\x15\x6e\xae\x33\x98\x8e\xbb\xc5\x7d\xa3\x1b\x71\x46\xf6\x3e\x67\xf1\xb6\x25\x8f\xbf\x7c\xfe\x4f\x20\x64\x6e\x79\x96\xe4\x67\xa8\xd9\x82\x8e\xe3\xa7\x0d\xb7\xdd\xda\xf5\xc8\x53\xf1\x86\xa8\xf5\xb2\xd7\xa2\x13\x5b\x01\x9c\x22\x25\x61\x9f\x0e\x61\x23\x4a\x0f\xb3\x77\x1a\xd9\xd4\xb5\xf8\x24\xd9\x69\x69\xf3\xff\x77\x8e\xb3\x75\xc2\x0a\x43\xf2\x02\xbe\xff\x70\x69\x39\x87\x63\xde\x49\xa5\x39\x2a\x31\x8e\x60\x49\x0d\xc2\xb4\x49\x4c\x87\xd0\x18\xb3\x10\xa6\x4d\x7f\x7e\x4f\x6c\x76\xac\x9b\xc7\xfe\xde\xb2\xa7\x76\xb3\x48\x17\x7a\x44\xef\x31\x76\x8c\x25\x60\xf1\x22\x11\x69\x61\xdb\xa6\x41\x16\x97\xc6\xeb\x77\xfd\x3a\x72\x64\x2e\xd2\xef\x7b\x83\x56\xe5\xd9\x81\x7e\xd2\x4f\xb5\xdc\xfd\x67\x25\x18\x55\x88\x21\x31\x73\xc8\x46\x5a\xf3\x3b\xed\x08\xd2\x72\x47\xf2\x1e\x34\x4b\x0a\x59\x54\xe4\x91\x49\xda\x0b\xe4\x5b\xe4\x21\x7b\xb8\x08\x32\xf6\x71\xc6\x73\x2a\x3f\xa0\x7e\xc4\xf5\x61\x68\x59\x09\x28\xaa\x65\x21\x2a\xaa\xdb\xa7\x43\xb6\xbc\x70\x7c\x8d\x5b\xaa\x67\x1f\xb7\xcc\xd4\xf0\x14\x27\x21\x20\xa9\x18\xff\x06\x00\x00\xff\xff\x12\x11\x53\xd7\xa3\x05\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1443, mode: os.FileMode(420), modTime: time.Unix(1608651637, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x4c\x09\xa1\x90\x52\x9b\x42\xaf\x01\x72\x58\x6c\xd2\xd4\x68\xda\xa4\x49\x17\x39\x74\x8b\x82\xb1\x46\x32\x11\x99\x94\x48\xaa\x69\xaa\xd5\xbb\x17\x24\x65\x5b\xb6\x25\xd9\xd9\xa0\xed\x16\xd8\x39\x59\x32\x39\xff\xdf\xfc\xa8\xae\x21\xc1\x94\x0b\x04\xb2\x60\x22\xc9\x51\xc5\xba\x7a\x50\xa8\x65\xa5\xe6\x18\x67\x68\x62\x25\x2b\x83\x04\xa6\x4d\xf3\x06\x00\xa0\xae\x41\x31\x91\x21\x04\x08\xa7\x67\x10\xd0\x8b\x24\x43\xbd\xfe\xdb\x1f\x99\x02\x4f\x41\x48\x03\x01\xd2\x5f\x9e\x0b\xa4\x6f\x85\x90\x86\x19\x2e\x85\xa6\xdf\x7b\x41\x97\x28\xe8\xdd\x23\x2f\xa0\x73\xd3\xd2\x82\x5e\xa2\x09\x49\x5c\xf3\xa4\xae\x2d\x9f\x80\xce\xce\xe9\x4c\xcf\x84\x81\xa6\x39\xfd\xf0\x21\xf9\xa6\xae\x01\x45\x02\x4d\xd3\xc4\x56\x1d\x2c\x72\x36\x47\x08\x03\xa4\x3f\xb1\x25\xc2\x47\xd0\x82\x3d\x62\x04\xe4\x77\x02\x64\x4a\xa0\x69\xc8\x04\x16\xb4\xae\x61\x73\xa4\x60\x7a\xce\x72\x68\x9a\xa8\xa3\xb7\x63\xdb\xb1\x74\xf5\xd8\xf9\xf9\xe6\xb0\xcb\x08\x8c\xfb\x6a\xcb\x55\xaf\xf0\x54\x5d\xc7\x27\x70\x8b\x2c\x89\xaf\xb8\x36\x20\x0b\x54\xfe\x22\x48\x01\x5e\x27\xaf\x94\x86\x93\x78\xe7\x6e\x5a\x89\x79\xb8\xb0\xf2\x03\xef\x91\xa6\x69\xa5\x45\xd0\xef\xa7\xf0\x09\x16\xc6\x14\xf4\x16\x75\x21\x85\xc6\x7b\xc5\x0d\xaa\x09\x28\x38\x69\xdf\x97\x15\x6a\x13\x41\xbd\x25\xa8\x93\x10\x5b\x81\xdc\x3b\x64\x89\x27\x13\x40\xa5\xac\xb3\x16\xb4\x52\xf9\x0d\x53\x6c\x39\x13\x26\x7c\x9a\x80\x9a\x00\xe1\x09\x89\x7a\xb8\x03\xe6\x1a\x5f\xc4\xf3\xce\x28\x2e\xb2\x83\x6c\x3b\xd9\xb0\xc5\x32\x75\x1c\xbf\x3a\x03\xc1\xf3\x1e\x7b\x2d\x29\x34\x95\x12\x7b\x7f\x35\x6f\xf6\x5e\x95\x5e\xb5\x79\xce\x51\x18\xda\x8d\x08\xfd\xb9\x42\xf5\x1c\x46\xf4\x7e\x81\x0a\xc3\xcd\x5f\x6d\x86\xdb\x23\xb3\xf3\x90\x27\x51\xe4\x8f\x0e\x44\x2e\xda\x17\xda\x42\x0b\xe9\x7b\xc1\xcb\x6a\xd0\x79\x75\x0d\x06\x97\x45\xce\x0c\x02\x51\x36\xd5\xca\x07\xb2\xca\xd5\xa1\x4b\xb8\x76\x78\x49\xaf\x45\xfe\x1c\x2a\xfa\x4e\x0a\x83\x7f\x9a\x30\xda\xf7\x73\xbf\x18\x54\x4a\xaa\xa9\x03\x18\x17\xd9\x96\xc8\x21\x0e\x41\xa6\x64\x55\x68\x87\xb4\x71\x30\x59\xcc\x5c\xfa\xc3\x03\x26\x6c\x72\x46\x2f\x50\xf1\x34\xa5\x3f\x32\xa5\x17\x2c\x0f\xbf\x5e\xbd\xb8\x2e\x1c\xdf\xda\x33\x3a\x85\x5f\x7f\xd3\x2e\xa9\xfa\xd3\x01\x3a\x30\xc8\x46\x45\x77\x4f\xb7\xd5\x23\x73\x36\xf9\x6b\x4d\x43\xea\x3a\xc8\x6c\x49\x1b\xc9\xd0\x8e\x5b\x1c\x36\xc6\xce\x58\x22\x3e\x73\x9c\xd3\x76\x32\xec\xd4\xc6\x83\x8c\x1a\x35\xa6\x45\xd3\x4c\x00\xfb\xa3\x7e\x0c\x8c\xc0\x75\x84\x5c\x66\x19\x2a\x7a\xcf\xcd\xe2\xc2\x26\x46\x88\x4a\x45\xee\xf1\x3b\x8e\x79\x12\xee\xa9\xdf\x34\xb4\xf3\x6a\x76\xbe\x7a\x4b\x26\xc0\x93\x88\x7a\x26\x44\xa3\xe2\x2c\xe7\x7f\xb9\x0c\x01\x97\x72\x3d\x85\x60\x45\x0a\x45\x82\x8a\xce\x84\x41\x25\x58\x7e\x87\xea\x0f\x54\x9e\x93\xaf\x23\x82\xe7\x63\xb7\x7b\xeb\x01\xf4\xd7\x84\x3d\xb3\x07\xec\xdc\x84\x89\x4c\xc0\x1a\x1a\xd1\x99\x48\xe5\xd8\xc1\xd6\x0e\xec\xab\x79\x1d\x33\xaf\x7f\x68\xad\x4a\x5e\x5c\x71\xdb\xda\x92\xc8\x16\x8a\x5d\x14\xda\x0e\x68\x21\x78\x8e\x29\xab\x72\x73\xad\x12\x54\x63\x48\xe0\x29\x28\xfa\xfe\xf6\x6a\x5d\x0a\xdd\x70\x20\xed\x35\x12\xc1\xd9\x19\x10\x32\x92\x39\x96\x4a\xea\x84\x84\xa3\x87\x60\x1b\x70\x5e\xf3\x44\x1e\xc4\xcd\x8a\xda\xca\x6d\x33\xba\x84\x30\x90\x5e\x26\x7c\x84\x5c\x3e\xd9\x96\x4a\x12\xd4\x73\x3b\x17\x9c\xa3\x9e\x6f\xdc\xf7\xd6\x3f\xb8\x59\xc6\xc7\x4c\x52\x17\x69\x1b\xd0\x68\x72\x94\xca\x87\x4a\x80\xa5\xe1\xb4\x1c\x8c\xa0\xd3\x70\x2b\x8c\x63\x15\xb5\x0d\xa7\x9d\x43\xbe\x84\xf4\xb3\x0d\xa9\x53\x6a\xa8\x7f\x4e\x21\x40\xd7\x3c\x91\x65\xa8\xae\x24\x4b\x30\xf1\xf3\xea\xaa\xf7\x12\x1b\x5e\xdf\xee\xc8\x01\xec\xe3\x68\x7b\x8b\x63\xb8\xb0\x42\x20\x97\x2c\x01\xb4\x42\xe8\xe0\xe1\x72\xb4\xf5\x6c\xcd\xd7\x3b\x7b\xc8\xb0\x7e\x76\xe0\x0e\xb1\x5c\x5b\x16\x44\xb6\x63\xd8\x3a\x5b\xd7\xab\xb9\x29\x58\xb7\x92\xe3\xf2\xec\xd3\xb1\x72\x6c\x46\xba\x99\xbd\x84\x13\x37\x07\xbe\x93\x22\xe5\x19\xbd\x61\xf3\x47\x96\xd9\xfa\xfe\xc0\xf4\x6e\xdf\x6b\xf5\x77\x38\xeb\x9b\xcb\x87\xe8\x68\x7c\xed\xfa\xe0\x53\xb1\xd6\xa5\xff\x08\x77\xbb\xa6\x1c\x83\xc1\x2e\x0d\xe3\xb1\x4b\x87\xf9\x1d\x8d\xff\x0d\xa0\x0f\xb1\x1a\x86\xea\x58\x45\x88\x63\xb8\x61\x19\x17\x2e\x81\x7b\x4f\x14\x2c\xc3\x09\x70\x83\x4b\x7d\x83\xea\xc6\x3d\xad\x37\xad\x62\x7d\xd7\x0d\x24\x76\x96\x78\xdd\x14\xf8\xf2\x01\xaa\xa4\x57\x7c\xc9\x4d\xd8\xd5\x30\xa2\xd7\x69\xaa\xd1\x84\xa1\xd5\x1e\xa6\xf0\x6d\x04\x27\x5b\x36\xf4\x2c\x4b\xb0\xbb\xa2\xac\x16\xff\x9c\x6b\x13\x97\x16\x5e\xd3\x94\xe7\x06\xd5\xe1\x45\x05\x75\x67\x3b\x7a\x9b\xe7\x87\x97\xa3\xd7\x8e\xc9\xed\xb0\xeb\xc6\x5b\x70\xca\x72\x91\x41\xc2\x0c\xb3\x25\x83\x44\x36\xd2\x46\x5a\xb4\xc2\x03\x1a\x83\xca\x4f\xc2\x9f\xcd\x1c\xfc\xa2\xd5\x6e\xd3\xa2\xbe\xac\x76\x9e\xc6\x56\x3b\x9b\xbf\xaf\x5c\xed\xf4\x3f\x9a\xb4\xff\xbf\x0d\x8d\x2d\x65\x25\x0c\x99\x40\x8e\x22\x44\x1d\xfd\x6b\x0b\xd9\x7e\xa1\x6f\x76\xbf\x6c\x76\x6b\x92\xfb\x78\xf8\x4e\xa1\xad\x67\x47\x7d\x39\xdc\xf0\x58\xff\xfa\x3b\x00\x00\xff\xff\x95\x93\x9f\xb4\x3e\x16\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 5694, mode: os.FileMode(420), modTime: time.Unix(1608651640, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x5d\x73\xdb\xb6\x12\x7d\xf7\xaf\xd8\xcb\xd1\x64\x48\x5d\x09\xba\xcf\xce\x64\xee\x24\x75\xea\x6a\xda\x26\x99\x38\x69\x1e\x92\xcc\x04\x12\x96\x22\x62\x08\x60\x00\x50\xb6\xcb\xf2\xbf\x77\xf0\x21\x8a\xa4\x28\xc7\x69\xa7\xd3\x96\x2f\x36\xa1\xdd\xc5\x62\xcf\xd9\x83\x65\x5d\x03\xc3\x9c\x4b\x84\xa4\xa0\x92\x09\xd4\x8b\xaa\x64\xd4\xe2\x42\xab\xca\x62\x02\x4d\x53\x90\x57\xd4\xae\x8b\x34\x59\xd4\x9c\xd5\x35\xf0\x1c\x26\x64\x79\x41\x96\x66\x29\x2d\x34\xcd\xf9\x87\x0f\xec\xbf\x75\x0d\x28\x19\x34\x4d\x93\xcc\xa0\x20\x6f\x7d\x8c\xac\x5d\x3d\x3b\x3b\xb9\x91\xdb\xe2\x0c\x00\x60\xb1\x00\x63\x75\xb5\xb6\x60\x15\xac\xb8\x64\x60\x0b\x84\x52\x19\x0b\x2b\xc5\xee\xc0\x2a\xe2\xed\xec\x5d\x89\x50\xd7\x30\x21\x2f\xe8\x16\xe1\x37\x58\xd3\x2d\x0a\x68\x9a\xb0\xe9\x6b\xfc\x52\xa1\xb1\xfb\x58\xb5\xf7\x71\x4f\x5d\x2f\xa6\xf0\x94\x31\xa0\x42\x40\xce\x51\x30\x03\xb6\xa0\x16\xa8\x46\x90\xca\x02\xde\xae\x45\xc5\x90\x11\x98\x2e\x62\x4e\xc1\x0f\x34\x95\x1b\x84\x49\x0e\xe7\x4f\x60\x42\xbe\x0f\xbe\xf3\x8e\x4d\xb0\x9b\xc3\x84\x7a\x93\x9c\x3c\x95\x52\x59\x6a\xb9\x92\x26\xd8\x5f\xa2\x84\x11\x07\x9e\xfb\xad\x53\x2a\x99\x73\x9e\x50\x72\x75\xcd\xcb\x58\xbe\xa1\x43\xcc\x66\x92\x93\x2b\x7f\x38\x1f\x18\x9a\x06\x02\x2a\x2e\xd0\x24\x27\x2f\xb8\x10\x74\x25\xb0\x69\xa6\x6d\xfd\x83\xd7\x9b\xbb\x12\x9d\x2b\x97\x1b\xe7\xf5\xe9\xb3\x51\xf2\x3c\x71\xce\x92\xe1\x2d\xa4\xa6\x14\xdc\x42\x6a\xe9\xe6\x27\xa5\xae\xab\xf2\xb0\xd3\x1b\xba\x81\xc4\x99\x27\x19\x24\xb3\x24\x83\xff\x41\xd3\x24\x91\x0c\x34\xc2\xfd\x0b\x15\x9c\xf9\x33\x3b\xf3\x90\xd6\xc9\x1f\xdb\xd4\x3e\x1d\xd5\x24\x52\x66\xb8\x34\xef\xad\x75\xb0\x44\xb6\xc1\x87\x42\x39\xdf\x63\x89\x01\xcb\xe7\xde\xf7\x1e\x28\xf1\x5b\xa0\x74\x28\xa6\x1e\x06\x0c\xc5\xee\xfa\xfe\x10\x68\x7f\x89\xd2\x63\x9c\x05\xcb\x71\xe4\x4f\x42\x8f\xe3\xd0\x4f\x90\xbc\x95\xfc\x4b\x85\x10\x51\x17\xc6\xfd\xfb\xfe\x63\x8f\x01\x31\xa9\xe5\xc5\x1f\x60\x02\xfe\x5d\x4c\x98\x8f\x50\x21\x2e\x35\x67\x7b\xe1\x78\x53\x70\x03\x79\x25\xd7\x2e\x2c\x04\x61\x31\x40\x61\xc3\x77\x28\x3b\x62\xd1\x34\xb0\x55\x0c\x85\x47\xca\xd0\x9d\xe7\x0d\xc2\xba\x70\xa4\x30\xc0\xa5\x7f\x65\xd4\xd2\x15\x35\x18\xf4\xc6\x85\x4d\x8b\x5e\x90\x08\x65\x06\xe1\x44\xe9\x0d\x14\xd6\x96\xe4\x35\x9a\x52\x49\x83\xef\x34\xb7\xa8\x67\xa0\x61\x1a\xd7\xbd\x24\x65\x3d\x31\x9a\x1f\x09\x69\xef\xf8\x9c\xcd\x00\xb5\x76\x1c\x2c\x48\xa5\xc5\x2b\xaa\xe9\x76\x29\x6d\x7a\x33\x03\x3d\x83\x84\xb3\x24\xeb\x4a\x54\x44\xfc\xeb\x31\x02\xea\x27\xc3\x0c\x2a\xce\x73\x1f\xe1\x3f\x4f\x40\x72\xd1\xc9\xdf\x3d\x1a\x6d\xa5\x65\xbb\x14\xd1\x88\x88\x5c\xa2\x3d\xe8\xb7\x2b\x28\x69\x7f\x65\x2e\xa1\xae\x80\x1b\x49\xaf\x71\x28\xe0\x75\xe3\xc2\x58\xc5\x14\xcc\x5d\x9b\xab\x1b\xc8\x95\xde\xce\x2b\x2d\xe6\x28\xd7\x8a\x21\x5b\xdc\x6e\xc5\xa2\xd4\xca\xaa\x55\x95\x0f\x36\x89\x89\x9f\x3f\x01\x47\x56\xf2\x02\x6f\x2e\xd0\x39\xe9\x54\x93\x67\x8a\xdd\x65\x24\xbc\xa7\x8f\x58\xf6\xf8\xf4\x19\x0b\x22\xd4\x66\x83\x9a\xbc\xe3\xb6\x78\xae\xb5\xd2\x29\x6a\x9d\x91\xf0\x6f\x82\xee\x0f\x30\x17\xc9\xb5\x52\xe8\x8b\x41\x91\x24\x43\x4d\x9e\x51\x16\xcf\xd5\x56\x5e\xee\x5c\x23\x78\x1f\x77\x59\x71\xb9\x39\x72\xbd\xa7\xbe\xb1\x8b\xb0\x25\xec\xd8\xd1\x0b\xb2\x0b\x66\x4a\xc7\xf6\x4d\xef\x3d\x6d\xf0\x9c\x81\xba\x76\xde\xa8\x35\x49\xa7\x87\x08\xcb\x90\xf1\xa1\x7f\x7d\x11\xb2\xc7\xce\xbc\x3e\x52\xab\x07\x55\x2e\x06\x77\xb5\xd3\xf1\xde\x76\x67\x19\x14\xa2\x53\xc7\xa5\xb4\xa8\x25\x15\x57\xa8\x77\xa8\x43\xac\x50\x50\xc9\xc5\x98\x57\xaf\x84\x83\x32\xde\x97\xe6\x52\xe6\x2a\x4d\x76\xed\x59\x21\xa7\x5c\x20\x7b\x20\xba\x2e\xc4\xc3\xb1\xbc\xa2\xbb\x31\x1c\x57\x01\xc2\xb5\xe0\x28\x2d\xe9\xea\x4f\x54\xd2\x97\x12\x97\x17\x29\x67\xd9\xd8\x05\xf7\x4f\x18\x56\x78\x0e\x8c\x8c\x4e\x2c\xa3\xf4\x3b\xec\xb5\x98\xee\x3b\xff\xc6\x5f\xeb\x2b\x55\x59\x30\x82\xaf\xb1\x37\xb9\x15\xae\x70\xeb\xca\x58\xb5\x85\x2d\xd5\xa6\xa0\x42\xa0\x36\xff\xef\xdf\xfa\xdd\x67\x45\xae\xd0\x8e\x65\x94\x4e\xc7\x33\x3d\xe6\xd4\x71\x5d\x8e\xaf\xa9\xb1\x19\xe6\xdf\x3b\x78\xb4\x30\x1e\x4d\x1f\x5f\x81\x71\x3e\x9c\x4d\x46\xed\x7a\xb8\xc4\xfc\x23\xd1\x97\x17\x7b\x5c\x86\x5b\x1f\xe3\xd2\xa2\x31\x72\x13\xf6\xb7\x7a\xca\xd8\xd8\x56\x26\x1d\xdf\x8a\x10\x92\x79\x4e\x1e\xee\x23\x8d\x5b\xb5\x43\xe0\xc3\x4f\x88\x30\x6f\xc4\x31\xa2\x74\x9f\x4d\x73\xd7\xd3\x27\xe9\x38\x32\xee\xee\x9f\x6f\xa1\xd9\x91\x98\x70\x39\x18\x62\xdc\x83\xed\x34\xb0\x22\xce\x2a\xd5\xe4\x3b\x25\x2d\xde\xda\x34\xcb\x1e\x74\xe3\x3f\x48\xd3\x0d\xdd\x39\x3d\xef\xea\xd5\xb8\x6a\x7e\x83\x96\xdf\x2f\x9f\xa8\x39\x15\xfc\xd7\x31\x0d\xf5\x0d\xb5\xd1\xaa\x2a\x4d\xe8\xbb\x13\x8d\x11\xe8\x7f\x19\x0c\x3b\x35\xfe\xdc\xd6\xcc\x14\xa8\x79\x9e\x93\x9f\x83\xce\xa4\x8f\xf6\x0b\x2f\x4b\x1f\xad\x0e\xce\xe7\xf0\xfe\x63\xb8\xcd\xeb\xb1\x46\xdd\xe7\x32\x3a\xde\xb7\x1a\xb1\xf1\xb9\x06\x53\x3f\x5d\x4f\x36\xee\xc3\x7a\x64\x3e\x83\xce\xf4\x37\x5c\x77\x4f\x32\x36\x67\x9d\x6b\xa4\x2c\xf9\x2a\xbf\x9a\x66\x06\xf8\xe7\x88\xe1\x5e\x7d\x1b\xa5\x49\xef\xfe\xf2\x2f\xcb\x8b\x96\x1f\x33\x70\x9f\x25\x2d\x91\x4c\x44\x34\xdc\xbc\x9e\x56\x7f\x21\x85\x7a\xc9\x1f\x65\x7b\x28\x5b\x9b\x65\x98\x0d\xc6\x4c\x62\x5e\xbd\x39\x21\xa6\xfa\xf2\xc7\x98\xd9\xe7\x2c\x7e\xbc\xb4\xfd\xfb\x7b\x00\x00\x00\xff\xff\x57\x49\xc3\x7e\x85\x11\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 4485, mode: os.FileMode(420), modTime: time.Unix(1608651644, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\xcf\x6e\xdb\x3c\x10\xc4\xef\x79\x8a\xf9\x04\x1f\xa4\xc0\x96\xef\x01\x82\x0f\x05\xf2\xa7\x06\x8a\x1c\xea\x02\x3d\xd3\xe2\x8a\x62\xca\x2c\xe5\xd5\x2a\x41\x20\xe8\xdd\x0b\x49\xb6\x21\x38\x69\xd1\x8b\x75\x5b\x72\x38\x3b\x3f\x72\xd5\x75\xb0\x54\x7a\x26\x24\x42\xc6\xae\xf7\xbb\x04\x7d\x7f\x05\x00\x5d\xb7\xbe\xc6\xa6\x44\x64\x42\x2c\xa1\x15\xc1\xf9\x57\x62\x54\x86\x6d\x20\x81\x93\xd8\xd6\x0d\x7c\x83\x86\x14\x91\x47\x09\x59\x47\x20\xe3\x48\xf0\x1c\x3d\xc3\x6b\x7e\xbd\x9e\x3b\x6a\xb4\x11\x2b\x30\x35\x4a\xf6\xa0\x0c\xd1\x58\xcf\xee\x7f\xcc\xa4\x2b\x88\x61\x47\x58\x10\x6e\x6e\xb1\xc8\xef\xad\xa3\xe6\x98\xed\x4c\xe2\x26\xc9\x17\xe6\xa8\x46\x7d\xe4\x26\xff\x3a\x85\x7c\x24\xce\xbf\x93\xb1\x8f\x53\xd6\xd9\xf1\xf3\x2e\xa3\x47\x53\x07\xaf\x48\xd5\xb8\x6f\x31\xfe\x6a\x6b\x2c\x28\xdf\xaa\xb4\x85\xfe\x30\x0e\xc9\x44\x9c\x64\x48\x96\xc9\xb9\xd7\xd1\xcf\x97\xa0\xfd\x10\x69\xb0\xec\xfb\x7d\xfe\xd3\x6b\xd5\x75\xa8\x4d\x53\x98\x30\x18\x3e\x99\x17\x42\xdf\xa7\x59\xd7\x81\xd8\x62\xf5\x49\xaa\x61\xfd\x8c\x75\xb6\x34\x2b\x0f\x1e\x7d\x7f\x75\x75\xfe\x96\x24\x12\x65\x35\xbe\x96\x67\x77\x0a\x3c\x04\x14\xc1\x7f\xb7\x60\x1f\xd0\x9d\x7a\x34\x6f\x5e\x8b\x6a\xd8\xcb\x53\x7d\xaf\x29\x9b\xed\x0d\x5f\x61\x1a\xc2\x35\xb1\xe6\x4f\x51\x1f\x62\xcb\xf6\x7e\x68\x70\xf3\xe1\x16\xaa\x3c\x44\xe7\x48\x46\xf2\x51\x93\x92\x48\x36\x96\x0f\x9e\x82\x4d\x93\xae\xc3\xe2\x78\x0f\xf9\x58\x6c\xee\x8e\x75\xb2\x84\xb7\x59\x7e\x47\xbb\xd6\xa5\xc9\x73\xdc\x81\xa3\xa2\x1c\x1a\x26\xd9\x87\x66\x42\x6c\x49\x4e\x91\xd2\xb7\x25\x64\x39\x40\x7c\x26\xd5\x56\xf8\xcf\x4c\x5b\xcf\xae\x0d\x46\x2e\x8a\x35\x1d\x4c\x6c\x5b\x07\x5f\x18\x25\x10\xab\xbc\xa3\x8c\x02\xff\x17\xbe\x0d\x2b\x09\x9b\xb0\x25\x79\xa5\x29\xe1\x01\x95\x7d\xf8\x27\x54\x4b\xa5\x69\x83\x5e\x98\x6b\x9c\x39\x94\xa4\x45\xe5\xd9\x81\xa3\x25\x94\x12\x5f\x60\x77\x97\x82\x9b\xa6\x7a\xfe\x27\xfc\x0e\x00\x00\xff\xff\x86\x5e\x99\x66\xd5\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1237, mode: os.FileMode(420), modTime: time.Unix(1605509907, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/date_utc_converter.tpl":    flutterDate_utc_converterTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":             &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl":    &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"date_utc_converter.tpl": &bintree{flutterDate_utc_converterTpl, map[string]*bintree{}},
		"model.tpl":              &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
