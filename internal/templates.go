// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../template/flutter/client.tpl
// ../template/flutter/client_provider.tpl
// ../template/flutter/date_utc_converter.tpl
// ../template/flutter/model.tpl
// ../template/handler/handler.tpl
// ../template/handler/handler_create.tpl
// ../template/handler/handler_delete.tpl
// ../template/handler/handler_list.tpl
// ../template/handler/handler_read.tpl
// ../template/handler/handler_subressources.tpl
// ../template/handler/handler_update.tpl
// ../template/handler/helper.tpl
// ../template/header/dart.tpl
// ../template/header/go.tpl
// ../template/sheriff.tpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flutterClientTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdf\x6f\xdb\x38\x12\x7e\xbf\xbf\x62\xce\x30\x60\xa9\x48\xe4\x7b\x76\xea\xe4\xee\xd2\xe6\x2e\x8b\xb6\x28\x36\xc9\x53\x51\x04\x8c\x34\xb2\xb9\xa1\x48\x85\xa4\x9a\x7a\x55\xfd\xef\x0b\x52\xb4\xad\x1f\x94\xe2\x64\x81\x6e\x0b\xac\x5f\xa2\x48\xa3\x99\xe1\xc7\x8f\xdf\xcc\xa8\x2c\x21\xc1\x94\x72\x84\x49\xcc\x28\x72\x3d\x81\xaa\xfa\x07\x00\x40\x59\x02\x68\xcc\x72\x46\x34\xc2\x64\x8d\x24\x41\x39\x81\x63\xf7\x94\x66\xb9\x90\x1a\x66\x39\x89\xef\xc9\x0a\x17\x29\x2b\xb4\x46\x39\x7f\xa4\xc9\x0a\xb5\x8a\x12\x22\xf5\xec\xc4\x6b\x4a\xb9\x46\x19\x63\xae\x31\xb9\x5d\x6b\x9d\xcf\xbb\x37\xea\x97\x41\xad\xc5\x23\x9c\xdb\xa4\xfc\x8e\x7e\x53\x82\xdf\x12\xce\x85\x26\x9a\x0a\x3e\xef\xfc\x3f\x96\x43\x2e\xc5\x17\x9a\xa0\x9c\x6f\x2f\xb6\xc6\x2d\xeb\x28\x9a\x27\x44\xe3\x6d\xa1\xe3\xdb\x58\xf0\x2f\x28\x75\xc7\xb2\x2c\xe7\xaf\xe0\xb2\x36\xd7\x6b\x84\xb8\x50\x5a\x64\x60\x4c\x40\x6f\x72\x54\x11\xbc\x9a\xef\x01\x95\x84\xaf\x10\xa6\xd1\xf5\x26\xc7\xf7\x24\xcf\x29\x5f\xa9\x1d\xa4\xcd\xc8\x65\x09\x91\x73\x5b\x55\x6e\x0d\xb5\x8f\x63\xa0\x29\x44\xe7\xdb\x6c\x76\x46\xcd\x37\xfb\x4f\x67\x27\x65\x09\xc8\x93\x5d\x30\xf7\x6f\x55\xf9\xd7\xc1\x45\x82\x40\xb5\x42\x96\x02\xe1\x09\x10\xc6\x40\xa4\xf6\x11\x26\x2b\x54\xa0\x89\x5c\xa1\xb6\x76\x0a\xe6\x50\x73\xa7\xb9\xda\x06\x86\x99\x48\x90\xcd\xcb\x12\xa6\xd1\x07\x92\x21\x7c\x03\xc5\xc9\x3d\x42\x55\x35\xb7\x68\x0f\x0f\xc2\x62\x09\xd3\xe8\xad\x0d\xe4\x43\xa7\xe5\x13\x2d\x9a\x63\x9e\x1b\xc0\x09\x09\x01\x17\x7a\xf7\xd6\x7f\x76\x6c\x51\xd1\xff\x09\x4f\x18\xca\xff\x21\x0f\x0f\x31\x8a\xae\xee\x69\x1e\x42\x23\xbd\x4e\x8a\x35\x26\xcf\xca\xf1\xc9\x2d\xfa\x45\x09\x7e\x85\x92\x12\x46\x7f\x27\x77\x0c\x21\x2f\xb4\xb2\xdb\xb2\x42\x8e\x92\x68\x4c\x20\xb6\x7b\xc7\x41\xaf\xa9\x82\x94\x32\x6c\xec\x4a\x4e\x1c\x47\xfa\x5b\xb1\xea\x13\xfb\xbd\x79\x64\x9c\x17\xd2\x6d\x3f\x55\x35\x35\x48\x1c\xa3\x52\xd4\x64\xa0\x05\x08\xbd\x46\x59\x93\xde\xc4\x6b\xd2\x20\x16\x5c\x69\xf0\x05\xbc\x91\x0c\x96\x36\x97\x40\x62\xce\x48\x8c\x10\xb4\x8d\x42\x98\xdc\x4e\x60\x72\x3c\x09\xe1\x1b\xe4\xac\x90\x84\xd5\xa7\x61\x9f\xe1\xb5\x39\x73\x16\x67\x48\x85\x04\x02\x96\x17\x11\x9c\x0b\xae\x8a\x0c\xbb\xd0\x90\x9c\x36\x73\x63\x44\xa9\x46\x6e\x55\x55\xab\x0d\x94\xcd\x2d\xe9\x3c\x0c\x4a\x89\x0f\x05\x95\x98\x58\x38\xa2\x3a\x7a\x15\xba\xac\xcc\x2f\xa5\x9c\x30\xa7\x5c\x2e\xbb\xc6\x53\x9b\xf7\x05\x35\x87\x0a\x14\xe5\x2b\xe6\x4e\xdb\xdd\x06\x68\xd2\xc8\xce\xfc\x2e\x0a\x5d\x48\x7c\xdd\xcc\xe2\xd4\xb8\x4f\x02\x7b\xeb\xf2\x8d\xe5\x15\x7c\xb3\xd8\xdb\xcb\xaa\x02\x9a\x84\x40\xd4\x86\xc7\x8d\x75\xec\xd3\x92\xb0\x04\xf2\x48\xe8\x36\xb3\x68\x85\x3a\xb8\x91\x34\xc8\x89\x5e\x2f\x60\x36\x9f\x0e\x6c\xd6\x7c\x4a\x93\x59\xd8\x5c\xa7\xf9\x49\xd4\x85\xe4\x2d\x9c\xa2\x54\x8a\xcc\x10\x35\x90\xd1\x9d\x48\x36\xe1\x9e\xe1\x55\x07\x86\x77\x54\x69\xc8\x0a\xa6\x69\xee\x60\xb0\x8c\xd5\x68\xe0\xbd\xdb\xc0\x43\x81\x72\x63\x48\x4b\x32\xe5\x87\xc6\x78\x68\xe3\x73\x0a\x8c\x2a\x1d\xb4\xd7\x4e\xb9\x3e\x83\x9c\xac\xf0\xa8\x7f\x9b\x6a\xcc\xd4\x47\x94\x1f\x7b\x8f\x8d\x68\x38\x4d\x4a\x6b\x4d\xba\xa0\xc8\x12\xd5\x3d\xf4\x5b\xdb\xa9\xa9\x40\x36\x8f\xc5\x12\x28\x4f\xf0\x2b\x04\x2a\x67\x54\x43\xa0\xc9\xea\x9d\x10\xf7\x45\x0e\xd3\x34\xba\xd2\xb2\x88\xf5\x35\x59\xc1\xc4\xbc\x31\x09\x61\x72\x34\x09\xe1\x5f\x3e\xbf\x8e\x85\x34\x05\x23\x49\x01\x3e\x34\xa2\xd8\xa3\x71\x3c\xf0\xd2\x96\xbe\xa9\x87\x23\x67\xee\x89\xdb\xe5\x98\x64\x68\x8e\xd6\xd1\x50\x74\xa7\x43\xe3\x77\xab\x31\xda\xd5\x7b\x08\x4b\x27\x08\xaf\xaf\xb4\xa4\x7c\x75\x04\xc9\x86\x93\x8c\xc6\xa7\x65\xd5\x21\x16\x4d\x21\x30\x1b\x06\xff\x5c\x02\x2f\x18\x0b\x3b\x6e\xa1\x56\x33\x92\xa9\x4f\x33\x63\x37\xfb\x0c\x4b\xbb\xc3\x27\x2d\xb3\xaa\xef\xb5\xb9\xdf\x87\x78\x6f\xda\xdb\x28\xcd\x1b\xa3\xd1\xf6\x25\xed\xc7\xa5\xcf\x08\x7b\x0c\x58\x5e\x9e\x8c\xa1\xe6\x43\xd0\x38\xd9\x45\xad\x2a\x0b\xa2\xd7\xf1\xc9\xa0\xbb\xc1\x95\x8d\x52\xf3\x39\xfa\xe7\xd9\xff\x71\x41\x9c\xf5\x8f\x8b\xd5\xab\x8f\x66\xd5\xa8\x51\xaa\x85\x43\xa0\x6d\xd8\xd3\x50\x83\x73\x2d\x95\x11\x55\x6f\xb3\x5c\x6f\x7c\xc0\x3a\xa5\xfd\xf4\x79\x94\x72\xce\xca\xf9\x03\xa2\xac\xc6\x86\x51\x46\xf2\x20\xa0\x21\x2c\x4f\x07\xb4\x9a\x86\x61\xa4\x85\x31\x0e\x46\x04\xfb\x5c\xa2\x19\x07\x08\x70\x7c\xac\xcb\x96\xe0\xb6\xc6\x4a\xcc\x84\xc6\x43\xca\x57\x6c\x5d\x04\xad\xca\x6a\x6f\xfd\x8a\x0f\x05\x2a\x0d\x12\x1f\x9e\x55\xc0\x72\xa1\x74\x7f\xf7\x0e\x29\x69\xb3\xb0\xbf\x85\x06\xb6\x85\xc9\x21\xd2\xc2\x02\xd3\xb1\x19\x28\x80\xc1\x68\x05\x1c\x41\xf4\x26\x4f\x1c\xa2\x2f\x42\xb3\xb0\xaf\xb7\xa2\xd7\x1e\x5f\x8c\x26\xd1\xf1\xfa\x65\x70\xce\xa7\xa6\x37\x8a\xb6\xad\x89\x4b\xa7\xfa\x11\x50\x7e\x83\x0c\x9f\x83\x32\x24\xf6\x85\xa7\xda\xac\xe5\x69\x2b\x4b\x07\xa1\x7b\xf7\x65\x4d\x55\xdd\x1e\xa2\x8e\xd7\xbb\x41\x4c\xd5\x33\x57\x27\x51\xff\xbc\xd4\x97\xc2\xef\x31\xf5\xb4\xe9\x49\x53\xe3\xe4\x86\xd3\x87\xc2\x2c\xb3\x3b\x00\xd9\x3b\xc8\x94\xb9\xda\xb5\x6f\x6d\x83\xd3\x9d\x84\xd7\x72\x85\xdd\x42\xd1\x22\x02\xa0\x9f\xe1\x4f\x30\xfd\xf0\xc6\xb7\xc4\x1e\xa9\x6b\x6b\xff\x5c\x67\x95\x25\xf4\xd7\xb2\x2e\x3c\x63\xdd\x5b\x93\xf4\x6d\x7c\xc6\xa8\xdf\x89\x66\x81\x3e\x24\xca\x13\x15\x63\x28\x01\x7f\xdd\xe8\x26\xd1\x18\x6b\x9b\xbf\xa7\x5a\x4a\x4f\x25\x6f\x0e\xa6\xcd\x69\x74\x3b\x8e\xde\x6d\xec\xb9\xb1\xc3\xe8\xf6\xe3\x0e\xb8\xcf\x3e\x9d\x13\xa4\x0c\xbd\x63\xdf\x00\x28\xd2\xe0\xbf\x05\x65\xc9\xb9\xe0\x1a\xbf\x6a\xd3\xb4\x9a\xbf\x16\x0c\x77\x1d\x49\x24\xc9\xeb\xfe\xbb\xa7\x5b\x18\xaa\xce\x98\x9a\xa1\x52\xa6\xe3\x2c\x94\x19\x1d\x85\xab\x83\xae\x94\xda\xb1\x75\x50\x97\x4c\x94\x24\x8d\xcd\x31\x37\xeb\x72\xd2\xee\x9a\xc9\xfa\x6b\x12\x4c\xcc\xc1\xac\x0b\xe9\xee\x13\xde\xbf\xbb\x9f\x0b\x82\x3a\xe8\x05\x89\xb5\x90\x9b\x05\xa4\x84\x29\x3c\x02\xca\x63\x56\x24\x78\x99\x7e\x28\x18\x73\x77\xc3\xda\xc3\x1b\xa2\xf1\x46\xc7\xbb\x2f\x4a\x41\x38\x34\x3a\xb7\x6a\xf8\xc0\x04\xdd\xb4\xe9\x4c\x68\x7b\x39\x33\x2b\xf5\x91\xc5\x8e\xdb\x65\x09\xe3\x53\x8b\x87\x6d\x55\x5b\x5f\x07\xf2\xb1\x94\x6e\x3e\xed\x69\xcc\x62\x20\x61\x7a\xb4\x6d\xf0\x87\x52\xf7\x77\xd1\x4b\xc0\xc8\x3b\x08\x18\x85\x48\xa3\x4b\x65\x14\x1d\xaa\xca\xaa\xff\x59\x34\x72\x8e\xbc\xfe\x0f\x71\x7d\xd6\x4f\xa0\x6d\x69\xec\x0e\xd1\xaa\x3a\x03\x6b\x6d\x75\x62\x2f\x95\x83\x01\x9e\x54\x26\xab\x40\x68\x0f\x5d\x2d\xc0\xfe\x00\x7b\xfd\x19\x0e\x35\x8c\xdb\xf0\xa3\xe3\xd6\xd4\x44\x21\x48\x30\x86\x80\x21\xb7\xfb\x1c\x86\xa6\x0a\x1e\x0d\x4d\x20\xfd\x98\x6d\x0e\x8e\x70\xbd\x2e\x11\xfb\x8f\xb8\x75\xc1\xec\xfe\xef\xcb\xdb\x98\x6d\xdb\x13\xcf\x41\xe9\x7d\x69\x6c\xea\xea\x7b\x92\xf7\x86\x72\xd8\x36\x67\x66\x0b\x6e\xa7\x83\x47\xe7\xba\x36\x33\x07\xf4\x40\xf1\x2b\xb6\x5d\xef\x21\xc2\x57\x3c\x2d\x7c\x75\xcf\xfb\x97\x08\x5f\xbb\xdd\xf6\x0b\x5f\xcb\xa6\x23\x7c\x5b\x59\x6b\xb6\x17\x3d\x49\xdb\xd1\xa5\xf8\x4e\xd2\xd8\xca\xf8\x05\xd2\xd8\x5c\x8d\x15\xba\xce\xbd\x9a\xe4\xee\x30\x15\x63\x27\xc9\xa7\xb2\x7e\x14\xfe\x56\x59\x4f\x80\x9f\x5a\x65\x8b\x3f\xa9\xb2\x03\xb3\xdb\x59\x97\xa1\x27\x5e\x69\xee\xb3\xec\xa7\x90\xe6\xd6\xd1\xf5\x49\xf3\x3e\xc4\x1f\x01\x00\x00\xff\xff\x1f\x8d\xc7\xd6\xfe\x1d\x00\x00")

func flutterClientTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClientTpl,
		"flutter/client.tpl",
	)
}

func flutterClientTpl() (*asset, error) {
	bytes, err := flutterClientTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client.tpl", size: 7678, mode: os.FileMode(420), modTime: time.Unix(1614692675, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterClient_providerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x41\x6f\xda\x4c\x10\xbd\xe7\x57\x3c\x21\xa4\xe0\x88\x98\xbb\xf3\x25\xf9\x5a\x0e\x6d\x55\x35\xaa\xc4\x21\x87\xaa\x42\x5b\xef\x80\x57\x98\xb5\xbb\x3b\x86\x20\xd7\xff\xbd\xb2\x77\x31\xb6\x41\xa8\xed\x5e\x90\x67\xe6\xbd\x7d\xef\xed\x50\x96\x90\xb4\x52\x9a\x30\x8a\x53\x45\x9a\x67\xb9\xc9\x76\x4a\x92\x19\xa1\xaa\x6e\x00\xa0\x2c\xc1\xb4\xcd\x53\xc1\x84\x51\x42\xa2\xe9\xdd\xfb\xa6\xda\xe6\x99\x61\xdc\xe6\x22\xde\x88\x35\x45\xab\xb4\x60\x26\x33\xdb\x2b\xb9\x26\xb6\xa1\x14\x86\x6f\x1f\x2e\x8e\x2a\xcd\x64\x62\xca\x99\xe4\x32\x61\xce\x67\xc3\x82\x03\xc3\x26\xd9\x1e\xf3\x46\xdc\x65\xa2\xa3\xe2\x56\xfa\xb5\x5b\xdb\x61\xab\xf4\x3a\xa5\x65\x9c\xa8\x54\x2e\x9d\xdc\x23\xce\xdb\x9e\xdd\xe1\x93\x43\xd3\x8e\xcc\x01\x3a\x93\x84\xbb\xd9\x29\x16\x23\xf4\x9a\x30\xd6\x88\x1e\x31\x0e\x5f\x32\x49\xb6\x0d\xc6\x8d\xdc\x43\xad\xa0\x33\xc6\x58\x87\xef\xb4\xce\x58\xb0\xca\xb4\x0d\x3f\x0a\x2d\x53\x32\x1f\x48\x87\x8b\x8d\xca\xd1\x01\x75\x45\x97\x65\x0d\x7c\x11\x5b\xc2\x2f\x58\x2d\x36\x84\xaa\xea\xba\xf3\x42\x48\xcb\xf6\xe2\xce\xe7\xc9\xc7\x57\xe7\x1a\x9c\x10\xdc\x3b\x5b\xc8\x6c\xaf\x9b\x82\x33\x0f\x36\x44\xe1\xc9\x5f\x9c\x0a\x6b\x7d\xee\x1e\x6e\x40\x6f\x4c\x5a\x5a\x2c\x9a\xf0\xe6\x75\x76\x0b\x16\x4c\x29\x59\xfb\xea\x68\xca\x56\x58\x1f\x3b\x29\x7b\x16\x3f\xd3\xe1\x19\x1b\x3a\x4c\x7b\x55\x43\x3f\x0b\x65\x48\x82\x13\x65\x43\xa7\xb4\x3f\xe1\x1a\xf5\xc5\xa7\x7a\x15\x20\x82\x2d\x72\x32\x93\x0d\x1d\xa2\x86\x16\xcd\x4c\xe4\x7e\x02\xff\xa6\xf5\x59\x29\x2d\x52\xaf\xcd\x67\xf1\x30\x68\x3a\x27\xcf\x0e\xdb\x81\xfe\x9f\xed\xc8\x18\x25\xa9\xad\x78\xcf\x3f\x0a\x95\xca\x57\xc5\x49\x93\xc8\xe4\x7d\xfd\x39\xcf\x34\xd3\x1b\x23\x76\xbf\xd3\x3e\x6b\x80\x72\x60\x9c\x0b\xa3\xf1\xa5\x48\x59\xb5\x89\xf5\x26\xea\x73\x5c\x5e\x1b\xe1\xdb\x59\xf3\x0f\x97\xf2\x1c\xf2\x8f\x4b\x3a\x3c\x47\xd9\xff\x75\xb6\xb6\xaa\x5c\xd0\x4f\xe7\x5e\x86\x27\x36\x24\x98\x22\x4c\x96\x01\x1e\x9f\x70\x81\x64\xe2\x5e\x2b\xf2\xaf\x16\x4c\xaf\x72\x5e\x69\x0f\xfe\x31\x7f\xd1\xfe\x7e\x4e\xda\xdd\xb3\x7e\x37\x38\xed\x95\x63\xaa\x6e\x3c\x75\x55\xfd\x0e\x00\x00\xff\xff\xac\x27\xc9\xe1\x78\x05\x00\x00")

func flutterClient_providerTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterClient_providerTpl,
		"flutter/client_provider.tpl",
	)
}

func flutterClient_providerTpl() (*asset, error) {
	bytes, err := flutterClient_providerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/client_provider.tpl", size: 1400, mode: os.FileMode(420), modTime: time.Unix(1614280316, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterDate_utc_converterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xc3\x30\x10\x86\xf7\x3e\xc5\xaf\x2e\x4d\x24\x14\x60\x41\xa8\x90\x06\x09\x16\x58\xa1\x33\x32\xc9\xb5\x72\x49\xee\x22\xfb\xe8\x62\xf9\xdd\x91\x9d\x12\xa4\x22\xe1\xc5\x67\xfb\xfe\xef\xf3\x85\x80\x8e\x76\x96\x09\xcb\xce\x28\x6d\xb5\x7d\x14\x3e\x92\x53\x72\x4b\xc4\xb8\x00\x00\x3b\x8c\xe2\x14\xab\xd1\xb4\x9f\x66\x4f\xeb\x83\x17\x7e\x37\xcc\xa2\x46\xad\xf0\xe5\xd9\xb9\xea\x8c\xd3\xd5\xdd\x22\x67\xdb\xde\x78\x8f\xa7\x33\x74\x42\xf6\x34\x10\xab\xc7\x8b\x17\x9e\x1f\xee\x53\xe7\x9b\x1d\xa8\xb9\xc0\xab\x3a\xcb\xfb\x66\x83\x90\x49\x99\x26\xec\xf5\x0f\xad\x28\x4f\xb2\xb4\x1e\xe4\x48\xce\xd9\x8e\xe6\x9b\x19\x89\x9d\x93\x21\xe9\x8a\x13\x1a\xe9\xe7\x25\xea\x4d\x2e\x50\xd7\xe0\xaf\xbe\x47\x33\x6d\xeb\x39\x59\x8d\xc6\x79\x2a\x72\xf7\xbf\xaa\x1f\xae\x4a\xd6\xfc\x9a\xe5\xe3\x40\xad\x66\xd5\x54\x36\x95\xca\x56\xdb\xa2\xac\x54\x9e\xbd\xdc\xde\x5c\x5d\x4f\xe1\x34\x4c\x42\xc5\x45\x08\x20\xee\x10\xe3\x77\x00\x00\x00\xff\xff\x80\x09\x97\x37\xa4\x01\x00\x00")

func flutterDate_utc_converterTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterDate_utc_converterTpl,
		"flutter/date_utc_converter.tpl",
	)
}

func flutterDate_utc_converterTpl() (*asset, error) {
	bytes, err := flutterDate_utc_converterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/date_utc_converter.tpl", size: 420, mode: os.FileMode(420), modTime: time.Unix(1613741733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flutterModelTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x5b\x4f\xe3\x3a\x10\x7e\xe7\x57\x8c\xaa\x88\x16\x74\x70\xdf\x81\x02\x47\xdc\x0e\x47\xcb\xae\xb4\xc0\x73\x65\xe2\x71\x6a\x48\xec\x60\xbb\x48\xdd\x90\xff\xbe\xf2\x25\x69\x92\xb6\x8b\x76\xb5\x4f\x4d\x3d\x33\xdf\x5c\xbe\x6f\xa6\xaa\x80\x21\x17\x12\x61\x54\x28\x86\xf9\x08\xea\x7a\x0f\x00\xa0\xaa\xc0\x62\x51\xe6\xd4\x22\x8c\x16\x48\x19\xea\x11\x1c\x45\xa3\x28\x4a\xa5\x2d\x8c\x19\xd5\xf6\x38\x55\xf2\x1d\xb5\x1d\x9f\xec\xf5\x6c\x25\x4d\x5f\x69\x86\xc7\x2f\x46\xc9\x39\x95\x52\x59\x6a\x85\x92\xd3\xc1\x7f\xe2\x30\x86\xb1\x84\x4c\x19\xb5\x38\x5f\xda\x74\x1e\xe1\x51\xf7\x3c\xab\x0a\x12\xc6\xe1\x78\x06\xee\xf5\x3b\xbe\x2d\xd1\xd8\x1b\x81\x39\x33\x90\x90\xc7\x55\x89\x30\xf2\xbd\x44\xef\xe9\x21\xdc\x05\x70\xbb\x40\x48\x97\xc6\xaa\xc2\x87\x82\x5d\x95\x68\x08\x1c\x4e\xd7\x8d\x6b\x2a\x33\x8c\x30\xf7\xb4\x2c\x85\xcc\x4c\xdb\x7b\xb7\xce\xaa\x02\x12\x61\xeb\x7a\x7c\xd2\xda\xab\xea\x08\x04\x07\x72\xd9\xd4\xde\x3a\x75\x23\x37\xad\xe3\x93\xaa\x02\x94\xac\x4d\x16\xff\xf6\xfa\xb8\x51\x1a\xf0\x1d\xf5\x0a\x90\x65\xd8\xd4\xe2\xda\xca\x50\xa2\xa6\x16\x19\x78\x2e\xb7\x36\x85\x6e\x66\x09\xb9\x66\x19\x6e\xef\x89\x90\xa9\x8f\x9e\xba\x11\xa3\x9f\x01\xf9\x4a\x0b\x84\x0f\x30\x92\xbe\x22\xd4\x75\xc3\xc4\xae\x0a\xff\x37\x4a\x3e\xa0\x16\x34\x17\x3f\xe8\x73\x8e\x50\x2e\xad\x19\x54\x98\x2a\x86\x20\x24\xd8\x85\x30\xc0\x45\x8e\x9d\x6a\x4b\x1a\x47\x94\x6c\x64\xce\x7a\x2a\xb8\x18\x66\x9a\x1c\x84\xf7\x2b\x6a\xf1\xc9\xa6\xed\x84\xe3\x7b\x9a\x53\x63\x60\x0d\x5c\xd7\x50\x75\x48\x5b\x3f\x4f\x0e\x62\x86\xb6\xa7\xc7\x05\x02\x0f\xfa\x52\xdc\xf7\x32\x9c\x71\x8b\x71\x77\x15\x04\xf8\xe1\x05\xe6\x3f\xeb\xfa\xbc\xb5\xc5\x14\x7d\xb5\x44\x76\x78\x60\x27\x0a\xb9\x4b\x4f\xe3\x98\xa4\xde\x85\xf1\xb5\x7c\x9c\x20\x12\x0e\x5b\x9c\x05\x07\x2a\x19\x24\x9c\xfc\xdb\x2e\x9c\x09\xe8\xb7\x28\xc9\x3d\x2d\x6f\x95\xaf\x2f\xe1\xe4\x3f\x6a\xe2\x9f\x61\xda\x0e\x5a\x92\x42\x5d\xbb\x46\xe2\x6f\x57\xab\x9d\x19\xec\x78\x4e\xf8\xce\xc1\xf0\x86\xe9\x94\x16\x98\x0f\xc6\xd3\x53\x58\x8f\x11\xf4\x32\xfe\x8c\x90\x38\x71\xaf\xf9\xf3\x10\xd3\xa1\xf7\x42\xbd\xa3\xd6\x82\xe1\x7a\x15\xa4\x85\x0c\x2d\x2c\xa8\x59\x5c\x3a\x9d\xce\xce\x86\xec\x91\xc6\xf6\x4b\xa0\x67\xa5\x72\x50\xa5\x93\xbc\xd2\x30\x9b\x4d\xbe\x3d\xbf\x60\x6a\x41\xd9\x05\xea\x03\x07\xeb\xbf\x40\x0c\x44\xb9\xbf\x3f\xcc\x07\xb3\x59\xf0\x25\x1b\x32\x6a\xb3\x71\x9a\x5a\xa5\x57\x3d\x28\xc2\xb5\x2a\xdc\x96\x4c\xee\x69\x79\xfa\x60\xb5\x90\xd9\x3f\xc0\x56\x92\x16\x22\x3d\x03\x77\x8c\x7d\x1d\xf3\xa4\x1b\x75\xd3\x04\x79\xfb\x9a\x8a\xad\x18\x56\x79\xd7\x2d\x30\x8f\xc1\xe2\x56\xbc\xbb\x4f\x01\x01\xac\x0a\x1f\x21\xd2\x65\xba\x96\xee\x2a\x4c\x1a\xc0\x98\xb8\x7b\x59\x3e\xe5\x7c\xd7\x45\xd8\xdc\xfc\x70\x01\xb7\xaf\xbf\xb7\x0d\x6e\xc0\xa7\x07\x34\xba\xb9\x2d\x41\xf2\x24\xc5\xdb\x12\xe3\xb2\x74\xaf\x68\x58\x9b\xdc\xb8\xaf\x2f\xc2\xd8\xd3\x4d\x87\xb3\x56\xf1\x61\x37\xf0\xb7\x76\x63\x9b\x0a\x7c\xb1\x7f\x26\x05\x1f\xfa\x97\xf4\xe0\xb1\xfa\xa2\x08\x04\xaf\xdb\xf8\x19\x00\x00\xff\xff\xa9\x74\x8a\x93\x90\x08\x00\x00")

func flutterModelTplBytes() ([]byte, error) {
	return bindataRead(
		_flutterModelTpl,
		"flutter/model.tpl",
	)
}

func flutterModelTpl() (*asset, error) {
	bytes, err := flutterModelTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flutter/model.tpl", size: 2192, mode: os.FileMode(420), modTime: time.Unix(1613731308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandlerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xd1\x6f\xdb\xb6\x13\x7e\xd7\x5f\x71\x3f\xc1\x68\x25\xff\x6c\x2a\xed\x80\x3d\x74\xf0\x43\xd7\x61\x5d\x81\x36\xc8\xd2\x76\x7d\x66\xc4\xb3\x44\x44\x22\x59\x92\x72\xea\x19\xfa\xdf\x07\x92\x92\x2c\x27\xb6\x97\xc4\x29\xd0\x05\x08\x60\x93\x77\xf7\xdd\x7d\xf7\xf1\x48\x6f\x36\x30\x51\xd7\x05\xbc\x5a\xc0\x15\x35\x08\x71\x49\x05\xab\x50\xc7\xd0\xb6\xd1\x66\x33\x87\x1b\x6e\x4b\xc0\x6f\x16\x05\x83\x09\xc4\x17\x34\xbf\xa6\x05\xc6\x23\xc3\x79\xdb\x46\x00\x00\x9b\x0d\x58\xac\x55\x45\xad\x0b\x83\x94\xb9\x4d\x12\xe2\x80\x73\x6f\xdb\x28\xe2\xb5\x92\xda\x42\xe2\x3d\x62\x81\x36\x2b\xad\x55\x71\xf8\x6a\xac\xce\xa5\x58\xc5\x51\xf8\x5a\x70\x5b\x36\x57\x24\x97\x75\x56\xc8\x79\x5e\xf2\x2c\x2f\x79\xbc\x6f\x4f\x55\x74\x5d\x68\xd9\x08\x96\xad\x68\xc5\x19\xb5\x52\x67\xab\x17\x67\x77\x8d\x2b\xce\x55\x66\x4a\xd4\x7c\xb9\xbc\xbb\x5b\x53\x63\x10\xab\xbc\xcc\x34\x0a\x97\xff\x1d\x0b\xc3\x75\xa3\x0c\x8a\xac\x92\x85\x6e\x4c\x9f\xaa\xa3\x91\xbc\x91\x62\xc9\x0b\xd2\x51\x04\x6d\x1b\x77\xbc\x64\x53\x78\x17\xea\xa6\x55\x05\x76\xad\xd0\x40\x63\x90\x01\x17\x60\x4b\x84\x25\xc7\x8a\x19\x98\x66\x5b\x26\x35\x15\x05\x82\xba\x2e\x82\xa3\x81\xc9\xc0\x73\x0f\x48\x46\x08\x3d\xbf\x69\x14\x65\x19\xfc\x11\x5a\x03\xdc\x00\xd6\x57\xc8\x18\x32\xb8\x5a\x7b\x70\x14\x96\xdb\x35\x74\xcd\x33\x04\x2e\xb4\x5c\x71\x67\x60\x64\x8d\xe0\xe8\x47\xc1\x51\xe4\x08\x35\xda\x52\x32\x43\x22\x97\xf0\x10\xd3\x58\xdd\xe4\x16\x36\x1e\x78\x9a\x97\x9c\x7c\x68\xbe\x05\x16\xde\x54\x1c\x85\xf5\xeb\x28\x2c\x09\x5f\xfd\xce\x5f\x7d\x53\x60\x3a\xf4\x87\x74\x8b\xe8\x2d\xde\xcb\xa2\x40\xed\x7d\x03\xb3\x24\xac\x44\x6d\x14\x2d\x1b\x91\xc3\x39\xde\x74\x29\x24\xf9\x38\xfe\x0c\x56\xfb\x82\xce\xa0\x92\xc5\xad\x58\x29\x4c\xfb\x2a\x42\xfa\x1a\x6d\xa3\x05\x3c\xdb\x5d\x75\x7f\x1f\x9a\x6f\xaf\xba\x8f\xae\xc4\x73\xbc\xb9\x94\x8d\x45\x9d\xa4\xb3\xc1\x26\xe0\x7b\xb3\x7c\xbb\x3a\x94\xfa\x0a\x56\xdb\xd5\x90\x80\xb7\xad\x64\x11\xd6\x5b\x57\xdb\xd0\xea\x89\x70\x67\x70\x42\xce\x25\x43\x03\x5b\x21\xf0\x25\x08\x69\x61\x22\xc8\x6b\x21\xa4\xa5\x96\x4b\x61\x48\x97\xf1\x5b\x14\xe4\xe3\x35\x57\xfe\x68\xf5\x58\x59\x06\x9f\x4a\x74\xbe\x13\x41\xce\x69\xed\x94\xd8\xd9\x93\xc1\xc8\xf7\x74\x9f\xc9\x6e\x83\xfb\xbf\x9e\xb8\x61\x71\x17\xef\x8d\x46\x77\xea\x29\x08\xbc\xd9\x1b\x75\x30\xee\x7b\xb9\xcf\xe8\x94\xc6\xee\x2d\x65\xb7\x86\xd2\x11\xfc\x6c\x9f\xe1\x66\x2c\xae\x19\xac\x3c\x46\x3a\x2a\xf1\x21\xbd\xe8\xb8\x68\xdb\xdd\x79\x18\x8c\xb2\xdc\xef\x66\xda\xa9\x29\x76\x4d\xf7\x76\xdd\xe9\x7d\x0c\xdc\x25\x52\x76\x08\x4c\x23\x65\x4f\x08\xf5\x59\xb1\x23\x95\x35\x7e\xf7\x09\xe1\x7e\xc3\x0a\x0f\xc3\x31\xbf\xdb\xc3\x9d\x8a\xf5\x9e\x1b\x7b\x08\xa9\xe2\xc6\x1e\x28\xeb\x16\x56\x36\x05\x2b\x99\x84\x39\x18\x77\x28\x35\x1a\xd9\xe8\x1c\x47\x93\x7d\x94\xd7\x5d\x20\xd3\x5c\xf5\x2e\x59\x81\xbb\x98\xbb\x50\xdd\xe0\x2a\xf7\x1d\xc7\xa7\xd4\xe9\xc1\x3e\x3e\x95\x3a\x4f\x06\xb8\x8f\x26\x4f\x06\xb9\x8f\x12\x4f\x06\xf9\x37\x09\x1e\x16\xdf\x7d\x85\x77\x1f\xd1\xf5\x72\x83\x9d\x67\xc5\x08\xd4\x83\x7d\x74\x6f\x85\x12\x2b\x85\xba\xc3\xf0\x73\x3d\x29\xfb\x67\x42\x0a\x8d\xae\x2e\xa8\xa6\xf5\x47\xab\xb9\x28\x92\x1b\x70\xef\x3c\x72\x89\x46\x49\x61\xf0\x8b\xe6\x16\xf5\x0c\x34\x4c\xbb\xf5\xaf\x0d\x1a\x3b\x03\xe5\x7c\xdc\x1d\xc4\x45\x91\x42\xc2\x59\xf7\x79\x06\xa8\xb5\xfb\x97\x3a\xed\xe6\x3a\x67\xb0\xf0\xb7\xf3\xe7\xcb\xf7\x1e\x2a\xd1\x9d\x7f\x1a\xf6\x97\xde\x64\x01\x71\x3c\xba\x09\x5c\x98\x45\x08\x64\xdc\xbd\x9e\xc4\x58\x2b\xbb\x76\xf9\x06\xe7\x38\x1d\x6c\xcb\xee\x7e\x21\x5f\xb8\x2d\x7f\x77\x8f\xb4\x24\x0e\x36\x3d\x10\x79\x27\x96\xf2\x58\x88\xf0\x8e\x24\xbf\x52\xd6\x95\x98\xdc\xcc\xa0\xcf\x13\xfe\x0f\x31\xe4\xd4\x69\x02\xae\x10\x9e\x3f\xef\x1c\xbb\xde\x86\x53\x1e\x1d\x21\xf7\x9d\xb0\x27\x30\xcb\xdd\x25\x7b\x87\x56\xe5\xae\xc9\xe3\xb4\xaa\xff\x24\xab\x23\x4a\x47\x24\x73\x36\xeb\xb2\xef\x7e\x7d\x90\xd7\x56\xf2\x44\x0d\xc5\xba\xcd\xff\x2d\x40\xf0\x6a\x54\xef\x9e\x1a\x3c\xf6\x0c\xd4\x90\xbd\x23\xc3\x65\x64\xb8\x28\xb6\x55\xa0\x45\xfd\xa0\x4a\xea\xc6\xf8\x3a\x28\x28\x69\xb8\xe5\x2b\x74\x8d\x43\xf7\x5a\x2e\xfc\x90\xd6\xf0\x37\x6a\x79\xb4\xc8\x41\x49\x87\xa5\xf4\x89\xd7\xf8\x58\x2d\xf9\x11\x6c\x79\x8d\xc4\x45\x79\x2a\x4d\xfd\x58\x3a\x09\x6f\xcf\xa0\x14\x5f\xea\x05\xd5\x06\x93\xf8\xe5\xd9\xd9\xcf\xf3\xb3\x17\xf3\xb3\x97\x2e\xad\x1f\x50\x35\xfe\x09\xed\xd3\x77\x3f\x37\xd7\xeb\xf5\x7a\x5e\xd7\x73\xc6\x60\x29\x75\x4d\xed\x63\x75\xa3\x68\xc1\x85\xbf\xc9\x7c\xe2\xf7\x53\x4e\x0a\x89\x72\x3f\x8d\xfd\xe4\xe1\x16\x6b\x73\x81\xfa\x62\x58\xb9\xab\x1b\xb7\xb5\x80\x17\x81\xd5\xb1\xfd\x02\x7e\x3a\x8b\x7a\xb2\x99\x93\x97\x76\xe2\x22\x7f\x36\xa8\xd7\x49\x4a\xde\xa2\x4d\xe2\xb1\x47\x9c\xfe\x02\xcc\xb5\x64\x47\x63\x63\x8b\xbd\x73\x80\x6d\xe9\x39\xd4\xd5\x43\x5a\xdd\x41\x9f\x01\xdb\xdf\xe2\xaf\x2e\xe1\x6d\x93\xe1\xf9\xd8\x6d\x2c\xc9\x63\x7d\xdf\xc1\x7a\xc4\xc4\xb8\xd5\xfd\xa0\x80\xf1\x90\x3c\xcc\xb1\x3a\xc8\xad\xfa\x0e\x9c\xaa\x87\x71\xa9\x1e\xc2\xa1\xfa\x3e\xdc\x6d\xcf\xd0\x3f\x01\x00\x00\xff\xff\x3c\xba\x37\x4d\x6c\x13\x00\x00")

func handlerHandlerTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandlerTpl,
		"handler/handler.tpl",
	)
}

func handlerHandlerTpl() (*asset, error) {
	bytes, err := handlerHandlerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler.tpl", size: 4972, mode: os.FileMode(420), modTime: time.Unix(1614850122, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_createTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x5b\x6f\xdb\x38\x13\x7d\xcf\xaf\x98\x4f\x30\x0a\x29\xb0\xe9\xaf\xaf\x2d\x8a\x45\xdb\xb4\xd9\x60\x7b\xd9\xad\xbb\xdb\x87\xa2\x40\x69\x73\x64\xb1\x51\x48\x85\xa4\xe2\x78\xb5\xfc\xef\x0b\x5e\xac\x48\x96\xe2\xa6\x59\x74\x2f\x7a\x49\x44\xcd\x0c\x87\x73\x0e\xcf\x8c\x9b\x06\x18\xe6\x5c\x20\x24\x05\x15\xac\x44\x35\x5f\x29\xa4\x06\xe7\x4a\xd6\x06\x13\xb0\xb6\x20\x3f\x4b\x6d\xd2\x64\x9e\x4c\xa1\x20\xcf\xfd\xd7\xac\x69\x00\x05\x03\x6b\x8f\x8e\x6e\x0d\xe1\x9c\x8f\x00\x00\xe6\x73\xd0\x46\xd5\x2b\x03\x46\xc2\x92\x0b\x06\xa6\x40\xa8\xa4\x36\xb0\x94\x6c\x0b\x46\x12\x6f\x67\xb6\x15\x42\xd3\xc0\x84\xbc\xa1\x17\x08\x7f\x40\x29\x37\xa8\x5e\x72\xa5\x0d\x58\x1b\x76\x7e\x87\x97\x35\x6a\xb3\x0b\xd8\x78\x47\xf7\x34\xcd\xfc\x18\x9e\x32\x06\xb4\x2c\x21\xe7\x58\x32\x0d\xa6\xa0\x06\xa8\x42\x10\xd2\x00\x5e\xaf\xca\x9a\x21\x23\x70\x3c\x8f\x89\x05\x3f\x50\x54\xac\x11\x26\x39\x3c\x7a\x02\x13\xf2\x32\xf8\xce\x3a\x36\xc1\x6e\x06\x13\xea\x4d\x72\xf2\x54\x08\x69\xa8\xe1\x52\xe8\x60\x7f\x8a\x02\x46\x1c\x78\xee\xb7\x4e\xa9\x60\xce\x79\x42\xc9\xe2\x9c\x57\xb1\x86\xfb\x0e\x31\x9b\x49\x4e\x16\xfe\x70\x3e\x30\x58\x0b\xc7\x61\xf5\xfd\xb6\x42\xf7\x89\x8b\xb5\x5b\xfd\xfc\x45\x4b\xf1\x28\x69\x1a\xe0\x82\xe1\x35\xa4\xba\x2a\xb9\x81\xd4\xd0\xf5\x2b\x29\xcf\xeb\xea\x26\xd2\x7b\xba\x86\xc4\x99\x27\x19\x24\xd3\x24\x83\xff\x83\xb5\xde\x33\x77\x39\x85\x7c\x7e\xa3\x25\x67\xfe\x4c\xce\xdc\x5a\x9f\xcb\x6d\x1f\x5b\xfc\x3f\x0f\xce\x1c\x79\xb1\xbf\x34\xeb\xad\x75\xb0\x42\xb6\xc6\xbb\x42\x35\xdb\x61\x85\x01\xab\x17\xde\xf7\x00\x54\xf8\x2d\x50\x39\x94\x52\xb7\xff\x04\x43\xb1\xbb\xbe\x3f\x06\x6e\x9f\xa2\xf0\x18\x66\xc1\x72\x1c\xd9\x5b\xa1\xc5\x7d\x68\x23\x06\x48\x7e\x15\xfc\xb2\x46\xb0\xd6\x81\x8d\xa5\x76\xff\x7e\xfc\xd4\x96\x39\x38\xfb\xa4\xce\x4e\xee\xc1\x04\xfc\xa7\x98\x30\x1b\xa1\x42\x5c\xb2\x47\x3b\x75\x78\x5f\x70\x0d\x79\x2d\x56\x2e\x2c\x04\xf5\xd0\x40\x41\xe0\xa6\xa3\x07\xd6\xc2\x85\x64\x58\x7a\x9c\xb4\x91\x0a\x35\x70\x03\x5c\x78\x39\x61\xd4\xd0\x25\xd5\x18\xa4\xc4\x05\x4b\x8b\x9e\x73\x04\x30\x83\x70\x8e\x74\x03\x85\x31\x15\x79\x87\xba\x92\x42\xe3\x07\xc5\x0d\xaa\x29\x28\x38\x8e\xeb\x5e\x68\xb2\x8e\xc4\xcc\xe7\x70\x8a\xe6\x46\xbc\xdc\x96\xa4\xfd\xca\x1c\xe1\xee\xa6\x5e\x8d\x75\xb1\x8c\x64\x12\x66\xee\x0e\xc8\x0d\xe4\x52\x5d\xcc\x6a\x55\xce\x50\xac\x98\x64\xc8\xe6\xd7\x17\xe5\xbc\x52\xd2\xc8\x65\x9d\xef\x6d\xc5\x73\x40\xa5\xdc\x7e\x0e\x4a\xf2\x06\x37\x27\xb8\x92\x0c\x55\xaa\xc8\x33\xc9\xb6\x19\x09\xef\xe9\x03\x96\x3d\xf6\xa6\xff\x7b\x02\x82\x97\x9d\xb3\xb8\xa7\x20\xaf\xe4\x7a\x8d\x8a\x7c\xe0\xa6\x78\xa1\x94\x54\x29\x2a\x95\x91\xf0\x6f\x82\xee\x0f\x30\x17\xc9\x11\x2d\xb0\xa6\x17\x40\xa1\x60\xa8\xc8\x33\xca\xe2\xc1\xd2\xcd\x14\xd4\x14\x12\x2e\xae\x1c\x4d\xbc\x8f\x93\x6a\x2e\xd6\x03\x57\x53\x2b\xd1\x2e\x45\x2e\xc4\x2a\x47\x8e\x61\x0b\xec\xd8\xd1\x0b\x12\xcd\xa4\x8a\xe4\x4e\x0f\x9e\x36\x78\x4e\x41\x9e\x3b\x6f\x54\x8a\xa4\xc7\x57\x6d\x84\xb3\x90\xf1\x0d\xbb\x7d\x11\xb2\xc7\xce\xbc\x19\xdc\xe5\x3b\x55\x2e\x06\x77\xb5\x53\xb1\x6b\xb9\xb3\xec\x15\xa2\x53\xc7\x33\x61\x50\x09\x5a\x2e\x50\x5d\xa1\x0a\xb1\x42\x41\x05\x2f\xc7\xbc\x7a\x25\xdc\x2b\xe3\xa1\x34\xcf\x44\x2e\xd3\xe4\xaa\x3d\x2b\xe4\x94\x97\xc8\xee\x88\xae\x0b\x71\x77\x2c\x17\xf4\x6a\x0c\xc7\x65\x80\xf0\x79\xc9\x51\x18\xd2\xbd\xa7\x51\x67\xd2\x6c\x4c\xf7\xff\x0d\x3d\x9a\xe7\xc0\xc8\x68\xa3\x1e\xe5\x5d\x7b\x62\xb2\x40\x33\xe6\x96\x1e\x8f\x87\xcb\x42\x9f\x8c\x32\xb1\xf1\x0d\x72\x29\x6b\x03\xba\xe4\x2b\xec\xcd\x38\x85\x2b\xf2\xaa\xd6\x46\x5e\xc0\x05\x55\xba\xa0\x65\x89\x4a\xff\xd0\xef\x9f\x37\x00\xed\xd7\x60\xa8\xd4\x63\x6d\xfc\xbf\xdb\x7b\x5b\xc8\x06\x0d\xf8\x20\x64\x31\xb7\x6e\x7b\x1e\xb5\x0b\xf0\x86\xf8\xaf\xeb\x90\xf5\x02\x4d\x07\xdb\xfd\x7d\x87\xb7\xb9\x85\x22\xf4\xfe\x3b\xef\xe3\xc6\x28\x6b\xd3\xf1\x6d\x08\x21\x07\x76\xea\x23\xbc\x7b\xbe\x85\x1d\xbd\x8b\xee\x3a\xb2\xeb\xc6\xfd\x4e\xec\x1e\x9c\xee\x44\x7b\x49\x9c\x1e\xa4\x8a\x3c\x97\xc2\xe0\xb5\x49\xb3\x6c\x5f\xda\xef\xdf\xaa\x34\xbd\x72\x62\xdb\x15\x93\x71\x49\xfb\x06\xa1\x3d\xa8\x6d\xef\x90\x32\x3f\xa4\xa0\x30\x6a\x7b\x73\xde\xcb\xdb\xc5\xed\x97\x1a\xd5\x36\xcd\xc8\x87\x02\x15\xa6\x83\x71\xc1\x99\x9c\x9d\xa4\x6e\xca\xcb\x46\x05\xb0\x77\xf9\x06\x57\x69\x67\xb5\x0e\x56\xb7\xdc\xa1\x70\x53\x4e\x95\xac\xab\x41\x8c\x7e\x1c\xf4\x81\xbe\x32\x4e\xae\x7d\xa0\x30\x50\xde\xc6\xdc\x30\x61\xe2\xa5\x4b\xcd\x45\xb5\xf6\xd2\x43\x19\x48\x1b\x2b\x50\x51\xbd\xa2\xa5\x63\x73\x36\x14\xa0\x21\xf9\x0e\xaf\x0e\x57\xf0\x61\x4b\xc3\x4b\xf2\x56\x94\xdb\xef\x44\x43\x85\x94\xfd\xbd\x3c\x5c\xa0\xe2\xb4\xe4\xbf\x8f\x35\x5a\x2f\xc8\x01\xa2\x7b\x91\xe2\x4b\x5b\x34\x5d\xa0\xe2\x79\x4e\x5e\x87\x06\x93\x3e\xd8\x2d\xbc\xad\x7c\xb4\x26\x38\x3f\x82\x8f\x9f\xc2\xc8\xd7\x8c\x09\xfd\x2e\x97\x51\x68\x67\x7d\x02\x07\x53\xff\x03\x65\xb2\xb6\x36\x99\x46\x50\x87\x4d\x27\xc8\xe6\xfe\xba\x7b\x92\xee\x1d\xd3\x82\x9e\x7b\x38\xbe\xaa\x71\xd6\x4e\x01\x1f\xfe\x35\x56\xb8\x57\xaf\xc4\x69\xd2\xd3\x00\xff\x72\x76\xd2\x72\x63\x0a\xfe\xbe\xef\x58\xa4\x23\x9a\x61\x34\xf3\x9c\xfa\x8e\xf4\xe9\x25\x3f\xc8\xb6\x53\xb2\x5d\x96\x61\x78\x1c\x33\x89\x79\xf5\x06\xc9\x98\xea\xdb\x9f\x62\x66\x5f\xb2\xf8\xdb\xaf\xbd\x9f\x7f\x06\x00\x00\xff\xff\x3d\xf9\xc1\x01\x83\x12\x00\x00")

func handlerHandler_createTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_createTpl,
		"handler/handler_create.tpl",
	)
}

func handlerHandler_createTpl() (*asset, error) {
	bytes, err := handlerHandler_createTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_create.tpl", size: 4739, mode: os.FileMode(420), modTime: time.Unix(1614873658, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_deleteTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xd4\x40\x0c\xbd\xef\xaf\x78\x44\x3d\x24\x90\xce\xde\x8b\x7a\xea\x16\x11\x09\x0a\xa2\x48\xbd\xf4\x92\x76\x9c\x8d\xc5\xac\xa7\x38\x93\xb6\x68\x98\xff\x8e\xf2\xc1\x2a\xdb\xb2\x12\xbe\x44\xb6\xe3\xf7\x9e\xdf\x38\x46\x58\x6a\x58\x08\x59\x5b\x8b\x75\xa4\x6b\x4b\x8e\x02\xad\xd5\xf7\x81\x32\xa4\xd4\x9a\xcf\xfd\xb3\xd9\x8c\xd5\x3c\x5b\x47\xb6\x31\x82\x1b\x9c\x98\x6a\x63\xaa\xae\x92\x80\x94\xce\x6e\x6f\xed\xbb\x18\x41\x62\x91\x52\xca\x4a\xb4\xf3\x48\xb1\xaf\xae\x56\x47\xd9\x06\x9e\x15\x00\xac\xd7\xf8\xde\x72\x87\xa6\x97\xfb\xc0\x5e\x30\xf5\x3b\x84\x96\x10\x23\x4e\xcc\x55\xbd\x23\xa4\x84\x9d\xb7\xe4\xc0\x96\x24\x70\xc3\x64\x71\xf7\x0b\x35\xb6\xfc\x48\x82\x5e\xdd\xe9\x43\xad\xf5\x8e\x02\xa9\x19\x81\x07\xc0\xbc\x3d\x80\xf8\x38\x49\x28\x30\xef\xf6\x84\x36\x84\x07\xf3\x8d\xba\x07\x2f\x1d\xdd\x28\x07\xd2\x12\x8a\xb7\x73\xfd\x67\x4f\x5d\x28\x10\x47\xc0\x21\x62\x3c\x7d\xe5\xc4\xbe\x39\x04\xdb\x12\xa4\x8a\xb3\x73\xb4\xa6\x57\xf7\x75\x10\x55\x49\xc8\x9f\x4a\x68\x89\x8c\x6d\x56\x2c\xd0\x40\xae\xa3\xff\xc2\xb8\x0e\xca\xb2\x3d\x0a\x23\x16\xa7\x0b\x18\x6e\x46\x84\x37\xe7\x10\x76\x0b\xfd\x43\x28\x85\x5e\x65\x5f\x4a\xab\x97\x53\x23\xef\x85\x63\x92\x60\x96\xf6\xcd\xef\xfb\x45\xa8\xda\xe4\x6c\x0b\x73\xf9\x4c\xf7\xb9\x9a\x0b\x2f\x81\x9e\x43\x5e\x14\xef\x8f\xb3\xb6\xe6\x93\xdf\x6e\x49\xcd\x0d\x87\xf6\x52\xd5\x6b\x4e\xaa\xc5\x98\x7e\x60\x72\x36\xcf\x0e\xb8\xc6\xa4\xda\xfc\xcd\xb3\x12\x23\xe3\x38\x98\xd1\xf0\x99\x2e\x85\x65\x0b\xf1\x96\xd0\xa8\xdf\xc1\xde\x2d\x7c\x99\x96\x15\x4b\x6a\x2a\x09\xa4\x52\xbb\x6b\xd2\x47\xd2\x09\x65\xb2\x52\xd8\xbd\x9c\x38\x66\xcf\xc1\x0a\xaf\x34\xff\x46\x27\xf5\x8f\x85\xd6\x4a\x1a\xff\xef\x1f\xe6\x1b\x5f\xbe\xe1\xac\xf3\xca\x8f\x66\x0e\xf7\x32\xf5\xd2\x2a\x46\x12\x9b\xd2\x9f\x00\x00\x00\xff\xff\x92\x3a\xe3\x3c\xb8\x03\x00\x00")

func handlerHandler_deleteTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_deleteTpl,
		"handler/handler_delete.tpl",
	)
}

func handlerHandler_deleteTpl() (*asset, error) {
	bytes, err := handlerHandler_deleteTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_delete.tpl", size: 952, mode: os.FileMode(420), modTime: time.Unix(1614367139, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_listTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x41\x6f\xe3\x36\x13\xbd\xfb\x57\xcc\x12\xc6\x67\x69\x61\xd3\x5f\xaf\x5b\x18\x45\x36\x69\xb3\x41\xdd\x26\x4d\xb2\xc8\xa1\xe8\x81\x36\x47\x12\x1b\x9a\xb4\x49\x2a\xd9\x54\xab\xff\x5e\x90\x92\x1c\x59\x92\x93\x5d\x20\x97\x0a\x08\x62\x89\xc3\x99\x37\x33\x8f\xf3\x58\x14\xc0\x31\x11\x0a\x81\x64\x4c\x71\x89\x66\x2e\x85\x75\x73\xa3\x73\x87\x04\xca\x32\xa3\xe7\xe8\x22\x32\x27\x53\xc8\xe8\x52\x58\x17\x17\x05\xa0\xe2\x50\x96\xa3\xd1\xb1\xdd\xbb\x1c\xcd\xd3\x2c\x11\xd2\xa1\xf1\x4e\x46\x00\x00\xf3\x39\x7c\xb6\x08\x2e\x43\x08\xeb\xb0\x65\x86\x6d\xd0\xa1\xb1\xe0\x34\x54\xd6\xcf\xcb\x14\x9c\xe6\x1a\x66\xa0\xd0\x3a\xe4\xf5\xfa\x4f\xc1\x55\x51\xcc\xc0\x30\x95\x22\x8c\x13\xf8\xb0\x80\x31\xfd\x45\xa0\xe4\xb6\x09\xd5\xd8\x8c\xff\xb6\x5a\xfd\xce\x36\xe8\x8d\x84\xe2\xf8\x05\x22\xbb\x95\xc2\x41\xe4\x58\xba\xd4\xfa\x3e\xdf\xc2\x38\xa1\x37\xce\xe4\x6b\x77\xcb\x52\x20\x7e\x07\x89\x81\x4c\x49\x0c\xff\x6f\xfb\x13\x09\x84\x58\x86\x7e\xbe\x5e\xd2\x3f\x3c\xc4\x28\xae\x8a\x53\x14\xad\x48\x65\x49\xe2\x1f\x21\x81\x77\x0b\x20\x04\x8a\xfd\xfe\x06\x93\x48\x7c\xc4\x4f\xcc\x9e\xeb\xdb\xa7\x2d\xb6\x43\x34\xcf\x7c\x1e\x72\xef\x6c\x45\x69\xb1\xde\x7d\x61\x3f\x6a\x2d\x87\xb6\x3e\x30\x03\x2b\x58\x69\x2d\x7b\x4b\x21\x81\xc5\x02\x88\x33\x39\x76\x91\x35\xcf\x0a\x16\xe0\xd7\x7b\x8b\x25\x34\xf1\x2b\x27\x09\x93\xf6\x45\x2f\xc1\xe0\x98\x9b\xe1\x6d\x19\x5d\xea\x34\x45\x43\xef\x84\xcb\x7e\x36\x46\x9b\x08\x8d\x89\xc3\x6b\x68\x70\xbf\xd4\x53\x48\x62\x7a\x86\xab\x3c\x8d\xc8\x5a\xe7\x92\x83\xd2\xce\x33\xcb\xf6\x58\x46\xe2\xc1\xa0\x06\x15\x47\x43\x3f\x32\x7e\x8d\xbb\x1c\xad\x8b\x1e\xa7\x60\xa6\x40\x26\x9d\x58\x13\xd8\xe4\xd6\xc1\x0a\x61\xe2\x2b\x34\x01\x6d\x60\x12\xb2\x9c\x1c\x75\xed\x72\xa3\xfa\x35\xe8\x7d\xd9\xd1\xbb\x0c\x0d\x46\x3e\x22\xbd\x62\xeb\x7b\x96\xfa\x88\xb4\x28\xf6\xe4\x0c\xf9\x97\x65\xb4\x8a\xe3\x0e\x2f\xe0\x80\x18\x17\xca\x0d\xf1\x42\x4c\x01\x8d\xf1\xfc\xb5\xce\xac\xb5\x7a\xa0\x27\x4e\x8b\x28\xe9\x03\x17\x49\xb0\x7c\xb7\x00\x25\xe4\x7f\xbc\x51\x4c\x81\x50\x0e\xd3\x17\x7c\xbe\x7d\x87\xc4\x2b\x1d\xba\x71\x46\xa8\x74\xa8\x49\xdf\x11\x24\x79\x25\xc8\xad\xd8\x7c\xc7\x68\x09\x03\x7d\xd6\x32\x2f\x47\xad\x85\xb2\x1c\xbd\x3e\xf3\xdb\x63\xfe\x36\x13\x16\x92\x5c\xad\x9d\xd0\x2a\x74\x57\xa0\x85\x44\x1b\x08\x99\xd5\x6d\x82\x8d\xe6\x28\x2d\x85\x53\xa6\x7c\xb3\xaa\x01\x8f\x1c\x56\x4f\x3d\x81\xa0\xc1\xb5\x77\x19\x65\x07\x4e\x3e\x55\x10\x62\xf0\xd2\x14\x3d\x42\xe6\xdc\x96\x5e\xa3\xdd\x6a\x65\xf1\xce\x08\x87\x66\x0a\x06\xde\xd7\xdf\x03\x6f\xe2\x16\xab\x77\xfe\x48\x64\xf4\x54\x0a\x54\x8e\xb6\x3d\x37\x23\x7e\xd4\x52\x94\x50\x5e\xae\x2b\xc9\x39\x51\x4a\x3b\xe6\x53\xb4\xb4\x86\x71\x8e\x8a\x9e\x61\xc2\x72\xe9\x3c\x9e\x4b\xc3\xd1\x74\xbb\x20\x92\x21\x09\xd1\xde\x94\xc4\x61\xb4\x0e\x4d\xd5\x1d\x0d\xce\xa2\x41\x16\xb7\xe4\xb0\xc2\xe6\x75\x73\xa0\xf9\xcd\x53\xa7\xea\x4f\xfa\x0e\xa2\xb1\xae\x7c\xc3\x57\x90\xfa\xd1\xd7\x92\x70\xb4\x6b\xdf\xd0\x33\xb4\xeb\x86\x59\x65\x79\x52\xbd\x04\x1e\x54\x07\x5c\x57\xba\x1b\x34\x6f\x7a\x14\x5a\x97\x5c\xcd\x73\xc8\xe0\xb6\x72\xef\xc9\xd6\x76\x33\x46\xb9\xf2\xd9\x21\x4b\xd1\x2c\x35\xe3\x1f\x73\x21\x3d\xee\x31\x10\x5f\xed\x73\xa3\xf3\xad\x25\x40\x76\x24\x8c\x2e\xff\xd7\xb9\x0f\xf8\xf6\x79\x2f\x65\xe9\xd1\xef\x7f\x75\xa3\xcd\xe7\x70\xc5\x52\xa1\x42\x73\xf7\x5f\xb7\x2c\xc5\x29\x08\x87\x1b\x7b\x85\xe6\x2a\xbc\xd5\x33\x35\xa3\xdb\xbd\xfd\x85\x4a\x74\x98\x4c\x71\xfb\xea\x70\x74\xa4\x76\x26\x50\x0b\xc5\x8e\x2e\xc5\x46\xb8\xa8\x1d\x31\xa6\x97\x49\x62\xd1\x45\x91\x47\x03\x33\xf8\x21\x86\xf7\x07\x98\x0e\xf9\xea\x70\xb3\x95\xcc\xbd\x7c\x3f\x1b\x1f\x24\x8f\x76\x9f\xd6\x8e\x9e\x48\x19\x19\x7a\xaa\x95\xc3\x2f\x2e\x8a\xbf\x2d\xa5\x63\xea\x50\xfd\x24\xe8\xff\x55\x27\xdc\xcf\x41\xce\x1c\x5b\x31\x8b\x24\x6e\x86\x13\xcc\x60\x85\xce\x5f\x06\x83\x69\xa7\x5c\x41\x04\x2e\x94\x43\xa3\x98\xbc\x41\xf3\x80\xa6\x72\x5c\xa9\x81\x12\x32\xfe\xc6\x02\x7b\x0e\xa4\x81\x34\x2f\x1e\xe8\x6b\x64\xbc\xe2\x56\x9b\x4e\xfc\x59\x50\x33\x34\x22\x49\xe8\x6f\xcc\xd8\x8c\xc9\xe8\x7f\xcd\x87\xcb\x6d\xf0\x55\x54\x9b\x3f\xc0\x9f\x7f\xd9\x30\xfa\x87\xef\x84\x69\x2f\x44\xdb\xa2\x3e\xde\x69\x40\x5a\x99\x96\x25\x29\x8a\x71\xea\xb5\x75\x60\x82\x43\x4b\x14\x86\x0e\x1f\x79\x9e\x75\x5f\xc1\x2a\x76\x1f\x54\xba\x87\xac\x27\x0c\xe5\x14\xd0\xbe\x09\x0f\x2c\x1a\xc1\xa4\xf8\x27\x54\xbc\x6a\x35\xe9\xb6\xee\xed\x9a\x7d\x00\xa6\xbe\xa3\xb0\x8d\xce\x95\x23\x53\x90\xa8\x22\xb4\x71\x4c\xc3\xe1\x1d\x2c\x4d\x0d\x06\x79\x0b\x63\x8d\xef\xf2\xd7\x1a\x0e\xaf\x96\xbc\x5c\xa2\xe2\x65\xf9\x6f\x00\x00\x00\xff\xff\x38\x24\x1b\x42\x5d\x0d\x00\x00")

func handlerHandler_listTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_listTpl,
		"handler/handler_list.tpl",
	)
}

func handlerHandler_listTpl() (*asset, error) {
	bytes, err := handlerHandler_listTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_list.tpl", size: 3421, mode: os.FileMode(420), modTime: time.Unix(1614873658, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_readTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5d\x6f\xdb\x3a\x0c\x7d\xcf\xaf\xe0\x35\x82\x0b\xbb\xd7\x51\xde\x0b\xf4\xe1\xa2\xd9\x52\x63\x1f\xdd\xda\x02\x7d\x58\x87\x42\x8d\x68\x5b\x98\x23\x27\x94\xdc\x2e\xd3\xf4\xdf\x07\xc9\x4e\xaa\x24\xed\x50\x3d\xd9\x34\x75\x78\xc8\x73\x68\x6b\x41\x60\x29\x15\x42\x52\x73\x25\x1a\xa4\x29\x21\x17\x53\x6a\x3b\x83\x09\x38\x57\xb3\x39\x9a\x34\x99\x5a\x29\xac\x05\x59\xc2\x98\x15\x33\x56\xe8\x42\x19\x70\xee\xf4\xee\x4e\xfc\x67\x2d\xa0\x12\xe0\x9c\x4b\x72\xa8\xd9\x15\x72\x91\xed\x62\xa3\xd1\x2b\x25\x3c\xf8\x08\x00\x60\x3a\x85\x9b\x5a\x6a\x28\x3b\xb5\x30\xb2\x55\x50\xa2\x59\xd4\xa8\xc1\xd4\x08\xd6\xc2\x98\x7d\xe6\x4b\x04\xe7\x60\xd9\x0a\x6c\x40\x0a\x54\x46\x96\x12\x05\x3c\x6c\x80\x43\x25\x1f\x11\x3a\x6a\x26\x2b\x4e\x7c\x89\x06\x09\x4a\x6a\x97\x5b\x6c\xc1\x0d\x7f\xe0\x1a\x81\x2b\x01\x84\xa6\x23\xa5\x41\x1a\x30\x6d\x28\xb0\x68\x24\x2a\xc3\x42\xb6\x67\x90\xd6\x7b\x35\x2f\x7a\xc6\x19\xf8\xae\xd2\x27\xa8\x8d\x59\xb1\x2b\xd4\xab\x56\x69\xbc\x25\x69\x90\x72\x20\x38\x19\xe2\xeb\x0e\xb5\xc9\xc0\x06\x38\x7f\xac\x9d\x1c\x0d\x6d\xf7\xd1\x1f\x29\x72\x40\x22\x38\x3d\x83\x9a\x75\xd4\x7c\xf1\x4d\x14\xca\xa4\x4f\x39\x50\x0e\x89\x14\x49\x16\xa1\x01\x36\x1a\xdf\x84\x71\x6d\x48\xaa\xea\x55\x18\x25\x60\x12\xc1\xc8\x32\x20\xfc\x73\x06\x4a\x36\x11\x7f\x7f\xfa\xa1\xed\x42\x6e\x14\x01\x4d\x4f\x60\xc1\x75\x98\x66\xd5\x4e\xcc\x66\x85\x1e\x4a\x21\x0a\x14\x70\x32\x8d\x2a\xc4\x93\xb8\xe0\x7a\xde\xde\xf8\xe4\x83\x4e\xee\xa5\xf0\x5d\x04\x05\x8a\x19\x1b\x52\x52\x29\x8e\xc8\xbb\x88\xc6\xba\xef\xfc\xbc\x97\x32\x96\x8f\x7d\xed\x90\x36\x69\xc6\x6e\x6b\x24\x4c\x9f\x3f\xfd\x86\xa6\x7d\x42\xf2\x29\xc5\x2c\x8d\x9c\x1d\x53\xbb\x0f\x9e\x1f\x26\xde\x3f\x87\xca\xd9\x1e\x1b\x83\xcb\x55\xc3\x0d\x42\x12\x36\x67\xfd\x90\xc0\x38\xee\x0b\x77\xe2\xac\xd9\xa5\x6a\x36\x29\xb1\xf3\x56\x19\xfc\x69\xd2\xbf\x02\x21\x51\x4b\x93\xb0\x32\x52\x55\x03\x68\x9c\x3f\xae\xa8\xed\x56\xda\x23\x8f\xd9\xff\x4a\xb5\x86\xfb\xfd\xd1\x6c\x30\xed\x1c\x55\x58\xc6\x79\x9f\x16\x51\x7a\xf6\x8b\xae\x91\x64\x59\xb2\x4f\x9c\x74\xcd\x9b\xf4\xdf\x6d\xe0\x72\x15\xb0\x6c\x7f\xf9\x14\xbe\x7d\xd7\xc1\x50\xfb\xd6\xd8\x8a\x5a\x1d\x95\x88\x33\x88\xab\x0a\x61\x5c\x05\xa6\x7d\xaa\x73\x89\xb5\xe3\xca\xff\x32\x5e\x70\x63\xec\xf5\xc3\xb8\x3f\x49\x2c\xa4\x56\xfc\x87\x17\x28\x39\x62\x76\x08\xeb\x5c\x0e\x98\xbd\xc9\xf3\x35\xfb\xd8\x56\x15\x12\xbb\x95\xa6\x7e\xe7\x95\x48\x91\x28\x0b\xaf\xef\x25\x36\x22\x4d\xf6\x7c\xb6\x75\xec\xf0\x9e\xe4\x20\x45\xc6\xfa\x8b\x89\x46\x92\xbc\x91\xbf\x82\x3c\x10\x74\x8d\xb6\x11\xc2\x8a\x29\x81\xc4\x0a\x65\x90\x14\x6f\xae\x91\x1e\x91\xfa\xdb\xfd\x02\x2b\xd9\x1c\xde\x78\x6d\x29\xf7\xa8\x1f\x71\x8d\xe6\x95\x03\xb2\x62\x96\xb1\x42\x95\xed\xcb\x29\x03\x2f\x8c\x7f\x1e\x03\xd5\xcb\x0f\x03\xb3\x61\x35\xdd\xc8\x5a\x54\xc2\xb9\x3f\x01\x00\x00\xff\xff\x00\x6f\xb8\xb9\x52\x06\x00\x00")

func handlerHandler_readTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_readTpl,
		"handler/handler_read.tpl",
	)
}

func handlerHandler_readTpl() (*asset, error) {
	bytes, err := handlerHandler_readTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_read.tpl", size: 1618, mode: os.FileMode(420), modTime: time.Unix(1614873658, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_subressourcesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\xb8\x11\xc6\x20\x65\x36\x85\xbd\x06\xc8\x43\x96\x74\x99\xb1\x6c\xc9\x92\x15\x79\x58\x87\x81\xb1\x4e\x32\x51\x9a\x92\x8f\xd4\xb2\x4c\xd5\x77\x1f\x48\xfa\x8f\x5c\x4b\x72\x82\xa0\x43\x0b\xf4\x80\x00\x12\x75\xbc\xff\xf7\xbb\x8b\xeb\x1a\x52\xcc\xa4\x46\x60\x73\xa1\x53\x85\x94\x98\xea\x81\xd0\x14\x15\xcd\x30\xc9\xd1\x26\x54\x54\x16\x19\x4c\x9a\xe6\x08\x00\xa0\xae\x81\x84\xce\x11\x46\x08\x27\xa7\x30\xe2\x6f\xd2\x1c\xcd\xe6\x73\x60\x99\x80\xcc\x40\x17\x16\x46\xc8\x7f\x7f\x2a\x91\x9f\x69\x5d\x58\x61\x65\xa1\x0d\xff\x29\x28\xba\x44\xcd\xef\xde\xcb\x12\x5a\x37\x1d\xcd\xf9\x25\xda\x88\x25\xb5\x4c\xeb\xda\xc9\x19\xf1\xe9\x05\x9f\x9a\xa9\xb6\xd0\x34\x27\xef\xde\xa5\xdf\xd5\x35\xa0\x4e\xa1\x69\x9a\xc4\x99\x83\xa5\x12\x33\x84\x68\x84\xfc\x57\xb1\x40\xf8\x00\x46\x8b\xf7\x18\x03\xfb\x8b\x01\x9b\x30\x68\x1a\x36\x86\x39\xaf\x6b\xd8\xb2\x94\xc2\xcc\x84\x82\xa6\x89\x5b\x76\x7b\xb1\x2d\x4f\xd7\xaf\xad\xc7\xa3\xc3\x21\x63\x30\x1c\xab\x9d\x50\xbd\x22\x52\x75\x9d\x1c\xc3\x2d\x8a\x34\xb9\x92\xc6\x42\x51\x22\x85\x8b\x50\x68\x08\x36\x05\xa3\x0c\x1c\x27\x1f\xdd\xcd\x2a\x3d\x8b\xe6\x4e\xff\x28\x44\xa4\x69\x56\xda\x62\xe8\x8e\x53\xf4\x08\x73\x6b\x4b\x7e\x8b\xa6\x2c\xb4\xc1\x7b\x92\x16\x69\x0c\x04\xc7\xab\xf3\x65\x85\xc6\xc6\x50\xef\x28\x6a\x15\xc4\x4e\x22\xf7\x98\x1c\xc9\x74\x0c\x48\xe4\x82\x35\xe7\x15\xa9\x1b\x41\x62\x31\xd5\x36\x7a\x1c\x03\x8d\x81\xc9\x94\xc5\x1d\xd2\x01\x95\xc1\x17\xc9\xbc\xb3\x24\x75\x7e\x50\x6c\xab\x1a\x76\x44\x66\x5e\xe2\x37\xa7\xa0\xa5\xea\xf0\xd7\x11\xa1\xad\x48\xef\x7d\x6a\x8e\xf6\x8e\x96\xc1\xb4\x73\x25\x51\x5b\xde\xce\x08\xff\xad\x42\x7a\x8a\x62\x7e\x3f\x47\xc2\x68\xfb\xe9\x03\xa8\xe2\x11\xc9\xb1\x4c\x2f\x22\x99\xc6\x71\x60\xed\xc9\x5c\xbc\xaf\x74\xd5\x5a\xc8\xdf\x6a\xb9\xac\x7a\x83\x57\xd7\x60\x71\x51\x2a\x61\x11\x18\xb9\x52\x5b\x3e\xb0\x75\xad\xf6\x5d\xc2\x4d\xc0\x97\xfc\x5a\xab\xa7\x88\xf8\x79\xa1\x2d\xfe\x63\xa3\x78\x3f\xce\xdd\x6a\x90\xa8\xa0\x89\x6f\x30\xa9\xf3\x1d\x95\x7d\x12\x46\x39\x15\x55\x69\x7c\xa7\x0d\x37\x93\xeb\x99\xcb\xc0\xdc\xe3\xc2\xb6\x66\xcc\x1c\x49\x66\x19\xff\x45\x90\x99\x0b\x15\x7d\xbb\x3e\xb8\x2e\xbd\xdc\x3a\x08\x3a\x81\x3f\xfe\x34\xbe\xa8\xba\xcb\x01\x5a\x6d\x90\x0f\xaa\x6e\x73\xaf\xd0\x23\xf7\x3e\x85\x6b\x4d\xc3\xea\x7a\x94\x3b\x48\x1b\xa8\xd0\x56\x58\x7c\x6f\x0c\xf1\x38\x62\xa1\x72\x7c\xd0\xda\x18\xea\xa0\x73\xd0\x9f\x21\x03\x9a\x66\x0c\xd8\x9d\xf0\xe7\x74\x10\xf8\x61\x70\x55\xe4\x39\x12\xbf\x97\x76\xfe\xc6\xd5\x44\x84\x44\xb1\x7f\xfd\x51\xa2\x4a\xa3\x3d\xcb\x9b\x86\xb7\x8e\xa6\x17\xeb\x53\x36\x06\x99\xc6\x3c\x08\x61\x06\x49\x0a\x25\xff\xf5\xc5\x01\xbe\xda\x3a\x30\x60\x4d\x84\x3a\x45\xe2\x53\x6d\x91\xb4\x50\x77\x48\x7f\x23\x05\x49\x01\x42\xb4\x54\x43\xb7\x3b\xa1\x00\xba\xe1\x60\xcf\xed\x1e\x3f\x5b\x19\x1a\x83\x73\x34\xe6\x53\x9d\x15\x43\x8c\x2b\x3f\xb0\x0b\xee\x5a\x6e\x5e\xff\xbc\xf2\x2a\x7d\x31\xd8\xae\x60\x25\x2d\x56\x5d\xd8\x6e\x40\x37\xfc\x5c\xf7\x5d\x60\x26\x2a\x65\xaf\x29\xf5\x08\xd6\x1b\x36\x99\x01\xf1\xb7\xb7\x57\x1b\x14\xf4\x7b\x41\xe1\xae\xb1\x18\x4e\x4f\x81\xb1\x81\xca\x71\xb4\xe4\x5e\x49\x34\xc8\x04\xbb\xbd\x16\x2c\x4f\x8b\x83\x2d\xb3\xa6\x15\x68\xbb\x8a\x5e\x42\x34\x2a\x82\xce\x35\x44\xc7\xc0\x52\x34\x33\xb7\x12\x5c\xa0\x99\x6d\xc3\x77\x16\x5e\xfc\x1a\x13\x72\x56\x70\x9f\x69\x97\xd0\x78\xfc\x2c\x93\x0f\x75\xbf\xa3\xfe\xb2\xec\xcd\xa0\xb7\x70\x27\x8d\x43\x60\xba\x4a\xa7\x5b\x41\xbe\xa6\xf4\xb3\x4d\xa9\x37\xaa\x6f\x74\x4e\x60\x84\xea\xc1\x45\x09\x45\x8e\x74\x55\x88\xf4\x87\x4a\x2a\xe7\xf3\x7a\xee\x32\x97\xdf\x30\xea\x18\xb0\x25\xf3\xb8\xed\xfe\x7a\x81\x20\xcc\x3a\x27\xb7\x69\x3c\x24\xad\x9f\x86\x6c\x49\x12\xb8\x11\xb9\xd4\xbe\xcc\x3a\x39\x4a\x91\xe3\x18\xa4\xc5\x85\xb9\x41\xba\xf1\x6f\x9b\xf5\xae\xdc\xdc\xf5\x50\xe8\x50\xec\x75\xf3\xe7\xe5\xd0\xbd\xe4\x57\x72\x21\x6d\xd4\xb6\x30\xe6\xd7\x59\x66\xd0\x46\x91\xb3\x1e\x26\xf0\x7d\x0c\xc7\x3b\x3e\x74\x6c\x68\xf0\xf1\x5e\xb4\xfe\x6f\x43\x49\x63\x93\xa5\x6b\xa0\x49\x26\x95\x45\x3a\xbc\x1d\xa1\x69\xad\x64\x67\x4a\x1d\xde\xc8\x5e\x3b\xa0\x57\x63\xd6\x0f\x56\xf0\xc6\x4a\x9d\x43\x2a\xac\x78\x10\x06\x59\xec\x32\x6d\x0b\xd7\x93\xf0\x80\xd6\x22\x85\x19\xfc\xd9\x4c\xe0\x17\xed\x93\xdb\xde\xf8\xba\x4f\x06\xfa\x74\xfb\xa4\xf9\xa4\xf5\xfa\xe5\xad\x85\x62\x51\x54\xda\xb2\x31\x28\xd4\x11\x9a\xf8\x7f\xdb\x02\x03\x8a\xef\x5a\xbd\xff\xbd\x75\x94\x1c\xc3\x39\xa1\x83\xb2\x67\xfd\x52\xb1\x95\xb1\x79\xfa\x2f\x00\x00\xff\xff\x77\xea\xdb\x13\xae\x12\x00\x00")

func handlerHandler_subressourcesTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_subressourcesTpl,
		"handler/handler_subressources.tpl",
	)
}

func handlerHandler_subressourcesTpl() (*asset, error) {
	bytes, err := handlerHandler_subressourcesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_subressources.tpl", size: 4782, mode: os.FileMode(420), modTime: time.Unix(1614873677, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHandler_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\xb8\x09\x46\x21\x65\x36\xbd\xe7\x14\xc5\xd0\x36\x6d\x66\xac\xff\x50\xb7\xeb\x43\x5b\xa0\xb4\x79\x92\xd8\xc8\xa4\x4a\x52\x76\x32\x4d\xdf\x7d\xe0\x1f\x2b\xb2\x2c\xbb\xce\x86\x61\x9b\x5e\x12\xd1\x77\xc7\xbb\xfb\xdd\xfd\xee\x54\xd7\xc0\x30\xe5\x02\x21\xca\xa9\x60\x05\xaa\x69\x55\x32\x6a\x70\xaa\x64\x65\x30\x82\xa6\xc9\xc9\x1b\x6a\x96\x79\x1c\x4d\x6b\xce\xea\x1a\x78\x0a\x23\x32\xbb\x24\x33\x3d\x13\x06\x9a\xe6\xe2\xd3\x27\xf6\x63\x5d\x03\x0a\x06\x4d\xd3\x44\x63\xc8\xc9\x7b\x67\x23\x69\x4f\xcf\xce\x0e\x5e\x64\xaf\x38\x03\x00\x98\x4e\x41\x1b\x55\x2d\x0d\x18\x09\x0b\x2e\x18\x98\x1c\xa1\x94\xda\xc0\x42\xb2\x5b\x30\x92\x38\x39\x73\x5b\x22\xd4\x35\x8c\xc8\x2b\xba\x42\xf8\x03\x0a\xb9\x41\xf5\x9c\x2b\x6d\xbd\xf1\x37\xbf\xc5\x6f\x15\x6a\xb3\x35\x58\x3b\x45\xfb\xd4\xf5\xf4\x1c\x1e\x33\x06\xb4\x28\x20\xe5\x58\x30\x0d\x26\xa7\x06\xa8\x42\x10\xd2\x00\xde\x2c\x8b\x8a\x21\x23\x70\x3e\x0d\x8e\x79\x3d\x50\x54\x64\x08\xa3\x14\x2e\x1e\xc1\x88\x3c\xf7\xba\x93\x8e\x8c\x97\x9b\xc0\x88\x3a\x91\x94\x3c\x16\x42\x1a\x6a\xb8\x14\xda\xcb\x5f\xa1\x80\x01\x05\x9e\xba\xab\x63\x2a\x98\x55\x1e\x51\x32\xbf\xe6\x65\xc8\x61\x5f\x21\x78\x33\x4a\xc9\xdc\x05\xe7\x0c\x43\xd3\xc0\xb9\x3f\x7d\x77\x5b\xa2\xfd\x89\x8b\xcc\x9e\x7e\xf9\xaa\xa5\xb8\x88\x2c\x6e\x82\xe1\x0d\xc4\xba\x2c\xb8\x81\xd8\xd0\xec\x85\x94\xd7\x55\x79\x67\xe9\x1d\xcd\x20\xb2\xe2\x51\x02\xd1\x38\x4a\xe0\x27\x68\x9a\x28\x20\x4e\x03\xa6\xbf\xd1\x82\x33\x17\x93\x15\x6f\x1a\xe7\xcb\xa1\x1f\x5b\xfc\xbf\xec\xc5\x1c\xea\xa2\x7f\x34\xd9\x39\xeb\x60\x85\x2c\xc3\x53\xa1\x9a\x6c\xb1\x42\x8f\xd5\x33\xa7\x7b\x04\x2a\xbc\x0f\x54\x16\xa5\xd8\xde\x3f\x42\x9f\xec\xae\xee\x2f\xbe\xb6\xaf\x50\x38\x0c\x13\x2f\x39\x8c\xec\x41\x68\xb1\x0f\x6d\xc0\x00\xc9\x7b\xc1\xbf\x55\x08\x4d\x63\xc1\xc6\x42\xdb\x7f\x3f\x7e\x6e\xd3\xec\x95\x9d\x53\xb3\xcb\xbf\x50\x09\xf8\x6f\x55\xc2\x64\xa0\x14\xc2\x51\x73\xb6\x65\x87\x77\x39\xd7\x90\x56\x62\x69\xcd\x82\x67\x0f\x0d\x14\x32\xbe\x46\xd1\x61\x84\xa6\x81\x95\x64\x58\x38\xa4\x34\x5d\xbb\xba\x41\x58\xe6\xb6\x28\x34\x70\xe1\x5e\x19\x35\x74\x41\x35\x7a\x52\xb1\x66\xe3\x7c\xc7\x48\x80\x32\x01\x1f\x51\xbc\x81\xdc\x98\x92\xbc\x45\x5d\x4a\xa1\xf1\x83\xe2\x06\xd5\x18\x14\x9c\x87\x73\x47\x39\xc9\x0e\xd9\x4c\xf6\xd8\x72\x27\x7c\xce\xc6\x80\x4a\xd9\x1a\xcc\x49\xa5\x8a\x37\x54\xd1\xd5\x4c\x98\x78\x33\x06\x35\x86\x88\xb3\x28\xe9\x52\x50\x40\xfc\xfb\x36\x3c\xea\x07\xcd\xf4\x32\xce\x53\x67\xe1\x87\x47\x20\x78\xd1\xf1\xdf\x3e\x0a\x4d\xa5\x44\x7b\x14\xd0\x08\x88\x5c\xa1\xb9\x23\x69\x9b\x50\xd2\xfe\xca\xac\x43\xa7\xb1\x74\xdd\x58\x5b\x46\x32\x09\x13\xdb\xeb\x72\x03\xa9\x54\xab\x49\xa5\x8a\x09\x8a\xa5\x64\xc8\xa6\x37\xab\x62\x5a\x2a\x69\xe4\xa2\x4a\x7b\x37\x05\xef\x2f\x1e\x81\xad\x58\xf2\x0a\x37\x97\x68\x95\x54\xac\xc8\x13\xc9\x6e\x13\xe2\xdf\xe3\x07\x2c\x79\x78\x38\xd0\x9c\xbc\x90\x59\x86\x8a\x7c\xe0\x26\x7f\xa6\x94\x54\x31\x2a\x95\x10\xff\x6f\x84\xf6\x0f\x30\x6b\xc9\xf6\x93\x6f\x8e\x5e\xa6\x04\x43\x45\x9e\x50\x16\xe2\x6a\xd3\x2f\xd6\xb6\x1b\x9c\x8e\x9d\x48\x5c\x64\x7b\xaa\x47\x92\x1c\x5a\x09\xdb\xaa\x1d\x0a\x3d\x27\x41\x4c\xaa\xd0\xc3\xf1\xd1\x68\xbd\xe6\x18\xe4\xb5\xd5\x46\xa5\x48\x7c\xbe\x6e\x2d\xcc\xbc\xc7\x77\x4d\xec\x92\x90\x3c\xb4\xe2\xf5\x1e\x65\x9d\x94\xb9\x60\xdc\xe6\x4e\x85\xe1\x6c\x63\xe9\x25\xa2\x93\xc7\x99\x30\xa8\x04\x2d\xe6\xa8\xd6\xa8\xbc\x2d\x9f\x50\xc1\x8b\x21\xad\x9d\x14\xf6\xd2\x78\xcc\xcd\x99\x48\x65\x1c\xad\xdb\x58\x21\xa5\xbc\x40\x76\x22\xba\xd6\xc4\xe9\x58\xce\xe9\x7a\x08\xc7\x85\x87\xf0\x69\xc1\x51\x18\xd2\x25\xa1\x40\xa7\xaf\x05\xce\x2e\x63\xce\x92\xa1\x29\xf7\x5f\xd8\x48\x78\x0a\x8c\x0c\xae\x25\x83\xe5\xd7\x06\x4e\xe6\x68\x86\xd4\xe2\xf3\x61\x73\x89\xdf\x0a\x02\x59\x6c\xdc\x3a\xb0\x90\x95\x01\x5d\xf0\x25\xee\x6c\x74\xb9\xcd\xf5\xb2\xd2\x46\xae\x60\x45\x95\xce\x69\x51\xa0\xd2\x3f\xef\x6e\x0b\x77\x38\xf5\x73\xb0\x3f\x97\x86\x96\x96\xff\xef\xa6\xd1\x42\xb6\xb7\x6e\x1c\x85\x6c\x3b\xd4\x3a\xcb\xc8\xa0\x9c\x87\xd7\xdb\x7f\x59\x79\xaf\xe7\x68\x3a\xd8\xf6\xef\xdd\x6f\xea\x16\x8a\x81\xb9\x77\xec\x1e\xbb\x34\x36\x4d\x3c\x7c\x0d\x21\xc4\x57\xd1\xdd\xd0\x51\xb8\x92\x6b\x04\xde\xff\x18\xf0\x9b\x45\x58\x18\x4a\xfb\x15\x34\xb1\x8d\x3b\x58\x40\x30\xbc\xd8\x6e\x9f\xfb\xd4\xd7\x1e\x63\x70\xd1\x5b\x57\xec\x83\xed\xdc\x5f\x10\x2b\x15\x2b\xf2\x54\x0a\x83\x37\x26\x4e\x92\x93\x66\xfb\x49\xc4\xad\xe9\xda\x92\x76\x97\x94\x86\xa9\xf1\x1e\x84\x7d\x9c\x23\x51\x71\x5a\xf0\xdf\x87\x88\xd2\x75\x52\xa6\x64\x55\x6a\xdf\x70\x07\x3a\xc2\xd7\xfd\x95\x17\xec\xe4\xf8\x6b\x9b\x33\x9d\xa3\xe2\x69\x4a\x5e\x7a\x66\x88\x1f\x6c\x0f\x5e\x97\xce\x5a\xed\x95\x2f\xe0\xe3\x67\x3f\xb2\xeb\xa1\x0e\xdd\xfa\x32\xb8\xc8\xb7\xe4\x90\x39\x5f\xbd\xa8\xdb\xa3\x47\x99\xfd\x4e\x1e\xd8\xc4\xa0\xb3\xe7\xf5\xcf\xed\x13\x75\x37\x2a\x2d\xe8\xb5\x83\xe3\xbb\xa5\xd5\x34\x63\xc0\xbf\x57\x13\xf6\xd5\x75\x50\x1c\xed\xcc\x27\xf7\x32\xbb\x6c\x4b\x63\x0c\xf6\xdb\xa3\xad\x21\x1d\xc0\xf4\x93\xd5\x55\xd4\x3f\x58\x3d\x3b\xce\xef\x79\xdb\xc9\xd8\xd6\x4b\x3f\xfb\x87\x44\x82\x5f\x3b\x7b\x40\x70\xf5\xf5\xaf\xc1\xb3\xaf\x49\xf8\x42\x69\x5b\xf7\xcf\x00\x00\x00\xff\xff\x5d\x10\x4e\x58\x4f\x11\x00\x00")

func handlerHandler_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHandler_updateTpl,
		"handler/handler_update.tpl",
	)
}

func handlerHandler_updateTpl() (*asset, error) {
	bytes, err := handlerHandler_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/handler_update.tpl", size: 4431, mode: os.FileMode(420), modTime: time.Unix(1614873677, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlerHelperTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xf9\x14\xaf\xc2\x07\x29\xd8\xca\x3d\x10\x4a\x21\x7f\x6a\x08\x39\xd4\x85\x9e\xd7\xda\xd1\x6a\x53\x65\x56\x1e\x8d\x12\xc2\xa2\xef\x5e\x24\xd9\x46\x38\x69\xe9\xc5\xba\xcd\xee\xdb\x37\xef\xb7\x3b\x8a\x11\x96\x4a\xcf\x84\x44\xc8\xd8\xab\xdd\x36\x41\xdf\x5f\x00\x40\x8c\x57\x97\x58\x97\x08\x4c\x08\x25\xb4\x22\x38\xff\x4a\x8c\xca\xb0\xad\x49\xe0\x24\x74\x4d\x0b\xdf\xa2\x25\x45\xe0\x51\x42\xd6\x11\xc8\x38\x12\x3c\x07\xcf\xf0\x9a\x5f\x5e\xcd\x1d\x35\xd8\x80\x15\x98\x5a\x25\xbb\x57\xd6\xc1\x58\xcf\xee\x2b\x66\xd2\x15\xc4\xb0\x23\x2c\x08\xd7\x37\x58\xe4\x77\xd6\x51\x7b\xc8\x76\x22\x71\x93\xe4\x1b\x73\x50\xa3\x3e\x70\x9b\x7f\x9f\x42\x3e\x10\xe7\x3f\xc8\xd8\x87\x29\xeb\xec\xf8\x69\x97\xd1\xa3\x6d\x6a\xaf\x48\xd5\xb8\xc7\x10\x7e\x77\x0d\x16\x94\x6f\x54\xba\x42\x7f\x1a\x87\x64\x22\x4e\x32\x24\xcb\xe4\xd4\xeb\xe0\xe7\x4b\xd0\x6e\x88\x34\x58\xf6\xfd\x2e\xff\xe5\xb5\x8a\x11\x8d\x69\x0b\x53\x0f\x86\x4f\xe6\x85\xd0\xf7\x69\x16\x23\x88\x2d\x56\x9f\xa4\x1a\xd6\x4f\x58\x67\x4b\xb3\x72\xef\xd1\xf7\x17\x17\xa7\x6f\x49\x22\x41\x56\xe3\x6b\x79\x76\xc7\xc0\x43\x40\x11\x7c\xb9\x01\xfb\x1a\xf1\xd8\xa3\x7d\xf3\x5a\x54\xc3\x5e\x9e\xea\x7b\x43\xd9\x6c\x6f\xf8\x0a\xd3\x12\x2e\x89\x35\x7f\x0a\x7a\x1f\x3a\xb6\x77\x43\x83\xeb\x0f\xb7\x50\xe5\x8f\xc1\x39\x92\x91\x7c\xd4\xa4\x24\x92\x8d\xe5\xbd\xa7\xda\xa6\x49\x8c\x58\x1c\xee\x21\x1f\x8b\xf5\xed\xa1\x4e\x96\xf0\x36\xcb\x6f\x69\xdb\xb9\x34\x79\x0e\x5b\x70\x50\x94\x43\xc3\x24\xfb\xd0\x4c\x88\x2d\xc9\x31\x52\xfa\xb6\x84\x2c\x07\x88\xcf\xa4\xda\x09\xff\x9d\x69\xe3\xd9\x75\xb5\x91\xb3\x62\x4d\x07\x13\xdb\x35\xb5\x2f\x8c\x12\x88\x55\xde\x51\x06\x81\xff\x07\xdf\x9a\x95\x84\x4d\xbd\x21\x79\xa5\x29\xe1\x1e\x95\x7d\xfd\x5f\xa8\x96\x4a\xd3\xd5\x7a\x66\xae\x71\xe6\x50\x92\x16\x95\x67\x07\x0e\x96\x50\x4a\x78\x81\xdd\x9e\x0b\x6e\x9a\xea\xf9\x9f\xf0\x27\x00\x00\xff\xff\x9d\xbd\x5a\x9a\xd5\x04\x00\x00")

func handlerHelperTplBytes() ([]byte, error) {
	return bindataRead(
		_handlerHelperTpl,
		"handler/helper.tpl",
	)
}

func handlerHelperTpl() (*asset, error) {
	bytes, err := handlerHelperTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handler/helper.tpl", size: 1237, mode: os.FileMode(420), modTime: time.Unix(1614146215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerDartTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x3d\x0a\x42\x31\x0c\xc0\xf1\xfd\x9d\xe2\xcf\xdb\xa5\x67\xa8\x26\x7e\x0c\x36\x20\x5d\x3a\x0a\x8d\xe8\xd2\xc1\x35\xe4\xee\xef\x17\xc1\xf4\xcf\x6f\x39\xfb\xd7\xdf\xd3\xff\x3b\x99\x1b\x40\x29\xdc\xb4\xe9\xab\x76\x15\x2e\x26\xca\x09\x31\x9a\x75\x9e\x26\x8f\xeb\xe0\x3c\xb8\xd7\x26\x5b\x04\xbe\x26\x99\x47\x00\x00\x00\xff\xff\x72\x86\x25\x00\x4d\x00\x00\x00")

func headerDartTplBytes() ([]byte, error) {
	return bindataRead(
		_headerDartTpl,
		"header/dart.tpl",
	)
}

func headerDartTpl() (*asset, error) {
	bytes, err := headerDartTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/dart.tpl", size: 77, mode: os.FileMode(420), modTime: time.Unix(1605001862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _headerGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xb1\x0a\x83\x30\x14\x45\x77\xbf\xe2\x22\x19\x4b\xdc\x0b\x4e\xda\x42\x97\x5a\xa8\x3f\x10\xcd\x35\x06\x4b\x14\x75\x29\x8f\xfc\x7b\x41\xaa\x74\xe8\xf8\x38\xe7\x9d\x2b\x02\xcb\xce\x07\x22\xed\x69\x2c\xe7\x14\x31\x26\x00\x90\x65\x28\x46\x4b\x38\x06\xce\x66\xa5\x45\xf3\x06\xc3\xda\x9e\x50\x56\xb8\x57\x35\x2e\xe5\xad\xd6\xc9\x26\x8b\x40\x4d\x83\xc3\x39\x47\x63\x16\x42\xe9\x62\x0c\x9d\x77\xfa\x61\xda\xc1\x38\xee\x51\x11\xf8\x0e\xbd\x59\xae\x9e\x2f\x0b\x85\xf4\xd9\x8e\x13\x8f\xd1\xdf\x56\x0e\xa5\x37\xfa\x27\xc2\x60\xf7\x6b\xfa\xc2\xfd\x2d\xc6\xe4\x10\x3e\x01\x00\x00\xff\xff\x7b\x97\x4d\x15\xde\x00\x00\x00")

func headerGoTplBytes() ([]byte, error) {
	return bindataRead(
		_headerGoTpl,
		"header/go.tpl",
	)
}

func headerGoTpl() (*asset, error) {
	bytes, err := headerGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "header/go.tpl", size: 222, mode: os.FileMode(420), modTime: time.Unix(1604930027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sheriffTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xdd\x69\xc4\x30\x10\xc4\xf1\x77\x57\x31\xb8\x00\xab\x8c\x14\x90\x34\x20\x47\xa3\x68\xb1\xbe\xd0\x2e\x21\x41\xa8\xf7\xe3\xc0\x77\xcf\xbf\x99\xff\x9c\x08\x8c\x52\x89\xbd\xb4\xc0\xec\xd4\x86\xd4\x1f\x8e\x1d\x6b\x6d\x00\xe0\x1c\x3e\x68\x18\x12\xd0\x22\x2c\x11\xb1\xd8\xf1\x79\xcf\x20\xa5\x67\x16\x56\xf3\x26\xad\x42\xa5\x7e\x13\x62\x38\x07\xfd\xa5\xc8\x22\xdd\x69\xe2\x90\x18\x8f\x57\xef\x2b\xc9\x53\x2a\x15\xc9\xff\x12\xd6\x70\x12\x89\x83\xf7\xdf\x58\x7a\xf6\x46\x67\xfc\x33\x84\x46\x85\x5e\xd2\xc1\xd2\xed\xff\xad\x7a\x6c\x73\x82\x35\x60\xad\x47\x00\x00\x00\xff\xff\x27\x7e\xb9\xc9\xc8\x00\x00\x00")

func sheriffTplBytes() ([]byte, error) {
	return bindataRead(
		_sheriffTpl,
		"sheriff.tpl",
	)
}

func sheriffTpl() (*asset, error) {
	bytes, err := sheriffTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sheriff.tpl", size: 200, mode: os.FileMode(420), modTime: time.Unix(1604818390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"flutter/client.tpl":                flutterClientTpl,
	"flutter/client_provider.tpl":       flutterClient_providerTpl,
	"flutter/date_utc_converter.tpl":    flutterDate_utc_converterTpl,
	"flutter/model.tpl":                 flutterModelTpl,
	"handler/handler.tpl":               handlerHandlerTpl,
	"handler/handler_create.tpl":        handlerHandler_createTpl,
	"handler/handler_delete.tpl":        handlerHandler_deleteTpl,
	"handler/handler_list.tpl":          handlerHandler_listTpl,
	"handler/handler_read.tpl":          handlerHandler_readTpl,
	"handler/handler_subressources.tpl": handlerHandler_subressourcesTpl,
	"handler/handler_update.tpl":        handlerHandler_updateTpl,
	"handler/helper.tpl":                handlerHelperTpl,
	"header/dart.tpl":                   headerDartTpl,
	"header/go.tpl":                     headerGoTpl,
	"sheriff.tpl":                       sheriffTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"flutter": &bintree{nil, map[string]*bintree{
		"client.tpl":             &bintree{flutterClientTpl, map[string]*bintree{}},
		"client_provider.tpl":    &bintree{flutterClient_providerTpl, map[string]*bintree{}},
		"date_utc_converter.tpl": &bintree{flutterDate_utc_converterTpl, map[string]*bintree{}},
		"model.tpl":              &bintree{flutterModelTpl, map[string]*bintree{}},
	}},
	"handler": &bintree{nil, map[string]*bintree{
		"handler.tpl":               &bintree{handlerHandlerTpl, map[string]*bintree{}},
		"handler_create.tpl":        &bintree{handlerHandler_createTpl, map[string]*bintree{}},
		"handler_delete.tpl":        &bintree{handlerHandler_deleteTpl, map[string]*bintree{}},
		"handler_list.tpl":          &bintree{handlerHandler_listTpl, map[string]*bintree{}},
		"handler_read.tpl":          &bintree{handlerHandler_readTpl, map[string]*bintree{}},
		"handler_subressources.tpl": &bintree{handlerHandler_subressourcesTpl, map[string]*bintree{}},
		"handler_update.tpl":        &bintree{handlerHandler_updateTpl, map[string]*bintree{}},
		"helper.tpl":                &bintree{handlerHelperTpl, map[string]*bintree{}},
	}},
	"header": &bintree{nil, map[string]*bintree{
		"dart.tpl": &bintree{headerDartTpl, map[string]*bintree{}},
		"go.tpl":   &bintree{headerGoTpl, map[string]*bintree{}},
	}},
	"sheriff.tpl": &bintree{sheriffTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
