{{/* gotype: entgo.io/ent/entc/gen.Graph */}}

{{ define "http/delete" }}
    {{- with extend $ "Package" "http" -}}
        {{ template "header" . }}
    {{ end }}
    {{ template "helper/http/import" $ }}

    {{ $pkg := base $.Config.Package }}
    {{ range $n := $.Nodes }}
        // Delete removes a {{ $pkg }}.{{ $n.Name }} from the database.
        func (h {{ $n.Name }}Handler) Delete(w http.ResponseWriter, r *http.Request) {
            l := h.log.With(zap.String("method", "Delete"))
            {{- template "helper/http/id-from-url" $n -}}

            err = h.client.{{ $n.Name }}.DeleteOneID({{ if $n.ID.HasGoType }}{{ $n.ID.Type }}(id){{ else }}id{{ end }}).Exec(r.Context())

            {{-
                template "helper/http/error-handling" dict
                "Errors" (list "not-found")
                "Logs" (list (printf "zap.Int(\"%s\", id)" $n.ID.Name))
                "Default" (print "could not delete " $n.Name | kebab)
            -}}

            l.Info("{{ $n.Name | kebab }} deleted", zap.Int("{{ $n.ID.Name }}", id))
            w.WriteHeader(http.StatusNoContent)
        }
    {{ end }}
{{ end }}