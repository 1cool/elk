{{/* gotype: entgo.io/ent/entc/gen.Graph */}}

{{ define "http/relations" }}
    {{- with extend $ "Package" "http" -}}
        {{ template "header" . }}
    {{ end }}
    {{ template "helper/http/import" $ }}

    {{ $pkg := base $.Config.Package }}
    {{ range $n := $.Nodes }}
        {{ range $e := $n.Edges }}
            // {{ $e.Name | pascal }} fetches the {{ $pkg }}.{{ $e.Name }} attached to the {{ $pkg }}.{{ $n.Name }}
            // identified by a given url-parameter from the database and renders it to the client.
            func (h {{ $n.Name }}Handler) {{ $e.Name | pascal }}(w http.ResponseWriter, r *http.Request) {
                l := h.log.With(zap.String("method", "{{ $e.Name | pascal }}"))
                {{- template "helper/http/id-from-url" $n -}}

                // Create the query to fetch the {{ $e.Name | kebab }} attached to this {{ $n.Name | kebab }}
                q := h.client.{{ $n.Name }}.Query().Where({{ $n.Name | lower }}.ID(id)).Query{{ $e.Name | pascal }}()
                {{- if $e.Unique }}
                    {{- with edges $e.Type "read" }}
                        // Eager load edges that are required on read operation.
                        q{{ .EntQuery }}
                    {{- end }}
                    e, err := q.Only(r.Context())

                    {{-
                        template "helper/http/error-handling" dict
                        "Errors" (list "not-found" "not-singular")
                        "Logs" (list (printf "zap.%s(\"%s\", id)" (zapField $n.ID) $n.ID.Name))
                        "Default" (print "could not read " $n.Name | kebab)
                    -}}

                    l.Info("{{ $e.Type.Name | kebab }} rendered", zap.{{ zapField $n.ID }}("{{ $n.ID.Name }}", {{ $e.Type.ID.BasicType (print "e." $e.Type.ID.StructField) }}))
                    easyjson.MarshalToHTTPResponseWriter(New{{ (view $e.Type ($e.Type.Annotations.ElkSchema.ReadGroups | stringSlice)).Name }}(e), w)
                {{- else }}
                    {{- with edges $e.Type "list" }}
                        // Eager load edges that are required on list operation.
                        q{{ .EntQuery }}
                    {{- end }}

                    {{- template "helper/http/pagination" $e.Type -}}

                    l.Info("{{ $e.Type.Name | kebab | plural }} rendered", zap.Int("amount", len(es)))
                    easyjson.MarshalToHTTPResponseWriter(New{{ (view $e.Type ($e.Type.Annotations.Elk.ListGroups | stringSlice)).Name }}s(es), w)
                {{- end }}
            }
        {{ end }}
    {{ end }}
{{ end }}