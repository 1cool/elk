{{/* gotype: entgo.io/ent/entc/gen.Graph */}}

{{ define "http/list" }}
    {{- with extend $ "Package" "http" -}}
        {{ template "header" . }}
    {{ end }}

    {{ $pkg := base $.Config.Package }}
    {{ range $n := $.Nodes }}
        // Read fetches the {{ $pkg }}.{{ $n.Name }} identified by a given url-parameter from the
        // database and returns it to the client.
        func (h *{{ $n.Name }}Handler) List(w http.ResponseWriter, r *http.Request) {
            l := h.log.With(zap.String("method", "List"))
            q := h.client.{{ $n.Name }}.Query()
            {{- with edgesToLoad $n "list" }}
                // Eager load edges that are required on list operation.
                {{ . }}
            {{- end }}
            var err error
            {{- template "helper/http/pagination" $n -}}

            d, err := sheriff.Marshal(&sheriff.Options{
                IncludeEmptyTag: true,
                Groups: []string{
                    {{- with $n.Annotations.ElkSchema.ListGroups -}}
                        "{{ join (stringSlice .) `","` }}"
                    {{- else -}}
                        "{{ $n.Name | kebab }}"
                    {{- end -}}
                },
            }, es)
            if err != nil {
                l.Error("serialization error", zap.Error(err))
                render.InternalServerError(w, r, nil)
                return
            }
            l.Info("{{ $n.Name | kebab | plural }} rendered", zap.Int("amount", len(es)))
            render.OK(w, r, d)
        }
    {{ end }}
{{ end }}